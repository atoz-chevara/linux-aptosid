From e1572c5eeca8ef87a250322364584458b2dadb35 Mon Sep 17 00:00:00 2001
From: Sujith <Sujith.Manoharan@atheros.com>
Date: Wed, 24 Mar 2010 13:42:13 +0530
Subject: [PATCH 042/283] ath9k_htc: Fix symbol collision with ath9k

Signed-off-by: Sujith <Sujith.Manoharan@atheros.com>
Signed-off-by: John W. Linville <linville@tuxdriver.com>
---
 drivers/net/wireless/ath/ath9k/htc.h          |   22 +++++++++++-----------
 drivers/net/wireless/ath/ath9k/htc_drv_init.c |   16 ++++++++--------
 drivers/net/wireless/ath/ath9k/htc_drv_main.c |   14 +++++++-------
 drivers/net/wireless/ath/ath9k/htc_drv_txrx.c |    4 ++--
 4 files changed, 28 insertions(+), 28 deletions(-)

--- a/drivers/net/wireless/ath/ath9k/htc.h
+++ b/drivers/net/wireless/ath/ath9k/htc.h
@@ -41,7 +41,7 @@
 	((((u32)(_h)) << 22) | (((u32)(_l)) >> 10))
 
 extern struct ieee80211_ops ath9k_htc_ops;
-extern int modparam_nohwcrypt;
+extern int htc_modparam_nohwcrypt;
 
 enum htc_phymode {
 	HTC_MODE_AUTO		= 0,
@@ -408,8 +408,8 @@ void ath9k_tx_cleanup(struct ath9k_htc_p
 bool ath9k_htc_txq_setup(struct ath9k_htc_priv *priv,
 			 enum ath9k_tx_queue_subtype qtype);
 int get_hw_qnum(u16 queue, int *hwq_map);
-int ath_txq_update(struct ath9k_htc_priv *priv, int qnum,
-		   struct ath9k_tx_queue_info *qinfo);
+int ath_htc_txq_update(struct ath9k_htc_priv *priv, int qnum,
+		       struct ath9k_tx_queue_info *qinfo);
 
 int ath9k_rx_init(struct ath9k_htc_priv *priv);
 void ath9k_rx_cleanup(struct ath9k_htc_priv *priv);
@@ -427,15 +427,15 @@ void ath9k_htc_disconnect_device(struct
 int ath9k_htc_resume(struct htc_target *htc_handle);
 #endif
 #ifdef CONFIG_ATH9K_HTC_DEBUGFS
-int ath9k_debug_create_root(void);
-void ath9k_debug_remove_root(void);
-int ath9k_init_debug(struct ath_hw *ah);
-void ath9k_exit_debug(struct ath_hw *ah);
+int ath9k_htc_debug_create_root(void);
+void ath9k_htc_debug_remove_root(void);
+int ath9k_htc_init_debug(struct ath_hw *ah);
+void ath9k_htc_exit_debug(struct ath_hw *ah);
 #else
-static inline int ath9k_debug_create_root(void) { return 0; };
-static inline void ath9k_debug_remove_root(void) {};
-static inline int ath9k_init_debug(struct ath_hw *ah) { return 0; };
-static inline void ath9k_exit_debug(struct ath_hw *ah) {};
+static inline int ath9k_htc_debug_create_root(void) { return 0; };
+static inline void ath9k_htc_debug_remove_root(void) {};
+static inline int ath9k_htc_init_debug(struct ath_hw *ah) { return 0; };
+static inline void ath9k_htc_exit_debug(struct ath_hw *ah) {};
 #endif /* CONFIG_ATH9K_HTC_DEBUGFS */
 
 #endif /* HTC_H */
--- a/drivers/net/wireless/ath/ath9k/htc_drv_init.c
+++ b/drivers/net/wireless/ath/ath9k/htc_drv_init.c
@@ -24,8 +24,8 @@ static unsigned int ath9k_debug = ATH_DB
 module_param_named(debug, ath9k_debug, uint, 0);
 MODULE_PARM_DESC(debug, "Debugging mask");
 
-int modparam_nohwcrypt;
-module_param_named(nohwcrypt, modparam_nohwcrypt, int, 0444);
+int htc_modparam_nohwcrypt;
+module_param_named(nohwcrypt, htc_modparam_nohwcrypt, int, 0444);
 MODULE_PARM_DESC(nohwcrypt, "Disable hardware encryption");
 
 #define CHAN2G(_freq, _idx)  { \
@@ -93,7 +93,7 @@ static int ath9k_htc_wait_for_target(str
 
 static void ath9k_deinit_priv(struct ath9k_htc_priv *priv)
 {
-	ath9k_exit_debug(priv->ah);
+	ath9k_htc_exit_debug(priv->ah);
 	ath9k_hw_deinit(priv->ah);
 	tasklet_kill(&priv->wmi_tasklet);
 	tasklet_kill(&priv->rx_tasklet);
@@ -474,7 +474,7 @@ static int ath9k_init_priv(struct ath9k_
 		goto err_hw;
 	}
 
-	ret = ath9k_init_debug(ah);
+	ret = ath9k_htc_init_debug(ah);
 	if (ret) {
 		ath_print(common, ATH_DBG_FATAL,
 			  "Unable to create debugfs files\n");
@@ -492,7 +492,7 @@ static int ath9k_init_priv(struct ath9k_
 	return 0;
 
 err_queues:
-	ath9k_exit_debug(ah);
+	ath9k_htc_exit_debug(ah);
 err_debug:
 	ath9k_hw_deinit(ah);
 err_hw:
@@ -678,7 +678,7 @@ static int __init ath9k_htc_init(void)
 {
 	int error;
 
-	error = ath9k_debug_create_root();
+	error = ath9k_htc_debug_create_root();
 	if (error < 0) {
 		printk(KERN_ERR
 			"ath9k_htc: Unable to create debugfs root: %d\n",
@@ -698,7 +698,7 @@ static int __init ath9k_htc_init(void)
 	return 0;
 
 err_usb:
-	ath9k_debug_remove_root();
+	ath9k_htc_debug_remove_root();
 err_dbg:
 	return error;
 }
@@ -707,7 +707,7 @@ module_init(ath9k_htc_init);
 static void __exit ath9k_htc_exit(void)
 {
 	ath9k_hif_usb_exit();
-	ath9k_debug_remove_root();
+	ath9k_htc_debug_remove_root();
 	printk(KERN_INFO "ath9k_htc: Driver unloaded\n");
 }
 module_exit(ath9k_htc_exit);
--- a/drivers/net/wireless/ath/ath9k/htc_drv_main.c
+++ b/drivers/net/wireless/ath/ath9k/htc_drv_main.c
@@ -595,7 +595,7 @@ static const struct file_operations fops
 	.owner = THIS_MODULE
 };
 
-int ath9k_init_debug(struct ath_hw *ah)
+int ath9k_htc_init_debug(struct ath_hw *ah)
 {
 	struct ath_common *common = ath9k_hw_common(ah);
 	struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *) common->priv;
@@ -630,11 +630,11 @@ int ath9k_init_debug(struct ath_hw *ah)
 	return 0;
 
 err:
-	ath9k_exit_debug(ah);
+	ath9k_htc_exit_debug(ah);
 	return -ENOMEM;
 }
 
-void ath9k_exit_debug(struct ath_hw *ah)
+void ath9k_htc_exit_debug(struct ath_hw *ah)
 {
 	struct ath_common *common = ath9k_hw_common(ah);
 	struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *) common->priv;
@@ -645,7 +645,7 @@ void ath9k_exit_debug(struct ath_hw *ah)
 	debugfs_remove(priv->debug.debugfs_phy);
 }
 
-int ath9k_debug_create_root(void)
+int ath9k_htc_debug_create_root(void)
 {
 	ath9k_debugfs_root = debugfs_create_dir(KBUILD_MODNAME, NULL);
 	if (!ath9k_debugfs_root)
@@ -654,7 +654,7 @@ int ath9k_debug_create_root(void)
 	return 0;
 }
 
-void ath9k_debug_remove_root(void)
+void ath9k_htc_debug_remove_root(void)
 {
 	debugfs_remove(ath9k_debugfs_root);
 	ath9k_debugfs_root = NULL;
@@ -1358,7 +1358,7 @@ static int ath9k_htc_conf_tx(struct ieee
 		  queue, qnum, params->aifs, params->cw_min,
 		  params->cw_max, params->txop);
 
-	ret = ath_txq_update(priv, qnum, &qi);
+	ret = ath_htc_txq_update(priv, qnum, &qi);
 	if (ret)
 		ath_print(common, ATH_DBG_FATAL, "TXQ Update failed\n");
 
@@ -1377,7 +1377,7 @@ static int ath9k_htc_set_key(struct ieee
 	struct ath_common *common = ath9k_hw_common(priv->ah);
 	int ret = 0;
 
-	if (modparam_nohwcrypt)
+	if (htc_modparam_nohwcrypt)
 		return -ENOSPC;
 
 	mutex_lock(&priv->mutex);
--- a/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c
+++ b/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c
@@ -36,8 +36,8 @@ int get_hw_qnum(u16 queue, int *hwq_map)
 	}
 }
 
-int ath_txq_update(struct ath9k_htc_priv *priv, int qnum,
-		   struct ath9k_tx_queue_info *qinfo)
+int ath_htc_txq_update(struct ath9k_htc_priv *priv, int qnum,
+		       struct ath9k_tx_queue_info *qinfo)
 {
 	struct ath_hw *ah = priv->ah;
 	int error = 0;
