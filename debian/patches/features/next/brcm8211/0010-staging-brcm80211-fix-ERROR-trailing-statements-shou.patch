commit 621458221781e3e943c56e1978614604cee3beaf
Author: Jason Cooper <jason@lakedaemon.net>
Date:   Tue Sep 14 09:45:34 2010 -0400

    staging: brcm80211: fix "ERROR: trailing statements should be on next line"
    
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

--- a/drivers/staging/brcm80211/include/linux_osl.h
+++ b/drivers/staging/brcm80211/include/linux_osl.h
@@ -190,12 +190,16 @@ extern int osl_error(int bcmerror);
 			__typeof(*(r)) __osl_v; \
 			__asm__ __volatile__("sync"); \
 			switch (sizeof(*(r))) { \
-			case sizeof(uint8):	__osl_v = \
-				readb((volatile uint8*)(r)); break; \
-			case sizeof(uint16):	__osl_v = \
-				readw((volatile uint16*)(r)); break; \
-			case sizeof(uint32):	__osl_v = \
-				readl((volatile uint32*)(r)); break; \
+			case sizeof(uint8): \
+				__osl_v = readb((volatile uint8*)(r)); \
+				break; \
+			case sizeof(uint16): \
+				__osl_v = readw((volatile uint16*)(r)); \
+				break; \
+			case sizeof(uint32): \
+				__osl_v = \
+				readl((volatile uint32*)(r)); \
+				break; \
 			} \
 			__asm__ __volatile__("sync"); \
 			__osl_v; \
@@ -228,12 +232,17 @@ extern int osl_error(int bcmerror);
 		({ \
 			__typeof(*(r)) __osl_v; \
 			switch (sizeof(*(r))) { \
-			case sizeof(uint8):	__osl_v = \
-				readb((volatile uint8*)((uintptr)(r)^3)); break; \
-			case sizeof(uint16):	__osl_v = \
-				readw((volatile uint16*)((uintptr)(r)^2)); break; \
-			case sizeof(uint32):	__osl_v = \
-				readl((volatile uint32*)(r)); break; \
+			case sizeof(uint8): \
+				__osl_v = \
+				readb((volatile uint8*)((uintptr)(r)^3)); \
+				break; \
+			case sizeof(uint16): \
+				__osl_v = \
+				readw((volatile uint16*)((uintptr)(r)^2)); \
+				break; \
+			case sizeof(uint32): \
+				__osl_v = readl((volatile uint32*)(r)); \
+				break; \
 			} \
 			__osl_v; \
 		}), \
@@ -353,9 +362,15 @@ extern void *osl_pktdup(osl_t *osh, void
 )
 #define RPC_WRITE_REG(osh, r, v) do { \
 	switch (sizeof(*(r))) { \
-	case sizeof(uint8):	osl_writeb((osh), (volatile uint8*)(r), (uint8)(v)); break; \
-	case sizeof(uint16):	osl_writew((osh), (volatile uint16*)(r), (uint16)(v)); break; \
-	case sizeof(uint32):	osl_writel((osh), (volatile uint32*)(r), (uint32)(v)); break; \
+	case sizeof(uint8): \
+		osl_writeb((osh), (volatile uint8*)(r), (uint8)(v)); \
+		break; \
+	case sizeof(uint16): \
+		osl_writew((osh), (volatile uint16*)(r), (uint16)(v)); \
+		break; \
+	case sizeof(uint32): \
+		osl_writel((osh), (volatile uint32*)(r), (uint32)(v)); \
+		break; \
 	} \
 } while (0)
 
--- a/drivers/staging/brcm80211/include/linuxver.h
+++ b/drivers/staging/brcm80211/include/linuxver.h
@@ -100,7 +100,8 @@ typedef irqreturn_t(*FN_ISR) (int irq, v
 		struct pid *pid;    \
 		pid = find_get_pid((pid_t)nr);    \
 		tsk = pid_task(pid, PIDTYPE_PID);    \
-		if (tsk) send_sig(sig, tsk, 1); \
+		if (tsk) \
+			send_sig(sig, tsk, 1); \
 	} while (0)
 
 #define WL_DEV_IF(dev)          ((wl_if_t*)netdev_priv(dev))
--- a/drivers/staging/brcm80211/phy/wlc_phy_cmn.c
+++ b/drivers/staging/brcm80211/phy/wlc_phy_cmn.c
@@ -162,7 +162,8 @@ char *phy_getvar(phy_info_t *pi, const c
 		if ((bcmp(s, name, len) == 0) && (s[len] == '='))
 			return &s[len + 1];
 
-		while (*s++) ;
+		while (*s++)
+			;
 	}
 
 	return nvram_get(name);
--- a/drivers/staging/brcm80211/sys/wlc_mac80211.c
+++ b/drivers/staging/brcm80211/sys/wlc_mac80211.c
@@ -4385,7 +4385,8 @@ _wlc_ioctl(wlc_info_t *wlc, int cmd, voi
 			/* validate the name value */
 			name = (char *)arg;
 			for (i = 0; i < (uint) len && *name != '\0';
-			     i++, name++) ;
+			     i++, name++)
+				;
 
 			if (i == (uint) len) {
 				bcmerror = BCME_BUFTOOSHORT;
--- a/drivers/staging/brcm80211/util/bcmotp.c
+++ b/drivers/staging/brcm80211/util/bcmotp.c
@@ -199,7 +199,8 @@ static uint16 ipxotp_read_bit(void *oh,
 
 	for (k = 0;
 	     ((st = R_REG(oi->osh, &cc->otpprog)) & OTPP_START_BUSY)
-	     && (k < OTPP_TRIES); k++) ;
+	     && (k < OTPP_TRIES); k++)
+		;
 	if (k >= OTPP_TRIES) {
 		return 0xffff;
 	}
@@ -259,7 +260,8 @@ static void BCMNMIATTACHFN(_ipxotp_init)
 	W_REG(oi->osh, &cc->otpprog, otpp);
 	for (k = 0;
 	     ((st = R_REG(oi->osh, &cc->otpprog)) & OTPP_START_BUSY)
-	     && (k < OTPP_TRIES); k++) ;
+	     && (k < OTPP_TRIES); k++)
+		;
 	if (k >= OTPP_TRIES) {
 		return;
 	}
--- a/drivers/staging/brcm80211/util/bcmsrom.c
+++ b/drivers/staging/brcm80211/util/bcmsrom.c
@@ -137,7 +137,8 @@ static int BCMATTACHFN(varbuf_append) (v
 				break;
 			}
 
-			while (*s++) ;
+			while (*s++)
+				;
 		}
 	}
 
--- a/drivers/staging/brcm80211/util/bcmutils.c
+++ b/drivers/staging/brcm80211/util/bcmutils.c
@@ -106,7 +106,8 @@ uint BCMFASTPATH pkttotlen(osl_t *osh, v
 /* return the last buffer of chained pkt */
 void *pktlast(osl_t *osh, void *p)
 {
-	for (; PKTNEXT(p); p = PKTNEXT(p)) ;
+	for (; PKTNEXT(p); p = PKTNEXT(p))
+		;
 
 	return p;
 }
@@ -286,7 +287,8 @@ bool BCMFASTPATH pktq_pdel(struct pktq *
 		if (q->head == NULL)
 			q->tail = NULL;
 	} else {
-		for (p = q->head; p && PKTLINK(p) != pktbuf; p = PKTLINK(p)) ;
+		for (p = q->head; p && PKTLINK(p) != pktbuf; p = PKTLINK(p))
+			;
 		if (p == NULL)
 			return FALSE;
 
@@ -619,7 +621,8 @@ char *BCMROMFN(bcmstrcat) (char *dest, c
 
 	p = dest + strlen(dest);
 
-	while ((*p++ = *src++) != '\0') ;
+	while ((*p++ = *src++) != '\0')
+		;
 
 	return dest;
 }
@@ -632,7 +635,8 @@ char *BCMROMFN(bcmstrncat) (char *dest,
 	p = dest + strlen(dest);
 	endp = p + size;
 
-	while (p != endp && (*p++ = *src++) != '\0') ;
+	while (p != endp && (*p++ = *src++) != '\0')
+		;
 
 	return dest;
 }
@@ -841,7 +845,8 @@ char *getvar(char *vars, const char *nam
 		if ((bcmp(s, name, len) == 0) && (s[len] == '='))
 			return &s[len + 1];
 
-		while (*s++) ;
+		while (*s++)
+			;
 	}
 
 	/* then query nvram */
--- a/drivers/staging/brcm80211/util/nvram/nvram_ro.c
+++ b/drivers/staging/brcm80211/util/nvram/nvram_ro.c
@@ -135,7 +135,8 @@ static char *findvar(char *vars, char *l
 		if ((bcmp(s, name, len) == 0) && (s[len] == '='))
 			return &s[len + 1];
 
-		while (*s++) ;
+		while (*s++)
+			;
 	}
 
 	return NULL;
