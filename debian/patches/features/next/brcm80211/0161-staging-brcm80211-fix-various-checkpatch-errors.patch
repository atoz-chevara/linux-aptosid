commit eeb8e46b50e33010805a27590f17e008bbd2a339
Author: Jason Cooper <jason@lakedaemon.net>
Date:   Mon Oct 11 10:02:56 2010 -0400

    staging: brcm80211: fix various checkpatch errors.
    
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

--- a/drivers/staging/brcm80211/brcmfmac/dhd_linux.c
+++ b/drivers/staging/brcm80211/brcmfmac/dhd_linux.c
@@ -939,7 +939,7 @@ static int _dhd_sysioc_thread(void *data
 #endif
 
 	while (down_interruptible(&dhd->sysioc_sem) == 0) {
-		if(kthread_should_stop())
+		if (kthread_should_stop())
 			break;
 		for (i = 0; i < DHD_MAX_IFS; i++) {
 			if (dhd->iflist[i]) {
@@ -1362,7 +1362,7 @@ static int dhd_dpc_thread(void *data)
 
 	/* Run until signal received */
 	while (1) {
-		if(kthread_should_stop())
+		if (kthread_should_stop())
 			break;
 		if (down_interruptible(&dhd->dpc_sem) == 0) {
 			/* Call bus dpc unless it indicated down
@@ -2343,8 +2343,7 @@ void dhd_detach(dhd_pub_t *dhdp)
 			if (dhd->dpc_tsk) {
 				kthread_stop(dhd->dpc_tsk);
 				dhd->dpc_tsk = NULL;
-			}
-			else
+			} else
 				tasklet_kill(&dhd->tasklet);
 
 			if (dhd->sysioc_tsk) {
--- a/drivers/staging/brcm80211/brcmfmac/wl_cfg80211.c
+++ b/drivers/staging/brcm80211/brcmfmac/wl_cfg80211.c
@@ -3229,7 +3229,7 @@ static s32 wl_event_handler(void *data)
 
 	sched_setscheduler(current, SCHED_FIFO, &param);
 	while (likely(!down_interruptible(&wl->event_sync))) {
-		if(kthread_should_stop())
+		if (kthread_should_stop())
 			break;
 		e = wl_deq_event(wl);
 		if (unlikely(!e)) {
--- a/drivers/staging/brcm80211/brcmfmac/wl_iw.c
+++ b/drivers/staging/brcm80211/brcmfmac/wl_iw.c
@@ -2836,8 +2836,7 @@ wl_iw_set_wpaauth(struct net_device *dev
 				val = WPA_AUTH_PSK;
 			else
 				val = WPA_AUTH_UNSPECIFIED;
-		}
-		else if (val & (WPA2_AUTH_PSK | WPA2_AUTH_UNSPECIFIED)) {
+		} else if (val & (WPA2_AUTH_PSK | WPA2_AUTH_UNSPECIFIED)) {
 			if (paramval & IW_AUTH_KEY_MGMT_PSK)
 				val = WPA2_AUTH_PSK;
 			else
--- a/drivers/staging/brcm80211/util/linux_osl.c
+++ b/drivers/staging/brcm80211/util/linux_osl.c
@@ -43,7 +43,7 @@ typedef struct bcm_static_buf {
 	unsigned char buf_use[MAX_STATIC_BUF_NUM];
 } bcm_static_buf_t;
 
-static bcm_static_buf_t *bcm_static_buf = 0;
+static bcm_static_buf_t *bcm_static_buf;
 
 #define MAX_STATIC_PKT_NUM 8
 typedef struct bcm_static_pkt {
@@ -52,7 +52,7 @@ typedef struct bcm_static_pkt {
 	struct semaphore osl_pkt_sem;
 	unsigned char pkt_use[MAX_STATIC_PKT_NUM * 2];
 } bcm_static_pkt_t;
-static bcm_static_pkt_t *bcm_static_skb = 0;
+static bcm_static_pkt_t *bcm_static_skb;
 #endif				/* DHD_USE_STATIC_BUF */
 
 struct osl_info {
@@ -176,9 +176,9 @@ osl_t *osl_attach(void *pdev, uint busty
 
 #if defined(BRCM_FULLMAC) && defined(DHD_USE_STATIC_BUF)
 	if (!bcm_static_buf) {
-		if (!(bcm_static_buf =
-		     (bcm_static_buf_t *) dhd_os_prealloc(3,
-			  STATIC_BUF_SIZE + STATIC_BUF_TOTAL_LEN))) {
+		bcm_static_buf = (bcm_static_buf_t *) dhd_os_prealloc(3,
+					STATIC_BUF_SIZE + STATIC_BUF_TOTAL_LEN);
+		if (!bcm_static_buf) {
 			printk(KERN_ERR "can not alloc static buf!\n");
 		} else
 			printk(KERN_ERR "alloc static buf at %x!\n",
