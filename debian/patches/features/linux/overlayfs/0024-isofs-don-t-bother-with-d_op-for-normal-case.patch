From c0c777c29c09eee9e5842d72a148d2c023736dfc Mon Sep 17 00:00:00 2001
From: Al Viro <viro@zeniv.linux.org.uk>
Date: Tue, 28 Oct 2014 18:40:11 -0400
Subject: [PATCH 24/24] isofs: don't bother with ->d_op for normal case

we only need it for joliet and case-insensitive mounts

Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 5b71ecfa78271d5c576f17156ed8a53981c1ecbb)
Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 fs/isofs/inode.c | 7 ++-----
 fs/isofs/namei.c | 2 ++
 2 files changed, 4 insertions(+), 5 deletions(-)

--- a/fs/isofs/inode.c
+++ b/fs/isofs/inode.c
@@ -135,10 +135,6 @@ static const struct super_operations iso
 
 static const struct dentry_operations isofs_dentry_ops[] = {
 	{
-		.d_hash		= isofs_hash,
-		.d_compare	= isofs_dentry_cmp,
-	},
-	{
 		.d_hash		= isofs_hashi,
 		.d_compare	= isofs_dentry_cmpi,
 	},
@@ -930,7 +926,8 @@ root_found:
 	if (opt.check == 'r')
 		table++;
 
-	s->s_d_op = &isofs_dentry_ops[table];
+	if (table)
+		s->s_d_op = &isofs_dentry_ops[table - 1];
 
 	/* get the root dentry */
 	s->s_root = d_make_root(inode);
--- a/fs/isofs/namei.c
+++ b/fs/isofs/namei.c
@@ -20,6 +20,8 @@ isofs_cmp(struct dentry *dentry, const c
 	struct qstr qstr;
 	qstr.name = compare;
 	qstr.len = dlen;
+	if (likely(!dentry->d_op))
+		return dentry->d_name.len != dlen || memcmp(dentry->d_name.name, compare, dlen);
 	return dentry->d_op->d_compare(NULL, NULL, dentry->d_name.len, dentry->d_name.name, &qstr);
 }
 
