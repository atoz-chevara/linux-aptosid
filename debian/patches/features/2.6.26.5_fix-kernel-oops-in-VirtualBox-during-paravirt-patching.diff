From: Colin Ian King <colin.king@canonical.com>
Date: Fri, 29 Aug 2008 08:57:04 +0000 (+0000)
Subject: UBUNTU: SAUCE: fix kernel oops in VirtualBox during paravirt patching
X-Git-Tag: Ubuntu-2.6.27-3.4~6
X-Git-Url: http://kernel.ubuntu.com/git?p=ubuntu%2Fubuntu-intrepid.git;a=commitdiff_plain;h=00d6c877bc34ff6e2705385764f6e7426cd362a8

UBUNTU: SAUCE: fix kernel oops in VirtualBox during paravirt patching
Bug: 246067

Paravirtualisation patching of kernel trips a kernel oops when
running in VirtualBox. Turning off interrupts around the
entire paravirtualisation patching process avoids patching
active code inside an interrupt.

Signed-off-by: Colin Ian King <colin.king@canonical.com>
---

diff --git a/arch/x86/kernel/alternative.c b/arch/x86/kernel/alternative.c
index 65a0c1b..569aa06 100644
--- a/arch/x86/kernel/alternative.c
+++ b/arch/x86/kernel/alternative.c
@@ -410,6 +410,8 @@ extern struct paravirt_patch_site __start_parainstructions[],
 
 void __init alternative_instructions(void)
 {
+	unsigned long flags;
+
 	/* The patching is not fully atomic, so try to avoid local interruptions
 	   that might execute the to be patched code.
 	   Other CPUs are not running. */
@@ -418,7 +420,9 @@ void __init alternative_instructions(void)
 	stop_mce();
 #endif
 
+	local_irq_save(flags);
 	apply_alternatives(__alt_instructions, __alt_instructions_end);
+	local_irq_restore(flags);
 
 	/* switch to patch-once-at-boottime-only mode and free the
 	 * tables in case we know the number of CPUs will never ever
@@ -448,7 +452,9 @@ void __init alternative_instructions(void)
 			alternatives_smp_switch(0);
 	}
 #endif
+	local_irq_save(flags);
  	apply_paravirt(__parainstructions, __parainstructions_end);
+	local_irq_restore(flags);
 
 	if (smp_alt_once)
 		free_init_pages("SMP alternatives",
