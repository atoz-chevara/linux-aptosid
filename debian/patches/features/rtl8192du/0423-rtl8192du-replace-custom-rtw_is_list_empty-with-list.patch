From ba7d028c31c9b98e0f7361bf9ee0414fdfd4d7b1 Mon Sep 17 00:00:00 2001
From: Stefan Lippers-Hollmann <s.l-h@gmx.de>
Date: Sat, 22 Mar 2014 03:03:21 +0100
Subject: [PATCH 423/456] rtl8192du: replace custom rtw_is_list_empty() with
 list_empty()

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 core/rtw_cmd.c          |  2 +-
 core/rtw_mlme_ext.c     | 12 ++++++------
 core/rtw_recv.c         |  4 ++--
 core/rtw_sta_mgt.c      |  4 ++--
 core/rtw_xmit.c         |  2 +-
 include/osdep_service.h |  1 -
 os_dep/ioctl_linux.c    |  2 +-
 os_dep/osdep_service.c  | 10 +---------
 8 files changed, 14 insertions(+), 23 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -128,7 +128,7 @@ struct cmd_obj *_rtw_dequeue_cmd(struct
 	struct cmd_obj *obj;
 
 	spin_lock_irqsave(&queue->lock, flags);
-	if (rtw_is_list_empty(&(queue->queue))) {
+	if (list_empty(&(queue->queue))) {
 		obj = NULL;
 	} else {
 		obj = container_of((&queue->queue)->next, struct cmd_obj, list);
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -1027,7 +1027,7 @@ unsigned int OnAuth(struct rtw_adapter *
 		pstat->auth_seq = 0;
 	} else {
 		spin_lock_bh(&pstapriv->asoc_list_lock);
-		if (rtw_is_list_empty(&pstat->asoc_list) == false) {
+		if (list_empty(&pstat->asoc_list) == false) {
 			list_del_init(&pstat->asoc_list);
 			pstapriv->asoc_list_cnt--;
 			if (pstat->expire_to > 0) {
@@ -1042,7 +1042,7 @@ unsigned int OnAuth(struct rtw_adapter *
 	}
 
 	spin_lock_bh(&pstapriv->auth_list_lock);
-	if (rtw_is_list_empty(&pstat->auth_list)) {
+	if (list_empty(&pstat->auth_list)) {
 		rtw_list_insert_tail(&pstat->auth_list, &pstapriv->auth_list);
 		pstapriv->auth_list_cnt++;
 	}
@@ -1682,14 +1682,14 @@ unsigned int OnAssocReq(struct rtw_adapt
 	pstat->state |= WIFI_FW_ASSOC_SUCCESS;
 
 	spin_lock_bh(&pstapriv->auth_list_lock);
-	if (!rtw_is_list_empty(&pstat->auth_list)) {
+	if (!list_empty(&pstat->auth_list)) {
 		list_del_init(&pstat->auth_list);
 		pstapriv->auth_list_cnt--;
 	}
 	spin_unlock_bh(&pstapriv->auth_list_lock);
 
 	spin_lock_bh(&pstapriv->asoc_list_lock);
-	if (rtw_is_list_empty(&pstat->asoc_list)) {
+	if (list_empty(&pstat->asoc_list)) {
 		pstat->expire_to = pstapriv->expire_to;
 		rtw_list_insert_tail(&pstat->asoc_list, &pstapriv->asoc_list);
 		pstapriv->asoc_list_cnt++;
@@ -1878,7 +1878,7 @@ unsigned int OnDeAuth(struct rtw_adapter
 			u8 updated;
 
 			spin_lock_bh(&pstapriv->asoc_list_lock);
-			if (rtw_is_list_empty(&psta->asoc_list) == false) {
+			if (list_empty(&psta->asoc_list) == false) {
 				list_del_init(&psta->asoc_list);
 				pstapriv->asoc_list_cnt--;
 				updated =
@@ -1943,7 +1943,7 @@ unsigned int OnDisassoc(struct rtw_adapt
 			u8 updated;
 
 			spin_lock_bh(&pstapriv->asoc_list_lock);
-			if (rtw_is_list_empty(&psta->asoc_list) == false) {
+			if (list_empty(&psta->asoc_list) == false) {
 				list_del_init(&psta->asoc_list);
 				pstapriv->asoc_list_cnt--;
 				updated =
--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -1977,7 +1977,7 @@ static int recv_indicatepkts_in_order(st
 
 	/*  Handling some condition for forced indicate case. */
 	if (bforced == true) {
-		if (rtw_is_list_empty(phead)) {
+		if (list_empty(phead)) {
 			/*  spin_unlock_irqrestore(&ppending_recvframe_queue->lock, &irql); */
 			/* spin_unlock(&ppending_recvframe_queue->lock); */
 			return true;
@@ -1990,7 +1990,7 @@ static int recv_indicatepkts_in_order(st
 
 	/*  Prepare indication list and indication. */
 	/*  Check if there is any packet need indicate. */
-	while (!rtw_is_list_empty(phead)) {
+	while (!list_empty(phead)) {
 		prframe = container_of(plist, struct recv_frame_hdr, list);
 		pattrib = &prframe->attrib;
 
--- a/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
+++ b/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
@@ -393,7 +393,7 @@ u32	rtw_free_stainfo(struct rtw_adapter
 		phead =		get_list_head(ppending_recvframe_queue);
 		plist = phead->next;
 
-		while (!rtw_is_list_empty(phead)) {
+		while (!list_empty(phead)) {
 			prframe = container_of(plist, struct recv_frame_hdr, list);
 
 			plist = plist->next;
@@ -408,7 +408,7 @@ u32	rtw_free_stainfo(struct rtw_adapter
 #ifdef CONFIG_92D_AP_MODE
 
 	spin_lock_bh(&pstapriv->auth_list_lock);
-	if (!rtw_is_list_empty(&psta->auth_list)) {
+	if (!list_empty(&psta->auth_list)) {
 		list_del_init(&psta->auth_list);
 		pstapriv->auth_list_cnt--;
 	}
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -1601,7 +1601,7 @@ s32 rtw_xmit_classifier(struct rtw_adapt
 
 	ptxservq = rtw_get_sta_pending(padapter, psta, pattrib->priority, (u8 *)(&ac_index));
 
-	if (rtw_is_list_empty(&ptxservq->tx_pending)) {
+	if (list_empty(&ptxservq->tx_pending)) {
 		rtw_list_insert_tail(&ptxservq->tx_pending, get_list_head(phwxmits[ac_index].sta_queue));
 	}
 
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -178,7 +178,6 @@ enum {
 
 #define rtw_update_mem_stat(flag, sz) do {} while (0)
 
-u32	rtw_is_list_empty(struct list_head *phead);
 void	rtw_list_insert_head(struct list_head *plist, struct list_head *phead);
 void	rtw_list_insert_tail(struct list_head *plist, struct list_head *phead);
 
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -5700,7 +5700,7 @@ static int rtw_del_sta(struct net_device
 		/* DBG_8192D("free psta =%p, aid =%d\n", psta, psta->aid); */
 
 		spin_lock_bh(&pstapriv->asoc_list_lock);
-		if (rtw_is_list_empty(&psta->asoc_list) == false)
+		if (list_empty(&psta->asoc_list) == false)
 		{
 			list_del_init(&psta->asoc_list);
 			pstapriv->asoc_list_cnt--;
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -41,14 +41,6 @@ For the following list_xxx operations,
 caller must guarantee the atomic context.
 Otherwise, there will be racing condition.
 */
-u32	rtw_is_list_empty(struct list_head *phead)
-{
-	if (list_empty(phead))
-		return true;
-	else
-		return false;
-}
-
 void rtw_list_insert_head(struct list_head *plist, struct list_head *phead)
 {
 	list_add(plist, phead);
@@ -103,7 +95,7 @@ void	_rtw_init_queue(struct __queue *pqu
 
 u32	  _rtw_queue_empty(struct __queue *pqueue)
 {
-	return (rtw_is_list_empty(&(pqueue->queue)));
+	return (list_empty(&(pqueue->queue)));
 }
 
 u32 rtw_end_of_queue_search(struct list_head *head, struct list_head *plist)
