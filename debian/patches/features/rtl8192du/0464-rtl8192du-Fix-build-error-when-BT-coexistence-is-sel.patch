From c948f37d9a0ee5f397da8add6a5e6745cfa82a4a Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sun, 6 Apr 2014 15:23:57 -0500
Subject: [PATCH 464/470] rtl8192du: Fix build error when BT coexistence is
 selected

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c           |   8 ++--
 core/rtw_cmd.c          |   6 +--
 core/rtw_ieee80211.c    |   6 +--
 core/rtw_mlme.c         |   4 +-
 core/rtw_mlme_ext.c     | 116 ++++++++++++++++++++++++------------------------
 core/rtw_p2p.c          |   8 ++--
 core/rtw_pwrctrl.c      |  12 ++---
 core/rtw_wlan_util.c    |   4 +-
 hal/rtl8192du_xmit.c    |  12 ++---
 hal/usb_halinit.c       |   4 +-
 include/autoconf.h      |   4 +-
 include/drv_types.h     |   4 +-
 include/ieee80211.h     |   2 +-
 include/rtl8192d_cmd.h  |   4 +-
 include/rtl8192d_dm.h   |  21 +++++++++
 include/rtl8192d_hal.h  |  40 +++++++++++++++--
 include/rtw_cmd.h       |   4 +-
 include/rtw_mlme_ext.h  |   4 +-
 include/sta_info.h      |   4 +-
 os_dep/ioctl_cfg80211.c | 104 +++++++++++++++++++++----------------------
 os_dep/ioctl_linux.c    |  62 +++++++++++++-------------
 os_dep/os_intfs.c       |  22 ++++-----
 os_dep/usb_intf.c       |   2 +-
 23 files changed, 257 insertions(+), 200 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -753,9 +753,9 @@ static void start_bss_network(struct rtw
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct wlan_bssid_ex *pnetwork_mlmeext = &(pmlmeinfo->network);
 	struct HT_info_element *pht_info = NULL;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info	*pwdinfo = &(padapter->wdinfo);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 	u8 *p;
 	u8 val8, cur_channel, cur_bwmode, cur_ch_offset;
 	u16 bcn_interval;
@@ -1022,11 +1022,11 @@ static void start_bss_network(struct rtw
 	/* let pnetwork_mlmeext == pnetwork_mlme. */
 	memcpy(pnetwork_mlmeext, pnetwork, pnetwork->Length);
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	memcpy(pwdinfo->p2p_group_ssid, pnetwork->Ssid.Ssid,
 	       pnetwork->Ssid.SsidLength);
 	pwdinfo->p2p_group_ssid_len = pnetwork->Ssid.SsidLength;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	if (pmlmeext->bstart_bss) {
 		update_beacon(padapter, _TIM_IE_, NULL, false);
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -1645,7 +1645,7 @@ static void power_saving_wk_hdl(struct r
 	 rtw_ps_processor(padapter);
 }
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 u8 p2p_protocol_wk_cmd(struct rtw_adapter *padapter, int intcmdtype)
 {
 	struct cmd_obj *ph2c;
@@ -1682,7 +1682,7 @@ exit:
 
 	return res;
 }
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 u8 rtw_ps_cmd(struct rtw_adapter *padapter)
 {
@@ -1862,7 +1862,7 @@ u8 rtw_drvextra_cmd_hdl(struct rtw_adapt
 	case LPS_CTRL_WK_CID:
 		lps_ctrl_wk_hdl(padapter, (u8)pdrvextra_cmd->type_size);
 		break;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	case P2P_PROTO_WK_CID:
 		/*	I used the type_size as the type command */
 		p2p_protocol_wk_hdl(padapter, pdrvextra_cmd->type_size);
--- a/drivers/staging/rtl8192du/core/rtw_ieee80211.c
+++ b/drivers/staging/rtl8192du/core/rtw_ieee80211.c
@@ -1113,7 +1113,7 @@ void dump_ies(u8 *buf, u32 buf_len)
 		len = *(pos+1);
 
 		DBG_8192D("%s ID:%u, LEN:%u\n", __func__, id, len);
-		#ifdef CONFIG_P2P
+		#ifdef CONFIG_92D_P2P
 		dump_p2p_ie(pos, len);
 		#endif
 		dump_wps_ie(pos, len);
@@ -1146,7 +1146,7 @@ void dump_wps_ie(u8 *ie, u32 ie_len)
 	}
 }
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 void dump_p2p_ie(u8 *ie, u32 ie_len)
 {
 	u8 *pos = (u8 *)ie;
@@ -1361,7 +1361,7 @@ void rtw_wlan_bssid_ex_remove_p2p_attr(s
 	}
 }
 
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 int ieee80211_is_empty_essid(const char *essid, int essid_len)
 {
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -692,7 +692,7 @@ exit:
 static void rtw_add_network(struct rtw_adapter *adapter,
 			    struct wlan_bssid_ex *pnetwork)
 {
-#if defined(CONFIG_P2P)
+#if defined(CONFIG_92D_P2P)
 	rtw_wlan_bssid_ex_remove_p2p_attr(pnetwork, P2P_ATTR_GROUP_INFO);
 #endif
 
@@ -1835,7 +1835,7 @@ void rtw_dynamic_check_timer_handlder(st
 	rtw_dynamic_chk_wk_cmd(adapter);
 
 	if (pregistrypriv->wifi_spec == 1) {
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 		struct wifidirect_info *pwdinfo = &adapter->wdinfo;
 		if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
 #endif
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -601,7 +601,7 @@ void mgt_dispatcher(struct rtw_adapter *
 #endif
 }
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 static u32 p2p_listen_state_process(struct rtw_adapter *adapt, unsigned char *da)
 {
 	bool response = true;
@@ -622,7 +622,7 @@ static u32 p2p_listen_state_process(stru
 
 	return 1;
 }
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 /****************************************************************************
 
@@ -643,7 +643,7 @@ unsigned int OnProbeReq(struct rtw_adapt
 	uint len = precv_frame->len;
 	u8 is_valid_p2p_probereq = false;
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
 	u8 wifi_test_chk_rate = 1;
 
@@ -678,7 +678,7 @@ unsigned int OnProbeReq(struct rtw_adapt
 	}
 
 _continue:
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	if (check_fwstate(pmlmepriv, WIFI_STATION_STATE)) {
 		return 1;
@@ -731,12 +731,12 @@ unsigned int OnProbeRsp(struct rtw_adapt
 			struct recv_frame_hdr *precv_frame)
 {
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &adapt->wdinfo;
 	u8 *pframe = precv_frame->rx_data;
 #endif
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_TX_PROVISION_DIS_REQ)) {
 		if (pwdinfo->tx_prov_disc_info.benable) {
 			if (!memcmp
@@ -1205,12 +1205,12 @@ unsigned int OnAssocReq(struct rtw_adapt
 	struct sta_priv *pstapriv = &adapt->stapriv;
 	u8 *pframe = precv_frame->rx_data;
 	uint pkt_len = precv_frame->len;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
 	u8 p2p_status_code = P2P_STATUS_SUCCESS;
 	u8 *p2pie;
 	u32 p2pielen = 0;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 #ifdef CONFIG_CONCURRENT_MODE
 	if (((pmlmeinfo->state & 0x03) == WIFI_FW_AP_STATE) &&
@@ -1587,7 +1587,7 @@ unsigned int OnAssocReq(struct rtw_adapt
 	if (status != _STATS_SUCCESSFUL_)
 		goto OnAssocReqFail;
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	pstat->is_p2p_device = false;
 	if (rtw_p2p_chk_role(pwdinfo, P2P_ROLE_GO)) {
 		p2pie = rtw_get_p2p_ie(pframe + WLAN_HDR_A3_LEN + ie_offset, pkt_len - WLAN_HDR_A3_LEN - ie_offset, NULL, &p2pielen);
@@ -1602,7 +1602,7 @@ unsigned int OnAssocReq(struct rtw_adapt
 		}
 	}
 	pstat->p2p_status_code = p2p_status_code;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	/* TODO: identify_proprietary_vendor_ie(); */
 	/*  Realtek proprietary IE */
@@ -1799,9 +1799,9 @@ unsigned int OnDeAuth(struct rtw_adapter
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	u8 *pframe = precv_frame->rx_data;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	/* check A3 */
 	if (!
@@ -1810,12 +1810,12 @@ unsigned int OnDeAuth(struct rtw_adapter
 	      ETH_ALEN)))
 		return 1;
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (pwdinfo->rx_invitereq_info.scan_op_ch_only) {
 		del_timer_sync(&pwdinfo->reset_ch_sitesurvey);
 		_set_timer(&pwdinfo->reset_ch_sitesurvey, 10);
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	reason = le16_to_cpu(*(__le16 *)(pframe + WLAN_HDR_A3_LEN));
 
@@ -1864,9 +1864,9 @@ unsigned int OnDisassoc(struct rtw_adapt
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	u8 *pframe = precv_frame->rx_data;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	/* check A3 */
 	if (!
@@ -1875,12 +1875,12 @@ unsigned int OnDisassoc(struct rtw_adapt
 	      ETH_ALEN)))
 		return 1;
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (pwdinfo->rx_invitereq_info.scan_op_ch_only) {
 		del_timer_sync(&pwdinfo->reset_ch_sitesurvey);
 		_set_timer(&pwdinfo->reset_ch_sitesurvey, 10);
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	reason = le16_to_cpu(*(__le16 *)(pframe + WLAN_HDR_A3_LEN));
 
@@ -2041,7 +2041,7 @@ unsigned int OnAction_back(struct rtw_ad
 	return 1;
 }
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 
 static int get_reg_classes_full_count(struct p2p_channels channel_list)
 {
@@ -4555,7 +4555,7 @@ exit:
 	return ret;
 }
 
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 static s32 rtw_action_public_decache(struct recv_frame_hdr *recv_frame, s32 token)
 {
@@ -4599,7 +4599,7 @@ static unsigned int on_action_public_p2p
 	u8 *pframe = precv_frame->rx_data;
 	u8 *frame_body;
 	u8 dialogToken = 0;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct rtw_adapter *adapt = precv_frame->adapter;
 	uint len = precv_frame->len;
 	u8 *p2p_ie;
@@ -4607,7 +4607,7 @@ static unsigned int on_action_public_p2p
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
 	u8 result = P2P_STATUS_SUCCESS;
 	u8 empty_addr[ETH_ALEN] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	frame_body =
 	    (unsigned char *)(pframe + sizeof(struct ieee80211_hdr_3addr));
@@ -4617,7 +4617,7 @@ static unsigned int on_action_public_p2p
 	if (rtw_action_public_decache(precv_frame, dialogToken) == 0)
 		return 0;
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	del_timer_sync(&pwdinfo->reset_ch_sitesurvey);
 	if (wdev_to_priv(adapt->rtw_wdev)->p2p_enabled) {
 		rtw_cfg80211_rx_p2p_action_public(adapt, pframe, len);
@@ -5122,7 +5122,7 @@ static unsigned int on_action_public_p2p
 			break;
 		}
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	return 1;
 }
@@ -5212,7 +5212,7 @@ unsigned int OnAction_wmm(struct rtw_ada
 unsigned int OnAction_p2p(struct rtw_adapter *adapt,
 			  struct recv_frame_hdr *precv_frame)
 {
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	u8 *frame_body;
 	u8 category, OUI_Subtype;
 	u8 *pframe = precv_frame->rx_data;
@@ -5255,7 +5255,7 @@ unsigned int OnAction_p2p(struct rtw_ada
 			break;
 		}
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	return 1;
 }
@@ -5476,9 +5476,9 @@ void issue_beacon(struct rtw_adapter *ad
 	struct mlme_ext_priv *pmlmeext = &(adapt->mlmeextpriv);
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct wlan_bssid_ex *cur_network = &(pmlmeinfo->network);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 	unsigned char *pframe;
 	unsigned short *fctrl;
 	unsigned int rate_len;
@@ -5519,7 +5519,7 @@ void issue_beacon(struct rtw_adapter *ad
 
 	if ((pmlmeinfo->state & 0x03) == WIFI_FW_AP_STATE) {
 		/* DBG_8192D("ie len=%d\n", cur_network->IELength); */
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 		/*  for P2P : Primary Device Type & Device Name */
 		u32 wpsielen = 0, insert_len = 0;
 		u8 *wpsie = NULL;
@@ -5630,7 +5630,7 @@ void issue_beacon(struct rtw_adapter *ad
 				pattrib->pktlen += remainder_ielen;
 			}
 		} else
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 		{
 			int len_diff;
 			memcpy(pframe, cur_network->IEs, cur_network->IELength);
@@ -5669,7 +5669,7 @@ void issue_beacon(struct rtw_adapter *ad
 				_clr_fwstate_(pmlmepriv, WIFI_UNDER_WPS);
 		}
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 		if (rtw_p2p_chk_role(pwdinfo, P2P_ROLE_GO)) {
 			u32 len;
 			if (wdev_to_priv(adapt->rtw_wdev)->p2p_enabled) {
@@ -5684,7 +5684,7 @@ void issue_beacon(struct rtw_adapter *ad
 			pframe += len;
 			pattrib->pktlen += len;
 		}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 		goto _issue_bcn;
 	}
 
@@ -5788,13 +5788,13 @@ void issue_probersp(struct rtw_adapter *
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct wlan_bssid_ex *cur_network = &(pmlmeinfo->network);
 	struct xmit_priv *pxmitpriv = &(adapt->xmitpriv);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 	unsigned char *pframe;
 	unsigned short *fctrl;
 	unsigned char *mac, *bssid;
-#if defined (CONFIG_92D_AP_MODE) || defined(CONFIG_P2P)
+#if defined (CONFIG_92D_AP_MODE) || defined(CONFIG_92D_P2P)
 	struct mlme_priv *pmlmepriv = &adapt->mlmepriv;
 #endif
 #if defined (CONFIG_92D_AP_MODE)
@@ -5998,7 +5998,7 @@ void issue_probersp(struct rtw_adapter *
 		}
 	}
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (rtw_p2p_chk_role(pwdinfo, P2P_ROLE_GO) && is_valid_p2p_probereq) {
 		u32 len;
 		if (wdev_to_priv(adapt->rtw_wdev)->p2p_enabled) {
@@ -6014,7 +6014,7 @@ void issue_probersp(struct rtw_adapter *
 		pframe += len;
 		pattrib->pktlen += len;
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	pattrib->last_txcmdsz = pattrib->pktlen;
 
@@ -6522,11 +6522,11 @@ void issue_assocreq(struct rtw_adapter *
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	int bssrate_len = 0, sta_bssrate_len = 0;
 	u8 cbw40_enable = 0;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
 	u8 p2pie[255] = { 0x00 };
 	u16 p2pielen = 0;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	u16 cap;
 	u8 pow_cap_ele[2] = {0x00};
@@ -6799,7 +6799,7 @@ void issue_assocreq(struct rtw_adapter *
 		    rtw_set_ie(pframe, _VENDOR_SPECIFIC_IE_, 6, REALTEK_96B_IE,
 			       &(pattrib->pktlen));
 	}
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 
 	if (wdev_to_priv(adapt->rtw_wdev)->p2p_enabled) {
 		if (pmlmepriv->p2p_assoc_req_ie &&
@@ -6954,7 +6954,7 @@ void issue_assocreq(struct rtw_adapter *
 		}
 	}
 
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	pattrib->last_txcmdsz = pattrib->pktlen;
 	dump_mgntframe(adapt, pmgntframe);
@@ -7245,17 +7245,17 @@ static int _issue_deauth(struct rtw_adap
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	int ret = 0;
 	__le16 le_tmp;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (!(rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) &&
 	    (pwdinfo->rx_invitereq_info.scan_op_ch_only)) {
 		del_timer_sync(&pwdinfo->reset_ch_sitesurvey);
 		_set_timer(&pwdinfo->reset_ch_sitesurvey, 10);
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	pmgntframe = alloc_mgtxmitframe(pxmitpriv);
 	if (pmgntframe == NULL)
@@ -7838,7 +7838,7 @@ void site_survey(struct rtw_adapter *ada
 	u8 stay_buddy_ch = 0;
 #endif
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 
 #ifdef CONFIG_CONCURRENT_MODE
 	struct mlme_priv *pmlmepriv = &(adapt->mlmepriv);
@@ -7875,7 +7875,7 @@ void site_survey(struct rtw_adapter *ada
 		else
 			ScanType = SCAN_ACTIVE;
 	} else
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 	{
 		struct rtw_ieee80211_channel *ch;
 		if (pmlmeext->sitesurvey_res.channel_idx <
@@ -7937,7 +7937,7 @@ void site_survey(struct rtw_adapter *ada
 #endif
 
 		if (ScanType == SCAN_ACTIVE) {	/* obey the channel plan setting... */
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 			if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_SCAN) ||
 			    rtw_p2p_chk_state(pwdinfo,
 					      P2P_STATE_FIND_PHASE_SEARCH)
@@ -7946,7 +7946,7 @@ void site_survey(struct rtw_adapter *ada
 				issue_probereq_p2p(adapt, NULL);
 				issue_probereq_p2p(adapt, NULL);
 			} else
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 			{
 				int i;
 				for (i = 0; i < RTW_SSID_SCAN_AMOUNT; i++) {
@@ -8004,7 +8004,7 @@ void site_survey(struct rtw_adapter *ada
 		}
 #endif
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 		if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_SCAN) ||
 		    rtw_p2p_chk_state(pwdinfo,
 					 P2P_STATE_FIND_PHASE_SEARCH)) {
@@ -8035,16 +8035,16 @@ void site_survey(struct rtw_adapter *ada
 			_set_timer(&pwdinfo->find_phase_timer,
 				   (u32) ((u32) (pwdinfo->listen_dwell) * 100));
 		} else
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 		{
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 			if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_SCAN) || rtw_p2p_chk_state(pwdinfo,
 			    P2P_STATE_FIND_PHASE_SEARCH))
 				rtw_p2p_set_state(pwdinfo,
 						  rtw_p2p_pre_state(pwdinfo));
 			rtw_p2p_findphase_ex_set(pwdinfo,
 						 P2P_FINDPHASE_EX_NONE);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 			pmlmeext->sitesurvey_res.state = SCAN_COMPLETE;
 
@@ -9390,7 +9390,7 @@ void linked_status_chk(struct rtw_adapte
 		psta = rtw_get_stainfo(pstapriv, pmlmeinfo->network.MacAddress);
 		if (psta != NULL) {
 			bool is_p2p_enable = false;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 			is_p2p_enable =
 			    !rtw_p2p_chk_state(&adapt->wdinfo,
 					       P2P_STATE_NONE);
@@ -9527,7 +9527,7 @@ void survey_timer_hdl(struct rtw_adapter
 	struct sitesurvey_parm *psurveyPara;
 	struct cmd_priv *pcmdpriv = &adapt->cmdpriv;
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
 #endif
 
@@ -9537,7 +9537,7 @@ void survey_timer_hdl(struct rtw_adapter
 			pmlmeext->sitesurvey_res.channel_idx++;
 
 		if (pmlmeext->scan_abort == true) {
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 			if (!rtw_p2p_chk_state
 			    (&adapt->wdinfo, P2P_STATE_NONE)) {
 				rtw_p2p_findphase_ex_set(pwdinfo,
@@ -11129,12 +11129,12 @@ int concurrent_chk_start_clnt_join(struc
 			rtw_hal_set_hwreg(adapt, HW_VAR_CHECK_TXBUF, 0);
 		}
 	} else if (check_fwstate(pbuddy_mlmepriv, _FW_LINKED) == true && check_fwstate(pbuddy_mlmepriv, WIFI_STATION_STATE) == true) {	/* for Client Mode/p2p client */
-#if defined(CONFIG_P2P)
+#if defined(CONFIG_92D_P2P)
 		struct wifidirect_info *pbuddy_wdinfo =
 		    &(pbuddy_adapter->wdinfo);
 		if (!rtw_p2p_chk_state(pbuddy_wdinfo, P2P_STATE_NONE))
 			return 1;	/* wlan0-sta mode has higher priority than p2p0-p2p client */
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 		if (pmlmeext->cur_channel != pbuddy_mlmeext->cur_channel) {
 			DBG_8192D
--- a/drivers/staging/rtl8192du/core/rtw_p2p.c
+++ b/drivers/staging/rtl8192du/core/rtw_p2p.c
@@ -19,7 +19,7 @@
 #include <rtw_p2p.h>
 #include <wifi.h>
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 
 static int rtw_p2p_is_channel_list_ok(u8 desired_ch, u8 *ch_list, u8 ch_cnt)
 {
@@ -1882,7 +1882,7 @@ void p2p_protocol_wk_hdl(struct rtw_adap
 		pre_tx_negoreq_handler(padapter);
 #endif
 		break;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 #ifdef CONFIG_CONCURRENT_MODE
 	case P2P_AP_P2P_CH_SWITCH_PROCESS_WK:
 		p2p_concurrent_handler(padapter);
@@ -2027,7 +2027,7 @@ void rtw_init_wifidirect_timers(struct r
 
 void rtw_init_wifidirect_addrs(struct rtw_adapter *padapter, u8 *dev_addr, u8 *iface_addr)
 {
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
 
 	if (dev_addr)
@@ -2221,4 +2221,4 @@ exit:
 	return ret;
 }
 
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
--- a/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
+++ b/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
@@ -103,7 +103,7 @@ static bool rtw_pwr_unassociated_idle(st
 {
 	struct rtw_adapter *buddy = adapter->pbuddy_adapter;
 	struct mlme_priv *pmlmepriv = &(adapter->mlmepriv);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(adapter->wdinfo);
 #endif
 
@@ -117,7 +117,7 @@ static bool rtw_pwr_unassociated_idle(st
 	if (check_fwstate(pmlmepriv, WIFI_ASOC_STATE | WIFI_SITE_MONITOR) ||
 	    check_fwstate(pmlmepriv, WIFI_UNDER_LINKING | WIFI_UNDER_WPS) ||
 	    check_fwstate(pmlmepriv, WIFI_AP_STATE) ||
-#if defined(CONFIG_P2P)
+#if defined(CONFIG_92D_P2P)
 	    !rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE) ||
 #endif
 	    check_fwstate(pmlmepriv, WIFI_ADHOC_MASTER_STATE | WIFI_ADHOC_STATE))
@@ -126,14 +126,14 @@ static bool rtw_pwr_unassociated_idle(st
 	/* consider buddy, if exist */
 	if (buddy) {
 		struct mlme_priv *b_pmlmepriv = &(buddy->mlmepriv);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 		struct wifidirect_info *b_pwdinfo = &(buddy->wdinfo);
 #endif
 
 		if (check_fwstate(b_pmlmepriv, WIFI_ASOC_STATE | WIFI_SITE_MONITOR) ||
 		    check_fwstate(b_pmlmepriv, WIFI_UNDER_LINKING | WIFI_UNDER_WPS) ||
 		    check_fwstate(b_pmlmepriv, WIFI_AP_STATE) ||
-#if defined(CONFIG_P2P)
+#if defined(CONFIG_92D_P2P)
 		    !rtw_p2p_chk_state(b_pwdinfo, P2P_STATE_NONE) ||
 #endif
 		    check_fwstate(b_pmlmepriv, WIFI_ADHOC_MASTER_STATE | WIFI_ADHOC_STATE)) {
@@ -316,7 +316,7 @@ void rtw_lps_enter(struct rtw_adapter *p
 	/* consider buddy, if exist */
 	if (buddy) {
 		struct mlme_priv *b_pmlmepriv = &(buddy->mlmepriv);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 		struct wifidirect_info *b_pwdinfo = &(buddy->wdinfo);
 		struct cfg80211_wifidirect_info *b_pcfg80211_wdinfo =
 		    &buddy->cfg80211_wdinfo;
@@ -327,7 +327,7 @@ void rtw_lps_enter(struct rtw_adapter *p
 		     check_fwstate(b_pmlmepriv, WIFI_UNDER_LINKING | WIFI_UNDER_WPS) ||
 		     check_fwstate(b_pmlmepriv, WIFI_AP_STATE) ||
 		     check_fwstate(b_pmlmepriv, WIFI_ADHOC_MASTER_STATE | WIFI_ADHOC_STATE) ||
-#if defined(CONFIG_P2P)
+#if defined(CONFIG_92D_P2P)
 		    !rtw_p2p_chk_state(b_pwdinfo, P2P_STATE_NONE) ||
 #endif
 		    rtw_is_scan_deny(buddy))
--- a/drivers/staging/rtl8192du/core/rtw_wlan_util.c
+++ b/drivers/staging/rtl8192du/core/rtw_wlan_util.c
@@ -1197,7 +1197,7 @@ void update_tx_basic_rate(struct rtw_ada
 {
 	unsigned char supported_rates[NDIS_802_11_LENGTH_RATES_EX];
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
 
 	/*	Added by Albert 2011/03/22 */
@@ -1205,7 +1205,7 @@ void update_tx_basic_rate(struct rtw_ada
 	/*	So, the Tx packet shouldn't use the CCK rate */
 	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
 		return;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 	memset(supported_rates, 0, NDIS_802_11_LENGTH_RATES_EX);
 
 	/* clear B mod if current channel is in 5G band, avoid tx cck rate in 5G band. */
--- a/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
@@ -230,10 +230,10 @@ static s32 update_txdesc(struct xmit_fra
 	struct pkt_attrib		*pattrib = &pxmitframe->attrib;
 	struct tx_desc		*ptxdesc = (struct tx_desc *)pmem;
 	int	bmcst = IS_MCAST(pattrib->ra);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info	*pwdinfo = &padapter->wdinfo;
 	struct registry_priv	*pregistrypriv = &padapter->registrypriv;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	if (padapter->registrypriv.mp_mode == 0) {
 
@@ -312,7 +312,7 @@ static s32 update_txdesc(struct xmit_fra
 			ptxdesc->txdw5 |= cpu_to_le32(ratetohwrate(pmlmeext->tx_rate));
 		}
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 		if (pregistrypriv->wifi_spec==1 && !rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
 		{
 			ptxdesc->txdw1 |= cpu_to_le32(BIT(6));/* AGG BK */
@@ -323,7 +323,7 @@ static s32 update_txdesc(struct xmit_fra
 
 			ptxdesc->txdw5 |= cpu_to_le32(BIT(2));/*  use OFDM 6Mbps */
 		}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 	} else if ((pxmitframe->frame_tag&0x0f)== MGNT_FRAMETAG) {
 
 		/* offset 4 */
@@ -350,11 +350,11 @@ static s32 update_txdesc(struct xmit_fra
 #ifdef CONFIG_92D_AP_MODE
 		if (check_fwstate(pmlmepriv, WIFI_AP_STATE) == true) {
 			ptxdesc->txdw5 |= cpu_to_le32(BIT(17));/* retry limit enable */
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 			if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) {
 				ptxdesc->txdw5 |= cpu_to_le32(0x00080000);/* retry limit = 2 */
 			} else
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 				ptxdesc->txdw5 |= cpu_to_le32(0x00180000);/* retry limit = 6 */
 		}
 #endif
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -3716,7 +3716,7 @@ static void UpdateHalRAMask8192DUsb(stru
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
-#ifdef CONFIG_BT_COEXIST
+#ifdef CONFIG_92D_BT_COEXIST
 	struct btcoexist_priv	*pbtpriv = &(pHalData->bt_coexist);
 #endif
 
@@ -3778,7 +3778,7 @@ static void UpdateHalRAMask8192DUsb(stru
 			break;
 	}
 
-#ifdef CONFIG_BT_COEXIST
+#ifdef CONFIG_92D_BT_COEXIST
 	if ((pbtpriv->BT_Coexist) &&
 		(pbtpriv->BT_CoexistType == BT_CSR_BC4) &&
 		(pbtpriv->BT_CUR_State) &&
--- a/drivers/staging/rtl8192du/include/autoconf.h
+++ b/drivers/staging/rtl8192du/include/autoconf.h
@@ -25,7 +25,9 @@
 
 #define CONFIG_92D_AP_MODE 1
 
-#define CONFIG_P2P	1
+#define CONFIG_92D_P2P	1
+
+#define CONFIG_92D_BT_COEXIST
 
 #define RTW_NOTCH_FILTER 0 /* 0:Disable, 1:Enable,*/
 
--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -120,7 +120,7 @@ struct registry_priv {
 	u8	wifi_spec;/*  !turbo_mode */
 
 	u8	channel_plan;
-#ifdef CONFIG_BT_COEXIST
+#ifdef CONFIG_92D_BT_COEXIST
 	u8	bt_iso;
 	u8	bt_sco;
 	u8	bt_ampdu;
@@ -310,7 +310,7 @@ struct rtw_adapter {
 	u8 bForceWriteInitGain;
 	/* 	The driver will show up the desired channel number when this flag is 1. */
 	u8 bNotifyChannelChange;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	/* 	The driver will show the current P2P status when the upper application reads it. */
 	u8 bShowGetP2PState;
 #endif
--- a/drivers/staging/rtl8192du/include/ieee80211.h
+++ b/drivers/staging/rtl8192du/include/ieee80211.h
@@ -1158,7 +1158,7 @@ u8 *rtw_get_wps_attr_content(u8 *wps_ie,
 void dump_ies(u8 *buf, u32 buf_len);
 void dump_wps_ie(u8 *ie, u32 ie_len);
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 void dump_p2p_ie(u8 *ie, u32 ie_len);
 u8 *rtw_get_p2p_ie(u8 *in_ie, int in_len, u8 *p2p_ie, uint *p2p_ielen);
 u8 *rtw_get_p2p_attr(u8 *p2p_ie, uint p2p_ielen, u8 target_attr_id ,u8 *buf_attr, u32 *len_attr);
--- a/drivers/staging/rtl8192du/include/rtl8192d_cmd.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_cmd.h
@@ -99,9 +99,9 @@ void	rtl8192d_set_FwJoinBssReport_cmd(st
 u8	rtl8192d_set_rssi_cmd(struct rtw_adapter*padapter, u8 *param);
 u8	rtl8192d_set_raid_cmd(struct rtw_adapter*padapter, u32 mask, u8 arg);
 void	rtl8192d_Add_RateATid(struct rtw_adapter * adapter, u32 bitmap, u8 arg);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 void	rtl8192d_set_p2p_ps_offload_cmd(struct rtw_adapter* padapter, u8 p2p_ps_state);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 #ifdef CONFIG_CONCURRENT_MODE
 int reset_tsf(struct rtw_adapter * adapter, u8 reset_port);
--- a/drivers/staging/rtl8192du/include/rtl8192d_dm.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_dm.h
@@ -134,6 +134,27 @@ enum DM_DIG_CONNECT_E {
 	DIG_CONNECT_MAX
 };
 
+enum BT_COTYPE {
+	BT_2Wire		= 0,		
+	BT_ISSC_3Wire		= 1,
+	BT_Accel		= 2,
+	BT_CSR_BC4		= 3,
+	BT_CSR_BC8		= 4,
+	BT_RTL8756		= 5,
+};
+
+enum {
+	BT_SCO		= 0,	
+	BT_A2DP		= 1,
+	BT_HID		= 2,
+	BT_HID_Idle	= 3,
+	BT_Scan		= 4,
+	BT_Idle		= 5,
+	BT_OtherAction	= 6,
+	BT_Busy		= 7,
+	BT_OtherBusy	= 8,
+	BT_PAN		= 9,
+};
 
 #define		DM_DIG_THRESH_HIGH			40
 #define		DM_DIG_THRESH_LOW			35
--- a/drivers/staging/rtl8192du/include/rtl8192d_hal.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_hal.h
@@ -393,6 +393,40 @@ enum c2h_id_8192d {
 	MAX_C2HEVENT
 };
 
+#ifdef CONFIG_92D_BT_COEXIST
+struct btcoexist_priv {
+	u8	BT_Coexist;
+	u8	BT_Ant_Num;
+	u8	BT_CoexistType;
+	u8	BT_State;
+	u8	BT_CUR_State;		/* 0:on, 1:off */
+	u8	BT_Ant_isolation;	/* 0:good, 1:bad */
+	u8	BT_PapeCtrl;		/* 0:SW, 1:SW/HW dynamic */
+	u8	BT_Service;
+	u8	BT_Ampdu;	/*  0:Disable BT control A-MPDU, 1:Enable BT control A-MPDU. */
+	u8	BT_RadioSharedType;
+	u32	Ratio_Tx;
+	u32	Ratio_PRI;
+	u8	BtRfRegOrigin1E;
+	u8	BtRfRegOrigin1F;
+	u8	BtRssiState;
+	u32	BtEdcaUL;
+	u32	BtEdcaDL;
+	u32	BT_EDCA[2];
+	u8	bCOBT;
+
+	u8	bInitSet;
+	u8	bBTBusyTraffic;
+	u8	bBTTrafficModeSet;
+	u8	bBTNonTrafficModeSet;
+	u32	CurrentState;
+	u32	PreviousState;
+	u8	BtPreRssiState;
+	u8	bFWCoexistAllOff;
+	u8	bSWCoexistAllOff;
+};
+#endif
+
 struct hal_data_8192du {
 	enum VERSION_8192D	VersionID;
 
@@ -461,7 +495,7 @@ struct hal_data_8192du {
 
 	u8	CrystalCap;	/*  CrystalCap. */
 
-#ifdef CONFIG_BT_COEXIST
+#ifdef CONFIG_92D_BT_COEXIST
 	struct btcoexist_priv	bt_coexist;
 #endif
 
@@ -561,9 +595,9 @@ struct hal_data_8192du {
 
 	u16	EfuseUsedBytes;
 	u8	RTSInitRate;	 /*  2010.11.24.by tynli. */
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct P2P_PS_Offload_t	p2p_ps_offload;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 };
 
 #define GET_HAL_DATA(__adapter)	((struct hal_data_8192du *)((__adapter)->HalData))
--- a/drivers/staging/rtl8192du/include/rtw_cmd.h
+++ b/drivers/staging/rtl8192du/include/rtw_cmd.h
@@ -99,9 +99,9 @@ void rtw_free_cmd_priv (struct cmd_priv
 
 u32 rtw_init_evt_priv (struct evt_priv *pevtpriv);
 void rtw_evt_notify_isr(struct evt_priv *pevtpriv);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 u8 p2p_protocol_wk_cmd(struct rtw_adapter*padapter, int intCmdType);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 enum rtw_drvextra_cmd_id
 {
--- a/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
@@ -523,7 +523,7 @@ void dump_mgntframe(struct rtw_adapter *
 s32 dump_mgntframe_and_wait(struct rtw_adapter *padapter, struct xmit_frame *pmgntframe, int timeout_ms);
 s32 dump_mgntframe_and_wait_ack(struct rtw_adapter *padapter, struct xmit_frame *pmgntframe);
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 void issue_probersp_p2p(struct rtw_adapter *padapter, unsigned char *da);
 void issue_p2p_provision_request(struct rtw_adapter *padapter, u8* pssid, u8 ussidlen, u8* pdev_raddr);
 void issue_p2p_GO_request(struct rtw_adapter *padapter, u8* raddr);
@@ -531,7 +531,7 @@ void issue_probereq_p2p(struct rtw_adapt
 int issue_probereq_p2p_ex(struct rtw_adapter *adapter, u8 *da, int try_cnt, int wait_ms);
 void issue_p2p_invitation_response(struct rtw_adapter *padapter, u8* raddr, u8 dialogToken, u8 success);
 void issue_p2p_invitation_request(struct rtw_adapter *padapter, u8* raddr);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 void issue_beacon(struct rtw_adapter *padapter);
 void issue_probersp(struct rtw_adapter *padapter, unsigned char *da, u8 is_valid_p2p_probereq);
 void issue_assocreq(struct rtw_adapter *padapter);
--- a/drivers/staging/rtl8192du/include/sta_info.h
+++ b/drivers/staging/rtl8192du/include/sta_info.h
@@ -179,7 +179,7 @@ struct sta_info {
 	u8 has_legacy_ac;
 	unsigned int sleepq_ac_len;
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	/* p2p priv data */
 	u8 is_p2p_device;
 	u8 p2p_status_code;
@@ -193,7 +193,7 @@ struct sta_info {
 	u8 secdev_types_list[32];/*  32/8 == 4; */
 	u16 dev_name_len;
 	u8 dev_name[32];
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	u8 under_exist_checking;
 
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -367,7 +367,7 @@ static int rtw_cfg80211_inform_bss(struc
 	memcpy(pbuf, pnetwork->network.IEs, pnetwork->network.IELength);
 	len += pnetwork->network.IELength;
 
-	/* ifdef CONFIG_P2P */
+	/* ifdef CONFIG_92D_P2P */
 
 	bss = cfg80211_inform_bss_frame(wiphy, notify_channel, (struct ieee80211_mgmt *)buf,
 		len, notify_signal, GFP_ATOMIC);
@@ -386,7 +386,7 @@ void rtw_cfg80211_indicate_connect(struc
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct wlan_network  *cur_network = &(pmlmepriv->cur_network);
 	struct wireless_dev *pwdev = padapter->rtw_wdev;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo= &(padapter->wdinfo);
 #endif
 
@@ -399,7 +399,7 @@ void rtw_cfg80211_indicate_connect(struc
 	if (check_fwstate(pmlmepriv, WIFI_AP_STATE) == true)
 		return;
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
 	{
 		rtw_p2p_set_pre_state(pwdinfo, rtw_p2p_state(pwdinfo));
@@ -407,7 +407,7 @@ void rtw_cfg80211_indicate_connect(struc
 		rtw_p2p_set_state(pwdinfo, P2P_STATE_GONEGO_OK);
 		DBG_8192D("%s, role=%d, p2p_state=%d, pre_p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo), rtw_p2p_pre_state(pwdinfo));
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	if (rtw_to_roaming(padapter) > 0) {
 		struct wiphy *wiphy = pwdev->wiphy;
@@ -448,7 +448,7 @@ void rtw_cfg80211_indicate_disconnect(st
 {
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct wireless_dev *pwdev = padapter->rtw_wdev;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo= &(padapter->wdinfo);
 #endif
 
@@ -461,7 +461,7 @@ void rtw_cfg80211_indicate_disconnect(st
 	if (check_fwstate(pmlmepriv, WIFI_AP_STATE) == true)
 		return;
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) {
 		del_timer_sync(&pwdinfo->find_phase_timer);
 		del_timer_sync(&pwdinfo->restore_p2p_state_timer);
@@ -472,7 +472,7 @@ void rtw_cfg80211_indicate_disconnect(st
 
 		DBG_8192D("%s, role=%d, p2p_state=%d, pre_p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo), rtw_p2p_pre_state(pwdinfo));
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	if (!padapter->mlmepriv.not_indic_disco) {
 		if (check_fwstate(&padapter->mlmepriv, WIFI_UNDER_LINKING)) {
@@ -892,9 +892,9 @@ static int rtw_cfg80211_set_encryption(s
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info* pwdinfo = &padapter->wdinfo;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	DBG_8192D("%s\n", __func__);
 
@@ -1016,12 +1016,12 @@ static int rtw_cfg80211_set_encryption(s
 					padapter->securitypriv.dot118021XGrpKeyid = param->u.crypt.idx;
 
 					rtw_set_key(padapter,&padapter->securitypriv,param->u.crypt.idx, 1);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 					if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_PROVISIONING_ING))
 					{
 						rtw_p2p_set_state(pwdinfo, P2P_STATE_PROVISIONING_DONE);
 					}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 				}
 			}
@@ -1281,7 +1281,7 @@ static int cfg80211_rtw_change_iface(str
 	struct wireless_dev *rtw_wdev = wiphy_to_wdev(wiphy);
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct __queue *queue = &pmlmepriv->scanned_queue;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo= &(padapter->wdinfo);
 #endif
 	int ret = 0;
@@ -1326,7 +1326,7 @@ static int cfg80211_rtw_change_iface(str
 	case NL80211_IFTYPE_P2P_CLIENT:
 	case NL80211_IFTYPE_STATION:
 		networkType = NDIS802_11INFRA;
-		#ifdef CONFIG_P2P
+		#ifdef CONFIG_92D_P2P
 		if (change && rtw_p2p_chk_role(pwdinfo, P2P_ROLE_GO)) {
 			del_timer_sync(&pwdinfo->find_phase_timer);
 			del_timer_sync(&pwdinfo->restore_p2p_state_timer);
@@ -1338,17 +1338,17 @@ static int cfg80211_rtw_change_iface(str
 
 			DBG_8192D("%s, role=%d, p2p_state=%d, pre_p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo), rtw_p2p_pre_state(pwdinfo));
 		}
-		#endif /* CONFIG_P2P */
+		#endif /* CONFIG_92D_P2P */
 		break;
 	case NL80211_IFTYPE_P2P_GO:
 	case NL80211_IFTYPE_AP:
 		networkType = Ndis802_11APMode;
-		#ifdef CONFIG_P2P
+		#ifdef CONFIG_92D_P2P
 		if (change && !rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) {
 			/* it means P2P Group created, we will be GO and change mode from  P2P DEVICE to AP(GO) */
 			rtw_p2p_set_role(pwdinfo, P2P_ROLE_GO);
 		}
-		#endif /* CONFIG_P2P */
+		#endif /* CONFIG_92D_P2P */
 		break;
 	default:
 		return -EOPNOTSUPP;
@@ -1427,7 +1427,7 @@ static int rtw_cfg80211_set_probe_req_wp
 	uint wps_ielen = 0;
 	u8 *wps_ie;
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	u32 p2p_ielen = 0;
 	u8 *p2p_ie;
 #endif
@@ -1450,7 +1450,7 @@ static int rtw_cfg80211_set_probe_req_wp
 			pmlmepriv->wps_probe_req_ie_len = wps_ielen;
 		}
 
-		#ifdef CONFIG_P2P
+		#ifdef CONFIG_92D_P2P
 		if ((p2p_ie=rtw_get_p2p_ie(buf, len, NULL, &p2p_ielen))) {
 
 			if (pmlmepriv->p2p_probe_req_ie) {
@@ -1468,7 +1468,7 @@ static int rtw_cfg80211_set_probe_req_wp
 			memcpy(pmlmepriv->p2p_probe_req_ie, p2p_ie, p2p_ielen);
 			pmlmepriv->p2p_probe_req_ie_len = p2p_ielen;
 		}
-		#endif /* CONFIG_P2P */
+		#endif /* CONFIG_92D_P2P */
 	}
 	return ret;
 }
@@ -1480,10 +1480,10 @@ static int cfg80211_rtw_scan(struct wiph
 	struct mlme_priv *pmlmepriv= &padapter->mlmepriv;
 	struct ndis_802_11_ssid ssid[RTW_SSID_SCAN_AMOUNT];
 	struct rtw_ieee80211_channel ch[RTW_CHANNEL_SCAN_AMOUNT];
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo= &(padapter->wdinfo);
 	int social_channel = 0;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 	struct rtw_wdev_priv *pwdev_priv = wdev_to_priv(padapter->rtw_wdev);
 	struct cfg80211_ssid *ssids = request->ssids;
 #ifdef CONFIG_CONCURRENT_MODE
@@ -1511,7 +1511,7 @@ static int cfg80211_rtw_scan(struct wiph
 		goto check_need_indicate_scan_done;
 	}
 
-	#ifdef CONFIG_P2P
+	#ifdef CONFIG_92D_P2P
 	if (ssids->ssid != NULL && !memcmp(ssids->ssid, "DIRECT-", 7) &&
 	    rtw_get_p2p_ie((u8 *)request->ie, request->ie_len, NULL, NULL)) {
 		if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) {
@@ -1528,7 +1528,7 @@ static int cfg80211_rtw_scan(struct wiph
 		    request->channels[2]->hw_value == 11)
 			social_channel = 1;
 	}
-	#endif /* CONFIG_P2P */
+	#endif /* CONFIG_92D_P2P */
 
 	if (request->ie && request->ie_len>0)
 		rtw_cfg80211_set_probe_req_wpsp2pie(padapter, (u8 *)request->ie, request->ie_len);
@@ -1577,7 +1577,7 @@ static int cfg80211_rtw_scan(struct wiph
 	}
 #endif
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE) && !rtw_p2p_chk_state(pwdinfo, P2P_STATE_IDLE))
 	{
 		rtw_p2p_set_state(pwdinfo, P2P_STATE_FIND_PHASE_SEARCH);
@@ -1588,7 +1588,7 @@ static int cfg80211_rtw_scan(struct wiph
 		else
 			rtw_p2p_findphase_ex_set(pwdinfo, P2P_FINDPHASE_EX_SOCIAL_LAST);
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	memset(ssid, 0, sizeof(struct ndis_802_11_ssid)*RTW_SSID_SCAN_AMOUNT);
 	/* parsing request ssids, n_ssids */
@@ -1887,7 +1887,7 @@ static int rtw_cfg80211_set_wpa_ie(struc
 		}
 	}
 
-	#ifdef CONFIG_P2P
+	#ifdef CONFIG_92D_P2P
 	{/* check p2p_ie for assoc req; */
 		uint p2p_ielen=0;
 		u8 *p2p_ie;
@@ -1909,7 +1909,7 @@ static int rtw_cfg80211_set_wpa_ie(struc
 			pmlmepriv->p2p_assoc_req_ie_len = p2p_ielen;
 		}
 	}
-	#endif /* CONFIG_P2P */
+	#endif /* CONFIG_92D_P2P */
 
 	/* TKIP and AES disallow multicast packets until installing group key */
 	if (padapter->securitypriv.dot11PrivacyAlgrthm == _TKIP_ ||
@@ -2505,7 +2505,7 @@ static int rtw_cfg80211_monitor_if_xmit_
 		u8 *buf = skb->data;
 		u32 len = skb->len;
 		u8 category, action;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 		int type = -1;
 #endif
 
@@ -2517,7 +2517,7 @@ static int rtw_cfg80211_monitor_if_xmit_
 
 		DBG_8192D("RTW_Tx:da=%pM via "FUNC_NDEV_FMT"\n",
 			GetAddr1Ptr(buf), FUNC_NDEV_ARG(ndev));
-		#ifdef CONFIG_P2P
+		#ifdef CONFIG_92D_P2P
 		if ((type = rtw_p2p_check_frames(padapter, buf, len, true)) >= 0)
 			goto dump;
 		#endif
@@ -2526,7 +2526,7 @@ static int rtw_cfg80211_monitor_if_xmit_
 		else
 			DBG_8192D("RTW_Tx:category(%u), action(%u)\n", category, action);
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 dump:
 #endif
 		/* starting alloc mgmt frame to dump it */
@@ -2728,7 +2728,7 @@ static int rtw_add_beacon(struct rtw_ada
 	u8 *pbuf = NULL;
 	uint len, wps_ielen=0;
 	struct mlme_priv *pmlmepriv = &(adapter->mlmepriv);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	u32 p2p_ielen = 0;
 	u8 got_p2p_ie = false;
 #endif
@@ -2754,7 +2754,7 @@ static int rtw_add_beacon(struct rtw_ada
 	if (rtw_get_wps_ie(pbuf+_FIXED_IE_LENGTH_, len-_FIXED_IE_LENGTH_, NULL, &wps_ielen))
 		DBG_8192D("add bcn, wps_ielen=%d\n", wps_ielen);
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	/* check p2p ie if inclued */
 	if (rtw_get_p2p_ie(pbuf+_FIXED_IE_LENGTH_, len-_FIXED_IE_LENGTH_, NULL, &p2p_ielen)) {
 		DBG_8192D("got p2p_ie, len=%d\n", p2p_ielen);
@@ -2767,7 +2767,7 @@ static int rtw_add_beacon(struct rtw_ada
 	/*  pbss_network->IEs will not include p2p_ie */
 	if (rtw_check_beacon_data(adapter, pbuf,  len) == 1)
 	{
-#ifdef  CONFIG_P2P
+#ifdef  CONFIG_92D_P2P
 		/* check p2p if enable */
 		if (got_p2p_ie == true)
 		{
@@ -2796,7 +2796,7 @@ static int rtw_add_beacon(struct rtw_ada
 			pwdinfo->operating_channel = pmlmeext->cur_channel;
 
 		}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 		ret = 0;
 
@@ -2978,14 +2978,14 @@ void rtw_cfg80211_rx_action_p2p(struct r
 	int channel;
 	u8 category, action;
 	u32 flags = 0;		/* FIX ME */
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	int type;
 #endif
 
 	channel = rtw_get_oper_ch(padapter);
 
 	DBG_8192D("RTW_Rx:cur_ch=%d\n", channel);
-	#ifdef CONFIG_P2P
+	#ifdef CONFIG_92D_P2P
 	type = rtw_p2p_check_frames(padapter, pmgmt_frame, frame_len, false);
 	if (type >= 0)
 		goto indicate;
@@ -2993,7 +2993,7 @@ void rtw_cfg80211_rx_action_p2p(struct r
 	rtw_action_frame_parse(pmgmt_frame, frame_len, &category, &action);
 	DBG_8192D("RTW_Rx:category(%u), action(%u)\n", category, action);
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 indicate:
 #endif
 	if (channel <= RTW_CH_MAX_2G_CHANNEL)
@@ -3010,14 +3010,14 @@ void rtw_cfg80211_rx_p2p_action_public(s
 	int channel;
 	u8 category, action;
 	u32 flags = 0; /*FIX ME */
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	int type;
 #endif
 
 	channel = rtw_get_oper_ch(padapter);
 
 	DBG_8192D("RTW_Rx:cur_ch=%d\n", channel);
-	#ifdef CONFIG_P2P
+	#ifdef CONFIG_92D_P2P
 	type = rtw_p2p_check_frames(padapter, pmgmt_frame, frame_len, false);
 	if (type >= 0) {
 		switch (type) {
@@ -3031,7 +3031,7 @@ void rtw_cfg80211_rx_p2p_action_public(s
 	rtw_action_frame_parse(pmgmt_frame, frame_len, &category, &action);
 	DBG_8192D("RTW_Rx:category(%u), action(%u)\n", category, action);
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 indicate:
 #endif
 	if (channel <= RTW_CH_MAX_2G_CHANNEL)
@@ -3067,7 +3067,7 @@ void rtw_cfg80211_rx_action(struct rtw_a
 	cfg80211_rx_mgmt(adapter->rtw_wdev, freq, 0, frame, frame_len, flags, GFP_ATOMIC);
 }
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 void rtw_cfg80211_issue_p2p_provision_request(struct rtw_adapter *padapter, const u8 *buf, size_t len)
 {
 	__be16	wps_devicepassword_id = 0x0000;
@@ -3417,7 +3417,7 @@ static s32 cfg80211_rtw_cancel_remain_on
 	return err;
 }
 
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 static int rtw_cfg80211_set_beacon_wpsp2pie(struct net_device *ndev, char *buf, int len)
 {
@@ -3430,7 +3430,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(ndev);
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 	struct mlme_ext_priv *pmlmeext = &(padapter->mlmeextpriv);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	u32 p2p_ielen = 0;
 	u8 *p2p_ie;
 #endif
@@ -3460,7 +3460,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 #endif
 		}
 
-		#ifdef CONFIG_P2P
+		#ifdef CONFIG_92D_P2P
 		if ((p2p_ie=rtw_get_p2p_ie(buf, len, NULL, &p2p_ielen))) {
 			if (pmlmepriv->p2p_beacon_ie) {
 				pmlmepriv->p2p_beacon_ie_len = 0;
@@ -3479,7 +3479,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 			pmlmepriv->p2p_beacon_ie_len = p2p_ielen;
 
 		}
-		#endif /* CONFIG_P2P */
+		#endif /* CONFIG_92D_P2P */
 
 		pmlmeext->bstart_bss = true;
 	}
@@ -3493,7 +3493,7 @@ static int rtw_cfg80211_set_probe_resp_w
 	int ret = 0;
 	uint wps_ielen = 0;
 	u8 *wps_ie;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	u32 p2p_ielen = 0;
 	u8 *p2p_ie;
 #endif
@@ -3526,7 +3526,7 @@ static int rtw_cfg80211_set_probe_resp_w
 
 		}
 
-		#ifdef CONFIG_P2P
+		#ifdef CONFIG_92D_P2P
 		if ((p2p_ie=rtw_get_p2p_ie(buf, len, NULL, &p2p_ielen))) {
 			u8 is_GO = false;
 			u32 attr_contentlen = 0;
@@ -3579,7 +3579,7 @@ static int rtw_cfg80211_set_probe_resp_w
 			}
 
 		}
-		#endif /* CONFIG_P2P */
+		#endif /* CONFIG_92D_P2P */
 	}
 	return ret;
 }
@@ -3619,12 +3619,12 @@ int rtw_cfg80211_set_mgnt_wpsp2pie(struc
 {
 	int ret = 0;
 	uint wps_ielen = 0;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	u32 p2p_ielen = 0;
 #endif
 
 	if ((rtw_get_wps_ie(buf, len, NULL, &wps_ielen) && (wps_ielen>0))
-		#ifdef CONFIG_P2P
+		#ifdef CONFIG_92D_P2P
 		|| (rtw_get_p2p_ie(buf, len, NULL, &p2p_ielen) && (p2p_ielen>0))
 		#endif
 	) {
@@ -3680,7 +3680,7 @@ static struct cfg80211_ops rtw_cfg80211_
 	.change_bss = cfg80211_rtw_change_bss,
 #endif /* CONFIG_92D_AP_MODE */
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	.remain_on_channel = cfg80211_rtw_remain_on_channel,
 	.cancel_remain_on_channel = cfg80211_rtw_cancel_remain_on_channel,
 #endif
@@ -3784,7 +3784,7 @@ static void rtw_cfg80211_preinit_wiphy(s
 				 BIT(NL80211_IFTYPE_AP) |
 				 BIT(NL80211_IFTYPE_MONITOR) |
 #endif
-#if defined(CONFIG_P2P)
+#if defined(CONFIG_92D_P2P)
 				 BIT(NL80211_IFTYPE_P2P_CLIENT) |
 				 BIT(NL80211_IFTYPE_P2P_GO) |
 #endif
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -114,11 +114,11 @@ static char *translate_scan(struct rtw_a
 	u32 i = 0;
 	u8 bw_40MHz = 0, short_GI = 0;
 	u16 mcs_rate = 0;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info	*pwdinfo = &padapter->wdinfo;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
 	{
 		u32	blnGotP2PIE = false;
@@ -145,7 +145,7 @@ static char *translate_scan(struct rtw_a
 		}
 	}
 
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 	/*  AP MAC address  */
 	iwe.cmd = SIOCGIWAP;
 	iwe.u.ap_addr.sa_family = ARPHRD_ETHER;
@@ -401,9 +401,9 @@ static int wpa_set_encryption(struct net
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info* pwdinfo = &padapter->wdinfo;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	param->u.crypt.err = 0;
 	param->u.crypt.alg[IEEE_CRYPT_ALG_NAME_LEN - 1] = '\0';
@@ -535,10 +535,10 @@ static int wpa_set_encryption(struct net
 					padapter->securitypriv.dot118021XGrpKeyid = param->u.crypt.idx;
 
 					rtw_set_key(padapter,&padapter->securitypriv, param->u.crypt.idx, 1);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 					if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_PROVISIONING_ING))
 						rtw_p2p_set_state(pwdinfo, P2P_STATE_PROVISIONING_DONE);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 				}
 			}
@@ -570,9 +570,9 @@ static int rtw_set_wpa_ie(struct rtw_ada
 	int ret = 0;
 	u8	null_addr[]= {0, 0, 0, 0, 0, 0};
 	int i;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info* pwdinfo = &padapter->wdinfo;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	if ((ielen > MAX_WPA_IE_LEN) || (pie == NULL)) {
 		_clr_fwstate_(&padapter->mlmepriv, WIFI_UNDER_WPS);
@@ -684,10 +684,10 @@ static int rtw_set_wpa_ie(struct rtw_ada
 					memcpy(padapter->securitypriv.wps_ie, &buf[cnt], padapter->securitypriv.wps_ie_len);
 
 					set_fwstate(&padapter->mlmepriv, WIFI_UNDER_WPS);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 					if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_GONEGO_OK))
 						rtw_p2p_set_state(pwdinfo, P2P_STATE_PROVISIONING_ING);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 					cnt += buf[cnt+1]+2;
 
 					break;
@@ -1240,9 +1240,9 @@ static int rtw_wx_set_scan(struct net_de
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct ndis_802_11_ssid ssid[RTW_SSID_SCAN_AMOUNT];
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct wifidirect_info *pwdinfo = &(padapter->wdinfo);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 	RT_TRACE(_module_rtl871x_mlme_c_, _drv_info_, ("rtw_wx_set_scan\n"));
 
 	if (0 == rtw_pwr_wakeup(padapter)) {
@@ -1305,14 +1305,14 @@ static int rtw_wx_set_scan(struct net_de
 /*	the pmlmepriv->scan_interval is always equal to 3. */
 /*	So, the wpa_supplicant won't find out the WPS SoftAP. */
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) {
 		rtw_p2p_set_pre_state(pwdinfo, rtw_p2p_state(pwdinfo));
 		rtw_p2p_set_state(pwdinfo, P2P_STATE_FIND_PHASE_SEARCH);
 		rtw_p2p_findphase_ex_set(pwdinfo, P2P_FINDPHASE_EX_FULL);
 		rtw_free_network_queue(padapter, true);
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	memset(ssid, 0, sizeof(struct ndis_802_11_ssid)*RTW_SSID_SCAN_AMOUNT);
 
@@ -1414,9 +1414,9 @@ static int rtw_wx_get_scan(struct net_de
 	int wait_status;
 #ifdef CONFIG_CONCURRENT_MODE
 #endif
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	struct	wifidirect_info*	pwdinfo = &padapter->wdinfo;
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 	RT_TRACE(_module_rtl871x_mlme_c_, _drv_info_, ("rtw_wx_get_scan\n"));
 	RT_TRACE(_module_rtl871x_ioctl_os_c, _drv_info_, (" Start of Query SIOCGIWSCAN .\n"));
 
@@ -1425,7 +1425,7 @@ static int rtw_wx_get_scan(struct net_de
 		goto exit;
 	}
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
 	{
 		/*	P2P is enabled */
@@ -1443,7 +1443,7 @@ static int rtw_wx_get_scan(struct net_de
 	{
 		wait_for_surveydone = 100;
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	wait_status = _FW_UNDER_SURVEY
 		|_FW_UNDER_LINKING
@@ -2539,7 +2539,7 @@ static void rtw_dbg_mode_hdl(struct rtw_
 		DBG_8192D("==> trigger gpio 0\n");
 		rtw_hal_set_hwreg(padapter, HW_VAR_TRIGGER_GPIO_0, NULL);
 		break;
-#ifdef CONFIG_BT_COEXIST
+#ifdef CONFIG_92D_BT_COEXIST
 	case GEN_MP_IOCTL_SUBCODE(SET_DM_BT):
 		DBG_8192D("==> set dm_bt_coexist:%x\n",*(u8 *)pdata);
 		rtw_hal_set_hwreg(padapter, HW_VAR_BT_SET_COEXIST, pdata);
@@ -2765,7 +2765,7 @@ static int rtw_wps_start(struct net_devi
 	return ret;
 }
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 static int rtw_wext_p2p_enable(struct net_device *dev,
 			       struct iw_request_info *info,
 			       union iwreq_data *wrqu, char *extra)
@@ -4102,14 +4102,14 @@ static int rtw_p2p_got_wpsinfo(struct ne
 	return ret;
 }
 
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 static int rtw_p2p_set(struct net_device *dev,
 		       struct iw_request_info *info,
 		       union iwreq_data *wrqu, char *extra)
 {
 	int ret = 0;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 
 	DBG_8192D("[%s] extra = %s\n", __func__, extra);
 
@@ -4155,7 +4155,7 @@ static int rtw_p2p_set(struct net_device
 		wrqu->data.length -= 11;
 		rtw_p2p_set_persistent(dev, info, wrqu, &extra[11]);
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	return ret;
 }
@@ -4166,7 +4166,7 @@ static int rtw_p2p_get(struct net_device
 {
 	int ret = 0;
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 
@@ -4192,7 +4192,7 @@ static int rtw_p2p_get(struct net_device
 	} else if (!memcmp((void const *)wrqu->data.pointer, "op_ch", 5)) {
 		rtw_p2p_get_op_ch(dev, info, wrqu, extra);
 	}
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	return ret;
 }
@@ -4204,7 +4204,7 @@ static int rtw_p2p_get2(struct net_devic
 
 	int ret = 0;
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 
 	int length = wrqu->data.length;
 	char *buffer = (u8 *)kmalloc(length, GFP_KERNEL);
@@ -4247,7 +4247,7 @@ static int rtw_p2p_get2(struct net_devic
 bad:
 	kfree(buffer);
 
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	return ret;
 }
@@ -4670,10 +4670,10 @@ static int rtw_dbg_port(struct net_devic
 				padapter->bNotifyChannelChange = extra_arg;
 				break;
 			case 0x24:
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 				DBG_8192D("turn %s the bShowGetP2PState Variable\n", (extra_arg == 1)?"on":"off");
 				padapter->bShowGetP2PState = extra_arg;
-#endif /*  CONFIG_P2P */
+#endif /*  CONFIG_92D_P2P */
 				break;
 			case 0xdd:/* registers dump , 0 for mac reg, 1 for bb reg, 2 for rf reg */
 				if (extra_arg == 0)
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -98,7 +98,7 @@ static int rtw_special_rf_path = 0; /* 0
 
 static int rtw_channel_plan = RT_CHANNEL_DOMAIN_MAX;
 
-#ifdef CONFIG_BT_COEXIST
+#ifdef CONFIG_92D_BT_COEXIST
 int rtw_bt_iso = 2;/*  0:Low, 1:High, 2:From Efuse */
 int rtw_bt_sco = 3;/*  0:Idle, 1:None-SCO, 2:SCO, 3:From Counter, 4.Busy, 5.OtherBusy */
 int rtw_bt_ampdu = 1 ;/*  0:Disable BT control A-MPDU, 1:Enable BT control A-MPDU. */
@@ -240,7 +240,7 @@ static uint loadparam(struct rtw_adapter
 	registry_par->special_rf_path = (u8)rtw_special_rf_path;
 	registry_par->channel_plan = (u8)rtw_channel_plan;
 
-#ifdef CONFIG_BT_COEXIST
+#ifdef CONFIG_92D_BT_COEXIST
 	registry_par->bt_iso = (u8)rtw_bt_iso;
 	registry_par->bt_sco = (u8)rtw_bt_sco;
 	registry_par->bt_ampdu = (u8)rtw_bt_ampdu;
@@ -518,7 +518,7 @@ static u8 rtw_init_default_value(struct
 	padapter->bRxRSSIDisplay = 0;
 	padapter->bForceWriteInitGain = 1;
 	padapter->bNotifyChannelChange = 0;
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	padapter->bShowGetP2PState = 1;
 #endif
 	return ret;
@@ -586,12 +586,12 @@ u8 rtw_init_drv_sw(struct rtw_adapter *p
 		goto exit;
 	}
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	rtw_init_wifidirect_timers(padapter);
 	init_wifidirect_info(padapter, P2P_ROLE_DISABLE);
 	reset_global_wifidirect_info(padapter);
 	rtw_init_cfg80211_wifidirect_info(padapter);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	if (init_mlme_ext_priv(padapter) == 0) {
 		RT_TRACE(_module_os_intfs_c_, _drv_err_, ("\n Can't init mlme_ext_priv\n"));
@@ -656,9 +656,9 @@ void rtw_cancel_all_timer(struct rtw_ada
 
 	del_timer_sync(&padapter->pwrctrlpriv.pwr_state_check_timer);
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	del_timer_sync(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	del_timer_sync(&padapter->mlmepriv.set_scan_deny_timer);
 	rtw_clear_scan_deny(padapter);
@@ -677,7 +677,7 @@ u8 rtw_free_drv_sw(struct rtw_adapter *p
 	/* we can call rtw_p2p_enable here, but: */
 	/*  1. rtw_p2p_enable may have IO operation */
 	/*  2. rtw_p2p_enable is bundled with wext interface */
-	#ifdef CONFIG_P2P
+	#ifdef CONFIG_92D_P2P
 	{
 		struct wifidirect_info *pwdinfo = &padapter->wdinfo;
 		if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
@@ -931,7 +931,7 @@ struct rtw_adapter *rtw_drv_if2_init(str
 	}
 
 	memcpy(padapter->eeprompriv.mac_addr, mac, ETH_ALEN);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	rtw_init_wifidirect_addrs(padapter, padapter->eeprompriv.mac_addr, padapter->eeprompriv.mac_addr);
 #endif
 	memcpy(pnetdev->dev_addr, mac, ETH_ALEN);
@@ -1231,11 +1231,11 @@ static int netdev_close(struct net_devic
 		rtw_led_control(padapter, LED_CTL_POWER_OFF);
 	}
 
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	if (wdev_to_priv(padapter->rtw_wdev)->p2p_enabled == true)
 		wdev_to_priv(padapter->rtw_wdev)->p2p_enabled = false;
 	rtw_p2p_enable(padapter, P2P_ROLE_DISABLE);
-#endif /* CONFIG_P2P */
+#endif /* CONFIG_92D_P2P */
 
 	rtw_scan_abort(padapter);
 	padapter->rtw_wdev->iftype = NL80211_IFTYPE_MONITOR; /* set this at the end */
--- a/drivers/staging/rtl8192du/os_dep/usb_intf.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_intf.c
@@ -586,7 +586,7 @@ static struct rtw_adapter *rtw_usb_if1_i
 	/*  alloc dev name after read efuse. */
 	rtw_init_netdev_name(pnetdev, padapter->registrypriv.ifname);
 	rtw_macaddr_cfg(padapter->eeprompriv.mac_addr);
-#ifdef CONFIG_P2P
+#ifdef CONFIG_92D_P2P
 	rtw_init_wifidirect_addrs(padapter, padapter->eeprompriv.mac_addr, padapter->eeprompriv.mac_addr);
 #endif
 	memcpy(pnetdev->dev_addr, padapter->eeprompriv.mac_addr, ETH_ALEN);
