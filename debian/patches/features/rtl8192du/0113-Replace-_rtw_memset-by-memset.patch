From a514e0ad75d92641e243d2586fac5957ab0fff1c Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 4 May 2013 14:01:59 -0500
Subject: [PATCH 113/390] Replace _rtw_memset() by memset()

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c           |  12 ++---
 core/rtw_cmd.c          |   2 +-
 core/rtw_efuse.c        |  24 +++++-----
 core/rtw_ieee80211.c    |  10 ++---
 core/rtw_ioctl_set.c    |  16 +++----
 core/rtw_mlme.c         |  30 ++++++-------
 core/rtw_mlme_ext.c     |  78 ++++++++++++++++----------------
 core/rtw_p2p.c          |  76 +++++++++++++++----------------
 core/rtw_pwrctrl.c      |   2 +-
 core/rtw_recv.c         |   6 +--
 core/rtw_security.c     |  42 +++++++++---------
 core/rtw_sta_mgt.c      |   2 +-
 core/rtw_tdls.c         |  40 ++++++++---------
 core/rtw_wlan_util.c    |   6 +--
 core/rtw_xmit.c         |  10 ++---
 hal/hal_com.c           |   2 +-
 hal/rtl8192d_cmd.c      |  14 +++---
 hal/rtl8192d_dm.c       |   2 +-
 hal/rtl8192d_hal_init.c |  12 ++---
 hal/rtl8192d_phycfg.c   |   2 +-
 hal/rtl8192du_xmit.c    |   6 +--
 hal/usb_halinit.c       |   4 +-
 hal/usb_ops_linux.c     |   4 +-
 include/osdep_service.h |   1 -
 os_dep/ioctl_cfg80211.c |  30 ++++++-------
 os_dep/ioctl_linux.c    | 116 ++++++++++++++++++++++++------------------------
 os_dep/mlme_linux.c     |   8 ++--
 os_dep/osdep_service.c  |   5 ---
 os_dep/recv_linux.c     |   6 +--
 29 files changed, 281 insertions(+), 287 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -615,7 +615,7 @@ static void update_bmc_sta(struct rtw_ad
 
 		psta->ieee8021x_blocked = 0;
 
-		_rtw_memset((void *)&psta->sta_stats, 0, sizeof(struct stainfo_stats));
+		memset((void *)&psta->sta_stats, 0, sizeof(struct stainfo_stats));
 
 
 		/* prepare for add_RATid */
@@ -736,7 +736,7 @@ void update_sta_info_apmode(struct rtw_a
 
 	/* todo: init other variables */
 
-	_rtw_memset((void *)&psta->sta_stats, 0, sizeof(struct stainfo_stats));
+	memset((void *)&psta->sta_stats, 0, sizeof(struct stainfo_stats));
 
 
 	/* add ratid */
@@ -1092,7 +1092,7 @@ int rtw_check_beacon_data(struct rtw_ada
 
 	pbss_network->IELength = len;
 
-	_rtw_memset(ie, 0, MAX_IE_SZ);
+	memset(ie, 0, MAX_IE_SZ);
 
 	memcpy(ie, pbuf, pbss_network->IELength);
 
@@ -1115,7 +1115,7 @@ int rtw_check_beacon_data(struct rtw_ada
 	p = rtw_get_ie(ie + _BEACON_IE_OFFSET_, _SSID_IE_, &ie_len,
 		       (pbss_network->IELength - _BEACON_IE_OFFSET_));
 	if (p && ie_len > 0) {
-		_rtw_memset(&pbss_network->Ssid, 0, sizeof(struct ndis_802_11_ssid));
+		memset(&pbss_network->Ssid, 0, sizeof(struct ndis_802_11_ssid));
 		memcpy(pbss_network->Ssid.Ssid, (p + 2), ie_len);
 		pbss_network->Ssid.SsidLength = ie_len;
 	}
@@ -1130,7 +1130,7 @@ int rtw_check_beacon_data(struct rtw_ada
 	pbss_network->Configuration.DSConfig = channel;
 
 
-	_rtw_memset(supportRate, 0, NDIS_802_11_LENGTH_RATES_EX);
+	memset(supportRate, 0, NDIS_802_11_LENGTH_RATES_EX);
 	/*  get supported rates */
 	p = rtw_get_ie(ie + _BEACON_IE_OFFSET_, _SUPPORTEDRATES_IE_, &ie_len, (pbss_network->IELength - _BEACON_IE_OFFSET_));
 	if (p !=  NULL) {
@@ -2183,7 +2183,7 @@ void stop_ap_mode(struct rtw_adapter *pa
 	pmlmeext->bstart_bss = false;
 
 	/* reset and init security priv , this can refine with rtw_reset_securitypriv */
-	_rtw_memset((unsigned char *)&padapter->securitypriv, 0, sizeof(struct security_priv));
+	memset((unsigned char *)&padapter->securitypriv, 0, sizeof(struct security_priv));
 	padapter->securitypriv.ndisauthtype = NDIS802_11AUTHMODEOPEN;
 	padapter->securitypriv.ndisencryptstatus = NDIS802_11WEPDISABLED;
 
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -1108,7 +1108,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	_rtw_memset(psecnetwork, 0, t_len);
+	memset(psecnetwork, 0, t_len);
 
 	memcpy(psecnetwork, &pnetwork->network, get_wlan_bssid_ex_sz(&pnetwork->network));
 
--- a/drivers/staging/rtl8192du/core/rtw_efuse.c
+++ b/drivers/staging/rtl8192du/core/rtw_efuse.c
@@ -557,7 +557,7 @@ u8 rtw_efuse_map_write(struct rtw_adapte
 
 	offset = (addr >> 3);
 	word_en = 0xF;
-	_rtw_memset(newdata, 0xFF, PGPKT_DATA_SIZE);
+	memset(newdata, 0xFF, PGPKT_DATA_SIZE);
 	i = addr & 0x7;	/*  index of one package */
 	j = 0;		/*  index of new package */
 	idx = 0;	/*  data index */
@@ -615,7 +615,7 @@ u8 rtw_efuse_map_write(struct rtw_adapte
 		i = 0;
 		j = 0;
 		word_en = 0xF;
-		_rtw_memset(newdata, 0xFF, PGPKT_DATA_SIZE);
+		memset(newdata, 0xFF, PGPKT_DATA_SIZE);
 	} while (1);
 
 	Efuse_PowerSwitch(padapter, true, false);
@@ -775,7 +775,7 @@ void EFUSE_ShadowMapUpdate(struct rtw_ad
 	EFUSE_GetEfuseDefinition(pAdapter, efusetype, TYPE_EFUSE_MAP_LEN, (void *)&maplen, test);
 
 	if (pEEPROM->bautoload_fail_flag == true) {
-		_rtw_memset(pEEPROM->efuse_eeprom_data, 0xFF, maplen);
+		memset(pEEPROM->efuse_eeprom_data, 0xFF, maplen);
 	} else {
 		#ifdef CONFIG_ADAPTOR_INFO_CACHING_FILE
 		if (_SUCCESS != retriveAdaptorInfoFile(pAdapter->registrypriv.adaptor_info_caching_file_path, pEEPROM)) {
@@ -852,19 +852,19 @@ void Efuse_InitSomeVar(struct rtw_adapte
 {
 	u8 i;
 
-	_rtw_memset((void *)&fakeEfuseContent[0], 0xff, EFUSE_MAX_HW_SIZE);
-	_rtw_memset((void *)&fakeEfuseInitMap[0], 0xff, EFUSE_MAX_MAP_LEN);
-	_rtw_memset((void *)&fakeEfuseModifiedMap[0], 0xff, EFUSE_MAX_MAP_LEN);
+	memset((void *)&fakeEfuseContent[0], 0xff, EFUSE_MAX_HW_SIZE);
+	memset((void *)&fakeEfuseInitMap[0], 0xff, EFUSE_MAX_MAP_LEN);
+	memset((void *)&fakeEfuseModifiedMap[0], 0xff, EFUSE_MAX_MAP_LEN);
 
 	for (i = 0; i < EFUSE_MAX_BT_BANK; i++)
-		_rtw_memset((void *)&BTEfuseContent[i][0], EFUSE_MAX_HW_SIZE, 0xff);
-	_rtw_memset((void *)&BTEfuseInitMap[0], 0xff, EFUSE_BT_MAX_MAP_LEN);
-	_rtw_memset((void *)&BTEfuseModifiedMap[0], 0xff, EFUSE_BT_MAX_MAP_LEN);
+		memset((void *)&BTEfuseContent[i][0], EFUSE_MAX_HW_SIZE, 0xff);
+	memset((void *)&BTEfuseInitMap[0], 0xff, EFUSE_BT_MAX_MAP_LEN);
+	memset((void *)&BTEfuseModifiedMap[0], 0xff, EFUSE_BT_MAX_MAP_LEN);
 
 	for (i = 0; i < EFUSE_MAX_BT_BANK; i++)
-		_rtw_memset((void *)&fakeBTEfuseContent[i][0], 0xff, EFUSE_MAX_HW_SIZE);
-	_rtw_memset((void *)&fakeBTEfuseInitMap[0], 0xff, EFUSE_BT_MAX_MAP_LEN);
-	_rtw_memset((void *)&fakeBTEfuseModifiedMap[0], 0xff, EFUSE_BT_MAX_MAP_LEN);
+		memset((void *)&fakeBTEfuseContent[i][0], 0xff, EFUSE_MAX_HW_SIZE);
+	memset((void *)&fakeBTEfuseInitMap[0], 0xff, EFUSE_BT_MAX_MAP_LEN);
+	memset((void *)&fakeBTEfuseModifiedMap[0], 0xff, EFUSE_BT_MAX_MAP_LEN);
 }
 
 #ifdef CONFIG_ADAPTOR_INFO_CACHING_FILE
--- a/drivers/staging/rtl8192du/core/rtw_ieee80211.c
+++ b/drivers/staging/rtl8192du/core/rtw_ieee80211.c
@@ -329,7 +329,7 @@ void rtw_set_supported_rate(u8 *Supporte
 {
 _func_enter_;
 
-	_rtw_memset(SupportedRates, 0, NDIS_802_11_LENGTH_RATES_EX);
+	memset(SupportedRates, 0, NDIS_802_11_LENGTH_RATES_EX);
 
 	switch (mode) {
 	case WIRELESS_11B:
@@ -954,7 +954,7 @@ enum parse_res rtw_ieee802_11_parse_elem
 	u8 *pos = start;
 	int unknown = 0;
 
-	_rtw_memset(elems, 0, sizeof(*elems));
+	memset(elems, 0, sizeof(*elems));
 
 	while (left >= 2) {
 		u8 id, elen;
@@ -1353,9 +1353,9 @@ static uint rtw_p2p_attr_remove(u8 *ie,
 			u8 *next_attr = target_attr+target_attr_len;
 			uint remain_len = ielen-(next_attr-ie);
 
-			_rtw_memset(target_attr, 0, target_attr_len);
+			memset(target_attr, 0, target_attr_len);
 			memcpy(target_attr, next_attr, remain_len);
-			_rtw_memset(target_attr+remain_len, 0, target_attr_len);
+			memset(target_attr+remain_len, 0, target_attr_len);
 			*(ie+1) -= target_attr_len;
 			ielen -= target_attr_len;
 		} else {
@@ -1383,7 +1383,7 @@ void rtw_wlan_bssid_ex_remove_p2p_attr(s
 			uint remain_len = bss_ex->IELength-(next_ie_ori-bss_ex->IEs);
 
 			memcpy(next_ie, next_ie_ori, remain_len);
-			_rtw_memset(next_ie+remain_len, 0, p2p_ielen_ori-p2p_ielen);
+			memset(next_ie+remain_len, 0, p2p_ielen_ori-p2p_ielen);
 			bss_ex->IELength -= p2p_ielen_ori-p2p_ielen;
 		}
 	}
--- a/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
+++ b/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
@@ -141,7 +141,7 @@ _func_enter_;
 
 				pibss = padapter->registrypriv.dev_network.MacAddress;
 
-				_rtw_memset(&pdev_network->Ssid, 0, sizeof(struct ndis_802_11_ssid));
+				memset(&pdev_network->Ssid, 0, sizeof(struct ndis_802_11_ssid));
 				memcpy(&pdev_network->Ssid, &pmlmepriv->assoc_ssid, sizeof(struct ndis_802_11_ssid));
 
 				rtw_update_registrypriv_dev_network(padapter);
@@ -715,7 +715,7 @@ _func_enter_;
 		struct security_priv* psecuritypriv=&(padapter->securitypriv);
 		if( keyindex < 4 ){
 
-			_rtw_memset(&psecuritypriv->dot11DefKey[keyindex], 0, 16);
+			memset(&psecuritypriv->dot11DefKey[keyindex], 0, 16);
 
 			res=rtw_set_key(padapter,psecuritypriv,keyindex, 0);
 
@@ -991,9 +991,9 @@ _func_enter_;
 			goto exit;
 		}
 
-		_rtw_memset(&padapter->securitypriv.dot118021XGrpKey[(u8)((key->KeyIndex) & 0x03)], 0, 16);
-		_rtw_memset(&padapter->securitypriv.dot118021XGrptxmickey[(u8)((key->KeyIndex) & 0x03)], 0, 16);
-		_rtw_memset(&padapter->securitypriv.dot118021XGrprxmickey[(u8)((key->KeyIndex) & 0x03)], 0, 16);
+		memset(&padapter->securitypriv.dot118021XGrpKey[(u8)((key->KeyIndex) & 0x03)], 0, 16);
+		memset(&padapter->securitypriv.dot118021XGrptxmickey[(u8)((key->KeyIndex) & 0x03)], 0, 16);
+		memset(&padapter->securitypriv.dot118021XGrprxmickey[(u8)((key->KeyIndex) & 0x03)], 0, 16);
 
 		if((key->KeyIndex & 0x10000000))
 		{
@@ -1050,7 +1050,7 @@ _func_enter_;
 
 		if(stainfo!=NULL)
 		{
-			_rtw_memset( &stainfo->dot118021x_UncstKey, 0, 16);// clear keybuffer
+			memset( &stainfo->dot118021x_UncstKey, 0, 16);// clear keybuffer
 
 			memcpy(&stainfo->dot118021x_UncstKey, key->KeyMaterial, 16);
 
@@ -1127,7 +1127,7 @@ _func_enter_;
 		//NdisZeroMemory(Adapter->MgntInfo.SecurityInfo.KeyBuf[keyIndex], MAX_WEP_KEY_LEN);
 		//Adapter->MgntInfo.SecurityInfo.KeyLen[keyIndex] = 0;
 
-		_rtw_memset(&padapter->securitypriv.dot118021XGrpKey[keyIndex], 0, 16);
+		memset(&padapter->securitypriv.dot118021XGrpKey[keyIndex], 0, 16);
 
 		//! \todo Send a H2C Command to Firmware for removing this Key in CAM Entry.
 
@@ -1139,7 +1139,7 @@ _func_enter_;
 			encryptionalgo=stainfo->dot118021XPrivacy;
 
 		// clear key by BSSID
-		_rtw_memset(&stainfo->dot118021x_UncstKey, 0, 16);
+		memset(&stainfo->dot118021x_UncstKey, 0, 16);
 
 		//! \todo Send a H2C Command to Firmware for disable this Key in CAM Entry.
 
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -54,7 +54,7 @@ int	_rtw_init_mlme_priv (struct rtw_adap
 _func_enter_;
 
 	// We don't need to memset padapter->XXX to zero, because adapter is allocated by rtw_zvmalloc().
-	//_rtw_memset((u8 *)pmlmepriv, 0, sizeof(struct mlme_priv));
+	//memset((u8 *)pmlmepriv, 0, sizeof(struct mlme_priv));
 
 	pmlmepriv->nic_hdl = (u8 *)padapter;
 
@@ -69,7 +69,7 @@ _func_enter_;
 
 	set_scanned_network_val(pmlmepriv, 0);
 
-	_rtw_memset(&pmlmepriv->assoc_ssid,0,sizeof(struct ndis_802_11_ssid));
+	memset(&pmlmepriv->assoc_ssid,0,sizeof(struct ndis_802_11_ssid));
 
 	pbuf = rtw_zvmalloc(MAX_BSS_CNT * (sizeof(struct wlan_network)));
 
@@ -1066,7 +1066,7 @@ _func_enter_;
 
 					RT_TRACE(_module_rtl871x_mlme_c_,_drv_err_,("switching to adhoc master\n"));
 
-					_rtw_memset(&pdev_network->Ssid, 0, sizeof(struct ndis_802_11_ssid));
+					memset(&pdev_network->Ssid, 0, sizeof(struct ndis_802_11_ssid));
 					memcpy(&pdev_network->Ssid, &pmlmepriv->assoc_ssid, sizeof(struct ndis_802_11_ssid));
 
 					rtw_update_registrypriv_dev_network(adapter);
@@ -1109,7 +1109,7 @@ _func_enter_;
 #ifdef CONFIG_INTEL_WIDI
 						if(adapter->mlmepriv.widi_state == INTEL_WIDI_STATE_ROAMING)
 						{
-							_rtw_memset(pmlmepriv->sa_ext, 0x00, L2SDTA_SERVICE_VE_LEN);
+							memset(pmlmepriv->sa_ext, 0x00, L2SDTA_SERVICE_VE_LEN);
 							intel_widi_wk_cmd(adapter, INTEL_WIDI_LISTEN_WK, NULL);
 							DBG_8192D("change to widi listen\n");
 						}
@@ -1338,7 +1338,7 @@ _func_enter_;
 #ifdef CONFIG_INTEL_WIDI
 	if(padapter->mlmepriv.widi_state == INTEL_WIDI_STATE_ROAMING)
 	{
-		_rtw_memset(pmlmepriv->sa_ext, 0x00, L2SDTA_SERVICE_VE_LEN);
+		memset(pmlmepriv->sa_ext, 0x00, L2SDTA_SERVICE_VE_LEN);
 		intel_widi_wk_cmd(padapter, INTEL_WIDI_LISTEN_WK, NULL);
 		DBG_8192D("change to widi listen\n");
 	}
@@ -1470,13 +1470,13 @@ static struct sta_info *rtw_joinbss_upda
 			psta->ieee8021x_blocked=true;
 			psta->dot118021XPrivacy=padapter->securitypriv.dot11PrivacyAlgrthm;
 
-			_rtw_memset((u8 *)&psta->dot118021x_UncstKey, 0, sizeof (union Keytype));
+			memset((u8 *)&psta->dot118021x_UncstKey, 0, sizeof (union Keytype));
 
-			_rtw_memset((u8 *)&psta->dot11tkiprxmickey, 0, sizeof (union Keytype));
-			_rtw_memset((u8 *)&psta->dot11tkiptxmickey, 0, sizeof (union Keytype));
+			memset((u8 *)&psta->dot11tkiprxmickey, 0, sizeof (union Keytype));
+			memset((u8 *)&psta->dot11tkiptxmickey, 0, sizeof (union Keytype));
 
-			_rtw_memset((u8 *)&psta->dot11txpn, 0, sizeof (union pn48));
-			_rtw_memset((u8 *)&psta->dot11rxpn, 0, sizeof (union pn48));
+			memset((u8 *)&psta->dot11txpn, 0, sizeof (union pn48));
+			memset((u8 *)&psta->dot11rxpn, 0, sizeof (union pn48));
 		}
 
 		//	Commented by Albert 2012/07/21
@@ -2028,7 +2028,7 @@ _func_enter_;
 
 			memcpy(pdev_network, &tgt_network->network, get_wlan_bssid_ex_sz(&tgt_network->network));
 
-			_rtw_memset(&pdev_network->Ssid, 0, sizeof(struct ndis_802_11_ssid));
+			memset(&pdev_network->Ssid, 0, sizeof(struct ndis_802_11_ssid));
 			memcpy(&pdev_network->Ssid, &pmlmepriv->assoc_ssid, sizeof(struct ndis_802_11_ssid));
 
 			rtw_update_registrypriv_dev_network(adapter);
@@ -2114,7 +2114,7 @@ _func_enter_;
 #ifdef CONFIG_INTEL_WIDI
 				if(adapter->mlmepriv.widi_state == INTEL_WIDI_STATE_ROAMING)
 				{
-					_rtw_memset(pmlmepriv->sa_ext, 0x00, L2SDTA_SERVICE_VE_LEN);
+					memset(pmlmepriv->sa_ext, 0x00, L2SDTA_SERVICE_VE_LEN);
 					intel_widi_wk_cmd(adapter, INTEL_WIDI_LISTEN_WK, NULL);
 					DBG_8192D("change to widi listen\n");
 				}
@@ -2532,7 +2532,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	_rtw_memset(psetauthparm, 0, sizeof(struct setauth_parm));
+	memset(psetauthparm, 0, sizeof(struct setauth_parm));
 	psetauthparm->mode=(unsigned char)psecuritypriv->dot11AuthAlgrthm;
 
 	pcmd->cmdcode = _SETAUTH_CMD_;
@@ -2580,7 +2580,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	_rtw_memset(psetkeyparm, 0, sizeof(struct setkey_parm));
+	memset(psetkeyparm, 0, sizeof(struct setkey_parm));
 
 	if(psecuritypriv->dot11AuthAlgrthm ==dot11AuthAlgrthm_8021X){
 		psetkeyparm->algorithm=(unsigned char)psecuritypriv->dot118021XGrpPrivacy;
@@ -3002,7 +3002,7 @@ unsigned int rtw_restructure_ht_ie(struc
 
 		out_len = *pout_len;
 
-		_rtw_memset(&ht_capie, 0, sizeof(struct rtw_ieee80211_ht_cap));
+		memset(&ht_capie, 0, sizeof(struct rtw_ieee80211_ht_cap));
 
 		ht_capie.cap_info =  IEEE80211_HT_CAP_SGI_20 | IEEE80211_HT_CAP_TX_STBC |
 							IEEE80211_HT_CAP_DSSSCCK40;
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -334,7 +334,7 @@ static void init_mlme_ext_priv_value(str
 	pmlmeinfo->enc_algo = _NO_PRIVACY_;
 	pmlmeinfo->authModeToggle = 0;
 
-	_rtw_memset(pmlmeinfo->chg_txt, 0, 128);
+	memset(pmlmeinfo->chg_txt, 0, 128);
 
 	pmlmeinfo->slotTime = SHORT_SLOT_TIME;
 	pmlmeinfo->preamble_mode = PREAMBLE_AUTO;
@@ -417,7 +417,7 @@ static u8 init_channel_set(struct rtw_ad
 	u8	b5GBand = false, b2_4GBand = false;
 	u8	Index2G = 0, Index5G=0;
 
-	_rtw_memset(channel_set, 0, sizeof(struct rt_channel_info) * MAX_CHANNEL_NUM);
+	memset(channel_set, 0, sizeof(struct rt_channel_info) * MAX_CHANNEL_NUM);
 
 	if(ChannelPlan >= RT_CHANNEL_DOMAIN_MAX && ChannelPlan != RT_CHANNEL_DOMAIN_REALTEK_DEFINE)
 	{
@@ -520,7 +520,7 @@ int	init_mlme_ext_priv(struct rtw_adapte
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 
 	// We don't need to memset padapter->XXX to zero, because adapter is allocated by rtw_zvmalloc().
-	//_rtw_memset((u8 *)pmlmeext, 0, sizeof(struct mlme_ext_priv));
+	//memset((u8 *)pmlmeext, 0, sizeof(struct mlme_ext_priv));
 
 	pmlmeext->padapter = padapter;
 
@@ -1287,7 +1287,7 @@ auth_fail:
 		rtw_free_stainfo(padapter , pstat);
 
 	pstat = &stat;
-	_rtw_memset((char *)pstat, '\0', sizeof(stat));
+	memset((char *)pstat, '\0', sizeof(stat));
 	pstat->auth_seq = 2;
 	memcpy(pstat->hwaddr, sa, 6);
 
@@ -1579,7 +1579,7 @@ unsigned int OnAssocReq(struct rtw_adapt
 	pstat->wpa2_group_cipher = 0;
 	pstat->wpa_pairwise_cipher = 0;
 	pstat->wpa2_pairwise_cipher = 0;
-	_rtw_memset(pstat->wpa_ie, 0, sizeof(pstat->wpa_ie));
+	memset(pstat->wpa_ie, 0, sizeof(pstat->wpa_ie));
 	if((psecuritypriv->wpa_psk & BIT(1)) && elems.rsn_ie) {
 
 		int group_cipher=0, pairwise_cipher=0;
@@ -1784,7 +1784,7 @@ unsigned int OnAssocReq(struct rtw_adapt
 
 #ifdef CONFIG_80211N_HT
 	/* save HT capabilities in the sta object */
-	_rtw_memset(&pstat->htpriv.ht_cap, 0, sizeof(struct rtw_ieee80211_ht_cap));
+	memset(&pstat->htpriv.ht_cap, 0, sizeof(struct rtw_ieee80211_ht_cap));
 	if (elems.ht_capabilities && elems.ht_capabilities_len >= sizeof(struct rtw_ieee80211_ht_cap))
 	{
 		pstat->flags |= WLAN_STA_HT;
@@ -2572,7 +2572,7 @@ void issue_p2p_GO_request(struct rtw_ada
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -3020,7 +3020,7 @@ void issue_p2p_GO_response(struct rtw_ad
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -3053,7 +3053,7 @@ void issue_p2p_GO_response(struct rtw_ad
 	rtw_get_wps_attr_content( wpsie, wpsielen, WPS_ATTR_DEVICE_PWID, (u8*) &wps_devicepassword_id, &wps_devicepassword_id_len);
 	wps_devicepassword_id = be16_to_cpu( wps_devicepassword_id );
 
-	_rtw_memset( wpsie, 0x00, 255 );
+	memset( wpsie, 0x00, 255 );
 	wpsielen = 0;
 
 	//	WPS Section
@@ -3494,7 +3494,7 @@ void issue_p2p_GO_confirm(struct rtw_ada
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -3723,7 +3723,7 @@ void issue_p2p_invitation_request(struct
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -4063,7 +4063,7 @@ void issue_p2p_invitation_response(struc
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -4336,7 +4336,7 @@ void issue_p2p_provision_request(struct
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -4477,7 +4477,7 @@ void issue_probersp_p2p(struct rtw_adapt
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -4820,7 +4820,7 @@ int _issue_probereq_p2p(struct rtw_adapt
 	update_mgntframe_attrib(padapter, pattrib);
 
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -5259,7 +5259,7 @@ unsigned int on_action_public_p2p(union
 			case P2P_GO_NEGO_REQ:
 			{
 				DBG_8192D( "[%s] Got GO Nego Req Frame\n", __FUNCTION__);
-				_rtw_memset( &pwdinfo->groupid_info, 0x00, sizeof( struct group_id_info ) );
+				memset( &pwdinfo->groupid_info, 0x00, sizeof( struct group_id_info ) );
 
 				if(rtw_p2p_chk_state(pwdinfo, P2P_STATE_RX_PROVISION_DIS_REQ))
 				{
@@ -5402,7 +5402,7 @@ unsigned int on_action_public_p2p(union
 						{
 							//	Re-invoke the persistent group.
 
-							_rtw_memset( &group_id, 0x00, sizeof( struct group_id_info ) );
+							memset( &group_id, 0x00, sizeof( struct group_id_info ) );
 							rtw_get_p2p_attr_content( p2p_ie, p2p_ielen, P2P_ATTR_GROUP_ID, ( u8* ) &group_id, &attr_contentlen);
 							if ( attr_contentlen )
 							{
@@ -5472,7 +5472,7 @@ unsigned int on_action_public_p2p(union
 						{
 							//	Received the invitation to join a P2P group.
 
-							_rtw_memset( &group_id, 0x00, sizeof( struct group_id_info ) );
+							memset( &group_id, 0x00, sizeof( struct group_id_info ) );
 							rtw_get_p2p_attr_content( p2p_ie, p2p_ielen, P2P_ATTR_GROUP_ID, ( u8* ) &group_id, &attr_contentlen);
 							if ( attr_contentlen )
 							{
@@ -5859,7 +5859,7 @@ void update_mgntframe_attrib(struct rtw_
 {
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 
-	_rtw_memset((u8 *)(pattrib), 0, sizeof(struct pkt_attrib));
+	memset((u8 *)(pattrib), 0, sizeof(struct pkt_attrib));
 
 	pattrib->hdrlen = 24;
 	pattrib->nr_frags = 1;
@@ -5981,7 +5981,7 @@ int update_hidden_ssid(u8 *ies, u32 ies_
 				break;
 			}
 			case 2:
-				_rtw_memset(&ssid_ie[2], 0, ssid_len_ori);
+				memset(&ssid_ie[2], 0, ssid_len_ori);
 				break;
 			default:
 				break;
@@ -6028,7 +6028,7 @@ void issue_beacon(struct rtw_adapter *pa
 	update_mgntframe_attrib(padapter, pattrib);
 	pattrib->qsel = 0x10;
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -6341,7 +6341,7 @@ void issue_probersp(struct rtw_adapter *
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -6588,7 +6588,7 @@ int _issue_probereq(struct rtw_adapter *
 	update_mgntframe_attrib(padapter, pattrib);
 
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -6732,7 +6732,7 @@ void issue_auth(struct rtw_adapter *pada
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -6888,7 +6888,7 @@ void issue_asocrsp(struct rtw_adapter *p
 	update_mgntframe_attrib(padapter, pattrib);
 
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -7077,7 +7077,7 @@ void issue_assocreq(struct rtw_adapter *
 	update_mgntframe_attrib(padapter, pattrib);
 
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -7578,7 +7578,7 @@ static int _issue_nulldata(struct rtw_ad
 	update_mgntframe_attrib(padapter, pattrib);
 	pattrib->retry_ctrl = false;
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -7707,7 +7707,7 @@ static int _issue_qos_nulldata(struct rt
 	pattrib->ack_policy = 0;
 	pattrib->mdata = 0;
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -7844,7 +7844,7 @@ static int _issue_deauth(struct rtw_adap
 	update_mgntframe_attrib(padapter, pattrib);
 	pattrib->retry_ctrl = false;
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -7955,7 +7955,7 @@ void issue_action_spct_ch_switch(struct
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -8026,7 +8026,7 @@ void issue_action_BA(struct rtw_adapter
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -8164,7 +8164,7 @@ static void issue_action_BSSCoexistPacke
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -8200,7 +8200,7 @@ static void issue_action_BSSCoexistPacke
 
 
 	//
-	_rtw_memset(ICS, 0, sizeof(ICS));
+	memset(ICS, 0, sizeof(ICS));
 	if(pmlmepriv->num_sta_no_ht>0)
 	{
 		int i;
@@ -8773,7 +8773,7 @@ u8 collect_bss_info(struct rtw_adapter *
 		return _FAIL;
 	}
 
-	_rtw_memset(bssid, 0, sizeof(struct wlan_bssid_ex));
+	memset(bssid, 0, sizeof(struct wlan_bssid_ex));
 
 	subtype = GetFrameSubType(pframe);
 
@@ -8820,7 +8820,7 @@ u8 collect_bss_info(struct rtw_adapter *
 		bssid->Ssid.SsidLength = 0;
 	}
 
-	_rtw_memset(bssid->SupportedRates, 0, NDIS_802_11_LENGTH_RATES_EX);
+	memset(bssid->SupportedRates, 0, NDIS_802_11_LENGTH_RATES_EX);
 
 	//checking rate info...
 	i = 0;
@@ -9202,7 +9202,7 @@ static void process_80211d(struct rtw_ad
 		p = ie;
 		ie += len;
 
-		_rtw_memset(country, 0, 4);
+		memset(country, 0, 4);
 		memcpy(country, p, 3);
 		p += 3;
 		RT_TRACE(_module_rtl871x_mlme_c_, _drv_notice_,
@@ -9248,7 +9248,7 @@ static void process_80211d(struct rtw_ad
 		printk("}\n");
 #endif
 
-		_rtw_memset(pmlmeext->channel_set, 0, sizeof(pmlmeext->channel_set));
+		memset(pmlmeext->channel_set, 0, sizeof(pmlmeext->channel_set));
 		chplan_new = pmlmeext->channel_set;
 
 		i = j = k = 0;
@@ -10676,7 +10676,7 @@ int rtw_scan_ch_decision(struct rtw_adap
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 
 	/* clear out first */
-	_rtw_memset(out, 0, sizeof(struct rtw_ieee80211_channel)*out_num);
+	memset(out, 0, sizeof(struct rtw_ieee80211_channel)*out_num);
 
 	/* acquire channels from in */
 	j = 0;
@@ -10713,7 +10713,7 @@ int rtw_scan_ch_decision(struct rtw_adap
 	if (padapter->setband == GHZ_24) {				// 2.4G
 		for (i=0; i < j ; i++) {
 			if (out[i].hw_value > 35)
-				_rtw_memset(&out[i], 0 , sizeof(struct rtw_ieee80211_channel));
+				memset(&out[i], 0 , sizeof(struct rtw_ieee80211_channel));
 			else
 				scan_ch_num++;
 		}
--- a/drivers/staging/rtl8192du/core/rtw_p2p.c
+++ b/drivers/staging/rtl8192du/core/rtw_p2p.c
@@ -198,7 +198,7 @@ static void issue_group_disc_req(struct
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -259,7 +259,7 @@ static void issue_p2p_devdisc_resp(struc
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -338,7 +338,7 @@ static void issue_p2p_provision_resp(str
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -429,7 +429,7 @@ static void issue_p2p_presence_resp(stru
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -628,7 +628,7 @@ u32 build_beacon_wfd_ie(struct wifidirec
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -741,7 +741,7 @@ u32 build_probe_req_wfd_ie(struct wifidi
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -899,7 +899,7 @@ u32 build_probe_resp_wfd_ie(struct wifid
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -1043,7 +1043,7 @@ u32 build_assoc_req_wfd_ie(struct wifidi
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -1141,7 +1141,7 @@ u32 build_assoc_resp_wfd_ie(struct wifid
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -1239,7 +1239,7 @@ u32 build_nego_req_wfd_ie(struct wifidir
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -1337,7 +1337,7 @@ u32 build_nego_resp_wfd_ie(struct wifidi
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -1436,7 +1436,7 @@ u32 build_nego_confirm_wfd_ie(struct wif
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -1535,7 +1535,7 @@ u32 build_invitation_req_wfd_ie(struct w
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -1648,7 +1648,7 @@ u32 build_invitation_resp_wfd_ie(struct
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -1761,7 +1761,7 @@ u32 build_provdisc_req_wfd_ie(struct wif
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -1860,7 +1860,7 @@ u32 build_provdisc_resp_wfd_ie(struct wi
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	wfdielen += ETH_ALEN;
@@ -2809,7 +2809,7 @@ u8 process_p2p_group_negotation_req( str
 		{
 			if ( attr_contentlen != ETH_ALEN )
 			{
-				_rtw_memset( pwdinfo->p2p_peer_interface_addr, 0x00, ETH_ALEN );
+				memset( pwdinfo->p2p_peer_interface_addr, 0x00, ETH_ALEN );
 			}
 		}
 
@@ -2990,7 +2990,7 @@ u8 process_p2p_group_negotation_resp( st
 			{
 				if ( attr_contentlen != ETH_ALEN )
 				{
-					_rtw_memset( pwdinfo->p2p_peer_interface_addr, 0x00, ETH_ALEN );
+					memset( pwdinfo->p2p_peer_interface_addr, 0x00, ETH_ALEN );
 				}
 			}
 
@@ -3124,7 +3124,7 @@ u8 process_p2p_group_negotation_resp( st
 
 			//	Try to get the group id information if peer is GO
 			attr_contentlen = 0;
-			_rtw_memset( groupid, 0x00, 38 );
+			memset( groupid, 0x00, 38 );
 			if ( rtw_get_p2p_attr_content( p2p_ie, p2p_ielen, P2P_ATTR_GROUP_ID, groupid, &attr_contentlen) )
 			{
 				memcpy( pwdinfo->groupid_info.go_device_addr, &groupid[0], ETH_ALEN );
@@ -3232,7 +3232,7 @@ u8 process_p2p_group_negotation_confirm(
 
 		//	Try to get the group id information
 		attr_contentlen = 0;
-		_rtw_memset( groupid, 0x00, 38 );
+		memset( groupid, 0x00, 38 );
 		if ( rtw_get_p2p_attr_content( p2p_ie, p2p_ielen, P2P_ATTR_GROUP_ID, groupid, &attr_contentlen) )
 		{
 			DBG_8192D( "[%s] Ssid = %s, ssidlen = %d\n", __FUNCTION__, &groupid[ETH_ALEN], (u32)strlen(&groupid[ETH_ALEN]) );
@@ -3281,7 +3281,7 @@ void find_phase_handler(struct rtw_adapt
 
 _func_enter_;
 
-	_rtw_memset((unsigned char*)&ssid, 0, sizeof(struct ndis_802_11_ssid));
+	memset((unsigned char*)&ssid, 0, sizeof(struct ndis_802_11_ssid));
 	memcpy(ssid.Ssid, pwdinfo->p2p_wildcard_ssid, P2P_WILDCARD_SSID_LEN );
 	ssid.SsidLength = P2P_WILDCARD_SSID_LEN;
 
@@ -3975,7 +3975,7 @@ void rtw_init_cfg80211_wifidirect_info(s
 {
 	struct cfg80211_wifidirect_info *pcfg80211_wdinfo = &padapter->cfg80211_wdinfo;
 
-	_rtw_memset(pcfg80211_wdinfo, 0x00, sizeof(struct cfg80211_wifidirect_info) );
+	memset(pcfg80211_wdinfo, 0x00, sizeof(struct cfg80211_wifidirect_info) );
 
 	_init_timer( &pcfg80211_wdinfo->remain_on_ch_timer, padapter->pnetdev, ro_ch_timer_process, padapter );
 }
@@ -4446,8 +4446,8 @@ int rtw_init_wifi_display_info(struct rt
 	pwfd_info->wfd_pc = false;
 
 	// Used in TDLS
-	_rtw_memset( pwfd_info->ip_address, 0x00, 4 );
-	_rtw_memset( pwfd_info->peer_ip_address, 0x00, 4 );
+	memset( pwfd_info->ip_address, 0x00, 4 );
+	memset( pwfd_info->peer_ip_address, 0x00, 4 );
 	return res;
 
 }
@@ -4570,32 +4570,32 @@ void init_wifidirect_info(struct rtw_ada
 
 	memcpy( ( void* ) pwdinfo->p2p_wildcard_ssid, "DIRECT-", 7 );
 
-	_rtw_memset( pwdinfo->device_name, 0x00, WPS_MAX_DEVICE_NAME_LEN );
+	memset( pwdinfo->device_name, 0x00, WPS_MAX_DEVICE_NAME_LEN );
 	pwdinfo->device_name_len = 0;
 
-	_rtw_memset( &pwdinfo->invitereq_info, 0x00, sizeof( struct tx_invite_req_info ) );
+	memset( &pwdinfo->invitereq_info, 0x00, sizeof( struct tx_invite_req_info ) );
 	pwdinfo->invitereq_info.token = 3;	//	Token used for P2P invitation request frame.
 
-	_rtw_memset( &pwdinfo->inviteresp_info, 0x00, sizeof( struct tx_invite_resp_info ) );
+	memset( &pwdinfo->inviteresp_info, 0x00, sizeof( struct tx_invite_resp_info ) );
 	pwdinfo->inviteresp_info.token = 0;
 
 	pwdinfo->profileindex = 0;
-	_rtw_memset( &pwdinfo->profileinfo[ 0 ], 0x00, sizeof( struct profile_info ) * P2P_MAX_PERSISTENT_GROUP_NUM );
+	memset( &pwdinfo->profileinfo[ 0 ], 0x00, sizeof( struct profile_info ) * P2P_MAX_PERSISTENT_GROUP_NUM );
 
 	rtw_p2p_findphase_ex_set(pwdinfo, P2P_FINDPHASE_EX_NONE);
 
 	pwdinfo->listen_dwell = ( u8 ) (( rtw_get_current_time() % 3 ) + 1);
 	//DBG_8192D( "[%s] listen_dwell time is %d00ms\n", __FUNCTION__, pwdinfo->listen_dwell );
 
-	_rtw_memset( &pwdinfo->tx_prov_disc_info, 0x00, sizeof( struct tx_provdisc_req_info ) );
+	memset( &pwdinfo->tx_prov_disc_info, 0x00, sizeof( struct tx_provdisc_req_info ) );
 	pwdinfo->tx_prov_disc_info.wps_config_method_request = WPS_CM_NONE;
 
-	_rtw_memset( &pwdinfo->nego_req_info, 0x00, sizeof( struct tx_nego_req_info ) );
+	memset( &pwdinfo->nego_req_info, 0x00, sizeof( struct tx_nego_req_info ) );
 
 	pwdinfo->device_password_id_for_nego = WPS_DPID_PBC;
 	pwdinfo->negotiation_dialog_token = 1;
 
-	_rtw_memset( pwdinfo->nego_ssid, 0x00, WLAN_SSID_MAXLEN );
+	memset( pwdinfo->nego_ssid, 0x00, WLAN_SSID_MAXLEN );
 	pwdinfo->nego_ssidlen = 0;
 
 	pwdinfo->ui_got_wps_info = P2P_NO_WPSINFO;
@@ -4606,11 +4606,11 @@ void init_wifidirect_info(struct rtw_ada
 	pwdinfo->supported_wps_cm = WPS_CONFIG_METHOD_DISPLAY | WPS_CONFIG_METHOD_PBC | WPS_CONFIG_METHOD_KEYPAD;
 #endif //CONFIG_WFD
 	pwdinfo->channel_list_attr_len = 0;
-	_rtw_memset( pwdinfo->channel_list_attr, 0x00, 100 );
+	memset( pwdinfo->channel_list_attr, 0x00, 100 );
 
-	_rtw_memset( pwdinfo->rx_prov_disc_info.strconfig_method_desc_of_prov_disc_req, 0x00, 4 );
-	_rtw_memset( pwdinfo->rx_prov_disc_info.strconfig_method_desc_of_prov_disc_req, '0', 3 );
-	_rtw_memset( &pwdinfo->groupid_info, 0x00, sizeof( struct group_id_info ) );
+	memset( pwdinfo->rx_prov_disc_info.strconfig_method_desc_of_prov_disc_req, 0x00, 4 );
+	memset( pwdinfo->rx_prov_disc_info.strconfig_method_desc_of_prov_disc_req, '0', 3 );
+	memset( &pwdinfo->groupid_info, 0x00, sizeof( struct group_id_info ) );
 #ifdef CONFIG_CONCURRENT_MODE
 #ifdef CONFIG_IOCTL_CFG80211
 	pwdinfo->ext_listen_interval = 1000; //The interval to be available with legacy AP during p2p0-find/scan
@@ -4623,8 +4623,8 @@ void init_wifidirect_info(struct rtw_ada
 #endif //!CONFIG_IOCTL_CFG80211
 #endif
 	pwdinfo->wfd_tdls_enable = 0;
-	_rtw_memset( pwdinfo->p2p_peer_interface_addr, 0x00, ETH_ALEN );
-	_rtw_memset( pwdinfo->p2p_peer_device_addr, 0x00, ETH_ALEN );
+	memset( pwdinfo->p2p_peer_interface_addr, 0x00, ETH_ALEN );
+	memset( pwdinfo->p2p_peer_device_addr, 0x00, ETH_ALEN );
 
 	pwdinfo->rx_invitereq_info.operation_ch[0] = 0;
 	pwdinfo->rx_invitereq_info.operation_ch[1] = 0;	//	Used to indicate the scan end in site survey function
@@ -4769,7 +4769,7 @@ int rtw_p2p_enable(struct rtw_adapter *p
 			#endif
 			rtw_p2p_set_state(pwdinfo, P2P_STATE_NONE);
 			rtw_p2p_set_role(pwdinfo, P2P_ROLE_DISABLE);
-			_rtw_memset(&pwdinfo->rx_prov_disc_info, 0x00, sizeof(struct rx_provdisc_req_info));
+			memset(&pwdinfo->rx_prov_disc_info, 0x00, sizeof(struct rx_provdisc_req_info));
 		}
 
 		//Restore to initial setting.
--- a/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
+++ b/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
@@ -1098,7 +1098,7 @@ void rtw_free_pwrctrl_priv(struct rtw_ad
 
 _func_enter_;
 
-	//_rtw_memset((unsigned char *)pwrctrlpriv, 0, sizeof(struct pwrctrl_priv));
+	//memset((unsigned char *)pwrctrlpriv, 0, sizeof(struct pwrctrl_priv));
 
 
 	#ifdef CONFIG_RESUME_IN_WORKQUEUE
--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -41,7 +41,7 @@ void _rtw_init_sta_recv_priv(struct sta_
 
 _func_enter_;
 
-	_rtw_memset((u8 *)psta_recvpriv, 0, sizeof (struct sta_recv_priv));
+	memset((u8 *)psta_recvpriv, 0, sizeof (struct sta_recv_priv));
 
 	_rtw_spinlock_init(&psta_recvpriv->lock);
 
@@ -65,7 +65,7 @@ int _rtw_init_recv_priv(struct recv_priv
 _func_enter_;
 
 	// We don't need to memset padapter->XXX to zero, because adapter is allocated by rtw_zvmalloc().
-	//_rtw_memset((unsigned char *)precvpriv, 0, sizeof (struct  recv_priv));
+	//memset((unsigned char *)precvpriv, 0, sizeof (struct  recv_priv));
 
 	_rtw_spinlock_init(&precvpriv->lock);
 
@@ -85,7 +85,7 @@ _func_enter_;
 		res= _FAIL;
 		goto exit;
 	}
-	//_rtw_memset(precvpriv->pallocated_frame_buf, 0, NR_RECVFRAME * sizeof(union recv_frame) + RXFRAME_ALIGN_SZ);
+	//memset(precvpriv->pallocated_frame_buf, 0, NR_RECVFRAME * sizeof(union recv_frame) + RXFRAME_ALIGN_SZ);
 
 	precvpriv->precv_frame_buf = (u8 *)N_BYTE_ALIGMENT((SIZE_PTR)(precvpriv->pallocated_frame_buf), RXFRAME_ALIGN_SZ);
 	//precvpriv->precv_frame_buf = precvpriv->pallocated_frame_buf + RXFRAME_ALIGN_SZ -
--- a/drivers/staging/rtl8192du/core/rtw_security.c
+++ b/drivers/staging/rtl8192du/core/rtw_security.c
@@ -1325,13 +1325,13 @@ _func_enter_;
 	frsubtype=frsubtype>>4;
 
 
-	_rtw_memset((void *)mic_iv, 0, 16);
-	_rtw_memset((void *)mic_header1, 0, 16);
-	_rtw_memset((void *)mic_header2, 0, 16);
-	_rtw_memset((void *)ctr_preload, 0, 16);
-	_rtw_memset((void *)chain_buffer, 0, 16);
-	_rtw_memset((void *)aes_out, 0, 16);
-	_rtw_memset((void *)padded_buffer, 0, 16);
+	memset((void *)mic_iv, 0, 16);
+	memset((void *)mic_header1, 0, 16);
+	memset((void *)mic_header2, 0, 16);
+	memset((void *)ctr_preload, 0, 16);
+	memset((void *)chain_buffer, 0, 16);
+	memset((void *)aes_out, 0, 16);
+	memset((void *)padded_buffer, 0, 16);
 
 	if ((hdrlen == WLAN_HDR_A3_LEN )||(hdrlen ==  WLAN_HDR_A3_QOS_LEN))
 		a4_exists = 0;
@@ -1620,13 +1620,13 @@ _func_enter_;
 	frsubtype=frsubtype>>4;
 
 
-	_rtw_memset((void *)mic_iv, 0, 16);
-	_rtw_memset((void *)mic_header1, 0, 16);
-	_rtw_memset((void *)mic_header2, 0, 16);
-	_rtw_memset((void *)ctr_preload, 0, 16);
-	_rtw_memset((void *)chain_buffer, 0, 16);
-	_rtw_memset((void *)aes_out, 0, 16);
-	_rtw_memset((void *)padded_buffer, 0, 16);
+	memset((void *)mic_iv, 0, 16);
+	memset((void *)mic_header1, 0, 16);
+	memset((void *)mic_header2, 0, 16);
+	memset((void *)ctr_preload, 0, 16);
+	memset((void *)chain_buffer, 0, 16);
+	memset((void *)aes_out, 0, 16);
+	memset((void *)padded_buffer, 0, 16);
 
 	//start to decrypt the payload
 
@@ -2169,7 +2169,7 @@ static void hmac_sha256_vector(u8 *key,
 	 * and text is the data being protected */
 
 	/* start out by storing key in ipad */
-	_rtw_memset(k_pad, 0, sizeof(k_pad));
+	memset(k_pad, 0, sizeof(k_pad));
 	memcpy(k_pad, key, key_len);
 	/* XOR key with ipad values */
 	for (i = 0; i < 64; i++)
@@ -2184,7 +2184,7 @@ static void hmac_sha256_vector(u8 *key,
 	}
 	sha256_vector(1 + num_elem, _addr, _len, mac);
 
-	_rtw_memset(k_pad, 0, sizeof(k_pad));
+	memset(k_pad, 0, sizeof(k_pad));
 	memcpy(k_pad, key, key_len);
 	/* XOR key with opad values */
 	for (i = 0; i < 64; i++)
@@ -2545,7 +2545,7 @@ static void gf_mulx(u8 *pad)
 
 static void aes_encrypt_deinit(void *ctx)
 {
-	_rtw_memset(ctx, 0, AES_PRIV_SIZE);
+	memset(ctx, 0, AES_PRIV_SIZE);
 	rtw_mfree(ctx, AES_PRIV_SIZE);
 }
 
@@ -2574,7 +2574,7 @@ static int omac1_aes_128_vector(u8 *key,
 	ctx = aes_encrypt_init(key, 16);
 	if (ctx == NULL)
 		return -1;
-	_rtw_memset(cbc, 0, AES_BLOCK_SIZE);
+	memset(cbc, 0, AES_BLOCK_SIZE);
 
 	total_len = 0;
 	for (e = 0; e < num_elem; e++)
@@ -2599,7 +2599,7 @@ static int omac1_aes_128_vector(u8 *key,
 		left -= AES_BLOCK_SIZE;
 	}
 
-	_rtw_memset(pad, 0, AES_BLOCK_SIZE);
+	memset(pad, 0, AES_BLOCK_SIZE);
 	aes_128_encrypt(ctx, pad, pad);
 	gf_mulx(pad);
 
@@ -2739,7 +2739,7 @@ int wpa_tdls_ftie_mic(u8 *kck, u8 trans_
 	/* 7) FTIE, with the MIC field of the FTIE set to 0 */
 	memcpy(pos, ftie, 2 + ftie[1]);
 	_ftie = (struct wpa_tdls_ftie *) pos;
-	_rtw_memset(_ftie->mic, 0, TDLS_MIC_LEN);
+	memset(_ftie->mic, 0, TDLS_MIC_LEN);
 	pos += 2 + ftie[1];
 
 	ret = omac1_aes_128(kck, buf, pos - buf, mic);
@@ -2790,7 +2790,7 @@ int tdls_verify_mic(u8 *kck, u8 trans_se
 	memcpy(pos, ftie, 2 + *(ftie+1));
 	pos += 2;
 	tmp_ftie = (u8 *) (pos+2);
-	_rtw_memset(tmp_ftie, 0, 16);
+	memset(tmp_ftie, 0, 16);
 	pos += *(ftie+1);
 
 	ret = omac1_aes_128(kck, buf, pos - buf, mic);
--- a/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
+++ b/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
@@ -32,7 +32,7 @@ void _rtw_init_stainfo(struct sta_info *
 
 _func_enter_;
 
-	_rtw_memset((u8 *)psta, 0, sizeof (struct sta_info));
+	memset((u8 *)psta, 0, sizeof (struct sta_info));
 
 	 _rtw_spinlock_init(&psta->lock);
 	_rtw_init_listhead(&psta->list);
--- a/drivers/staging/rtl8192du/core/rtw_tdls.c
+++ b/drivers/staging/rtl8192du/core/rtw_tdls.c
@@ -71,7 +71,7 @@ void rtw_free_tdls_info(struct tdls_info
 	_rtw_spinlock_free(&ptdlsinfo->cmd_lock);
 	_rtw_spinlock_free(&ptdlsinfo->hdl_lock);
 
-	_rtw_memset(ptdlsinfo, 0, sizeof(struct tdls_info) );
+	memset(ptdlsinfo, 0, sizeof(struct tdls_info) );
 
 }
 
@@ -95,7 +95,7 @@ void issue_nulldata_to_TDLS_peer_STA(_ad
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -257,7 +257,7 @@ void free_tdls_sta(_adapter *padapter, s
 	if( ptdlsinfo->sta_cnt < (NUM_STA - 2) )	// -2: AP + BC/MC sta
 	{
 		ptdlsinfo->sta_maximum = false;
-		_rtw_memset( &ptdlsinfo->ss_record, 0x00, sizeof(struct tdls_ss_record) );
+		memset( &ptdlsinfo->ss_record, 0x00, sizeof(struct tdls_ss_record) );
 	}
 	//ready to clear cam
 	if(ptdls_sta->mac_id!=0){
@@ -300,7 +300,7 @@ void rtw_tdls_set_key(_adapter *adapter,
 void rtw_tdls_process_ht_cap(_adapter *adapter, struct sta_info *ptdls_sta, u8 *data, u8 Length)
 {
 	/* save HT capabilities in the sta object */
-	_rtw_memset(&ptdls_sta->htpriv.ht_cap, 0, sizeof(struct rtw_ieee80211_ht_cap));
+	memset(&ptdls_sta->htpriv.ht_cap, 0, sizeof(struct rtw_ieee80211_ht_cap));
 	if (data && Length >= sizeof(struct rtw_ieee80211_ht_cap) )
 	{
 		ptdls_sta->flags |= WLAN_STA_HT;
@@ -353,7 +353,7 @@ u8 *rtw_tdls_set_ht_cap(_adapter *padapt
 	u8 rf_type;
 
 	//HT capabilities
-	_rtw_memset(&ht_capie, 0, sizeof(struct rtw_ieee80211_ht_cap));
+	memset(&ht_capie, 0, sizeof(struct rtw_ieee80211_ht_cap));
 
 	ht_capie.cap_info = IEEE80211_HT_CAP_SUP_WIDTH |IEEE80211_HT_CAP_SGI_20 |IEEE80211_HT_CAP_SM_PS |
 						IEEE80211_HT_CAP_SGI_40 | IEEE80211_HT_CAP_TX_STBC |IEEE80211_HT_CAP_DSSSCCK40;
@@ -434,7 +434,7 @@ void rtw_tdls_process_wfd_ie(struct tdls
 			DBG_871X( "[%s] Peer PORT NUM = %d\n", __FUNCTION__, ptdlsinfo->wfd_info->peer_rtsp_ctrlport );
 		}
 
-		_rtw_memset( attr_content, 0x00, 10);
+		memset( attr_content, 0x00, 10);
 		attr_contentlen = 0;
 		rtw_get_wfd_attr_content( wfd_ie, wfd_ielen, WFD_ATTR_LOCAL_IP_ADDR, attr_content, &attr_contentlen);
 		if ( attr_contentlen )
@@ -833,7 +833,7 @@ void issue_tdls_dis_rsp(_adapter *padapt
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -1975,7 +1975,7 @@ void wfd_ie_tdls(_adapter * padapter, u8
 	}
 	else
 	{
-		_rtw_memset( wfdie + wfdielen, 0x00, ETH_ALEN );
+		memset( wfdie + wfdielen, 0x00, ETH_ALEN );
 	}
 
 	//	Local IP Address ATTR
@@ -2084,9 +2084,9 @@ void rtw_build_tdls_setup_req_ies(_adapt
 
 	if(pattrib->encrypt){
 		//FTIE
-		_rtw_memset(pframe, 0, 84);	//All fields except SNonce shall be set to 0
-		_rtw_memset(pframe, _FTIE_, 1);	//version
-		_rtw_memset((pframe+1), 82, 1);	//length
+		memset(pframe, 0, 84);	//All fields except SNonce shall be set to 0
+		memset(pframe, _FTIE_, 1);	//version
+		memset((pframe+1), 82, 1);	//length
 		memcpy((pframe+52), ptdls_sta->SNonce, 32);
 		pframe += 84;
 		pattrib->pktlen += 84;
@@ -2226,9 +2226,9 @@ void rtw_build_tdls_setup_rsp_ies(_adapt
 		//FTIE
 		pftie = pframe;
 		pftie_mic = pframe+4;
-		_rtw_memset(pframe, 0, 84);	//All fields except SNonce shall be set to 0
-		_rtw_memset(pframe, _FTIE_, 1);	//version
-		_rtw_memset((pframe+1), 82, 1);	//length
+		memset(pframe, 0, 84);	//All fields except SNonce shall be set to 0
+		memset(pframe, _FTIE_, 1);	//version
+		memset((pframe+1), 82, 1);	//length
 		memcpy((pframe+20), ptdls_sta->ANonce, 32);
 		memcpy((pframe+52), ptdls_sta->SNonce, 32);
 		pframe += 84;
@@ -2308,9 +2308,9 @@ void rtw_build_tdls_setup_cfm_ies(_adapt
 		//FTIE
 		pftie = pframe;
 		pftie_mic = pframe+4;
-		_rtw_memset(pframe, 0, 84);	//All fields except SNonce shall be set to 0
-		_rtw_memset(pframe, _FTIE_, 1);	//version
-		_rtw_memset((pframe+1), 82, 1);	//length
+		memset(pframe, 0, 84);	//All fields except SNonce shall be set to 0
+		memset(pframe, _FTIE_, 1);	//version
+		memset((pframe+1), 82, 1);	//length
 		memcpy((pframe+20), ptdls_sta->ANonce, 32);
 		memcpy((pframe+52), ptdls_sta->SNonce, 32);
 		pframe += 84;
@@ -2461,9 +2461,9 @@ void rtw_build_tdls_dis_rsp_ies(_adapter
 
 	if(pattrib->encrypt){
 		//FTIE
-		_rtw_memset(pframe, 0, 84);	//All fields shall be set to 0
-		_rtw_memset(pframe, _FTIE_, 1);	//version
-		_rtw_memset((pframe+1), 82, 1);	//length
+		memset(pframe, 0, 84);	//All fields shall be set to 0
+		memset(pframe, _FTIE_, 1);	//version
+		memset((pframe+1), 82, 1);	//length
 		pframe += 84;
 		pattrib->pktlen += 84;
 
--- a/drivers/staging/rtl8192du/core/rtw_wlan_util.c
+++ b/drivers/staging/rtl8192du/core/rtw_wlan_util.c
@@ -304,7 +304,7 @@ void get_rate_set(struct rtw_adapter *pa
 {
 	unsigned char supportedrates[NUMRATES];
 
-	_rtw_memset(supportedrates, 0, NUMRATES);
+	memset(supportedrates, 0, NUMRATES);
 	*bssrate_len = ratetbl2rateset(padapter, supportedrates);
 	memcpy(pbssrate, supportedrates, *bssrate_len);
 }
@@ -798,7 +798,7 @@ void flush_all_cam_entry(struct rtw_adap
 
 #endif //CONFIG_CONCURRENT_MODE
 
-	_rtw_memset((u8 *)(pmlmeinfo->FW_sta_info), 0, sizeof(pmlmeinfo->FW_sta_info));
+	memset((u8 *)(pmlmeinfo->FW_sta_info), 0, sizeof(pmlmeinfo->FW_sta_info));
 
 }
 
@@ -1587,7 +1587,7 @@ void update_tx_basic_rate(struct rtw_ada
 		return;
 #endif //CONFIG_INTEL_WIDI
 
-	_rtw_memset(supported_rates, 0, NDIS_802_11_LENGTH_RATES_EX);
+	memset(supported_rates, 0, NDIS_802_11_LENGTH_RATES_EX);
 
 	//clear B mod if current channel is in 5G band, avoid tx cck rate in 5G band.
 	if(pmlmeext->cur_channel > 14)
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -49,7 +49,7 @@ void	_rtw_init_sta_xmit_priv(struct sta_
 
 _func_enter_;
 
-	_rtw_memset((unsigned char *)psta_xmitpriv, 0, sizeof (struct sta_xmit_priv));
+	memset((unsigned char *)psta_xmitpriv, 0, sizeof (struct sta_xmit_priv));
 
 	_rtw_spinlock_init(&psta_xmitpriv->lock);
 
@@ -77,7 +77,7 @@ s32	_rtw_init_xmit_priv(struct xmit_priv
 _func_enter_;
 
 	// We don't need to memset padapter->XXX to zero, because adapter is allocated by rtw_zvmalloc().
-	//_rtw_memset((unsigned char *)pxmitpriv, 0, sizeof(struct xmit_priv));
+	//memset((unsigned char *)pxmitpriv, 0, sizeof(struct xmit_priv));
 
 	_rtw_spinlock_init(&pxmitpriv->lock);
 	_rtw_init_sema(&pxmitpriv->xmit_sema, 0);
@@ -1037,7 +1037,7 @@ _func_enter_;
 		}
 	}
 
-	_rtw_memset(hdr, 0, WLANHDR_OFFSET);
+	memset(hdr, 0, WLANHDR_OFFSET);
 
 	SetFrameSubType(fctrl, pattrib->subtype);
 
@@ -1319,7 +1319,7 @@ s32 rtw_make_tdls_wlanhdr (struct rtw_ad
 
 _func_enter_;
 
-	_rtw_memset(hdr, 0, WLANHDR_OFFSET);
+	memset(hdr, 0, WLANHDR_OFFSET);
 
 	SetFrameSubType(fctrl, pattrib->subtype);
 
@@ -2071,7 +2071,7 @@ _func_enter_;
 		pxframe->buf_addr = NULL;
 		pxframe->pxmitbuf = NULL;
 
-		_rtw_memset(&pxframe->attrib, 0, sizeof(struct pkt_attrib));
+		memset(&pxframe->attrib, 0, sizeof(struct pkt_attrib));
 		//pxframe->attrib.psta = NULL;
 
 		pxframe->frame_tag = DATA_FRAMETAG;
--- a/drivers/staging/rtl8192du/hal/hal_com.c
+++ b/drivers/staging/rtl8192du/hal/hal_com.c
@@ -359,7 +359,7 @@ s32 c2h_evt_read(struct rtw_adapter *ada
 
 	c2h_evt = (struct c2h_evt_hdr *)buf;
 
-	_rtw_memset(c2h_evt, 0, 16);
+	memset(c2h_evt, 0, 16);
 
 	*buf = rtw_read8(adapter, REG_C2HEVT_MSG_NORMAL);
 	*(buf+1) = rtw_read8(adapter, REG_C2HEVT_MSG_NORMAL + 1);
--- a/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
@@ -167,8 +167,8 @@ _func_enter_;
 		}
 
 		// 4. Fill the H2C cmd into box
-		_rtw_memset(BoxContent, 0, sizeof(BoxContent));
-		_rtw_memset(BoxExtContent, 0, sizeof(BoxExtContent));
+		memset(BoxContent, 0, sizeof(BoxContent));
+		memset(BoxExtContent, 0, sizeof(BoxExtContent));
 
 		BoxContent[0] = ElementID; // Fill element ID
 
@@ -287,7 +287,7 @@ FillH2CCmd92D(
 		return;
 	}
 
-	_rtw_memset(tmpCmdBuf, 0, 8);
+	memset(tmpCmdBuf, 0, 8);
 	memcpy(tmpCmdBuf, pCmdBuffer, CmdLen);
 
 	_FillH2CCmd92D(Adapter, ElementID, CmdLen, (u8 *)&tmpCmdBuf);
@@ -323,7 +323,7 @@ u8 rtl8192d_set_raid_cmd(struct rtw_adap
 
 _func_enter_;
 
-	_rtw_memset(buf, 0, 5);
+	memset(buf, 0, 5);
 	mask = cpu_to_le32( mask );
 	memcpy(buf, &mask, 4);
 	buf[4]  = arg;
@@ -634,7 +634,7 @@ FillFakeTxDescriptor92D(
 	struct tx_desc	*ptxdesc = (struct tx_desc *)pDesc;
 
 	// Clear all status
-	_rtw_memset(pDesc, 0, 32);
+	memset(pDesc, 0, 32);
 
 	//offset 0
 	ptxdesc->txdw0 |= cpu_to_le32( OWN | FSG | LSG); //own, bFirstSeg, bLastSeg;
@@ -706,7 +706,7 @@ void SetFwRsvdPagePkt(struct rtw_adapter
 		return;
 	}
 
-	_rtw_memset(ReservedPagePacket, 0, 1000);
+	memset(ReservedPagePacket, 0, 1000);
 
 	TxDescLen = 32;//TX_DESC_SIZE;
 
@@ -917,7 +917,7 @@ _func_enter_;
 	{
 		case P2P_PS_DISABLE:
 			DBG_8192D("P2P_PS_DISABLE \n");
-			_rtw_memset(p2p_ps_offload, 0 ,1);
+			memset(p2p_ps_offload, 0 ,1);
 			break;
 		case P2P_PS_ENABLE:
 			DBG_8192D("P2P_PS_ENABLE \n");
--- a/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
@@ -2406,7 +2406,7 @@ void rtl8192d_init_dm_priv(struct rtw_ad
 	//struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	//struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
-	//_rtw_memset(pdmpriv, 0, sizeof(struct dm_priv));
+	//memset(pdmpriv, 0, sizeof(struct dm_priv));
 
 }
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
@@ -779,7 +779,7 @@ hal_ReadPowerValueFromPROM92D(
 	u8	i = 0;
 	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
-	_rtw_memset(pwrInfo, 0, sizeof(struct tx_power_info));
+	memset(pwrInfo, 0, sizeof(struct tx_power_info));
 
 	if(AutoLoadFail){
 		for(group = 0 ; group < CHANNEL_GROUP_MAX ; group++){
@@ -1740,8 +1740,8 @@ rtl8192d_Efuse_PgPacketRead(	struct rtw_
 	if(offset>=EFUSE_MAX_SECTION)		return false;
 
 
-	_rtw_memset((void *)data, 0xff, sizeof(u8)*PGPKT_DATA_SIZE);
-	_rtw_memset((void *)tmpdata, 0xff, sizeof(u8)*PGPKT_DATA_SIZE);
+	memset((void *)data, 0xff, sizeof(u8)*PGPKT_DATA_SIZE);
+	memset((void *)tmpdata, 0xff, sizeof(u8)*PGPKT_DATA_SIZE);
 
 	//RT_PRINT_DATA(COMP_EFUSE, DBG_LOUD, ("efuse_PgPacketRead-1\n"), data, 8);
 
@@ -1883,7 +1883,7 @@ rtl8192d_Efuse_PgPacketWrite(struct rtw_
 	//RTPRINT(FEEPROM, EFUSE_PG, ("efuse_PgPacketWrite target offset 0x%x word_en 0x%x \n", target_pkt.offset, target_pkt.word_en));
 
 
-	_rtw_memset((void *)target_pkt.data, 0xFF, sizeof(u8)*8);
+	memset((void *)target_pkt.data, 0xFF, sizeof(u8)*8);
 
 	efuse_WordEnableDataRead(word_en, data, target_pkt.data);
 	target_word_cnts = Efuse_CalculateWordCnts(target_pkt.word_en);
@@ -2177,7 +2177,7 @@ rtl8192d_Efuse_PgPacketWrite(struct rtw_
 
 					//************  s1-2-A :cover the exist data *******************
 					//memset(originaldata,0xff,sizeof(UINT8)*8);
-					_rtw_memset((void *)originaldata, 0xff, sizeof(u8)*8);
+					memset((void *)originaldata, 0xff, sizeof(u8)*8);
 
 					if(Efuse_PgPacketRead( pAdapter, tmp_pkt.offset,originaldata, bPseudoTest))
 					{	//check if data exist
@@ -2271,7 +2271,7 @@ rtl8192d_Efuse_WordEnableDataWrite(	stru
 	u8	tmpdata[8];
 
 	//memset(tmpdata,0xff,PGPKT_DATA_SIZE);
-	_rtw_memset((void *)tmpdata, 0xff, PGPKT_DATA_SIZE);
+	memset((void *)tmpdata, 0xff, PGPKT_DATA_SIZE);
 	//RT_TRACE(COMP_EFUSE, DBG_LOUD, ("word_en = %x efuse_addr=%x\n", word_en, efuse_addr));
 
 	//RT_PRINT_DATA(COMP_EFUSE, DBG_LOUD, ("U-EFUSE\n"), data, 8);
--- a/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
@@ -5654,7 +5654,7 @@ phy_LCCalibrate92DSW(
 			//{
 			//	RTPRINT(FINIT, INIT_IQK,("cosa, path-B / 2.4G LCK\n"));
 			//}
-			_rtw_memset(&curveCountVal[0], 0, CV_CURVE_CNT*2);
+			memset(&curveCountVal[0], 0, CV_CURVE_CNT*2);
 
 			//Set LC calibration off
 			PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_CHNLBW, 0x08000, 0x0);
--- a/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
@@ -227,7 +227,7 @@ InsertEMContent(struct xmit_frame *pxmit
 void
 InsertEMContent(struct xmit_frame *pxmitframe, u8 *VirtualAddress)
 {
-	_rtw_memset(VirtualAddress, 0, 8);
+	memset(VirtualAddress, 0, 8);
 	SET_EARLYMODE_PKTNUM(VirtualAddress, pxmitframe->EMPktNum);
 	SET_EARLYMODE_LEN0(VirtualAddress, pxmitframe->EMPktLen[0]);
 	SET_EARLYMODE_LEN1(VirtualAddress, pxmitframe->EMPktLen[1]);
@@ -272,7 +272,7 @@ if (padapter->registrypriv.mp_mode == 0)
 }
 #endif	// CONFIG_USE_USB_BUFFER_ALLOC_TX
 
-	_rtw_memset(ptxdesc, 0, sizeof(struct tx_desc));
+	memset(ptxdesc, 0, sizeof(struct tx_desc));
 
 	if((pxmitframe->frame_tag&0x0f) == DATA_FRAMETAG)
 	{
@@ -1078,7 +1078,7 @@ s32 rtl8192du_hostap_mgnt_xmit_entry(str
 
 	// ----- fill tx desc -----
 	ptxdesc = (struct tx_desc *)pxmitbuf;
-	_rtw_memset(ptxdesc, 0, sizeof(*ptxdesc));
+	memset(ptxdesc, 0, sizeof(*ptxdesc));
 
 	//offset 0
 	ptxdesc->txdw0 |= cpu_to_le32(len&0x0000ffff);
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -3430,7 +3430,7 @@ static void _ReadPROMContent(
 	}
 	else if ( pEEPROM->EepromOrEfuse == false)//auto load fail
 	{
-		_rtw_memset(pEEPROM->efuse_eeprom_data, 0xff, HWSET_MAX_SIZE);
+		memset(pEEPROM->efuse_eeprom_data, 0xff, HWSET_MAX_SIZE);
 		memcpy((void*)PROMContent, (void*)pEEPROM->efuse_eeprom_data, HWSET_MAX_SIZE);
 	}
 
@@ -5750,7 +5750,7 @@ _func_enter_;
 	if(padapter->HalData == NULL){
 		DBG_8192D("cant not alloc memory for HAL DATA \n");
 	}
-	//_rtw_memset(padapter->HalData, 0, sizeof(struct hal_data_8192du));
+	//memset(padapter->HalData, 0, sizeof(struct hal_data_8192du));
 	padapter->hal_data_sz = sizeof(struct hal_data_8192du);
 
 	pHalFunc->hal_init = &rtl8192du_hal_init;
--- a/drivers/staging/rtl8192du/hal/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/hal/usb_ops_linux.c
@@ -101,7 +101,7 @@ static int usbctrl_vendorreq(struct intf
 
 	while(++vendorreq_times<= MAX_USBCTRL_VENDORREQ_TIMES)
 	{
-		_rtw_memset(pIo_buf, 0, len);
+		memset(pIo_buf, 0, len);
 
 		if (requesttype == 0x01)
 		{
@@ -1384,7 +1384,7 @@ void rtl8192du_set_intf_ops(struct _io_o
 {
 	_func_enter_;
 
-	_rtw_memset((u8 *)pops, 0, sizeof(struct _io_ops));
+	memset((u8 *)pops, 0, sizeof(struct _io_ops));
 
 	pops->_read8 = &usb_read8;
 	pops->_read16 = &usb_read16;
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -342,7 +342,6 @@ extern void	_rtw_mfree(u8 *pbuf, u32 sz)
 #endif
 
 extern int	_rtw_memcmp(void *dst, void *src, u32 sz);
-extern void	_rtw_memset(void *pbuf, int c, u32 sz);
 
 extern void	_rtw_init_listhead(struct list_head *list);
 extern u32	rtw_is_list_empty(struct list_head *phead);
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -659,7 +659,7 @@ static int set_group_key(_adapter *padap
 		goto exit;
 	}
 
-	_rtw_memset(psetkeyparm, 0, sizeof(struct setkey_parm));
+	memset(psetkeyparm, 0, sizeof(struct setkey_parm));
 
 	psetkeyparm->keyid=(u8)keyid;
 
@@ -1225,10 +1225,10 @@ static int cfg80211_rtw_add_key(struct w
 	if (param == NULL)
 		return -1;
 
-	_rtw_memset(param, 0, param_len);
+	memset(param, 0, param_len);
 
 	param->cmd = IEEE_CMD_SET_ENCRYPTION;
-	_rtw_memset(param->sta_addr, 0xff, ETH_ALEN);
+	memset(param->sta_addr, 0xff, ETH_ALEN);
 
 	switch (params->cipher) {
 	case IW_AUTH_CIPHER_NONE:
@@ -1941,7 +1941,7 @@ static int cfg80211_rtw_scan(struct wiph
 #endif //CONFIG_P2P
 
 
-	_rtw_memset(ssid, 0, sizeof(struct ndis_802_11_ssid)*RTW_SSID_SCAN_AMOUNT);
+	memset(ssid, 0, sizeof(struct ndis_802_11_ssid)*RTW_SSID_SCAN_AMOUNT);
 	//parsing request ssids, n_ssids
 	for (i = 0; i < request->n_ssids && i < RTW_SSID_SCAN_AMOUNT; i++) {
 		#ifdef CONFIG_DEBUG_CFG80211
@@ -1953,7 +1953,7 @@ static int cfg80211_rtw_scan(struct wiph
 
 
 	/* parsing channels, n_channels */
-	_rtw_memset(ch, 0, sizeof(struct rtw_ieee80211_channel)*RTW_CHANNEL_SCAN_AMOUNT);
+	memset(ch, 0, sizeof(struct rtw_ieee80211_channel)*RTW_CHANNEL_SCAN_AMOUNT);
 	if (request->n_channels == 1)
 	for (i=0;i<request->n_channels && i<RTW_CHANNEL_SCAN_AMOUNT;i++) {
 		#ifdef CONFIG_DEBUG_CFG80211
@@ -2429,7 +2429,7 @@ static int cfg80211_rtw_connect(struct w
 	}
 
 
-	_rtw_memset(&ndis_ssid, 0, sizeof(struct ndis_802_11_ssid));
+	memset(&ndis_ssid, 0, sizeof(struct ndis_802_11_ssid));
 	ndis_ssid.SsidLength = sme->ssid_len;
 	memcpy(ndis_ssid.Ssid, sme->ssid, sme->ssid_len);
 
@@ -2587,7 +2587,7 @@ static int cfg80211_rtw_connect(struct w
 				goto exit;
 			}
 
-			_rtw_memset(pwep, 0, wep_total_len);
+			memset(pwep, 0, wep_total_len);
 
 			pwep->KeyLength = wep_key_len;
 			pwep->Length = wep_total_len;
@@ -2796,8 +2796,8 @@ static int cfg80211_rtw_del_pmksa(struct
 	{
 		if( _rtw_memcmp( psecuritypriv->PMKIDList[index].Bssid, pmksa->bssid, ETH_ALEN) ==true )
 		{ // BSSID is matched, the same AP => Remove this PMKID information and reset it.
-			_rtw_memset( psecuritypriv->PMKIDList[index].Bssid, 0x00, ETH_ALEN );
-			_rtw_memset( psecuritypriv->PMKIDList[index].PMKID, 0x00, WLAN_PMKID_LEN );
+			memset( psecuritypriv->PMKIDList[index].Bssid, 0x00, ETH_ALEN );
+			memset( psecuritypriv->PMKIDList[index].PMKID, 0x00, WLAN_PMKID_LEN );
 			psecuritypriv->PMKIDList[index].bUsed = false;
 			bMatched = true;
 			break;
@@ -2822,7 +2822,7 @@ static int cfg80211_rtw_flush_pmksa(stru
 
 	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(netdev));
 
-	_rtw_memset( &psecuritypriv->PMKIDList[ 0 ], 0x00, sizeof( RT_PMKID_LIST ) * NUM_PMKID_CACHE );
+	memset( &psecuritypriv->PMKIDList[ 0 ], 0x00, sizeof( RT_PMKID_LIST ) * NUM_PMKID_CACHE );
 	psecuritypriv->PMKIDIndex = 0;
 
 	return 0;
@@ -3069,7 +3069,7 @@ dump:
 		update_mgntframe_attrib(padapter, pattrib);
 		pattrib->retry_ctrl = false;
 
-		_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+		memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 		pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 
@@ -3862,8 +3862,8 @@ void rtw_cfg80211_issue_p2p_provision_re
 
 
 	//start to build provision_request frame
-	_rtw_memset(wpsie, 0, sizeof(wpsie));
-	_rtw_memset(p2p_ie, 0, sizeof(p2p_ie));
+	memset(wpsie, 0, sizeof(wpsie));
+	memset(p2p_ie, 0, sizeof(p2p_ie));
 	p2p_ielen = 0;
 
 	if ((pmgntframe = alloc_mgtxmitframe(pxmitpriv)) == NULL)
@@ -3876,7 +3876,7 @@ void rtw_cfg80211_issue_p2p_provision_re
 	pattrib = &pmgntframe->attrib;
 	update_mgntframe_attrib(padapter, pattrib);
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pframe;
@@ -4296,7 +4296,7 @@ static int _cfg80211_rtw_mgmt_tx(_adapte
 	update_mgntframe_attrib(padapter, pattrib);
 	pattrib->retry_ctrl = false;
 
-	_rtw_memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
+	memset(pmgntframe->buf_addr, 0, WLANHDR_OFFSET + TXDESC_OFFSET);
 
 	pframe = (u8 *)(pmgntframe->buf_addr) + TXDESC_OFFSET;
 
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -145,7 +145,7 @@ static void indicate_wx_custom_event(str
 
 	memcpy(buff, msg, strlen(msg));
 
-	_rtw_memset(&wrqu,0,sizeof(wrqu));
+	memset(&wrqu,0,sizeof(wrqu));
 	wrqu.data.length = strlen(msg);
 
 	DBG_8192D("%s %s\n", __func__, buff);
@@ -166,13 +166,13 @@ static void request_wps_pbc_event(struct
 	if (!buff)
 		return;
 
-	_rtw_memset(buff, 0, IW_CUSTOM_MAX);
+	memset(buff, 0, IW_CUSTOM_MAX);
 
 	p=buff;
 
 	p+=sprintf(p, "WPS_PBC_START.request=TRUE");
 
-	_rtw_memset(&wrqu,0,sizeof(wrqu));
+	memset(&wrqu,0,sizeof(wrqu));
 
 	wrqu.data.length = p-buff;
 
@@ -196,7 +196,7 @@ void indicate_wx_scan_complete_event(str
 	union iwreq_data wrqu;
 	struct	mlme_priv *pmlmepriv = &padapter->mlmepriv;
 
-	_rtw_memset(&wrqu, 0, sizeof(union iwreq_data));
+	memset(&wrqu, 0, sizeof(union iwreq_data));
 
 	//DBG_8192D("+rtw_indicate_wx_scan_complete_event\n");
 	wireless_send_event(padapter->pnetdev, SIOCGIWSCAN, &wrqu, NULL);
@@ -210,7 +210,7 @@ void rtw_indicate_wx_assoc_event(struct
 	union iwreq_data wrqu;
 	struct	mlme_priv *pmlmepriv = &padapter->mlmepriv;
 
-	_rtw_memset(&wrqu, 0, sizeof(union iwreq_data));
+	memset(&wrqu, 0, sizeof(union iwreq_data));
 
 	wrqu.ap_addr.sa_family = ARPHRD_ETHER;
 
@@ -226,10 +226,10 @@ void rtw_indicate_wx_disassoc_event(stru
 #ifndef CONFIG_IOCTL_CFG80211
 	union iwreq_data wrqu;
 
-	_rtw_memset(&wrqu, 0, sizeof(union iwreq_data));
+	memset(&wrqu, 0, sizeof(union iwreq_data));
 
 	wrqu.ap_addr.sa_family = ARPHRD_ETHER;
-	_rtw_memset(wrqu.ap_addr.sa_data, 0, ETH_ALEN);
+	memset(wrqu.ap_addr.sa_data, 0, ETH_ALEN);
 
 	//DBG_8192D("+rtw_indicate_wx_disassoc_event\n");
 	wireless_send_event(padapter->pnetdev, SIOCGIWAP, &wrqu, NULL);
@@ -520,18 +520,18 @@ static char *translate_scan(struct rtw_a
 		if (wpa_len > 0)
 		{
 			p=buf;
-			_rtw_memset(buf, 0, MAX_WPA_IE_LEN);
+			memset(buf, 0, MAX_WPA_IE_LEN);
 			p += sprintf(p, "wpa_ie=");
 			for (i = 0; i < wpa_len; i++) {
 				p += sprintf(p, "%02x", wpa_ie[i]);
 			}
 
-			_rtw_memset(&iwe, 0, sizeof(iwe));
+			memset(&iwe, 0, sizeof(iwe));
 			iwe.cmd = IWEVCUSTOM;
 			iwe.u.data.length = strlen(buf);
 			start = iwe_stream_add_point(info, start, stop, &iwe,buf);
 
-			_rtw_memset(&iwe, 0, sizeof(iwe));
+			memset(&iwe, 0, sizeof(iwe));
 			iwe.cmd =IWEVGENIE;
 			iwe.u.data.length = wpa_len;
 			start = iwe_stream_add_point(info, start, stop, &iwe, wpa_ie);
@@ -539,17 +539,17 @@ static char *translate_scan(struct rtw_a
 		if (rsn_len > 0)
 		{
 			p = buf;
-			_rtw_memset(buf, 0, MAX_WPA_IE_LEN);
+			memset(buf, 0, MAX_WPA_IE_LEN);
 			p += sprintf(p, "rsn_ie=");
 			for (i = 0; i < rsn_len; i++) {
 				p += sprintf(p, "%02x", rsn_ie[i]);
 			}
-			_rtw_memset(&iwe, 0, sizeof(iwe));
+			memset(&iwe, 0, sizeof(iwe));
 			iwe.cmd = IWEVCUSTOM;
 			iwe.u.data.length = strlen(buf);
 			start = iwe_stream_add_point(info, start, stop, &iwe,buf);
 
-			_rtw_memset(&iwe, 0, sizeof(iwe));
+			memset(&iwe, 0, sizeof(iwe));
 			iwe.cmd =IWEVGENIE;
 			iwe.u.data.length = rsn_len;
 			start = iwe_stream_add_point(info, start, stop, &iwe, rsn_ie);
@@ -720,7 +720,7 @@ _func_enter_;
 				goto exit;
 			}
 
-			_rtw_memset(pwep, 0, wep_total_len);
+			memset(pwep, 0, wep_total_len);
 
 			pwep->KeyLength = wep_key_len;
 			pwep->Length = wep_total_len;
@@ -1344,7 +1344,7 @@ static int rtw_wx_set_pmkid(struct net_d
 		{
 			if (_rtw_memcmp(psecuritypriv->PMKIDList[j].Bssid, strIssueBssid, ETH_ALEN) ==true)
 			{ // BSSID is matched, the same AP => Remove this PMKID information and reset it.
-                                _rtw_memset(psecuritypriv->PMKIDList[ j ].Bssid, 0x00, ETH_ALEN);
+                                memset(psecuritypriv->PMKIDList[ j ].Bssid, 0x00, ETH_ALEN);
                                 psecuritypriv->PMKIDList[ j ].bUsed = false;
 				break;
 			}
@@ -1353,7 +1353,7 @@ static int rtw_wx_set_pmkid(struct net_d
         else if (pPMK->cmd == IW_PMKSA_FLUSH)
         {
             DBG_8192D("[rtw_wx_set_pmkid] IW_PMKSA_FLUSH!\n");
-            _rtw_memset(&psecuritypriv->PMKIDList[ 0 ], 0x00, sizeof(struct RT_PMKID_LIST) * NUM_PMKID_CACHE);
+            memset(&psecuritypriv->PMKIDList[ 0 ], 0x00, sizeof(struct RT_PMKID_LIST) * NUM_PMKID_CACHE);
             psecuritypriv->PMKIDIndex = 0;
             intReturn = true;
         }
@@ -1386,7 +1386,7 @@ static int rtw_wx_get_range(struct net_d
 	RT_TRACE(_module_rtl871x_mlme_c_,_drv_info_,("rtw_wx_get_range. cmd_code=%x\n", info->cmd));
 
 	wrqu->data.length = sizeof(*range);
-	_rtw_memset(range, 0, sizeof(*range));
+	memset(range, 0, sizeof(*range));
 
 	/* Let's try to keep this struct in the same order as in
 	 * linux/include/wireless.h
@@ -1622,7 +1622,7 @@ static int rtw_wx_get_wap(struct net_dev
 
 	wrqu->ap_addr.sa_family = ARPHRD_ETHER;
 
-	_rtw_memset(wrqu->ap_addr.sa_data, 0, ETH_ALEN);
+	memset(wrqu->ap_addr.sa_data, 0, ETH_ALEN);
 
 	RT_TRACE(_module_rtl871x_mlme_c_,_drv_info_,("rtw_wx_get_wap\n"));
 
@@ -1637,7 +1637,7 @@ static int rtw_wx_get_wap(struct net_dev
 	}
 	else
 	{
-		_rtw_memset(wrqu->ap_addr.sa_data, 0, ETH_ALEN);
+		memset(wrqu->ap_addr.sa_data, 0, ETH_ALEN);
 	}
 
 	_func_exit_;
@@ -1811,7 +1811,7 @@ _func_enter_;
 	}
 #endif //CONFIG_P2P
 
-	_rtw_memset(ssid, 0, sizeof(struct ndis_802_11_ssid)*RTW_SSID_SCAN_AMOUNT);
+	memset(ssid, 0, sizeof(struct ndis_802_11_ssid)*RTW_SSID_SCAN_AMOUNT);
 
 #if WIRELESS_EXT >= 17
 	if (wrqu->data.length == sizeof(struct iw_scan_req))
@@ -2182,7 +2182,7 @@ static int rtw_wx_set_essid(struct net_d
 		if (wrqu->essid.length != 33)
 			DBG_8192D("ssid=%s, len=%d\n", extra, wrqu->essid.length);
 
-		_rtw_memset(&ndis_ssid, 0, sizeof(struct ndis_802_11_ssid));
+		memset(&ndis_ssid, 0, sizeof(struct ndis_802_11_ssid));
 		ndis_ssid.SsidLength = len;
 		memcpy(ndis_ssid.Ssid, extra, len);
 		src_ssid = ndis_ssid.Ssid;
@@ -2522,7 +2522,7 @@ static int rtw_wx_set_enc(struct net_dev
 	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
 	DBG_8192D("+rtw_wx_set_enc, flags=0x%x\n", erq->flags);
 
-	_rtw_memset(&wep, 0, sizeof(struct ndis_802_11_wep));
+	memset(&wep, 0, sizeof(struct ndis_802_11_wep));
 
 	key = erq->flags & IW_ENCODE_INDEX;
 
@@ -2900,10 +2900,10 @@ static int rtw_wx_set_enc_ext(struct net
 	if (param == NULL)
 		return -1;
 
-	_rtw_memset(param, 0, param_len);
+	memset(param, 0, param_len);
 
 	param->cmd = IEEE_CMD_SET_ENCRYPTION;
-	_rtw_memset(param->sta_addr, 0xff, ETH_ALEN);
+	memset(param->sta_addr, 0xff, ETH_ALEN);
 
 
 	switch (pext->alg) {
@@ -3938,7 +3938,7 @@ static int rtw_p2p_profilefound(struct n
 		if (extra[ 0 ] == '0')
 		{
 			//	Remove all the profile information of wifidirect_info structure.
-			_rtw_memset(&pwdinfo->profileinfo[ 0 ], 0x00, sizeof(struct profile_info) * P2P_MAX_PERSISTENT_GROUP_NUM);
+			memset(&pwdinfo->profileinfo[ 0 ], 0x00, sizeof(struct profile_info) * P2P_MAX_PERSISTENT_GROUP_NUM);
 			pwdinfo->profileindex = 0;
 		}
 		else
@@ -3981,7 +3981,7 @@ static int rtw_p2p_setDN(struct net_devi
 
 	DBG_8192D("[%s] %s %d\n", __func__, extra, wrqu->data.length -1 );
 
-	_rtw_memset(pwdinfo->device_name, 0x00, WPS_MAX_DEVICE_NAME_LEN);
+	memset(pwdinfo->device_name, 0x00, WPS_MAX_DEVICE_NAME_LEN);
 	memcpy(pwdinfo->device_name, extra, wrqu->data.length - 1);
 	pwdinfo->device_name_len = wrqu->data.length - 1;
 	return ret;
@@ -4367,7 +4367,7 @@ static int rtw_p2p_get_go_device_address
 					//	The P2P Device ID attribute is included in the Beacon frame.
 					//	The P2P Device Info attribute is included in the probe response frame.
 
-					_rtw_memset(attr_content, 0x00, 100);
+					memset(attr_content, 0x00, 100);
 					if (rtw_get_p2p_attr_content(p2pie, p2pielen, P2P_ATTR_DEVICE_ID, attr_content, &attr_contentlen))
 					{
 						//	Handle the P2P Device ID attribute of Beacon first
@@ -4605,7 +4605,7 @@ static int rtw_p2p_get_invitation_proced
 			{
 				while (p2pie)
 				{
-					//_rtw_memset(attr_content, 0x00, 2);
+					//memset(attr_content, 0x00, 2);
 					if (rtw_get_p2p_attr_content(p2pie, p2pielen, P2P_ATTR_CAPABILITY, attr_content, &attr_contentlen))
 					{
 						//	Handle the P2P capability attribute
@@ -4726,8 +4726,8 @@ static int rtw_p2p_connect(struct net_de
 		}
 #endif // CONFIG_CONCURRENT_MODE
 
-		_rtw_memset(&pwdinfo->nego_req_info, 0x00, sizeof(struct tx_nego_req_info));
-		_rtw_memset(&pwdinfo->groupid_info, 0x00, sizeof(struct group_id_info));
+		memset(&pwdinfo->nego_req_info, 0x00, sizeof(struct tx_nego_req_info));
+		memset(&pwdinfo->groupid_info, 0x00, sizeof(struct group_id_info));
 
 		pwdinfo->nego_req_info.peer_channel_num[ 0 ] = uintPeerChannel;
 		memcpy(pwdinfo->nego_req_info.peerDevAddr, pnetwork->network.MacAddress, ETH_ALEN);
@@ -4833,11 +4833,11 @@ static int rtw_p2p_invite_req(struct net
 	{
 		//	Reset the content of struct tx_invite_req_info
 		pinvite_req_info->benable = false;
-		_rtw_memset(pinvite_req_info->go_bssid, 0x00, ETH_ALEN);
-		_rtw_memset(pinvite_req_info->go_ssid, 0x00, WLAN_SSID_MAXLEN);
+		memset(pinvite_req_info->go_bssid, 0x00, ETH_ALEN);
+		memset(pinvite_req_info->go_ssid, 0x00, WLAN_SSID_MAXLEN);
 		pinvite_req_info->ssidlen = 0x00;
 		pinvite_req_info->operating_ch = pwdinfo->operating_channel;
-		_rtw_memset(pinvite_req_info->peer_macaddr, 0x00, ETH_ALEN);
+		memset(pinvite_req_info->peer_macaddr, 0x00, ETH_ALEN);
 		pinvite_req_info->token = 3;
 	}
 
@@ -5367,9 +5367,9 @@ static int rtw_p2p_prov_disc(struct net_
 	else
 	{
 		//	Reset the content of struct tx_provdisc_req_info excluded the wps_config_method_request.
-		_rtw_memset(pwdinfo->tx_prov_disc_info.peerDevAddr, 0x00, ETH_ALEN);
-		_rtw_memset(pwdinfo->tx_prov_disc_info.peerIFAddr, 0x00, ETH_ALEN);
-		_rtw_memset(&pwdinfo->tx_prov_disc_info.ssid, 0x00, sizeof(struct ndis_802_11_ssid));
+		memset(pwdinfo->tx_prov_disc_info.peerDevAddr, 0x00, ETH_ALEN);
+		memset(pwdinfo->tx_prov_disc_info.peerIFAddr, 0x00, ETH_ALEN);
+		memset(&pwdinfo->tx_prov_disc_info.ssid, 0x00, sizeof(struct ndis_802_11_ssid));
 		pwdinfo->tx_prov_disc_info.peer_channel_num[ 0 ] = 0;
 		pwdinfo->tx_prov_disc_info.peer_channel_num[ 1 ] = 0;
 		pwdinfo->tx_prov_disc_info.benable = false;
@@ -6792,7 +6792,7 @@ static int set_group_key(struct rtw_adap
 		goto exit;
 	}
 
-	_rtw_memset(psetkeyparm, 0, sizeof(struct setkey_parm));
+	memset(psetkeyparm, 0, sizeof(struct setkey_parm));
 
 	psetkeyparm->keyid=(u8)keyid;
 
@@ -6938,7 +6938,7 @@ static int rtw_set_encryption(struct net
 				goto exit;
 			}
 
-			_rtw_memset(pwep, 0, wep_total_len);
+			memset(pwep, 0, wep_total_len);
 
 			pwep->KeyLength = wep_key_len;
 			pwep->Length = wep_total_len;
@@ -8071,8 +8071,8 @@ static int rtw_mp_efuse_get(struct net_d
 	char *pch, *ptmp, *token, *tmp[3] = {NULL, NULL, NULL};
 	u16 addr = 0, cnts = 0, max_available_size = 0, raw_cursize = 0, raw_maxsize = 0;
 
-	_rtw_memset(data, '\0', sizeof(data));
-	_rtw_memset(rawdata, '\0', sizeof(rawdata));
+	memset(data, '\0', sizeof(data));
+	memset(rawdata, '\0', sizeof(rawdata));
 
 	if (copy_from_user(extra, wrqu->pointer, wrqu->length))
 		return -EFAULT;
@@ -8101,7 +8101,7 @@ static int rtw_mp_efuse_get(struct net_d
 			DBG_8192D("\t  rtw_efuse_map_read : Fail \n");
 			return -EFAULT;
 		}
-		_rtw_memset(extra, '\0', sizeof(extra));
+		memset(extra, '\0', sizeof(extra));
 		DBG_8192D("\tOFFSET\tVALUE(hex)\n");
 		sprintf(extra, "%s \n", extra);
 		for (i = 0; i < EFUSE_MAP_SIZE; i += 16)
@@ -8138,7 +8138,7 @@ static int rtw_mp_efuse_get(struct net_d
 		if (cnts==0) return -EINVAL;
 
 		DBG_8192D("cnts = %d \n" ,cnts);
-		//_rtw_memset(extra, '\0', wrqu->data.length);
+		//memset(extra, '\0', wrqu->data.length);
 
 		EFUSE_GetEfuseDefinition(padapter, EFUSE_WIFI, TYPE_AVAILABLE_EFUSE_BYTES_TOTAL, (void *)&max_available_size, false);
 		if ((addr + cnts) > max_available_size) {
@@ -8154,7 +8154,7 @@ static int rtw_mp_efuse_get(struct net_d
 			DBG_8192D("rtw_efuse_access ok \n");
 		}
 
-		_rtw_memset(extra, '\0', sizeof(extra));
+		memset(extra, '\0', sizeof(extra));
 		for (i = 0; i < cnts; i ++) {
 			DBG_8192D("0x%02x", data[i]);
 			sprintf(extra, "%s 0x%02X", extra, data[i]);
@@ -8181,7 +8181,7 @@ static int rtw_mp_efuse_get(struct net_d
 			DBG_8192D("\t  rtw_efuse_access raw ok \n");
 		}
 
-		_rtw_memset(extra, '\0', sizeof(extra));
+		memset(extra, '\0', sizeof(extra));
 		for (i=0; i<mapLen; i++) {
 			DBG_8192D(" %02x", rawdata[i]);
 			sprintf(extra, "%s %02x", extra, rawdata[i]);
@@ -8214,7 +8214,7 @@ static int rtw_mp_efuse_get(struct net_d
 		else{
 			DBG_8192D("rtw_efuse_access ok \n");
 		}
-		_rtw_memset(extra, '\0', sizeof(extra));
+		memset(extra, '\0', sizeof(extra));
 		for (i = 0; i < cnts; i ++) {
 			DBG_8192D("0x%02x", data[i]);
 			sprintf(extra, "%s 0x%02X", extra, data[i+j]);
@@ -8240,7 +8240,7 @@ static int rtw_mp_efuse_get(struct net_d
 		else{
 			DBG_8192D("rtw_efuse_access ok \n");
 		}
-		_rtw_memset(extra, '\0', sizeof(extra));
+		memset(extra, '\0', sizeof(extra));
 		for (i = 0; i < cnts; i ++) {
 			DBG_8192D("0x%02x", data[i]);
 			sprintf(extra, "%s 0x%02X", extra, data[i+j]);
@@ -8528,9 +8528,9 @@ static int rtw_mp_read_reg(struct net_de
 	if (copy_from_user(input, wrqu->pointer, wrqu->length))
 		return -EFAULT;
 
-	_rtw_memset(data, 0, 20);
-	_rtw_memset(tmp, 0, 20);
-	_rtw_memset(extra, 0, wrqu->length);
+	memset(data, 0, 20);
+	memset(tmp, 0, 20);
+	memset(extra, 0, wrqu->length);
 
 	pch = input;
 	pnext = strpbrk(pch, " ,.-");
@@ -8658,7 +8658,7 @@ static int rtw_mp_read_reg(struct net_de
 	if (path >= MAX_RF_PATH_NUMS) return -EINVAL;
 	if (addr > 0xFF) return -EINVAL;
 	if (data > 0xFFFFF) return -EINVAL;
-	_rtw_memset(extra, 0, wrqu->length);
+	memset(extra, 0, wrqu->length);
 
 	write_rfreg(padapter, path, addr, data);
 
@@ -8698,7 +8698,7 @@ static int rtw_mp_read_rf(struct net_dev
 	if (path >= MAX_RF_PATH_NUMS) return -EINVAL;
 	if (addr > 0xFF) return -EINVAL;
 
-	_rtw_memset(extra, 0, wrqu->length);
+	memset(extra, 0, wrqu->length);
 
 	//*data = read_rfreg(padapter, path, addr);
 	sprintf(data, "%08x", read_rfreg(padapter, path, addr));
@@ -8929,7 +8929,7 @@ static int rtw_mp_ant_rx(struct net_devi
 	if (copy_from_user(input, wrqu->pointer, wrqu->length))
 			return -EFAULT;
 	//DBG_8192D("%s: input=%s\n", __func__, input);
-	_rtw_memset(extra, 0, wrqu->length);
+	memset(extra, 0, wrqu->length);
 
 	sprintf(extra, "switch Rx antenna to %s", input);
 
@@ -8985,7 +8985,7 @@ static int rtw_mp_ctx(struct net_device
 	sscanf(extra, "count=%d,pkt", &count);
 
 	//DBG_8192D("%s: count=%d countPkTx=%d cotuTx=%d CarrSprTx=%d scTx=%d sgleTx=%d pkTx=%d stop=%d\n", __func__, count, countPkTx, cotuTx, CarrSprTx, pkTx, sgleTx, scTx, stop);
-	_rtw_memset(extra, '\0', sizeof(extra));
+	memset(extra, '\0', sizeof(extra));
 
 	if (stop == 0) {
 		bStartTest = 0; // To set Stop
@@ -9032,7 +9032,7 @@ static int rtw_mp_ctx(struct net_device
 				pmp_priv->tx.payload = 2;
 				pattrib = &pmp_priv->tx.attrib;
 				pattrib->pktlen = 1460;
-				_rtw_memset(pattrib->dst, 0xFF, ETH_ALEN);
+				memset(pattrib->dst, 0xFF, ETH_ALEN);
 				SetPacketTx(padapter);
 			}
 			else {
@@ -9150,7 +9150,7 @@ static int rtw_mp_trx_query(struct net_d
 	rxok = padapter->mppriv.rx_pktcount;
 	rxfail = padapter->mppriv.rx_crcerrpktcount;
 
-	_rtw_memset(extra, '\0', 128);
+	memset(extra, '\0', 128);
 
 	sprintf(extra, "Tx OK:%d, Tx Fail:%d, Rx OK:%d, CRC error:%d ", txok, txfail,rxok,rxfail);
 
@@ -9172,7 +9172,7 @@ static int rtw_mp_pwrtrk(struct net_devi
 	if (copy_from_user(input, wrqu->pointer, wrqu->length))
 			return -EFAULT;
 
-	_rtw_memset(extra, 0, wrqu->length);
+	memset(extra, 0, wrqu->length);
 
 	enable = 1;
 	if (wrqu->length > 1) { // not empty string
@@ -9378,7 +9378,7 @@ static int rtw_mp_set(struct net_device
 		return -ENETDOWN;
 	}
 
-	//_rtw_memset(extra, 0x00, IW_PRIV_SIZE_MASK);
+	//memset(extra, 0x00, IW_PRIV_SIZE_MASK);
 
 	if (extra == NULL)
 	{
@@ -9608,7 +9608,7 @@ static int rtw_tdls_enable(struct net_de
 
 	DBG_8192D("[%s] %s %d\n", __func__, extra, wrqu->data.length -1 );
 
-	_rtw_memset(tdls_sta, 0x00, sizeof(tdls_sta));
+	memset(tdls_sta, 0x00, sizeof(tdls_sta));
 
 	if (extra[ 0 ] == '0')
 	{
--- a/drivers/staging/rtl8192du/os_dep/mlme_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/mlme_linux.c
@@ -118,14 +118,14 @@ void rtw_reset_securitypriv(struct rtw_a
 		// Backup the btkip_countermeasure information.
 		// When the countermeasure is trigger, the driver have to disconnect with AP for 60 seconds.
 
-		_rtw_memset( &backupPMKIDList[ 0 ], 0x00, sizeof(struct RT_PMKID_LIST) * NUM_PMKID_CACHE );
+		memset( &backupPMKIDList[ 0 ], 0x00, sizeof(struct RT_PMKID_LIST) * NUM_PMKID_CACHE );
 
 		memcpy( &backupPMKIDList[ 0 ], &adapter->securitypriv.PMKIDList[ 0 ], sizeof(struct RT_PMKID_LIST) * NUM_PMKID_CACHE );
 		backupPMKIDIndex = adapter->securitypriv.PMKIDIndex;
 		backupTKIPCountermeasure = adapter->securitypriv.btkip_countermeasure;
 		backupTKIPcountermeasure_time = adapter->securitypriv.btkip_countermeasure_time;
 
-		_rtw_memset((unsigned char *)&adapter->securitypriv, 0, sizeof (struct security_priv));
+		memset((unsigned char *)&adapter->securitypriv, 0, sizeof (struct security_priv));
 		//_init_timer(&(adapter->securitypriv.tkip_timer),adapter->pnetdev, rtw_use_tkipkey_handler, adapter);
 
 		// Added by Albert 2009/02/18
@@ -195,7 +195,7 @@ _func_enter_;
 
 		buff = rtw_malloc(IW_CUSTOM_MAX);
 
-		_rtw_memset(buff,0,IW_CUSTOM_MAX);
+		memset(buff,0,IW_CUSTOM_MAX);
 
 		p=buff;
 
@@ -210,7 +210,7 @@ _func_enter_;
 
 		p+=sprintf(p,")");
 
-		_rtw_memset(&wrqu,0,sizeof(wrqu));
+		memset(&wrqu,0,sizeof(wrqu));
 
 		wrqu.data.length=p-buff;
 
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -383,11 +383,6 @@ int	_rtw_memcmp(void *dst, void *src, u3
 		return false;
 }
 
-void _rtw_memset(void *pbuf, int c, u32 sz)
-{
-        memset(pbuf, c, sz);
-}
-
 void _rtw_init_listhead(struct list_head *list)
 {
         INIT_LIST_HEAD(list);
--- a/drivers/staging/rtl8192du/os_dep/recv_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/recv_linux.c
@@ -167,7 +167,7 @@ void rtw_handle_tkip_mic_err(struct rtw_
 		NULL, GFP_ATOMIC);
 #endif
 
-	_rtw_memset( &ev, 0x00, sizeof( ev ) );
+	memset( &ev, 0x00, sizeof( ev ) );
 	if ( bgroup )
 	{
 	    ev.flags |= IW_MICFAILURE_GROUP;
@@ -180,7 +180,7 @@ void rtw_handle_tkip_mic_err(struct rtw_
 	ev.src_addr.sa_family = ARPHRD_ETHER;
 	memcpy( ev.src_addr.sa_data, &pmlmepriv->assoc_bssid[ 0 ], ETH_ALEN );
 
-	_rtw_memset( &wrqu, 0x00, sizeof( wrqu ) );
+	memset( &wrqu, 0x00, sizeof( wrqu ) );
 	wrqu.data.length = sizeof( ev );
 
 	wireless_send_event( padapter->pnetdev, IWEVMICHAELMICFAILURE, &wrqu, (char*) &ev );
@@ -219,7 +219,7 @@ void rtw_hostapd_mlme_rx(struct rtw_adap
 	skb_reset_mac_header(skb);
 
        //skb_pull(skb, 24);
-       _rtw_memset(skb->cb, 0, sizeof(skb->cb));
+       memset(skb->cb, 0, sizeof(skb->cb));
 
 	netif_rx(skb);
 
