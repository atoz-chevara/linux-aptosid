From da6686068eea291776cf958dc87dea3d2297a586 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Fri, 19 Apr 2013 22:42:14 -0500
Subject: [PATCH 044/210] Replace UCHAR, UINT, USHORT, and ULONG

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_cmd.c        |   6 +--
 core/rtw_mlme.c       |   2 +-
 include/basic_types.h |   5 ---
 include/drv_types.h   |   4 +-
 include/ethernet.h    |  22 +++++-----
 include/rtw_mp.h      |  26 ++++++------
 include/usb_osintf.h  |   2 +-
 include/wlan_bssdef.h | 112 +++++++++++++++++++++++++-------------------------
 8 files changed, 87 insertions(+), 92 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -1111,12 +1111,12 @@ _func_enter_;
 		goto exit;
 	}
 	/* // for IEs is pointer
-	t_len = sizeof (ULONG) + sizeof (NDIS_802_11_MAC_ADDRESS) + 2 +
-			sizeof (NDIS_802_11_SSID) + sizeof (ULONG) +
+	t_len = sizeof (u32) + sizeof (NDIS_802_11_MAC_ADDRESS) + 2 +
+			sizeof (NDIS_802_11_SSID) + sizeof (u32) +
 			sizeof (NDIS_802_11_RSSI) + sizeof (NDIS_802_11_NETWORK_TYPE) +
 			sizeof (NDIS_802_11_CONFIGURATION) +
 			sizeof (NDIS_802_11_NETWORK_INFRASTRUCTURE) +
-			sizeof (NDIS_802_11_RATES_EX)+ sizeof(WLAN_PHY_INFO)+ sizeof (ULONG) + MAX_IE_SZ;
+			sizeof (NDIS_802_11_RATES_EX)+ sizeof(WLAN_PHY_INFO)+ sizeof (u32) + MAX_IE_SZ;
 	*/
 	//for IEs is fix buf size
 	t_len = sizeof(WLAN_BSSID_EX);
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -758,7 +758,7 @@ void rtw_update_scanned_network(_adapter
 {
 	_irqL irqL;
 	_list	*plist, *phead;
-	ULONG	bssid_ex_sz;
+	u32	bssid_ex_sz;
 	struct mlme_priv	*pmlmepriv = &(adapter->mlmepriv);
 	_queue	*queue	= &(pmlmepriv->scanned_queue);
 	struct wlan_network	*pnetwork = NULL;
--- a/drivers/staging/rtl8192du/include/basic_types.h
+++ b/drivers/staging/rtl8192du/include/basic_types.h
@@ -32,11 +32,6 @@
 
 typedef	signed int sint;
 
-       #define UCHAR u8
-#define USHORT u16
-#define UINT u32
-#define ULONG u32
-
 typedef void (*proc_t)(void*);
 
 typedef		__kernel_size_t	SIZE_T;
--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -196,9 +196,9 @@ struct registry_priv {
 
 
 //For registry parameters
-#define RGTRY_OFT(field) ((ULONG)FIELD_OFFSET(struct registry_priv,field))
+#define RGTRY_OFT(field) ((u32)FIELD_OFFSET(struct registry_priv,field))
 #define RGTRY_SZ(field)   sizeof(((struct registry_priv*) 0)->field)
-#define BSSID_OFT(field) ((ULONG)FIELD_OFFSET(WLAN_BSSID_EX,field))
+#define BSSID_OFT(field) ((u32)FIELD_OFFSET(WLAN_BSSID_EX,field))
 #define BSSID_SZ(field)   sizeof(((PWLAN_BSSID_EX) 0)->field)
 
 #define MAX_CONTINUAL_URB_ERR 4
--- a/drivers/staging/rtl8192du/include/ethernet.h
+++ b/drivers/staging/rtl8192du/include/ethernet.h
@@ -21,21 +21,21 @@
 #ifndef __INC_ETHERNET_H
 #define __INC_ETHERNET_H
 
-#define ETHERNET_ADDRESS_LENGTH				6		//!< Ethernet Address Length
-#define ETHERNET_HEADER_SIZE				14		//!< Ethernet Header Length
-#define LLC_HEADER_SIZE						6		//!< LLC Header Length
-#define TYPE_LENGTH_FIELD_SIZE				2		//!< Type/Length Size
+#define ETHERNET_ADDRESS_LENGTH			6		//!< Ethernet Address Length
+#define ETHERNET_HEADER_SIZE			14		//!< Ethernet Header Length
+#define LLC_HEADER_SIZE				6		//!< LLC Header Length
+#define TYPE_LENGTH_FIELD_SIZE			2		//!< Type/Length Size
 #define MINIMUM_ETHERNET_PACKET_SIZE		60		//!< Minimum Ethernet Packet Size
 #define MAXIMUM_ETHERNET_PACKET_SIZE		1514	//!< Maximum Ethernet Packet Size
 
-#define RT_ETH_IS_MULTICAST(_pAddr)	((((UCHAR *)(_pAddr))[0]&0x01)!=0)		//!< Is Multicast Address?
+#define RT_ETH_IS_MULTICAST(_pAddr)	((((u8 *)(_pAddr))[0]&0x01)!=0)		//!< Is Multicast Address?
 #define RT_ETH_IS_BROADCAST(_pAddr)	(										\
-											((UCHAR *)(_pAddr))[0]==0xff	&&		\
-											((UCHAR *)(_pAddr))[1]==0xff	&&		\
-											((UCHAR *)(_pAddr))[2]==0xff	&&		\
-											((UCHAR *)(_pAddr))[3]==0xff	&&		\
-											((UCHAR *)(_pAddr))[4]==0xff	&&		\
-											((UCHAR *)(_pAddr))[5]==0xff		)	//!< Is Broadcast Address?
+					((u8 *)(_pAddr))[0]==0xff	&&		\
+					((u8 *)(_pAddr))[1]==0xff	&&		\
+					((u8 *)(_pAddr))[2]==0xff	&&		\
+					((u8 *)(_pAddr))[3]==0xff	&&		\
+					((u8 *)(_pAddr))[4]==0xff	&&		\
+					((u8 *)(_pAddr))[5]==0xff		)	//!< Is Broadcast Address?
 
 
 #endif // #ifndef __INC_ETHERNET_H
--- a/drivers/staging/rtl8192du/include/rtw_mp.h
+++ b/drivers/staging/rtl8192du/include/rtw_mp.h
@@ -164,24 +164,24 @@ typedef struct _MPT_CONTEXT
 	MPT_WORK_ITEM_HANDLER	CurrMptAct;
 
 	// 1=Start, 0=Stop from UI.
-	ULONG			MptTestStart;
+	u32			MptTestStart;
 	// _TEST_MODE, defined in MPT_Req2.h
-	ULONG			MptTestItem;
+	u32			MptTestItem;
 	// Variable needed in each implementation of CurrMptAct.
-	ULONG			MptActType;	// Type of action performed in CurrMptAct.
+	u32			MptActType;	// Type of action performed in CurrMptAct.
 	// The Offset of IO operation is depend of MptActType.
-	ULONG			MptIoOffset;
+	u32			MptIoOffset;
 	// The Value of IO operation is depend of MptActType.
-	ULONG			MptIoValue;
+	u32			MptIoValue;
 	// The RfPath of IO operation is depend of MptActType.
-	ULONG			MptRfPath;
+	u32			MptRfPath;
 
 	WIRELESS_MODE		MptWirelessModeToSw;	// Wireless mode to switch.
 	u8			MptChannelToSw;		// Channel to switch.
 	u8			MptInitGainToSet;	// Initial gain to set.
-	//ULONG			bMptAntennaA;		// TRUE if we want to use antenna A.
-	ULONG			MptBandWidth;		// bandwidth to switch.
-	ULONG			MptRateIndex;		// rate index.
+	//u32			bMptAntennaA;		// TRUE if we want to use antenna A.
+	u32			MptBandWidth;		// bandwidth to switch.
+	u32			MptRateIndex;		// rate index.
 	// Register value kept for Single Carrier Tx test.
 	u8			btMpCckTxPower;
 	// Register value kept for Single Carrier Tx test.
@@ -190,13 +190,13 @@ typedef struct _MPT_CONTEXT
 	u8			TxPwrLevel[2];	// rf-A, rf-B
 
 	// Content of RCR Regsiter for Mass Production Test.
-	ULONG			MptRCR;
+	u32			MptRCR;
 	// TRUE if we only receive packets with specific pattern.
 	bool			bMptFilterPattern;
 	// Rx OK count, statistics used in Mass Production Test.
-	ULONG			MptRxOkCnt;
+	u32			MptRxOkCnt;
 	// Rx CRC32 error count, statistics used in Mass Production Test.
-	ULONG			MptRxCrcErrCnt;
+	u32			MptRxCrcErrCnt;
 
 	bool			bCckContTx;	// TRUE if we are in CCK Continuous Tx test.
 	bool			bOfdmContTx;	// TRUE if we are in OFDM Continuous Tx test.
@@ -210,7 +210,7 @@ typedef struct _MPT_CONTEXT
 
 	// ACK counter asked by K.Y..
 	bool			bMptEnableAckCounter;
-	ULONG			MptAckCounter;
+	u32			MptAckCounter;
 
 	// SD3 Willis For 8192S to save 1T/2T RF table for ACUT	Only fro ACUT delete later ~~~!
 	//s1Byte		BufOfLines[2][MAX_LINES_HWCONFIG_TXT][MAX_BYTES_LINE_HWCONFIG_TXT];
--- a/drivers/staging/rtl8192du/include/usb_osintf.h
+++ b/drivers/staging/rtl8192du/include/usb_osintf.h
@@ -25,7 +25,7 @@
 #include <drv_types.h>
 #include <usb_vendor_req.h>
 
-#define USBD_HALTED(Status) ((ULONG)(Status) >> 30 == 3)
+#define USBD_HALTED(Status) ((u32)(Status) >> 30 == 3)
 
 
 //uint usb_dvobj_init(_adapter * adapter);
--- a/drivers/staging/rtl8192du/include/wlan_bssdef.h
+++ b/drivers/staging/rtl8192du/include/wlan_bssdef.h
@@ -33,14 +33,14 @@ typedef unsigned char   NDIS_802_11_RATE
 typedef unsigned char   NDIS_802_11_RATES_EX[NDIS_802_11_LENGTH_RATES_EX];  // Set of 16 data rates
 
 
-typedef  ULONG  NDIS_802_11_KEY_INDEX;
+typedef  u32  NDIS_802_11_KEY_INDEX;
 typedef unsigned long long NDIS_802_11_KEY_RSC;
 
 
 typedef struct _NDIS_802_11_SSID
 {
-  ULONG  SsidLength;
-  UCHAR  Ssid[32];
+  u32  SsidLength;
+  u8  Ssid[32];
 } NDIS_802_11_SSID, *PNDIS_802_11_SSID;
 
 typedef enum _NDIS_802_11_NETWORK_TYPE
@@ -54,10 +54,10 @@ typedef enum _NDIS_802_11_NETWORK_TYPE
 
 typedef struct _NDIS_802_11_CONFIGURATION_FH
 {
-    ULONG           Length;             // Length of structure
-    ULONG           HopPattern;         // As defined by 802.11, MSB set
-    ULONG           HopSet;             // to one if non-802.11
-    ULONG           DwellTime;          // units are Kusec
+    u32           Length;             // Length of structure
+    u32           HopPattern;         // As defined by 802.11, MSB set
+    u32           HopSet;             // to one if non-802.11
+    u32           DwellTime;          // units are Kusec
 } NDIS_802_11_CONFIGURATION_FH, *PNDIS_802_11_CONFIGURATION_FH;
 
 
@@ -67,10 +67,10 @@ typedef struct _NDIS_802_11_CONFIGURATIO
 */
 typedef struct _NDIS_802_11_CONFIGURATION
 {
-    ULONG           Length;             // Length of structure
-    ULONG           BeaconPeriod;       // units are Kusec
-    ULONG           ATIMWindow;         // units are Kusec
-    ULONG           DSConfig;           // Frequency, units are kHz
+    u32           Length;             // Length of structure
+    u32           BeaconPeriod;       // units are Kusec
+    u32           ATIMWindow;         // units are Kusec
+    u32           DSConfig;           // Frequency, units are kHz
     NDIS_802_11_CONFIGURATION_FH    FHConfig;
 } NDIS_802_11_CONFIGURATION, *PNDIS_802_11_CONFIGURATION;
 
@@ -87,21 +87,21 @@ typedef enum _NDIS_802_11_NETWORK_INFRAS
 
 typedef struct _NDIS_802_11_FIXED_IEs
 {
-  UCHAR  Timestamp[8];
-  USHORT  BeaconInterval;
-  USHORT  Capabilities;
+  u8  Timestamp[8];
+  u16  BeaconInterval;
+  u16  Capabilities;
 } NDIS_802_11_FIXED_IEs, *PNDIS_802_11_FIXED_IEs;
 
 typedef struct _NDIS_802_11_VARIABLE_IEs
 {
-  UCHAR  ElementID;
-  UCHAR  Length;
-  UCHAR  data[1];
+  u8  ElementID;
+  u8  Length;
+  u8  data[1];
 } NDIS_802_11_VARIABLE_IEs, *PNDIS_802_11_VARIABLE_IEs;
 
 /*
 Length is the 4 bytes multiples of the sume of
-	sizeof (NDIS_802_11_MAC_ADDRESS) + 2 + sizeof (NDIS_802_11_SSID) + sizeof (ULONG)
+	sizeof (NDIS_802_11_MAC_ADDRESS) + 2 + sizeof (NDIS_802_11_SSID) + sizeof (u32)
 +   sizeof (NDIS_802_11_RSSI) + sizeof (NDIS_802_11_NETWORK_TYPE) + sizeof (NDIS_802_11_CONFIGURATION)
 +   sizeof (NDIS_802_11_RATES_EX) + IELength
 
@@ -147,29 +147,29 @@ typedef enum _NDIS_802_11_WEP_STATUS
 
 typedef struct _NDIS_802_11_AI_REQFI
 {
-    USHORT Capabilities;
-    USHORT ListenInterval;
+    u16 Capabilities;
+    u16 ListenInterval;
     NDIS_802_11_MAC_ADDRESS  CurrentAPAddress;
 } NDIS_802_11_AI_REQFI, *PNDIS_802_11_AI_REQFI;
 
 typedef struct _NDIS_802_11_AI_RESFI
 {
-    USHORT Capabilities;
-    USHORT StatusCode;
-    USHORT AssociationId;
+    u16 Capabilities;
+    u16 StatusCode;
+    u16 AssociationId;
 } NDIS_802_11_AI_RESFI, *PNDIS_802_11_AI_RESFI;
 
 typedef struct _NDIS_802_11_ASSOCIATION_INFORMATION
 {
-    ULONG                   Length;
-    USHORT                  AvailableRequestFixedIEs;
+    u32                   Length;
+    u16                  AvailableRequestFixedIEs;
     NDIS_802_11_AI_REQFI    RequestFixedIEs;
-    ULONG                   RequestIELength;
-    ULONG                   OffsetRequestIEs;
-    USHORT                  AvailableResponseFixedIEs;
+    u32                   RequestIELength;
+    u32                   OffsetRequestIEs;
+    u16                  AvailableResponseFixedIEs;
     NDIS_802_11_AI_RESFI    ResponseFixedIEs;
-    ULONG                   ResponseIELength;
-    ULONG                   OffsetResponseIEs;
+    u32                   ResponseIELength;
+    u32                   OffsetResponseIEs;
 } NDIS_802_11_ASSOCIATION_INFORMATION, *PNDIS_802_11_ASSOCIATION_INFORMATION;
 
 typedef enum _NDIS_802_11_RELOAD_DEFAULTS
@@ -181,34 +181,34 @@ typedef enum _NDIS_802_11_RELOAD_DEFAULT
 // Key mapping keys require a BSSID
 typedef struct _NDIS_802_11_KEY
 {
-    ULONG           Length;             // Length of this structure
-    ULONG           KeyIndex;
-    ULONG           KeyLength;          // length of key in bytes
+    u32           Length;             // Length of this structure
+    u32           KeyIndex;
+    u32           KeyLength;          // length of key in bytes
     NDIS_802_11_MAC_ADDRESS BSSID;
     NDIS_802_11_KEY_RSC KeyRSC;
-    UCHAR           KeyMaterial[32];     // variable length depending on above field
+    u8           KeyMaterial[32];     // variable length depending on above field
 } NDIS_802_11_KEY, *PNDIS_802_11_KEY;
 
 typedef struct _NDIS_802_11_REMOVE_KEY
 {
-    ULONG                   Length;        // Length of this structure
-    ULONG                   KeyIndex;
+    u32                   Length;        // Length of this structure
+    u32                   KeyIndex;
     NDIS_802_11_MAC_ADDRESS BSSID;
 } NDIS_802_11_REMOVE_KEY, *PNDIS_802_11_REMOVE_KEY;
 
 typedef struct _NDIS_802_11_WEP
 {
-    ULONG     Length;        // Length of this structure
-    ULONG     KeyIndex;      // 0 is the per-client key, 1-N are the global keys
-    ULONG     KeyLength;     // length of key in bytes
-    UCHAR     KeyMaterial[16];// variable length depending on above field
+    u32     Length;        // Length of this structure
+    u32     KeyIndex;      // 0 is the per-client key, 1-N are the global keys
+    u32     KeyLength;     // length of key in bytes
+    u8     KeyMaterial[16];// variable length depending on above field
 } NDIS_802_11_WEP, *PNDIS_802_11_WEP;
 
 typedef struct _NDIS_802_11_AUTHENTICATION_REQUEST
 {
-    ULONG Length;            // Length of structure
+    u32 Length;            // Length of structure
     NDIS_802_11_MAC_ADDRESS Bssid;
-    ULONG Flags;
+    u32 Flags;
 } NDIS_802_11_AUTHENTICATION_REQUEST, *PNDIS_802_11_AUTHENTICATION_REQUEST;
 
 typedef enum _NDIS_802_11_STATUS_TYPE
@@ -242,8 +242,8 @@ typedef struct _NDIS_802_11_AUTHENTICATI
 
 typedef struct _NDIS_802_11_TEST
 {
-    ULONG Length;
-    ULONG Type;
+    u32 Length;
+    u32 Type;
     union
     {
         NDIS_802_11_AUTHENTICATION_EVENT AuthenticationEvent;
@@ -265,19 +265,19 @@ typedef struct _WLAN_PHY_INFO
 
 typedef struct _WLAN_BSSID_EX
 {
-  ULONG  Length;
+  u32  Length;
   NDIS_802_11_MAC_ADDRESS  MacAddress;
-  UCHAR  Reserved[2];//[0]: IS beacon frame
+  u8  Reserved[2];//[0]: IS beacon frame
   NDIS_802_11_SSID  Ssid;
-  ULONG  Privacy;
+  u32  Privacy;
   NDIS_802_11_RSSI  Rssi;//(in dBM,raw data ,get from PHY)
   NDIS_802_11_NETWORK_TYPE  NetworkTypeInUse;
   NDIS_802_11_CONFIGURATION  Configuration;
   NDIS_802_11_NETWORK_INFRASTRUCTURE  InfrastructureMode;
   NDIS_802_11_RATES_EX  SupportedRates;
   WLAN_PHY_INFO	PhyInfo;
-  ULONG  IELength;
-  UCHAR  IEs[MAX_IE_SZ];	//(timestamp, beacon interval, and capability information)
+  u32  IELength;
+  u8  IEs[MAX_IE_SZ];	//(timestamp, beacon interval, and capability information)
 } __attribute__((packed)) WLAN_BSSID_EX, *PWLAN_BSSID_EX;
 
 __inline  static uint get_WLAN_BSSID_EX_sz(WLAN_BSSID_EX *bss)
@@ -338,13 +338,13 @@ enum UAPSD_MAX_SP
 
 typedef struct _PMKID_CANDIDATE {
     NDIS_802_11_MAC_ADDRESS BSSID;
-    ULONG Flags;
+    u32 Flags;
 } PMKID_CANDIDATE, *PPMKID_CANDIDATE;
 
 typedef struct _NDIS_802_11_PMKID_CANDIDATE_LIST
 {
-    ULONG Version;       // Version of the structure
-    ULONG NumCandidates; // No. of pmkid candidates
+    u32 Version;       // Version of the structure
+    u32 NumCandidates; // No. of pmkid candidates
     PMKID_CANDIDATE CandidateList[1];
 } NDIS_802_11_PMKID_CANDIDATE_LIST, *PNDIS_802_11_PMKID_CANDIDATE_LIST;
 
@@ -358,10 +358,10 @@ typedef struct _NDIS_802_11_AUTHENTICATI
 
 typedef struct _NDIS_802_11_CAPABILITY
 {
-	ULONG  Length;
-	ULONG  Version;
-	ULONG  NoOfPMKIDs;
-	ULONG  NoOfAuthEncryptPairsSupported;
+	u32  Length;
+	u32  Version;
+	u32  NoOfPMKIDs;
+	u32  NoOfAuthEncryptPairsSupported;
 	NDIS_802_11_AUTHENTICATION_ENCRYPTION AuthenticationEncryptionSupported[1];
 
 } NDIS_802_11_CAPABILITY, *PNDIS_802_11_CAPABILITY;
