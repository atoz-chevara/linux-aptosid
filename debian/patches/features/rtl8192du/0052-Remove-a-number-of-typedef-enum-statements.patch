From 2b01df5318c970c6b72860acf6f50aeaa4105e10 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 20 Apr 2013 16:25:53 -0500
Subject: [PATCH 052/390] Remove a number of "typedef enum" statements

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_wlan_util.c     |   2 +-
 hal/hal_intf.c           |   2 +-
 hal/rtl8192d_dm.c        |   2 +-
 hal/rtl8192d_hal_init.c  |  25 ++++----
 hal/rtl8192d_phycfg.c    | 158 +++++++++++++++++++++++------------------------
 hal/rtl8192d_rf6052.c    |  48 +++++++-------
 hal/usb_halinit.c        |  10 +--
 include/Hal8192DPhyCfg.h |  18 +++---
 include/hal_intf.h       |   4 +-
 include/rtl8192d_dm.h    |  34 +++++-----
 include/rtl8192d_hal.h   |  30 ++++-----
 include/rtl8192d_rf.h    |   2 +-
 include/rtw_mlme_ext.h   |  15 ++---
 include/rtw_mp.h         |  21 +++----
 include/rtw_pwrctrl.h    |   9 ++-
 include/rtw_rf.h         |  41 ++++++------
 include/usb_osintf.h     |   6 +-
 include/usb_vendor_req.h |   8 +--
 18 files changed, 212 insertions(+), 223 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_wlan_util.c
+++ b/drivers/staging/rtl8192du/core/rtw_wlan_util.c
@@ -500,7 +500,7 @@ void SetBWMode(_adapter *padapter, unsig
 	rtw_set_oper_bw(padapter, bwmode);
 	rtw_set_oper_choffset(padapter, channel_offset);
 
-	rtw_hal_set_bwmode(padapter, (HT_CHANNEL_WIDTH)bwmode, channel_offset);
+	rtw_hal_set_bwmode(padapter, (enum HT_CHANNEL_WIDTH)bwmode, channel_offset);
 
 	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->setbw_mutex), NULL);
 
--- a/drivers/staging/rtl8192du/hal/hal_intf.c
+++ b/drivers/staging/rtl8192du/hal/hal_intf.c
@@ -357,7 +357,7 @@ s32 rtw_hal_interrupt_handler(_adapter *
 	return _FAIL;
 }
 
-void rtw_hal_set_bwmode(_adapter *padapter, HT_CHANNEL_WIDTH Bandwidth, u8 Offset)
+void rtw_hal_set_bwmode(_adapter *padapter, enum HT_CHANNEL_WIDTH Bandwidth, u8 Offset)
 {
 	if(padapter->HalFunc.set_bwmode_handler)
 		padapter->HalFunc.set_bwmode_handler(padapter, Bandwidth, Offset);
--- a/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
@@ -1635,7 +1635,7 @@ dm_RXGainTrackingCallback_ThermalMeter_9
 	//DBG_8192C("===>dm_RXGainTrackingCallback_ThermalMeter_92D interface %d  Rx Gain %x\n", pHalData->interfaceIndex, u4tmp);
 
 	for(eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++){
-		PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_RXRF_A3, bRFRegOffsetMask, (pdmpriv->RegRF3C[eRFPath]&(~(0xF000)))|u4tmp);
+		PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_RXRF_A3, bRFRegOffsetMask, (pdmpriv->RegRF3C[eRFPath]&(~(0xF000)))|u4tmp);
 	}
 
 };
--- a/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
@@ -372,7 +372,7 @@ int FirmwareDownload92D(
 	u8*			FwImageWoWLAN;
 	u32			FwImageWoWLANLen;
 #endif //CONFIG_WOWLAN
-	PRT_FIRMWARE_92D	pFirmware = NULL;
+	struct RT_FIRMWARE_92D	*pFirmware = NULL;
 	PRT_8192D_FIRMWARE_HDR		pFwHdr = NULL;
 	u8		*pFirmwareBuf;
 	u32		FirmwareLen;
@@ -384,9 +384,8 @@ int FirmwareDownload92D(
 		return _FAIL;
 	}
 
-	pFirmware = (PRT_FIRMWARE_92D)rtw_zvmalloc(sizeof(RT_FIRMWARE_92D));
-	if(!pFirmware)
-	{
+	pFirmware = (struct RT_FIRMWARE_92D *)rtw_zvmalloc(sizeof(struct RT_FIRMWARE_92D));
+	if(!pFirmware) {
 		rtStatus = _FAIL;
 		goto Exit;
 	}
@@ -598,7 +597,7 @@ Exit:
 	rtStatus =_FWInit(Adapter);
 
 	if(pFirmware) {
-		rtw_vmfree((u8*)pFirmware, sizeof(RT_FIRMWARE_92D));
+		rtw_vmfree((u8*)pFirmware, sizeof(struct RT_FIRMWARE_92D));
 	}
 
 	//RT_TRACE(COMP_INIT, DBG_LOUD, (" <=== FirmwareDownload91C()\n"));
@@ -714,12 +713,12 @@ rtl8192d_ReadChipVersion(
 {
 	u32	value32;
 	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
-	VERSION_8192D	ChipVersion = VERSION_TEST_CHIP_88C;
+	enum VERSION_8192D	ChipVersion = VERSION_TEST_CHIP_88C;
 
 	value32 = rtw_read32(Adapter, REG_SYS_CFG);
 	DBG_871X("ReadChipVersion8192D 0xF0 = 0x%x \n", value32);
 
-	ChipVersion = (VERSION_8192D)(VERSION_NORMAL_CHIP_92D_SINGLEPHY | CHIP_92D);
+	ChipVersion = (enum VERSION_8192D)(VERSION_NORMAL_CHIP_92D_SINGLEPHY | CHIP_92D);
 
 	//Decide TestChip or NormalChip here.
 	//92D's RF_type will be decided when the reg0x2c is filled.
@@ -730,7 +729,7 @@ rtl8192d_ReadChipVersion(
 	}
 	else
 	{
-		ChipVersion = (VERSION_8192D)( ChipVersion | NORMAL_CHIP);
+		ChipVersion = (enum VERSION_8192D)( ChipVersion | NORMAL_CHIP);
 		DBG_871X("Normal CHIP!!!\n");
 	}
 
@@ -1518,7 +1517,7 @@ hal_EfuseUpdateNormalChipVersion_92D(
 )
 {
 	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
-	VERSION_8192D	ChipVer = pHalData->VersionID;
+	enum VERSION_8192D	ChipVer = pHalData->VersionID;
 	u8	CutValue[2];
 	u16	ChipValue=0;
 
@@ -1529,21 +1528,21 @@ hal_EfuseUpdateNormalChipVersion_92D(
 	switch(ChipValue){
 		case 0xAA55:
 			//ChipVer |= CHIP_92D_C_CUT;
-			ChipVer = (VERSION_8192D)( ChipVer | C_CUT_VERSION);
+			ChipVer = (enum VERSION_8192D)( ChipVer | C_CUT_VERSION);
 			MSG_8192C("C-CUT!!!\n");
 			break;
 		case 0x9966:
 			//ChipVer |= CHIP_92D_D_CUT;
-			ChipVer = (VERSION_8192D)( ChipVer | D_CUT_VERSION);
+			ChipVer = (enum VERSION_8192D)( ChipVer | D_CUT_VERSION);
 			MSG_8192C("D-CUT!!!\n");
 			break;
 		case 0xCC33:
-			ChipVer = (VERSION_8192D)( ChipVer | E_CUT_VERSION);
+			ChipVer = (enum VERSION_8192D)( ChipVer | E_CUT_VERSION);
 			MSG_8192C("E-CUT!!!\n");
 			break;
 		default:
 			//ChipVer |= CHIP_92D_D_CUT;
-			ChipVer = (VERSION_8192D)( ChipVer | D_CUT_VERSION);
+			ChipVer = (enum VERSION_8192D)( ChipVer | D_CUT_VERSION);
 			MSG_8192C("Unkown CUT!\n");
 			break;
 	}
--- a/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
@@ -320,7 +320,7 @@ rtl8192d_PHY_SetBBReg(
 static	u32
 phy_FwRFSerialRead(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset	)
 {
 	u32		retValue = 0;
@@ -349,7 +349,7 @@ phy_FwRFSerialRead(
 static	void
 phy_FwRFSerialWrite(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset,
 	u32				Data	)
 {
@@ -362,7 +362,7 @@ phy_FwRFSerialWrite(
 *
 * Input:
 *			PADAPTER		Adapter,
-*			RF_RADIO_PATH_E	eRFPath,	//Radio path of A/B/C/D
+*			enum RF_RADIO_PATH_E	eRFPath,	//Radio path of A/B/C/D
 *			u4Byte			Offset,		//The target address to be read
 *
 * Output:	None
@@ -377,7 +377,7 @@ phy_FwRFSerialWrite(
 static	u32
 phy_RFSerialRead(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset
 	)
 {
@@ -463,7 +463,7 @@ phy_RFSerialRead(
 *
 * Input:
 *			PADAPTER		Adapter,
-*			RF_RADIO_PATH_E	eRFPath,	//Radio path of A/B/C/D
+*			enum RF_RADIO_PATH_E	eRFPath,	//Radio path of A/B/C/D
 *			u4Byte			Offset,		//The target address to be read
 *			u4Byte			Data			//The new register Data in the target bit position
 *										//of the target to be read
@@ -502,7 +502,7 @@ phy_RFSerialRead(
 static	void
 phy_RFSerialWrite(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset,
 	u32				Data
 	)
@@ -562,7 +562,7 @@ phy_RFSerialWrite(
 *
 * Input:
 *			PADAPTER		Adapter,
-*			RF_RADIO_PATH_E	eRFPath,	//Radio path of A/B/C/D
+*			enum RF_RADIO_PATH_E	eRFPath,	//Radio path of A/B/C/D
 *			u4Byte			RegAddr,		//The target address to be read
 *			u4Byte			BitMask		//The target bit position in the target address
 *										//to be read
@@ -574,7 +574,7 @@ phy_RFSerialWrite(
 u32
 rtl8192d_PHY_QueryRFReg(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				RegAddr,
 	u32				BitMask
 	)
@@ -608,7 +608,7 @@ rtl8192d_PHY_QueryRFReg(
 *
 * Input:
 *			PADAPTER		Adapter,
-*			RF_RADIO_PATH_E	eRFPath,	//Radio path of A/B/C/D
+*			enum RF_RADIO_PATH_E	eRFPath,	//Radio path of A/B/C/D
 *			u4Byte			RegAddr,		//The target address to be modified
 *			u4Byte			BitMask		//The target bit position in the target address
 *										//to be modified
@@ -622,7 +622,7 @@ rtl8192d_PHY_QueryRFReg(
 void
 rtl8192d_PHY_SetRFReg(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				RegAddr,
 	u32				BitMask,
 	u32				Data
@@ -1634,7 +1634,7 @@ PHY_RFConfig8192D(
  *
  * Input:	PADAPTER			Adapter
  *			ps1Byte					pFileName
- *			RF_RADIO_PATH_E	eRFPath
+ *			enum RF_RADIO_PATH_E	eRFPath
  *
  * Output:      NONE
  *
@@ -1646,7 +1646,7 @@ int
 rtl8192d_PHY_ConfigRFWithParaFile(
 	PADAPTER			Adapter,
 	u8*				pFileName,
-	RF_RADIO_PATH_E		eRFPath
+	enum RF_RADIO_PATH_E		eRFPath
 )
 {
 	int	rtStatus = _SUCCESS;
@@ -1664,7 +1664,7 @@ rtl8192d_PHY_ConfigRFWithParaFile(
  *
  * Input:	PADAPTER			Adapter
  *			ps1Byte					pFileName
- *			RF_RADIO_PATH_E	eRFPath
+ *			enum RF_RADIO_PATH_E	eRFPath
  *
  * Output:      NONE
  *
@@ -1676,7 +1676,7 @@ int
 rtl8192d_PHY_ConfigRFWithHeaderFile(
 	PADAPTER			Adapter,
 	RF_CONTENT				Content,
-	RF_RADIO_PATH_E		eRFPath
+	enum RF_RADIO_PATH_E		eRFPath
 )
 {
 	int	i, j;
@@ -1830,7 +1830,7 @@ rtl8192d_PHY_ConfigRFWithHeaderFile(
  *
  * Input:	PADAPTER			Adapter
  *			HW90_BLOCK_E		CheckBlock
- *			RF_RADIO_PATH_E	eRFPath		// it is used only when CheckBlock is HW90_BLOCK_RF
+ *			enum RF_RADIO_PATH_E	eRFPath		// it is used only when CheckBlock is HW90_BLOCK_RF
  *
  * Output:      NONE
  *
@@ -1842,7 +1842,7 @@ int
 rtl8192d_PHY_CheckBBAndRFOK(
 	PADAPTER			Adapter,
 	HW90_BLOCK_E		CheckBlock,
-	RF_RADIO_PATH_E	eRFPath
+	enum RF_RADIO_PATH_E	eRFPath
 	)
 {
 	int			rtStatus = _SUCCESS;
@@ -2438,12 +2438,12 @@ _PHY_SetBWMode92D(
 void
 PHY_SetBWMode8192D(
 	PADAPTER					Adapter,
-	HT_CHANNEL_WIDTH	Bandwidth,	// 20M or 40M
+	enum HT_CHANNEL_WIDTH	Bandwidth,	// 20M or 40M
 	unsigned char	Offset		// Upper, Lower, or Don't care
 )
 {
 	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
-	HT_CHANNEL_WIDTH	tmpBW= pHalData->CurrentChannelBW;
+	enum HT_CHANNEL_WIDTH	tmpBW= pHalData->CurrentChannelBW;
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	PADAPTER	BuddyAdapter = Adapter->pbuddy_adapter;
 #endif
@@ -2821,7 +2821,7 @@ PHY_RestoreRFENV(
 #if 1
 			if(i == 0 && (pHalData->MacPhyMode92D == DUALMAC_DUALPHY))
 			{
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, bRFRegOffsetMask, 0xE439D);
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, bRFRegOffsetMask, 0xE439D);
 			}
 			else if (RF_REG_for_C_CUT_5G[i] == RF_SYN_G4)
 			{
@@ -2831,25 +2831,25 @@ PHY_RestoreRFENV(
 				if(channel == 36)
 					u4tmp2 &= ~(BIT7|BIT6);
 
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, bRFRegOffsetMask, u4tmp2);
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, bRFRegOffsetMask, u4tmp2);
 #else
 				u4tmp2= RF_REG_Param_for_C_CUT_5G[index][i];
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, 0xFF8FF, u4tmp2);
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, 0xFF8FF, u4tmp2);
 #endif
 			}
 			else
 			{
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, bRFRegOffsetMask, RF_REG_Param_for_C_CUT_5G[index][i]);
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, bRFRegOffsetMask, RF_REG_Param_for_C_CUT_5G[index][i]);
 			}
 #else
 			if(i == 0 && (pHalData->MacPhyMode92D == DUALMAC_DUALPHY))
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i], RF_REG_MASK_for_C_CUT_5G[i], 0xE439D);
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i], RF_REG_MASK_for_C_CUT_5G[i], 0xE439D);
 			else
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i], RF_REG_MASK_for_C_CUT_5G[i], RF_REG_Param_for_C_CUT_5G[index][i]);
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i], RF_REG_MASK_for_C_CUT_5G[i], RF_REG_Param_for_C_CUT_5G[index][i]);
 #endif
 			//RT_TRACE(COMP_RF, DBG_TRACE, ("phy_SwitchRfSetting offset 0x%x value 0x%x path %d index %d readback 0x%x\n",
 			//	RF_REG_for_C_CUT_5G[i], RF_REG_Param_for_C_CUT_5G[index][i], path,  index,
-			//	PHY_QueryRFReg(Adapter, (RF_RADIO_PATH_E) path, RF_REG_for_C_CUT_5G[i]|MaskforPhyAccess, bRFRegOffsetMask)));
+			//	PHY_QueryRFReg(Adapter, (enum RF_RADIO_PATH_E) path, RF_REG_for_C_CUT_5G[i]|MaskforPhyAccess, bRFRegOffsetMask)));
 		}
 		if(pHalData->MacPhyMode92D == DUALMAC_DUALPHY && pHalData->interfaceIndex == 1)
 		{
@@ -2903,7 +2903,7 @@ PHY_RestoreRFENV(
 				}
 			}
 			else
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_TXPA_AG, mask, value);
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_TXPA_AG, mask, value);
 		}
 	}
 	else if(pHalData->CurrentBandType92D==BAND_ON_2_4G)
@@ -2950,23 +2950,23 @@ PHY_RestoreRFENV(
 #if 1
 #if SWLCK == 1
 			if (RF_REG_for_C_CUT_2G[i] == RF_SYN_G7)
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_2G[i]|MaskforPhySet, bRFRegOffsetMask, (RF_REG_Param_for_C_CUT_2G[index][i] | BIT17));
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_2G[i]|MaskforPhySet, bRFRegOffsetMask, (RF_REG_Param_for_C_CUT_2G[index][i] | BIT17));
 			else
 #endif
-			PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_2G[i]|MaskforPhySet, bRFRegOffsetMask, RF_REG_Param_for_C_CUT_2G[index][i]);
+			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_2G[i]|MaskforPhySet, bRFRegOffsetMask, RF_REG_Param_for_C_CUT_2G[index][i]);
 #else
-			PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_2G[i], RF_REG_MASK_for_C_CUT_2G[i], RF_REG_Param_for_C_CUT_2G[index][i]);
+			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_2G[i], RF_REG_MASK_for_C_CUT_2G[i], RF_REG_Param_for_C_CUT_2G[index][i]);
 #endif
 			//RT_TRACE(COMP_RF, DBG_TRACE, ("phy_SwitchRfSetting offset 0x%x value 0x%x mak 0x%x path %d index %d readback 0x%x\n",
 			//	RF_REG_for_C_CUT_2G[i], RF_REG_Param_for_C_CUT_2G[index][i], RF_REG_MASK_for_C_CUT_2G[i], path,  index,
-			//	PHY_QueryRFReg(Adapter, (RF_RADIO_PATH_E) path, RF_REG_for_C_CUT_2G[i]|MaskforPhySet, bRFRegOffsetMask)));
+			//	PHY_QueryRFReg(Adapter, (enum RF_RADIO_PATH_E) path, RF_REG_for_C_CUT_2G[i]|MaskforPhySet, bRFRegOffsetMask)));
 		}
 
 #if SWLCK == 1
 		//for SWLCK
 		//RTPRINT(FINIT, INIT_IQK, ("cosa ver 3 set RF-B, 2G, 0x28 = 0x%x !!\n", RF_REG_SYN_G4_for_C_CUT_2G | (u4tmp << 11)));
 
-		PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)path, RF_SYN_G4|MaskforPhySet, bRFRegOffsetMask, RF_REG_SYN_G4_for_C_CUT_2G | (u4tmp << 11));
+		PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)path, RF_SYN_G4|MaskforPhySet, bRFRegOffsetMask, RF_REG_SYN_G4_for_C_CUT_2G | (u4tmp << 11));
 #endif
 		if(pHalData->MacPhyMode92D == DUALMAC_DUALPHY && pHalData->interfaceIndex == 0)
 		{
@@ -3042,7 +3042,7 @@ static  void
 					PHY_EnableRFENV(Adapter, eRFPath, MaskforPhySet,&u4RegValue);
 			}
 
-			PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_SYN_G4|MaskforPhySet, 0x3f800, u4tmp);
+			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_SYN_G4|MaskforPhySet, 0x3f800, u4tmp);
 
 			if(bNeedPowerDownRadio){
 				PHY_RestoreRFENV(Adapter, eRFPath,MaskforPhySet, &u4RegValue);
@@ -3064,8 +3064,8 @@ static  void
 				if(bNeedPowerDownRadio)
 					PHY_EnableRFENV(Adapter, eRFPath,MaskforPhySet, &u4RegValue);
 			}
-			PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_SYN_G4|MaskforPhySet, 0x3f800, u4tmp);
-			//RTPRINT(FINIT, INIT_IQK, ("cosa ver 3 set RF-B, 2G, 0x28 = 0x%lx !!\n", PHY_QueryRFReg(Adapter, (RF_RADIO_PATH_E) eRFPath, RF_SYN_G4|MaskforPhyAccess, 0x3f800)));
+			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_SYN_G4|MaskforPhySet, 0x3f800, u4tmp);
+			//RTPRINT(FINIT, INIT_IQK, ("cosa ver 3 set RF-B, 2G, 0x28 = 0x%lx !!\n", PHY_QueryRFReg(Adapter, (enum RF_RADIO_PATH_E) eRFPath, RF_SYN_G4|MaskforPhyAccess, 0x3f800)));
 
 			if(bNeedPowerDownRadio){
 				PHY_RestoreRFENV(Adapter, eRFPath,MaskforPhySet, &u4RegValue);
@@ -3130,7 +3130,7 @@ static  void
 		IMR_NUM = MAX_RF_IMR_INDEX_NORMAL;
 
 		for(i=0; i<IMR_NUM; i++){
-			PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_REG_FOR_5G_SWCHNL_NORMAL[i], RFMask,RF_IMR_Param_Normal[0][group][i]);
+			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_REG_FOR_5G_SWCHNL_NORMAL[i], RFMask,RF_IMR_Param_Normal[0][group][i]);
 		}
 		PHY_SetBBReg(Adapter, rFPGA0_AnalogParameter4, 0x00f00000,0);
 		PHY_SetBBReg1Byte(Adapter, rFPGA0_RFMOD, bOFDMEn|bCCKEn, 2);
@@ -3146,7 +3146,7 @@ static  void
 
 			IMR_NUM = MAX_RF_IMR_INDEX_NORMAL;
 			for(i=0; i<IMR_NUM; i++){
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_REG_FOR_5G_SWCHNL_NORMAL[i], bRFRegOffsetMask,RF_IMR_Param_Normal[0][0][i]);
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_REG_FOR_5G_SWCHNL_NORMAL[i], bRFRegOffsetMask,RF_IMR_Param_Normal[0][0][i]);
 			}
 			PHY_SetBBReg(Adapter, rFPGA0_AnalogParameter4, 0x00f00000,0);
 			PHY_SetBBReg1Byte(Adapter, rFPGA0_RFMOD, bOFDMEn|bCCKEn, 3);
@@ -3291,7 +3291,7 @@ static void _PHY_SwChnl8192D(PADAPTER Ad
 		for(eRFPath = 0; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
 		{
 #if 1
-			//pHalData->RfRegChnlVal[eRFPath] = PHY_QueryRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, bRFRegOffsetMask);
+			//pHalData->RfRegChnlVal[eRFPath] = PHY_QueryRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, bRFRegOffsetMask);
 			// & 0xFFFFFC00 just for 2.4G. So for 5G band,bit[9:8]= 1. we change this setting for 5G. by wl
 			pHalData->RfRegChnlVal[eRFPath] = ((pHalData->RfRegChnlVal[eRFPath] & 0xffffff00) | param2);
 			if(pHalData->CurrentBandType92D == BAND_ON_5G)
@@ -3310,9 +3310,9 @@ static void _PHY_SwChnl8192D(PADAPTER Ad
 			{
 				pHalData->RfRegChnlVal[eRFPath] &= ~(BIT8|BIT16|BIT18);
 			}
-			PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, param1, bRFRegOffsetMask, pHalData->RfRegChnlVal[eRFPath]);
+			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, param1, bRFRegOffsetMask, pHalData->RfRegChnlVal[eRFPath]);
 #else
-			PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, param1, bRFRegOffsetMask, param2);
+			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, param1, bRFRegOffsetMask, param2);
 #endif
 
 			phy_ReloadIMRSetting(Adapter, channel, eRFPath);
@@ -5381,23 +5381,23 @@ phy_LCCalibrate92D(
 	for(index = 0; index <path; index ++)
 	{
 		//1. Read original RF mode
-		RF_mode[index] = PHY_QueryRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_AC, bRFRegOffsetMask);
+		RF_mode[index] = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_AC, bRFRegOffsetMask);
 
 		//2. Set RF mode = standby mode
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_AC, 0x70000, 0x01);
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_AC, 0x70000, 0x01);
 
-		tmpu4Byte[index] = PHY_QueryRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask);
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G4, 0x700, 0x07);
+		tmpu4Byte[index] = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask);
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, 0x700, 0x07);
 
 		//4. Set LC calibration begin
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_CHNLBW, 0x08000, 0x01);
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_CHNLBW, 0x08000, 0x01);
 
 	}
 
 #if SWLCK == 1
 	for(index = 0; index <path; index ++)
 	{
-		while(!(PHY_QueryRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G6, BIT11)) &&
+		while(!(PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G6, BIT11)) &&
 			timecount <= timeout)
 		{
 
@@ -5421,8 +5421,8 @@ phy_LCCalibrate92D(
 	//Restore original situation
 	for(index = 0; index <path; index ++)
 	{
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask, tmpu4Byte[index]);
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_AC, bRFRegOffsetMask, RF_mode[index]);
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask, tmpu4Byte[index]);
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_AC, bRFRegOffsetMask, RF_mode[index]);
 	}
 
 	if((tmpReg&0x70) != 0)
@@ -5592,19 +5592,19 @@ phy_LCCalibrate92DSW(
 		//RTPRINT(FINIT, INIT_IQK,("PHY_LCK offset 0x%x tmpreg = 0x%x\n", offset, RF_mode[index]));
 
 		//2. Set RF mode = standby mode
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_AC, bRFRegOffsetMask, 0x010000);
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_AC, bRFRegOffsetMask, 0x010000);
 #if (TESTFLAG == 0)
-		tmpu4Byte[index] = PHY_QueryRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask);
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G4, 0x700, 0x07);
+		tmpu4Byte[index] = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask);
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, 0x700, 0x07);
 #endif
 
 		if(pAdapter->hw_init_completed)
 		{
 			// switch CV-curve control by LC-calibration
-			PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G7, BIT17, 0x0);
+			PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G7, BIT17, 0x0);
 
 			//4. Set LC calibration begin
-			PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_CHNLBW, 0x08000, 0x01);
+			PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_CHNLBW, 0x08000, 0x01);
 
 			//RTPRINT(FINIT, INIT_IQK,("PHY_LCK finish HWLCK \n"));
 		}
@@ -5612,7 +5612,7 @@ phy_LCCalibrate92DSW(
 
 	for(index = 0; index <path; index ++)
 	{
-		u4tmp = PHY_QueryRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G6, bRFRegOffsetMask);
+		u4tmp = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G6, bRFRegOffsetMask);
 
 		while((!(u4tmp & BIT11)) &&
 			timecount <= timeout)
@@ -5623,7 +5623,7 @@ phy_LCCalibrate92DSW(
 				rtw_mdelay_os(50);
 				#endif
 			timecount += 50;
-			u4tmp = PHY_QueryRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G6, bRFRegOffsetMask);
+			u4tmp = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G6, bRFRegOffsetMask);
 		}
 		//RTPRINT(FINIT, INIT_IQK,("PHY_LCK finish delay for %d ms=2\n", timecount));
 	}
@@ -5643,7 +5643,7 @@ phy_LCCalibrate92DSW(
 
 	for(index = 0; index <path; index ++)
 	{
-		u4tmp = PHY_QueryRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask);
+		u4tmp = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask);
 
 		{
 
@@ -5658,22 +5658,22 @@ phy_LCCalibrate92DSW(
 			_rtw_memset(&curveCountVal[0], 0, CV_CURVE_CNT*2);
 
 			//Set LC calibration off
-			PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_CHNLBW, 0x08000, 0x0);
+			PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_CHNLBW, 0x08000, 0x0);
 			//RTPRINT(FINIT, INIT_IQK,("cosa, set RF 0x18[15] = 0\n"));
 
 			//save Curve-counting number
 			for(i=0; i<CV_CURVE_CNT; i++)
 			{
 				u32	readVal=0, readVal2=0;
-				PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_TRSW, 0x7f, i);
+				PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_TRSW, 0x7f, i);
 
-				PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, 0x4D, bRFRegOffsetMask, 0x0);
-				readVal = PHY_QueryRFReg(pAdapter, (RF_RADIO_PATH_E)index, 0x4F, bRFRegOffsetMask);
+				PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, 0x4D, bRFRegOffsetMask, 0x0);
+				readVal = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, 0x4F, bRFRegOffsetMask);
 
 				curveCountVal[2*i+1] = (readVal & 0xfffe0) >> 5;
 				// reg 0x4f [4:0]
 				// reg 0x50 [19:10]
-				readVal2 = PHY_QueryRFReg(pAdapter, (RF_RADIO_PATH_E)index, 0x50, 0xffc00);
+				readVal2 = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, 0x50, 0xffc00);
 				curveCountVal[2*i] = (((readVal & 0x1F) << 10) | readVal2);
 
 			}
@@ -5684,7 +5684,7 @@ phy_LCCalibrate92DSW(
 				phy_CalcCurvIndex(pAdapter, TargetChnl_2G, curveCountVal, false, CurveIndex);
 
 			// switch CV-curve control mode
-			PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G7, BIT17, 0x1);
+			PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G7, BIT17, 0x1);
 		}
 
 	}
@@ -5693,7 +5693,7 @@ phy_LCCalibrate92DSW(
 	for(index = 0; index <path; index ++)
 	{
 #if (TESTFLAG == 0)
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask, tmpu4Byte[index]);
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask, tmpu4Byte[index]);
 #endif
 		offset = index == 0?rOFDM0_XAAGCCore1:rOFDM0_XBAGCCore1;
 		//RTPRINT(FINIT, INIT_IQK,("offset 0x%x tmpreg = 0x%x index %d\n", offset, RF_mode[index], index));
@@ -5970,7 +5970,7 @@ phy_APCalibrate(
 		}
 
 		//save RF default value
-		regD[path] = PHY_QueryRFReg(pAdapter, (RF_RADIO_PATH_E)path, RF_TXBIAS_A, bRFRegOffsetMask);
+		regD[path] = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_TXBIAS_A, bRFRegOffsetMask);
 
 		//Path A AFE all on, path B AFE All off or vise versa
 		for(index = 0; index < IQK_ADDA_REG_NUM ; index++)
@@ -6061,9 +6061,9 @@ phy_APCalibrate(
 			}
 #endif
 
-				PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)path, RF_IPA_A, bRFRegOffsetMask, 0x8992e);
-			PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)path, RF_AC, bRFRegOffsetMask, APK_RF_value_0[path][index]);
-			PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)path, RF_TXBIAS_A, bRFRegOffsetMask, tmpReg);
+				PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_IPA_A, bRFRegOffsetMask, 0x8992e);
+			PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_AC, bRFRegOffsetMask, APK_RF_value_0[path][index]);
+			PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_TXBIAS_A, bRFRegOffsetMask, tmpReg);
 
 			// PA11+PAD01111, one shot
 			i = 0;
@@ -6112,7 +6112,7 @@ phy_APCalibrate(
 	//reload RF path default value
 	for(path = 0; path < pathbound; path++)
 	{
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)path, RF_TXBIAS_A, bRFRegOffsetMask, regD[path]);
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_TXBIAS_A, bRFRegOffsetMask, regD[path]);
 		if(path == RF_PATH_B)
 		{
 			PHY_SetRFReg(pAdapter, RF_PATH_A, RF_MODE1, bRFRegOffsetMask, 0x1000f);
@@ -6129,17 +6129,17 @@ phy_APCalibrate(
 
 	for(path = 0; path < pathbound; path++)
 	{
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)path, RF_BS_PA_APSET_G1_G4, bRFRegOffsetMask,
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_BS_PA_APSET_G1_G4, bRFRegOffsetMask,
 		((APK_result[path][1] << 15) | (APK_result[path][1] << 10) | (APK_result[path][1] << 5) | APK_result[path][1]));
 		if(path == RF_PATH_A)
-			PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)path, RF_BS_PA_APSET_G5_G8, bRFRegOffsetMask,
+			PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_BS_PA_APSET_G5_G8, bRFRegOffsetMask,
 			((APK_result[path][1] << 15) | (APK_result[path][1] << 10) | (0x00 << 5) | 0x05));
 		else
-		PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)path, RF_BS_PA_APSET_G5_G8, bRFRegOffsetMask,
+		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_BS_PA_APSET_G5_G8, bRFRegOffsetMask,
 			((APK_result[path][1] << 15) | (APK_result[path][1] << 10) | (0x02 << 5) | 0x05));
 
 		//if(!IS_HARDWARE_TYPE_8723A(pAdapter))
-		//	PHY_SetRFReg(pAdapter, (RF_RADIO_PATH_E)path, RF_BS_PA_APSET_G9_G11, bRFRegOffsetMask,
+		//	PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_BS_PA_APSET_G9_G11, bRFRegOffsetMask,
 		//	((0x08 << 15) | (0x08 << 10) | (0x08 << 5) | 0x08));
 	}
 
@@ -6651,10 +6651,10 @@ PHY_UpdateBBRFConfiguration8192D(
 	{
 		if(pHalData->CurrentBandType92D == BAND_ON_2_4G){
 			//MOD_AG for RF paht_A 0x18 BIT8,BIT16
-			PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, BIT8|BIT16|BIT18|0xFF, 1);
+			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, BIT8|BIT16|BIT18|0xFF, 1);
 
 			//RF0x0b[16:14] =3b'111
-			PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_TXPA_AG, 0x1c000, 0x07);
+			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_TXPA_AG, 0x1c000, 0x07);
 		}
 		else{ //5G band
 			//MOD_AG for RF paht_A 0x18 BIT8,BIT16
@@ -6766,8 +6766,8 @@ PHY_UpdateBBRFConfiguration8192D(
 
 	for(eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
 	{
-		pHalData->RfRegChnlVal[eRFPath] = PHY_QueryRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, bRFRegOffsetMask);
-		pdmpriv->RegRF3C[eRFPath] = PHY_QueryRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_RXRF_A3, bRFRegOffsetMask);
+		pHalData->RfRegChnlVal[eRFPath] = PHY_QueryRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, bRFRegOffsetMask);
+		pdmpriv->RegRF3C[eRFPath] = PHY_QueryRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_RXRF_A3, bRFRegOffsetMask);
 	}
 
 	//for(i = 0; i < 2; i++)
@@ -6883,7 +6883,7 @@ void PHY_ConfigMacPhyModeInfo92D(
 	switch(pHalData->MacPhyMode92D){
 		case DUALMAC_SINGLEPHY:
 			pHalData->rf_type = RF_2T2R;
-			pHalData->VersionID = (VERSION_8192D)(pHalData->VersionID | RF_TYPE_2T2R);
+			pHalData->VersionID = (enum VERSION_8192D)(pHalData->VersionID | RF_TYPE_2T2R);
 			pHalData->BandSet92D = BAND_ON_BOTH;
 			pHalData->CurrentBandType92D = BAND_ON_2_4G;
 #ifdef CONFIG_DUALMAC_CONCURRENT
@@ -6915,7 +6915,7 @@ void PHY_ConfigMacPhyModeInfo92D(
 
 		case SINGLEMAC_SINGLEPHY:
 			pHalData->rf_type = RF_2T2R;
-			pHalData->VersionID = (VERSION_8192D)(pHalData->VersionID | RF_TYPE_2T2R);
+			pHalData->VersionID = (enum VERSION_8192D)(pHalData->VersionID | RF_TYPE_2T2R);
 			pHalData->BandSet92D = BAND_ON_BOTH;
 			pHalData->CurrentBandType92D = BAND_ON_2_4G;
 			pHalData->bMasterOfDMSP = false;
@@ -6924,7 +6924,7 @@ void PHY_ConfigMacPhyModeInfo92D(
 
 		case DUALMAC_DUALPHY:
 			pHalData->rf_type = RF_1T1R;
-			pHalData->VersionID = (VERSION_8192D)(pHalData->VersionID & RF_TYPE_1T1R);
+			pHalData->VersionID = (enum VERSION_8192D)(pHalData->VersionID & RF_TYPE_1T1R);
 			if(pHalData->interfaceIndex == 1){
 				pHalData->BandSet92D = BAND_ON_5G;
 				pHalData->CurrentBandType92D = BAND_ON_5G;//Now we let MAC1 run on 5G band.
@@ -7207,7 +7207,7 @@ PHY_InitPABias92D(PADAPTER Adapter)
 	u8	tmpU1b;
 	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
 	bool		is92 = IS_92D_SINGLEPHY(pHalData->VersionID);
-	RF_RADIO_PATH_E eRFPath = RF_PATH_A;
+	enum RF_RADIO_PATH_E eRFPath = RF_PATH_A;
 
 	tmpU1b = EFUSE_Read1Byte(Adapter, 0x3FA);
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_rf6052.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_rf6052.c
@@ -119,7 +119,7 @@ void rtl8192d_RF_ChangeTxPath(	PADAPTER
 void
 rtl8192d_PHY_RF6052SetBandwidth(
 	PADAPTER				Adapter,
-	HT_CHANNEL_WIDTH		Bandwidth)	//20M or 40M
+	enum HT_CHANNEL_WIDTH		Bandwidth)	//20M or 40M
 {
 	u8			eRFPath;
 	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
@@ -130,7 +130,7 @@ rtl8192d_PHY_RF6052SetBandwidth(
 			for(eRFPath=0;eRFPath<pHalData->NumTotalRFPath;eRFPath++)
 			{
 				pHalData->RfRegChnlVal[eRFPath] = ((pHalData->RfRegChnlVal[eRFPath] & 0xfffff3ff) | 0x0400);
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, BIT10|BIT11, 0x01);
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, BIT10|BIT11, 0x01);
 
 			}
 			break;
@@ -140,7 +140,7 @@ rtl8192d_PHY_RF6052SetBandwidth(
 			{
 				pHalData->RfRegChnlVal[eRFPath] = ((pHalData->RfRegChnlVal[eRFPath] & 0xfffff3ff));
 				//PHY_SetRFReg(Adapter, eRFPath, RF_CHNLBW, bRFRegOffsetMask, pHalData->RfRegChnlVal[eRFPath]);
-				PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, BIT10|BIT11, 0x00);
+				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, BIT10|BIT11, 0x00);
 				//RT_TRACE(COMP_RF, DBG_LOUD, ("PHY_RF6052SetBandwidth 40M RF 0x18 = 0x%x interface index %d\n",pHalData->RfRegChnlVal[eRFPath],  Adapter->interfaceIndex));
 			}
 			break;
@@ -773,18 +773,18 @@ phy_RF6052_Config_ParaFile(
 #ifdef CONFIG_EMBEDDED_FWIMG
 				//vivi added this for read parameter from header, 20100908
 				if(bTrueBPath == true)
-					rtStatus = rtl8192d_PHY_ConfigRFWithHeaderFile(Adapter,radiob_txt|MaskforPhySet, (RF_RADIO_PATH_E)eRFPath);
+					rtStatus = rtl8192d_PHY_ConfigRFWithHeaderFile(Adapter,radiob_txt|MaskforPhySet, (enum RF_RADIO_PATH_E)eRFPath);
 				else
-					rtStatus = rtl8192d_PHY_ConfigRFWithHeaderFile(Adapter,radioa_txt|MaskforPhySet, (RF_RADIO_PATH_E)eRFPath);
+					rtStatus = rtl8192d_PHY_ConfigRFWithHeaderFile(Adapter,radioa_txt|MaskforPhySet, (enum RF_RADIO_PATH_E)eRFPath);
 #else
-				rtStatus = rtl8192d_PHY_ConfigRFWithParaFile(Adapter, pszRadioAFile, (RF_RADIO_PATH_E)eRFPath);
+				rtStatus = rtl8192d_PHY_ConfigRFWithParaFile(Adapter, pszRadioAFile, (enum RF_RADIO_PATH_E)eRFPath);
 #endif
 				break;
 			case RF_PATH_B:
 #ifdef CONFIG_EMBEDDED_FWIMG
-			rtStatus = rtl8192d_PHY_ConfigRFWithHeaderFile(Adapter,radiob_txt, (RF_RADIO_PATH_E)eRFPath);
+			rtStatus = rtl8192d_PHY_ConfigRFWithHeaderFile(Adapter,radiob_txt, (enum RF_RADIO_PATH_E)eRFPath);
 #else
-			rtStatus = rtl8192d_PHY_ConfigRFWithParaFile(Adapter, pszRadioBFile, (RF_RADIO_PATH_E)eRFPath);
+			rtStatus = rtl8192d_PHY_ConfigRFWithParaFile(Adapter, pszRadioBFile, (enum RF_RADIO_PATH_E)eRFPath);
 #endif
 				break;
 			case RF_PATH_C:
@@ -905,7 +905,7 @@ PHY_RF6052_Config8192D(
 u32
 PHY_RFShadowRead(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset)
 {
 	return	RF_Shadow[eRFPath][Offset].Value;
@@ -916,7 +916,7 @@ PHY_RFShadowRead(
 void
 PHY_RFShadowWrite(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset,
 	u32				Data)
 {
@@ -928,12 +928,12 @@ PHY_RFShadowWrite(
 bool
 PHY_RFShadowCompare(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset);
 bool
 PHY_RFShadowCompare(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset)
 {
 	u32	reg;
@@ -957,12 +957,12 @@ PHY_RFShadowCompare(
 void
 PHY_RFShadowRecorver(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset);
 void
 PHY_RFShadowRecorver(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset)
 {
 	// Check if the address is error
@@ -994,7 +994,7 @@ PHY_RFShadowCompareAll(
 	{
 		for (Offset = 0; Offset <= RF6052_MAX_REG; Offset++)
 		{
-			PHY_RFShadowCompare(Adapter, (RF_RADIO_PATH_E)eRFPath, Offset);
+			PHY_RFShadowCompare(Adapter, (enum RF_RADIO_PATH_E)eRFPath, Offset);
 		}
 	}
 
@@ -1013,7 +1013,7 @@ PHY_RFShadowRecorverAll(
 	{
 		for (Offset = 0; Offset <= RF6052_MAX_REG; Offset++)
 		{
-			PHY_RFShadowRecorver(Adapter, (RF_RADIO_PATH_E)eRFPath, Offset);
+			PHY_RFShadowRecorver(Adapter, (enum RF_RADIO_PATH_E)eRFPath, Offset);
 		}
 	}
 
@@ -1021,13 +1021,13 @@ PHY_RFShadowRecorverAll(
 void
 PHY_RFShadowCompareFlagSet(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset,
 	u8				Type);
 void
 PHY_RFShadowCompareFlagSet(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset,
 	u8				Type)
 {
@@ -1038,13 +1038,13 @@ PHY_RFShadowCompareFlagSet(
 void
 PHY_RFShadowRecorverFlagSet(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset,
 	u8				Type);
 void
 PHY_RFShadowRecorverFlagSet(
 	PADAPTER			Adapter,
-	RF_RADIO_PATH_E	eRFPath,
+	enum RF_RADIO_PATH_E	eRFPath,
 	u32				Offset,
 	u8				Type)
 {
@@ -1068,9 +1068,9 @@ PHY_RFShadowCompareFlagSetAll(
 		{
 			// 2008/11/20 MH For S3S4 test, we only check reg 26/27 now!!!!
 			if (Offset != 0x26 && Offset != 0x27)
-				PHY_RFShadowCompareFlagSet(Adapter, (RF_RADIO_PATH_E)eRFPath, Offset, false);
+				PHY_RFShadowCompareFlagSet(Adapter, (enum RF_RADIO_PATH_E)eRFPath, Offset, false);
 			else
-				PHY_RFShadowCompareFlagSet(Adapter, (RF_RADIO_PATH_E)eRFPath, Offset, true);
+				PHY_RFShadowCompareFlagSet(Adapter, (enum RF_RADIO_PATH_E)eRFPath, Offset, true);
 		}
 	}
 
@@ -1091,9 +1091,9 @@ PHY_RFShadowRecorverFlagSetAll(
 		{
 			// 2008/11/20 MH For S3S4 test, we only check reg 26/27 now!!!!
 			if (Offset != 0x26 && Offset != 0x27)
-				PHY_RFShadowRecorverFlagSet(Adapter, (RF_RADIO_PATH_E)eRFPath, Offset, false);
+				PHY_RFShadowRecorverFlagSet(Adapter, (enum RF_RADIO_PATH_E)eRFPath, Offset, false);
 			else
-				PHY_RFShadowRecorverFlagSet(Adapter, (RF_RADIO_PATH_E)eRFPath, Offset, true);
+				PHY_RFShadowRecorverFlagSet(Adapter, (enum RF_RADIO_PATH_E)eRFPath, Offset, true);
 		}
 	}
 
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -1687,7 +1687,7 @@ static void _RfPowerSave(
 			return;
 #endif
 		for(eRFPath = 0; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
-			PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, 0x4, 0xC00, 0x0);
+			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, 0x4, 0xC00, 0x0);
 	}
 	else if(pwrctrlpriv->rfoff_reason > RF_CHANGE_BY_PS){ // H/W or S/W RF OFF before sleep.
 		//RT_TRACE((COMP_INIT|COMP_RF), DBG_LOUD, ("InitializeAdapter8192CUsb(): Turn off RF for RfOffReason(%ld).\n", pMgntInfo->RfOffReason));
@@ -2251,14 +2251,14 @@ HAL_INIT_PROFILE_TAG(HAL_INIT_STAGES_LCK
 				rtw_udelay_os(MAX_STALL_TIME);
 				if(pHalData->rf_type == RF_1T1R)
 				{
-					tmpRega = PHY_QueryRFReg(padapter, (RF_RADIO_PATH_E)RF_PATH_A, 0x2a, bMaskDWord);
+					tmpRega = PHY_QueryRFReg(padapter, (enum RF_RADIO_PATH_E)RF_PATH_A, 0x2a, bMaskDWord);
 					if((tmpRega&BIT11)==BIT11)
 						break;
 				}
 				else
 				{
-					tmpRega = PHY_QueryRFReg(padapter, (RF_RADIO_PATH_E)RF_PATH_A, 0x2a, bMaskDWord);
-					tmpRegb = PHY_QueryRFReg(padapter, (RF_RADIO_PATH_E)RF_PATH_B, 0x2a, bMaskDWord);
+					tmpRega = PHY_QueryRFReg(padapter, (enum RF_RADIO_PATH_E)RF_PATH_A, 0x2a, bMaskDWord);
+					tmpRegb = PHY_QueryRFReg(padapter, (enum RF_RADIO_PATH_E)RF_PATH_B, 0x2a, bMaskDWord);
 					if(((tmpRega&BIT11)==BIT11)&&((tmpRegb&BIT11)==BIT11))
 						break;
 					// temply add for DMSP
@@ -2567,7 +2567,7 @@ e.	SYS_FUNC_EN 0x02[7:0] = 0x14		//reset
 	u8	eRFPath = 0,value8 = 0;
 
 	PHY_SetBBReg(Adapter, rFPGA0_AnalogParameter4, 0x00f00000,  0xf);
-	PHY_SetRFReg(Adapter, (RF_RADIO_PATH_E)eRFPath, 0x0,bRFRegOffsetMask, 0x0);
+	PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, 0x0,bRFRegOffsetMask, 0x0);
 
 	value8 |= APSDOFF;
 	rtw_write8(Adapter, REG_APSD_CTRL, value8);//0x40
--- a/drivers/staging/rtl8192du/include/Hal8192DPhyCfg.h
+++ b/drivers/staging/rtl8192du/include/Hal8192DPhyCfg.h
@@ -299,11 +299,11 @@ void	rtl8192d_PHY_SetBBReg(	PADAPTER	Ada
 								u32		BitMask,
 								u32		Data	);
 u32	rtl8192d_PHY_QueryRFReg(	PADAPTER			Adapter,
-								RF_RADIO_PATH_E	eRFPath,
+								enum RF_RADIO_PATH_E	eRFPath,
 								u32				RegAddr,
 								u32				BitMask	);
 void	rtl8192d_PHY_SetRFReg(	PADAPTER			Adapter,
-								RF_RADIO_PATH_E	eRFPath,
+								enum RF_RADIO_PATH_E	eRFPath,
 								u32				RegAddr,
 								u32				BitMask,
 								u32				Data	);
@@ -317,15 +317,15 @@ extern	int	PHY_BBConfig8192D(	PADAPTER	A
 extern	int	PHY_RFConfig8192D(	PADAPTER	Adapter	);
 /* RF config */
 int	rtl8192d_PHY_ConfigRFWithParaFile(	PADAPTER	Adapter,
-												u8*	pFileName,
-												RF_RADIO_PATH_E	eRFPath);
+						u8 *pFileName,
+						enum RF_RADIO_PATH_E	eRFPath);
 int	rtl8192d_PHY_ConfigRFWithHeaderFile(	PADAPTER			Adapter,
-												RF_CONTENT			Content,
-												RF_RADIO_PATH_E	eRFPath);
+						RF_CONTENT			Content,
+						enum RF_RADIO_PATH_E	eRFPath);
 /* BB/RF readback check for making sure init OK */
 int	rtl8192d_PHY_CheckBBAndRFOK(	PADAPTER			Adapter,
-										HW90_BLOCK_E		CheckBlock,
-										RF_RADIO_PATH_E	eRFPath	  );
+				HW90_BLOCK_E		CheckBlock,
+				enum RF_RADIO_PATH_E	eRFPath	  );
 /* Read initi reg value for tx power setting. */
 void	rtl8192d_PHY_GetHWRegOriginalValue(	PADAPTER		Adapter	);
 
@@ -355,7 +355,7 @@ PHY_ScanOperationBackup8192D(PADAPTER	Ad
 //
 //void	PHY_SetBWModeCallback8192C(	PRT_TIMER		pTimer	);
 void	PHY_SetBWMode8192D(	PADAPTER			pAdapter,
-									HT_CHANNEL_WIDTH	ChnlWidth,
+			enum HT_CHANNEL_WIDTH	ChnlWidth,
 									unsigned char	Offset	);
 
 //
--- a/drivers/staging/rtl8192du/include/hal_intf.h
+++ b/drivers/staging/rtl8192du/include/hal_intf.h
@@ -167,7 +167,7 @@ struct hal_ops {
 	void	(*disable_interrupt)(PADAPTER Adapter);
 	s32	(*interrupt_handler)(PADAPTER Adapter);
 
-	void	(*set_bwmode_handler)(PADAPTER Adapter, HT_CHANNEL_WIDTH Bandwidth, u8 Offset);
+	void	(*set_bwmode_handler)(PADAPTER Adapter, enum HT_CHANNEL_WIDTH Bandwidth, u8 Offset);
 	void	(*set_channel_handler)(PADAPTER Adapter, u8 channel);
 
 	void	(*hal_dm_watchdog)(PADAPTER Adapter);
@@ -360,7 +360,7 @@ void rtw_hal_write_rfreg(_adapter *padap
 
 s32 rtw_hal_interrupt_handler(_adapter *padapter);
 
-void rtw_hal_set_bwmode(_adapter *padapter, HT_CHANNEL_WIDTH Bandwidth, u8 Offset);
+void rtw_hal_set_bwmode(_adapter *padapter, enum HT_CHANNEL_WIDTH Bandwidth, u8 Offset);
 void rtw_hal_set_chan(_adapter *padapter, u8 channel);
 
 void rtw_hal_dm_watchdog(_adapter *padapter);
--- a/drivers/staging/rtl8192du/include/rtl8192d_dm.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_dm.h
@@ -90,8 +90,7 @@ struct DIG_T {
 	u8		rx_gain_range_min_nolink;
 };
 
-typedef enum tag_Dynamic_Init_Gain_Operation_Type_Definition
-{
+enum DM_DIG_OP_E {
 	DIG_TYPE_THRESH_HIGH	= 0,
 	DIG_TYPE_THRESH_LOW	= 1,
 	DIG_TYPE_BACKOFF	= 2,
@@ -100,7 +99,7 @@ typedef enum tag_Dynamic_Init_Gain_Opera
 	DIG_TYPE_ENABLE		= 5,
 	DIG_TYPE_DISABLE	= 6,
 	DIG_OP_TYPE_MAX
-}DM_DIG_OP_E;
+};
 
 enum DM_CCK_PDTH_E {
 	CCK_PD_STAGE_LOWRSSI = 0,
@@ -108,40 +107,36 @@ enum DM_CCK_PDTH_E {
 	CCK_PD_STAGE_MAX = 3,
 };
 
-typedef enum tag_1R_CCA_Type_Definition
-{
+enum DM_1R_CCA_E {
 	CCA_MIN = 0,
 	CCA_1R =1,
 	CCA_2R = 2,
 	CCA_MAX = 3,
-}DM_1R_CCA_E;
+};
 
-typedef enum tag_RF_Type_Definition
-{
+enum DM_RF_E {
 	RF_Save =0,
 	RF_Normal = 1,
 	RF_MAX = 2,
-}DM_RF_E;
+};
 
-typedef enum tag_DIG_EXT_PORT_ALGO_Definition
-{
+enum DM_DIG_EXT_PORT_ALG_E {
 	DIG_EXT_PORT_STAGE_0 = 0,
 	DIG_EXT_PORT_STAGE_1 = 1,
 	DIG_EXT_PORT_STAGE_2 = 2,
 	DIG_EXT_PORT_STAGE_3 = 3,
 	DIG_EXT_PORT_STAGE_MAX = 4,
-}DM_DIG_EXT_PORT_ALG_E;
+};
 
 
-typedef enum tag_DIG_Connect_Definition
-{
+enum DM_DIG_CONNECT_E {
 	DIG_STA_DISCONNECT = 0,
 	DIG_STA_CONNECT = 1,
 	DIG_STA_BEFORE_CONNECT = 2,
 	DIG_MultiSTA_DISCONNECT = 3,
 	DIG_MultiSTA_CONNECT = 4,
 	DIG_CONNECT_MAX
-}DM_DIG_CONNECT_E;
+};
 
 
 #define		DM_DIG_THRESH_HIGH			40
@@ -175,8 +170,8 @@ typedef enum tag_DIG_Connect_Definition
 
 #define		DM_RATR_STA_INIT			0
 #define		DM_RATR_STA_HIGH			1
-#define			DM_RATR_STA_MIDDLE		2
-#define			DM_RATR_STA_LOW			3
+#define		DM_RATR_STA_MIDDLE		2
+#define		DM_RATR_STA_LOW			3
 
 #define		CTSToSelfTHVal					30
 #define		RegC38_TH						20
@@ -226,12 +221,11 @@ typedef struct _RATE_ADAPTIVE
 
 } RATE_ADAPTIVE, *PRATE_ADAPTIVE;
 
-typedef enum tag_SW_Antenna_Switch_Definition
-{
+enum DM_SWAS_E {
 	Antenna_B = 1,
 	Antenna_A = 2,
 	Antenna_MAX = 3,
-}DM_SWAS_E;
+};
 
 // 20100514 Joseph: Add definition for antenna switching test after link.
 // This indicates two different the steps.
--- a/drivers/staging/rtl8192du/include/rtl8192d_hal.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_hal.h
@@ -251,20 +251,20 @@ static u32 TargetChnl_2G[TARGET_CHNL_NUM
 
 #define MAX_PAGE_SIZE				4096	// @ page : 4k bytes
 
-typedef enum _FIRMWARE_SOURCE{
+enum FIRMWARE_SOURCE {
 	FW_SOURCE_IMG_FILE = 0,
-	FW_SOURCE_HEADER_FILE = 1,		//from header file
-}FIRMWARE_SOURCE, *PFIRMWARE_SOURCE;
+	FW_SOURCE_HEADER_FILE = 1,              //from header file
+};
 
-typedef struct _RT_FIRMWARE{
-	FIRMWARE_SOURCE	eFWSource;
+struct RT_FIRMWARE_92D {
+	enum FIRMWARE_SOURCE	eFWSource;
 	u8*			szFwBuffer;
 	u32			ulFwLength;
 #ifdef CONFIG_WOWLAN
 	u8*			szWoWLANFwBuffer;
 	u32			ulWoWLANFwLength;
 #endif //CONFIG_WOWLAN
-}RT_FIRMWARE, *PRT_FIRMWARE, RT_FIRMWARE_92D, *PRT_FIRMWARE_92D;
+};
 
 //
 // This structure must be cared byte-ordering
@@ -360,12 +360,12 @@ typedef struct _IQK_MATRIX_REGS_SETTING{
 
 #ifdef CONFIG_USB_RX_AGGREGATION
 
-typedef enum _USB_RX_AGG_MODE{
+enum USB_RX_AGG_MODE {
 	USB_RX_AGG_DISABLE,
 	USB_RX_AGG_DMA,
 	USB_RX_AGG_USB,
 	USB_RX_AGG_DMA_USB
-}USB_RX_AGG_MODE;
+};
 
 #define MAX_RX_DMA_BUFFER_SIZE	10240		// 10K for 8192C RX DMA buffer
 
@@ -494,7 +494,7 @@ typedef enum _USB_RX_AGG_MODE{
 #define IS_92D_E_CUT(version)				((IS_92D(version)) ? ((GET_CVID_CUT_VERSION(version) == E_CUT_VERSION) ? true : false) : false)
 #define IS_NORMAL_CHIP92D(version)		((GET_CVID_CHIP_TYPE(version)) ? true : false)
 
-typedef enum _VERSION_8192D{
+enum VERSION_8192D {
 	VERSION_TEST_CHIP_88C = 0x0000,
 	VERSION_TEST_CHIP_92C = 0x0020,
 	VERSION_TEST_UMC_CHIP_8723 = 0x0081,
@@ -519,7 +519,7 @@ typedef enum _VERSION_8192D{
 	VERSION_NORMAL_CHIP_92D_D_CUT_DUALPHY = 0x300a,
 	VERSION_NORMAL_CHIP_92D_E_CUT_SINGLEPHY = 0x402a,
 	VERSION_NORMAL_CHIP_92D_E_CUT_DUALPHY = 0x400a,
-}VERSION_8192D,*PVERSION_8192D;
+};
 
 
 //-------------------------------------------------------------------------
@@ -563,11 +563,11 @@ typedef struct _TxPowerInfo{
 // | 2byte|----8bytes----|1byte|--7bytes--| //92D
 #define EFUSE_OOB_PROTECT_BYTES		18 // PG data exclude header, dummy 7 bytes frome CP test and reserved 1byte.
 
-typedef enum _PA_MODE {
+enum PA_MODE {
 	PA_MODE_EXTERNAL = 0x00,
 	PA_MODE_INTERNAL_SP3T = 0x01,
 	PA_MODE_INTERNAL_SPDT = 0x02
-} PA_MODE;
+};
 
 /* Copy from rtl8192c */
 enum c2h_id_8192d {
@@ -598,7 +598,7 @@ typedef INTERFACE_SELECT_8192DUSB INTERF
 
 struct hal_data_8192du
 {
-	VERSION_8192D	VersionID;
+	enum VERSION_8192D	VersionID;
 
 	// add for 92D Phy mode/mac/Band mode
 	MACPHY_MODE_8192D	MacPhyMode92D;
@@ -624,7 +624,7 @@ struct hal_data_8192du
 	//current WIFI_PHY values
 	u32	ReceiveConfig;
 	WIRELESS_MODE	CurrentWirelessMode;
-	HT_CHANNEL_WIDTH	CurrentChannelBW;
+	enum HT_CHANNEL_WIDTH	CurrentChannelBW;
 	u8	CurrentChannel;
 	u8	nCur40MhzPrimeSC;// Control channel sub-carrier
 	u16	BasicRateSet;
@@ -760,7 +760,7 @@ struct hal_data_8192du
 	u16	HwRxPageSize;				// Hardware setting
 	u32	MaxUsbRxAggBlock;
 
-	USB_RX_AGG_MODE	UsbRxAggMode;
+	enum USB_RX_AGG_MODE	UsbRxAggMode;
 	u8	UsbRxAggBlockCount;			// USB Block count. Block size is 512-byte in hight speed and 64-byte in full speed
 	u8	UsbRxAggBlockTimeout;
 	u8	UsbRxAggPageCount;			// 8192C DMA page count
--- a/drivers/staging/rtl8192du/include/rtl8192d_rf.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_rf.h
@@ -75,7 +75,7 @@ void		rtl8192d_RF_ChangeTxPath(	PADAPTER
 										u16		DataRate);
 void		rtl8192d_PHY_RF6052SetBandwidth(
 										PADAPTER				Adapter,
-										HT_CHANNEL_WIDTH		Bandwidth);
+					enum HT_CHANNEL_WIDTH		Bandwidth);
 void	rtl8192d_PHY_RF6052SetCckTxPower(
 										PADAPTER	Adapter,
 										u8*		pPowerlevel);
--- a/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
@@ -99,8 +99,7 @@ extern unsigned char WMM_PARA_OUI[];
 //	If you just wnat to customize the acitions(scan period or join actions) about one of the channel plan,
 //	customize them in RT_CHANNEL_INFO in the RT_CHANNEL_LIST.
 //
-typedef enum _RT_CHANNEL_DOMAIN
-{
+enum RT_CHANNEL_DOMAIN {
 	//===== old channel plan mapping =====//
 	RT_CHANNEL_DOMAIN_FCC = 0x00,
 	RT_CHANNEL_DOMAIN_IC = 0x01,
@@ -150,10 +149,9 @@ typedef enum _RT_CHANNEL_DOMAIN
 	//===== Add new channel plan above this line===============//
 	RT_CHANNEL_DOMAIN_MAX,
 	RT_CHANNEL_DOMAIN_REALTEK_DEFINE = 0x7F,
-}RT_CHANNEL_DOMAIN, *PRT_CHANNEL_DOMAIN;
+};
 
-typedef enum _RT_CHANNEL_DOMAIN_2G
-{
+enum RT_CHANNEL_DOMAIN_2G {
 	RT_CHANNEL_DOMAIN_2G_WORLD = 0x00,		//Worldwird 13
 	RT_CHANNEL_DOMAIN_2G_ETSI1 = 0x01,		//Europe
 	RT_CHANNEL_DOMAIN_2G_FCC1 = 0x02,		//US
@@ -162,10 +160,9 @@ typedef enum _RT_CHANNEL_DOMAIN_2G
 	RT_CHANNEL_DOMAIN_2G_NULL = 0x05,
 	//===== Add new channel plan above this line===============//
 	RT_CHANNEL_DOMAIN_2G_MAX,
-}RT_CHANNEL_DOMAIN_2G, *PRT_CHANNEL_DOMAIN_2G;
+};
 
-typedef enum _RT_CHANNEL_DOMAIN_5G
-{
+enum RT_CHANNEL_DOMAIN_5G {
 	RT_CHANNEL_DOMAIN_5G_NULL = 0x00,
 	RT_CHANNEL_DOMAIN_5G_ETSI1 = 0x01,		//Europe
 	RT_CHANNEL_DOMAIN_5G_ETSI2 = 0x02,		//Australia, New Zealand
@@ -189,7 +186,7 @@ typedef enum _RT_CHANNEL_DOMAIN_5G
 	RT_CHANNEL_DOMAIN_5G_JAPAN_NO_DFS = 0x12,
 	RT_CHANNEL_DOMAIN_5G_FCC4_NO_DFS = 0x13,
 	RT_CHANNEL_DOMAIN_5G_MAX,
-}RT_CHANNEL_DOMAIN_5G, *PRT_CHANNEL_DOMAIN_5G;
+};
 
 #define rtw_is_channel_plan_valid(chplan) (chplan<RT_CHANNEL_DOMAIN_MAX || chplan == RT_CHANNEL_DOMAIN_REALTEK_DEFINE)
 
--- a/drivers/staging/rtl8192du/include/rtw_mp.h
+++ b/drivers/staging/rtl8192du/include/rtw_mp.h
@@ -341,7 +341,7 @@ struct bb_reg_param {
 #define BB_REG_BASE_ADDR		0x800
 
 /* MP variables */
-typedef enum _MP_MODE_ {
+enum MP_MODE {
 	MP_OFF,
 	MP_ON,
 	MP_ERR,
@@ -351,7 +351,7 @@ typedef enum _MP_MODE_ {
 	MP_SINGLE_TONE_TX,
 	MP_PACKET_TX,
 	MP_PACKET_RX
-} MP_MODE;
+};
 
 #define RF_PATH_A	0
 #define RF_PATH_B	1
@@ -363,8 +363,7 @@ typedef enum _MP_MODE_ {
 extern u8 mpdatarate[NumRates];
 
 /* MP set force data rate base on the definition. */
-typedef enum _MPT_RATE_INDEX
-{
+enum MPT_RATE_E {
 	/* CCK rate. */
 	MPT_RATE_1M,	/* 0 */
 	MPT_RATE_2M,
@@ -399,33 +398,33 @@ typedef enum _MPT_RATE_INDEX
 	MPT_RATE_MCS14,
 	MPT_RATE_MCS15,	/* 27 */
 	MPT_RATE_LAST
-}MPT_RATE_E, *PMPT_RATE_E;
+};
 
 #define MAX_TX_PWR_INDEX_N_MODE 64	// 0x3F
 
-typedef enum _POWER_MODE_ {
+enum POWER_MODE {
 	POWER_LOW = 0,
 	POWER_NORMAL
-}POWER_MODE;
+};
 
 
 #define RX_PKT_BROADCAST	1
 #define RX_PKT_DEST_ADDR	2
 #define RX_PKT_PHY_MATCH	3
 
-typedef enum _ENCRY_CTRL_STATE_ {
+enum ENCRY_CTRL_STATE {
 	HW_CONTROL,		//hw encryption& decryption
 	SW_CONTROL,		//sw encryption& decryption
 	HW_ENCRY_SW_DECRY,	//hw encryption & sw decryption
 	SW_ENCRY_HW_DECRY	//sw encryption & hw decryption
-}ENCRY_CTRL_STATE;
+};
 
-typedef enum _OFDM_TX_MODE {
+enum OFDM_TX_MODE {
 	OFDM_ALL_OFF		= 0,
 	OFDM_ContinuousTx	= 1,
 	OFDM_SingleCarrier	= 2,
 	OFDM_SingleTone		= 4,
-} OFDM_TX_MODE;
+};
 
 //=======================================================================
 //extern struct mp_xmit_frame *alloc_mp_xmitframe(struct mp_priv *pmp_priv);
--- a/drivers/staging/rtl8192du/include/rtw_pwrctrl.h
+++ b/drivers/staging/rtl8192du/include/rtw_pwrctrl.h
@@ -143,14 +143,13 @@ __inline static void _exit_pwrlock(_pwrl
 #define EXE_PWR_LPS		0x04
 
 // RF state.
-typedef enum _rt_rf_power_state
-{
+enum rt_rf_power_state {
 	rf_on,		// RF is on after RFSleep or RFOff
 	rf_sleep,	// 802.11 Power Save mode
 	rf_off,		// HW/SW Radio OFF or Inactive Power Save
 	//=====Add the new RF state above this line=====//
 	rf_max
-}rt_rf_power_state;
+};
 
 // RF Off Level for IPS or HW/SW radio off
 #define	RT_RF_OFF_LEVL_ASPM			BIT(0)	// PCI ASPM
@@ -237,9 +236,9 @@ struct pwrctrl_priv
 
 	int		ps_flag;
 
-	rt_rf_power_state	rf_pwrstate;//cur power state
+	enum rt_rf_power_state	rf_pwrstate;//cur power state
 	//rt_rf_power_state	current_rfpwrstate;
-	rt_rf_power_state	change_rfpwrstate;
+	enum rt_rf_power_state	change_rfpwrstate;
 
 	u8		wepkeymask;
 	u8		bHWPowerdown;//if support hw power down
--- a/drivers/staging/rtl8192du/include/rtw_rf.h
+++ b/drivers/staging/rtl8192du/include/rtw_rf.h
@@ -64,7 +64,7 @@ struct	regulatory_class {
 	u8	modem;
 };
 
-typedef enum _CAPABILITY{
+enum CAPABILITY {
 	cESS			= 0x0001,
 	cIBSS			= 0x0002,
 	cPollable		= 0x0004,
@@ -81,24 +81,24 @@ typedef enum _CAPABILITY{
 	cDSSS_OFDM	= 0x2000,
 	cDelayedBA		= 0x4000,
 	cImmediateBA	= 0x8000,
-}CAPABILITY, *PCAPABILITY;
+};
 
-enum	_REG_PREAMBLE_MODE{
+enum	_REG_PREAMBLE_MODE {
 	PREAMBLE_LONG	= 1,
 	PREAMBLE_AUTO	= 2,
 	PREAMBLE_SHORT	= 3,
 };
 
 
-enum _RTL8712_RF_MIMO_CONFIG_{
- RTL8712_RFCONFIG_1T=0x10,
- RTL8712_RFCONFIG_2T=0x20,
- RTL8712_RFCONFIG_1R=0x01,
- RTL8712_RFCONFIG_2R=0x02,
- RTL8712_RFCONFIG_1T1R=0x11,
- RTL8712_RFCONFIG_1T2R=0x12,
- RTL8712_RFCONFIG_TURBO=0x92,
- RTL8712_RFCONFIG_2T2R=0x22
+enum _RTL8712_RF_MIMO_CONFIG_ {
+	RTL8712_RFCONFIG_1T = 0x10,
+	RTL8712_RFCONFIG_2T = 0x20,
+	RTL8712_RFCONFIG_1R = 0x01,
+	RTL8712_RFCONFIG_2R = 0x02,
+	RTL8712_RFCONFIG_1T1R = 0x11,
+	RTL8712_RFCONFIG_1T2R = 0x12,
+	RTL8712_RFCONFIG_TURBO = 0x92,
+	RTL8712_RFCONFIG_2T2R = 0x22
 };
 
 
@@ -109,40 +109,39 @@ enum _RTL8712_RF_MIMO_CONFIG_{
 
 // Represent Channel Width in HT Capabilities
 //
-typedef enum _HT_CHANNEL_WIDTH {
+enum HT_CHANNEL_WIDTH {
 	HT_CHANNEL_WIDTH_20 = 0,
 	HT_CHANNEL_WIDTH_40 = 1,
-}HT_CHANNEL_WIDTH, *PHT_CHANNEL_WIDTH;
+};
 
 //
 // Represent Extention Channel Offset in HT Capabilities
 // This is available only in 40Mhz mode.
 //
-typedef enum _HT_EXTCHNL_OFFSET{
+enum HT_EXTCHNL_OFFSET {
 	HT_EXTCHNL_OFFSET_NO_EXT = 0,
 	HT_EXTCHNL_OFFSET_UPPER = 1,
 	HT_EXTCHNL_OFFSET_NO_DEF = 2,
 	HT_EXTCHNL_OFFSET_LOWER = 3,
-}HT_EXTCHNL_OFFSET, *PHT_EXTCHNL_OFFSET;
+};
 
 /* 2007/11/15 MH Define different RF type. */
-typedef	enum _RT_RF_TYPE_DEFINITION
-{
+enum RT_RF_TYPE_DEF_E {
 	RF_1T2R = 0,
 	RF_2T4R = 1,
 	RF_2T2R = 2,
 	RF_1T1R = 3,
 	RF_2T2R_GREEN = 4,
 	RF_819X_MAX_TYPE = 5,
-}RT_RF_TYPE_DEF_E;
+};
 
-typedef enum _RF_RADIO_PATH{
+enum RF_RADIO_PATH_E {
 	RF_PATH_A = 0,			//Radio Path A
 	RF_PATH_B = 1,			//Radio Path B
 	RF_PATH_C = 2,			//Radio Path C
 	RF_PATH_D = 3,			//Radio Path D
 	//RF_PATH_MAX				//Max RF number 90 support
-}RF_RADIO_PATH_E, *PRF_RADIO_PATH_E;
+};
 
 u32 rtw_ch2freq(u32 ch);
 u32 rtw_freq2ch(u32 freq);
--- a/drivers/staging/rtl8192du/include/usb_osintf.h
+++ b/drivers/staging/rtl8192du/include/usb_osintf.h
@@ -31,7 +31,9 @@
 //uint usb_dvobj_init(_adapter * adapter);
 //void usb_dvobj_deinit(_adapter * adapter);
 
-u8 usbvendorrequest(struct dvobj_priv *pdvobjpriv, RT_USB_BREQUEST brequest, RT_USB_WVALUE wvalue, u8 windex, void* data, u8 datalen, u8 isdirectionin);
-
+u8 usbvendorrequest(struct dvobj_priv *pdvobjpriv,
+		    enum RT_USB_BREQUEST brequest,
+		    enum RT_USB_WVALUE wvalue, u8 windex, void *data,
+		    u8 datalen, u8 isdirectionin);
 
 #endif
--- a/drivers/staging/rtl8192du/include/usb_vendor_req.h
+++ b/drivers/staging/rtl8192du/include/usb_vendor_req.h
@@ -34,20 +34,20 @@
 #define	RT_USB_SYSCLK_60MHZ		2
 
 
-typedef enum _RT_USB_BREQUEST {
+enum RT_USB_BREQUEST {
 	RT_USB_SET_REGISTER		= 1,
 	RT_USB_SET_SYSCLK		= 2,
 	RT_USB_GET_SYSCLK		= 3,
 	RT_USB_GET_REGISTER		= 4
-} RT_USB_BREQUEST;
+};
 
 
-typedef enum _RT_USB_WVALUE {
+enum RT_USB_WVALUE {
 	RT_USB_RESET_MASK	=	1,
 	RT_USB_SLEEP_MASK	=	2,
 	RT_USB_USB_HRCPWM	=	3,
 	RT_USB_LDO			=	4,
 	RT_USB_BOOT_TYPE	=	5
-} RT_USB_WVALUE;
+};
 
 #endif
