From e7f8256095f9d3d72011575911621773dfb9a72f Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 15 Mar 2014 17:50:37 -0500
Subject: [PATCH 305/390] Remove undefined DBG_TX

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 os_dep/usb_ops_linux.c | 54 +++++++++++++++++++++++---------------------------
 1 file changed, 25 insertions(+), 29 deletions(-)

--- a/drivers/staging/rtl8192du/os_dep/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_ops_linux.c
@@ -237,41 +237,37 @@ u32 usb_write_port(struct intf_hdl *pint
 	RT_TRACE(_module_hci_ops_os_c_,_drv_err_,("+usb_write_port\n"));
 
 	if ((padapter->bDriverStopped) || (padapter->bSurpriseRemoved) ||(padapter->pwrctrlpriv.pnp_bstop_trx)) {
-		#ifdef DBG_TX
-		DBG_8192D(" DBG_TX %s:%d bDriverStopped%d, bSurpriseRemoved:%d, pnp_bstop_trx:%d\n",__func__, __LINE__
-			,padapter->bDriverStopped, padapter->bSurpriseRemoved, padapter->pwrctrlpriv.pnp_bstop_trx);
-		#endif
-		RT_TRACE(_module_hci_ops_os_c_,_drv_err_,("usb_write_port:(padapter->bDriverStopped ||padapter->bSurpriseRemoved ||adapter->pwrctrlpriv.pnp_bstop_trx)!!!\n"));
+		RT_TRACE(_module_hci_ops_os_c_, _drv_err_,
+			 ("usb_write_port:(padapter->bDriverStopped ||padapter->bSurpriseRemoved ||adapter->pwrctrlpriv.pnp_bstop_trx)!!!\n"));
 		rtw_sctx_done_err(&pxmitbuf->sctx, RTW_SCTX_DONE_TX_DENY);
 		goto exit;
 	}
 
 	spin_lock_irqsave(&pxmitpriv->lock, irqL);
 
-	switch (addr)
-	{
-		case VO_QUEUE_INX:
-			pxmitpriv->voq_cnt++;
-			pxmitbuf->flags = VO_QUEUE_INX;
-			break;
-		case VI_QUEUE_INX:
-			pxmitpriv->viq_cnt++;
-			pxmitbuf->flags = VI_QUEUE_INX;
-			break;
-		case BE_QUEUE_INX:
-			pxmitpriv->beq_cnt++;
-			pxmitbuf->flags = BE_QUEUE_INX;
-			break;
-		case BK_QUEUE_INX:
-			pxmitpriv->bkq_cnt++;
-			pxmitbuf->flags = BK_QUEUE_INX;
-			break;
-		case HIGH_QUEUE_INX:
-			pxmitbuf->flags = HIGH_QUEUE_INX;
-			break;
-		default:
-			pxmitbuf->flags = MGT_QUEUE_INX;
-			break;
+	switch (addr) {
+	case VO_QUEUE_INX:
+		pxmitpriv->voq_cnt++;
+		pxmitbuf->flags = VO_QUEUE_INX;
+		break;
+	case VI_QUEUE_INX:
+		pxmitpriv->viq_cnt++;
+		pxmitbuf->flags = VI_QUEUE_INX;
+		break;
+	case BE_QUEUE_INX:
+		pxmitpriv->beq_cnt++;
+		pxmitbuf->flags = BE_QUEUE_INX;
+		break;
+	case BK_QUEUE_INX:
+		pxmitpriv->bkq_cnt++;
+		pxmitbuf->flags = BK_QUEUE_INX;
+		break;
+	case HIGH_QUEUE_INX:
+		pxmitbuf->flags = HIGH_QUEUE_INX;
+		break;
+	default:
+		pxmitbuf->flags = MGT_QUEUE_INX;
+		break;
 	}
 
 	spin_unlock_irqrestore(&pxmitpriv->lock, irqL);
