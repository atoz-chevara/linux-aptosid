From 9ef99e1000f83ab32436d1b2d6f49e5fc898d38a Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Wed, 17 Apr 2013 14:19:37 -0500
Subject: [PATCH 013/210] Remove additional PLATFORM dependent dead code

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 include/drv_conf.h  |  16 -------
 include/rtw_ioctl.h | 135 +---------------------------------------------------
 include/rtw_mp.h    |  53 ---------------------
 include/usb_ops.h   |   9 ----
 os_dep/os_intfs.c   |  19 --------
 5 files changed, 2 insertions(+), 230 deletions(-)

--- a/drivers/staging/rtl8192du/include/drv_conf.h
+++ b/drivers/staging/rtl8192du/include/drv_conf.h
@@ -21,17 +21,6 @@
 #define __DRV_CONF_H__
 #include "autoconf.h"
 
-#if defined (PLATFORM_LINUX) && defined (PLATFORM_WINDOWS)
-
-#error "Shall be Linux or Windows, but not both!\n"
-
-#endif
-
-//Older Android kernel doesn't has CONFIG_ANDROID defined,
-//add this to force CONFIG_ANDROID defined
-#ifdef CONFIG_PLATFORM_ANDROID
-#define CONFIG_ANDROID
-#endif
 
 #ifdef CONFIG_ANDROID
 //Some Android build will restart the UI while non-printable ascii is passed
@@ -39,11 +28,6 @@
 //for Android here. If you are sure there is no risk on your system about this,
 //mask this macro define to support non-printable ascii ssid.
 //#define CONFIG_VALIDATE_SSID
-#ifdef CONFIG_PLATFORM_ARM_SUNxI
-	#ifdef CONFIG_VALIDATE_SSID
-		#undef CONFIG_VALIDATE_SSID
-	#endif
-#endif
 //Android expect dbm as the rx signal strength unit
 #define CONFIG_SIGNAL_DISPLAY_DBM
 #endif
--- a/drivers/staging/rtl8192du/include/rtw_ioctl.h
+++ b/drivers/staging/rtl8192du/include/rtw_ioctl.h
@@ -102,8 +102,7 @@ struct oid_obj_priv {
 	NDIS_STATUS (*oidfuns)(struct oid_par_priv *poid_par_priv);
 };
 
-#if (defined(CONFIG_MP_INCLUDED) && defined(_RTW_MP_IOCTL_C_)) || \
-	(defined(PLATFORM_WINDOWS) && defined(_RTW_IOCTL_RTL_C_))
+#if (defined(CONFIG_MP_INCLUDED) && defined(_RTW_MP_IOCTL_C_))
 static NDIS_STATUS oid_null_function(struct oid_par_priv* poid_par_priv)
 {
 	_func_enter_;
@@ -112,138 +111,8 @@ static NDIS_STATUS oid_null_function(str
 }
 #endif
 
-#ifdef PLATFORM_WINDOWS
 
-int TranslateNdisPsToRtPs(IN NDIS_802_11_POWER_MODE	ndisPsMode);
-
-//OID Handler for Segment 1
-NDIS_STATUS oid_gen_supported_list_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_hardware_status_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_media_supported_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_media_in_use_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_maximum_lookahead_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_maximum_frame_size_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_link_speed_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_transmit_buffer_space_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_receive_buffer_space_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_transmit_block_size_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_receive_block_size_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_vendor_id_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_vendor_description_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_current_packet_filter_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_current_lookahead_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_driver_version_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_maximum_total_size_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_protocol_options_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_mac_options_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_media_connect_status_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_maximum_send_packets_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_vendor_driver_version_hdl(struct oid_par_priv* poid_par_priv);
-
-
-//OID Handler for Segment 2
-NDIS_STATUS oid_gen_physical_medium_hdl(struct oid_par_priv* poid_par_priv);
-
-//OID Handler for Segment 3
-NDIS_STATUS oid_gen_xmit_ok_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_rcv_ok_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_xmit_error_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_rcv_error_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_gen_rcv_no_buffer_hdl(struct oid_par_priv* poid_par_priv);
-
-
-//OID Handler for Segment 4
-NDIS_STATUS oid_802_3_permanent_address_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_current_address_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_multicast_list_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_maximum_list_size_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_mac_options_hdl(struct oid_par_priv* poid_par_priv);
-
-
-
-//OID Handler for Segment 5
-NDIS_STATUS oid_802_3_rcv_error_alignment_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_xmit_one_collision_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_xmit_more_collisions_hdl(struct oid_par_priv* poid_par_priv);
-
-
-//OID Handler for Segment 6
-NDIS_STATUS oid_802_3_xmit_deferred_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_xmit_max_collisions_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_rcv_overrun_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_xmit_underrun_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_xmit_heartbeat_failure_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_xmit_times_crs_lost_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_3_xmit_late_collisions_hdl(struct oid_par_priv* poid_par_priv);
-
-
-
-//OID Handler for Segment 7
-NDIS_STATUS oid_pnp_capabilities_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_pnp_set_power_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_pnp_query_power_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_pnp_add_wake_up_pattern_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_pnp_remove_wake_up_pattern_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_pnp_wake_up_pattern_list_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_pnp_enable_wake_up_hdl(struct oid_par_priv* poid_par_priv);
-
-
-
-//OID Handler for Segment 8
-NDIS_STATUS oid_802_11_bssid_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_ssid_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_infrastructure_mode_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_add_wep_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_remove_wep_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_disassociate_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_authentication_mode_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_privacy_filter_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_bssid_list_scan_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_encryption_status_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_reload_defaults_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_add_key_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_remove_key_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_association_information_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_test_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_media_stream_mode_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_capability_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_pmkid_hdl(struct oid_par_priv* poid_par_priv);
-
-
-
-
-
-//OID Handler for Segment 9
-NDIS_STATUS oid_802_11_network_types_supported_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_network_type_in_use_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_tx_power_level_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_rssi_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_rssi_trigger_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_fragmentation_threshold_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_rts_threshold_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_number_of_antennas_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_rx_antenna_selected_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_tx_antenna_selected_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_supported_rates_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_desired_rates_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_configuration_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_power_mode_hdl(struct oid_par_priv* poid_par_priv);
-NDIS_STATUS oid_802_11_bssid_list_hdl(struct oid_par_priv* poid_par_priv);
-
-
-//OID Handler for Segment 10
-NDIS_STATUS oid_802_11_statistics_hdl(struct oid_par_priv* poid_par_priv);
-
-
-//OID Handler for Segment ED
-NDIS_STATUS oid_rt_mh_vender_id_hdl(struct oid_par_priv* poid_par_priv);
-
-void Set_802_3_MULTICAST_LIST(ADAPTER *pAdapter, UCHAR *MCListbuf, ULONG MCListlen, BOOLEAN bAcceptAllMulticast);
-
-#endif// end of PLATFORM_WINDOWS
-
-
-#if defined(PLATFORM_LINUX) && defined(CONFIG_WIRELESS_EXT)
+#if defined(CONFIG_WIRELESS_EXT)
 extern struct iw_handler_def  rtw_handlers_def;
 #endif
 
--- a/drivers/staging/rtl8192du/include/rtw_mp.h
+++ b/drivers/staging/rtl8192du/include/rtw_mp.h
@@ -20,7 +20,6 @@
 #ifndef _RTW_MP_H_
 #define _RTW_MP_H_
 
-#ifndef PLATFORM_WINDOWS
 //	00 - Success
 //	11 - Error
 #define STATUS_SUCCESS				(0x00000000L)
@@ -80,7 +79,6 @@
 #define NDIS_STATUS_INCOMPATABLE_QOS		((NDIS_STATUS)0xC0010027L)  // cause 49
 #define NDIS_STATUS_AAL_PARAMS_UNSUPPORTED	((NDIS_STATUS)0xC0010028L)  // cause 93
 #define NDIS_STATUS_NO_ROUTE_TO_DESTINATION	((NDIS_STATUS)0xC0010029L)  // cause 3
-#endif /* #ifndef PLATFORM_WINDOWS */
 
 #define MAX_MP_XMITBUF_SZ	2048
 #define NR_MP_XMITFRAME		8
@@ -97,29 +95,19 @@ struct mp_xmit_frame
 
 	_adapter *padapter;
 
-#ifdef CONFIG_USB_HCI
-
 	//insert urb, irp, and irpcnt info below...
 	//max frag_cnt = 8
 
 	u8 *mem_addr;
 	u32 sz[8];
 
-#if defined(PLATFORM_OS_XP) || defined(PLATFORM_LINUX)
 	PURB pxmit_urb[8];
-#endif
-
-#ifdef PLATFORM_OS_XP
-	PIRP pxmit_irp[8];
-#endif
 
 	u8 bpending[8];
 	sint ac_tag[8];
 	sint last[8];
 	uint irpcnt;
 	uint fragcnt;
-#endif /* CONFIG_USB_HCI */
-
 	uint mem[(MAX_MP_XMITBUF_SZ >> 2)];
 };
 
@@ -133,22 +121,6 @@ struct mp_wiparam
 
 typedef void(*wi_act_func)(void* padapter);
 
-#ifdef PLATFORM_WINDOWS
-struct mp_wi_cntx
-{
-	u8 bmpdrv_unload;
-
-	// Work Item
-	NDIS_WORK_ITEM mp_wi;
-	NDIS_EVENT mp_wi_evt;
-	_lock mp_wi_lock;
-	u8 bmp_wi_progress;
-	wi_act_func curractfunc;
-	// Variable needed in each implementation of CurrActFunc.
-	struct mp_wiparam param;
-};
-#endif
-
 struct mp_tx
 {
 	u8 stop;
@@ -362,31 +334,6 @@ struct mp_priv
 	struct wlan_network mp_network;
 	NDIS_802_11_MAC_ADDRESS network_macaddr;
 
-#ifdef PLATFORM_WINDOWS
-	u32 rx_testcnt;
-	u32 rx_testcnt1;
-	u32 rx_testcnt2;
-	u32 tx_testcnt;
-	u32 tx_testcnt1;
-
-	struct mp_wi_cntx wi_cntx;
-
-	u8 h2c_result;
-	u8 h2c_seqnum;
-	u16 h2c_cmdcode;
-	u8 h2c_resp_parambuf[512];
-	_lock h2c_lock;
-	_lock wkitm_lock;
-	u32 h2c_cmdcnt;
-	NDIS_EVENT h2c_cmd_evt;
-	NDIS_EVENT c2h_set;
-	NDIS_EVENT h2c_clr;
-	NDIS_EVENT cpwm_int;
-
-	NDIS_EVENT scsir_full_evt;
-	NDIS_EVENT scsiw_empty_evt;
-#endif
-
 	u8 *pallocated_mp_xmitframe_buf;
 	u8 *pmp_xmtframe_buf;
 	_queue free_mp_xmitqueue;
--- a/drivers/staging/rtl8192du/include/usb_ops.h
+++ b/drivers/staging/rtl8192du/include/usb_ops.h
@@ -38,7 +38,6 @@ enum{
 #define MAX_VENDOR_REQ_CMD_SIZE	254		//8188cu SIE Support
 #define MAX_USB_IO_CTL_SIZE		(MAX_VENDOR_REQ_CMD_SIZE +ALIGNMENT_UNIT)
 
-#ifdef PLATFORM_LINUX
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,12))
 #define rtw_usb_control_msg(dev, pipe, request, requesttype, value, index, data, size, timeout_ms) \
 	usb_control_msg((dev), (pipe), (request), (requesttype), (value), (index), (data), (size), (timeout_ms))
@@ -53,7 +52,6 @@ enum{
 		((timeout_ms) == 0) ||((timeout_ms)*HZ/1000>0)?((timeout_ms)*HZ/1000):1)
 #endif
 #include <usb_ops_linux.h>
-#endif //PLATFORM_LINUX
 
 #ifdef CONFIG_RTL8192C
 void rtl8192cu_set_intf_ops(struct _io_ops *pops);
@@ -68,14 +66,7 @@ void rtl8192cu_xmit_tasklet(void *priv);
 void rtl8192du_set_intf_ops(struct _io_ops *pops);
 #define usb_set_intf_ops	rtl8192du_set_intf_ops
 
-#ifndef PLATFORM_FREEBSD
 void rtl8192du_recv_tasklet(void *priv);
-#else	// PLATFORM_FREEBSD
-void rtl8192du_recv_tasklet(void *priv, int npending);
-#ifdef CONFIG_RX_INDICATE_QUEUE
-void rtw_rx_indicate_tasklet(void *priv, int npending);
-#endif	// CONFIG_RX_INDICATE_QUEUE
-#endif	// PLATFORM_FREEBSD
 
 void rtl8192du_xmit_tasklet(void *priv);
 #endif
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -21,12 +21,6 @@
 
 #include <drv_conf.h>
 
-#if defined (PLATFORM_LINUX) && defined (PLATFORM_WINDOWS)
-
-#error "Shall be Linux or Windows, but not both!\n"
-
-#endif
-
 #include <osdep_service.h>
 #include <drv_types.h>
 #include <xmit_osdep.h>
@@ -35,13 +29,7 @@
 #include <rtw_ioctl.h>
 #include <rtw_version.h>
 
-#ifdef CONFIG_USB_HCI
 #include <usb_osintf.h>
-#endif
-
-#ifdef CONFIG_PCI_HCI
-#include <pci_osintf.h>
-#endif
 
 #ifdef CONFIG_BR_EXT
 #include <rtw_br_ext.h>
@@ -267,7 +255,6 @@ int _netdev_open(struct net_device *pnet
 int netdev_open (struct net_device *pnetdev);
 static int netdev_close (struct net_device *pnetdev);
 
-//#ifdef RTK_DMP_PLATFORM
 #ifdef CONFIG_PROC_DEBUG
 #define RTL8192C_PROC_NAME "rtl819xC"
 #define RTL8192D_PROC_NAME "rtl819xD"
@@ -1447,9 +1434,6 @@ void rtw_cancel_all_timer(_adapter *pada
 	// cancel dm  timer
 	rtw_hal_dm_deinit(padapter);
 
-#ifdef CONFIG_PLATFORM_FS_MX61
-	msleep(50);
-#endif
 }
 
 u8 rtw_free_drv_sw(_adapter *padapter)
@@ -2394,10 +2378,7 @@ int _netdev_open(struct net_device *pnet
 		{
 			padapter->intf_start(padapter);
 		}
-
-#ifndef RTK_DMP_PLATFORM
 		rtw_proc_init_one(pnetdev);
-#endif
 
 #ifdef CONFIG_IOCTL_CFG80211
 		rtw_cfg80211_init_wiphy(padapter);
