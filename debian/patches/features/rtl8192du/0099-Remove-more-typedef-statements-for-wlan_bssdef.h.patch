From 1d7726a58bd7b2a7ccbc03e1d73b535fae5b3159 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Tue, 30 Apr 2013 16:20:26 -0500
Subject: [PATCH 099/210] Remove more typedef statements for wlan_bssdef.h

With this commit, all the trivial typedefs have been remoced.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c           |  42 ++++++------
 core/rtw_cmd.c          |  20 +++---
 core/rtw_ieee80211.c    |   4 +-
 core/rtw_ioctl_set.c    |  18 ++---
 core/rtw_mlme.c         |  60 ++++++++--------
 core/rtw_mlme_ext.c     | 110 +++++++++++++++---------------
 core/rtw_tdls.c         |   2 +-
 core/rtw_wlan_util.c    |  50 +++++++-------
 hal/rtl8192d_cmd.c      |   8 +--
 hal/usb_halinit.c       |   4 +-
 include/drv_types.h     |   8 +--
 include/hal_intf.h      |   4 +-
 include/ieee80211.h     |   2 +-
 include/rtl8192d_hal.h  |  11 ---
 include/rtw_ap.h        |   4 +-
 include/rtw_cmd.h       |   6 +-
 include/rtw_event.h     |   4 +-
 include/rtw_ioctl_set.h |   6 +-
 include/rtw_mlme.h      |   6 +-
 include/rtw_mlme_ext.h  |  20 +++---
 include/rtw_security.h  |   4 +-
 include/wlan_bssdef.h   | 178 ++++++++++++++++++++----------------------------
 os_dep/ioctl_cfg80211.c |   4 +-
 os_dep/ioctl_linux.c    |  30 ++++----
 24 files changed, 282 insertions(+), 323 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -85,7 +85,7 @@ static void update_BCNTIM(struct rtw_ada
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	struct mlme_ext_priv *pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX *pnetwork_mlmeext = &(pmlmeinfo->network);
+	struct wlan_bssid_ex *pnetwork_mlmeext = &(pmlmeinfo->network);
 	unsigned char *pie = pnetwork_mlmeext->IEs;
 
 	//DBG_8192D("%s\n", __FUNCTION__);
@@ -202,17 +202,17 @@ static void update_BCNTIM(struct rtw_ada
 
 }
 
-void rtw_add_bcn_ie(struct rtw_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index, u8 *data, u8 len)
+void rtw_add_bcn_ie(struct rtw_adapter *padapter, struct wlan_bssid_ex *pnetwork, u8 index, u8 *data, u8 len)
 {
-	PNDIS_802_11_VARIABLE_IEs	pIE;
+	struct ndis_802_11_variable_ies *	pIE;
 	u8	bmatch = false;
 	u8	*pie = pnetwork->IEs;
 	u8	*p, *dst_ie, *premainder_ie=NULL, *pbackup_remainder_ie=NULL;
 	u32	i, offset, ielen, ie_offset, remainder_ielen = 0;
 
-	for (i = sizeof(NDIS_802_11_FIXED_IEs); i < pnetwork->IELength;)
+	for (i = sizeof(struct ndis_802_11_fixed_ies); i < pnetwork->IELength;)
 	{
-		pIE = (PNDIS_802_11_VARIABLE_IEs)(pnetwork->IEs + i);
+		pIE = (struct ndis_802_11_variable_ies *)(pnetwork->IEs + i);
 
 		if (pIE->ElementID > index)
 		{
@@ -272,7 +272,7 @@ void rtw_add_bcn_ie(struct rtw_adapter *
 	pnetwork->IELength = offset + remainder_ielen;
 }
 
-void rtw_remove_bcn_ie(struct rtw_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index)
+void rtw_remove_bcn_ie(struct rtw_adapter *padapter, struct wlan_bssid_ex *pnetwork, u8 index)
 {
 	u8 *p, *dst_ie, *premainder_ie=NULL, *pbackup_remainder_ie=NULL;
 	uint offset, ielen, ie_offset, remainder_ielen = 0;
@@ -574,7 +574,7 @@ static void add_RATid(struct rtw_adapter
 	unsigned int tx_ra_bitmap=0;
 	struct ht_priv	*psta_ht = NULL;
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
-	WLAN_BSSID_EX *pcur_network = (WLAN_BSSID_EX *)&pmlmepriv->cur_network.network;
+	struct wlan_bssid_ex *pcur_network = (struct wlan_bssid_ex *)&pmlmepriv->cur_network.network;
 
 
 	if(psta)
@@ -789,7 +789,7 @@ static void update_bmc_sta(struct rtw_ad
 	int i, supportRateNum = 0;
 	unsigned int tx_ra_bitmap=0;
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
-	WLAN_BSSID_EX *pcur_network = (WLAN_BSSID_EX *)&pmlmepriv->cur_network.network;
+	struct wlan_bssid_ex *pcur_network = (struct wlan_bssid_ex *)&pmlmepriv->cur_network.network;
 	struct sta_info *psta = rtw_get_bcmc_stainfo(padapter);
 
 	if(psta)
@@ -1023,10 +1023,10 @@ static void start_bss_network(struct rtw
 	struct registry_priv	 *pregpriv = &padapter->registrypriv;
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 	struct security_priv* psecuritypriv=&(padapter->securitypriv);
-	WLAN_BSSID_EX *pnetwork = (WLAN_BSSID_EX *)&pmlmepriv->cur_network.network;
+	struct wlan_bssid_ex *pnetwork = (struct wlan_bssid_ex *)&pmlmepriv->cur_network.network;
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX *pnetwork_mlmeext = &(pmlmeinfo->network);
+	struct wlan_bssid_ex *pnetwork_mlmeext = &(pmlmeinfo->network);
 	struct HT_info_element *pht_info=NULL;
 #ifdef CONFIG_P2P
 	struct wifidirect_info	*pwdinfo = &(padapter->wdinfo);
@@ -1137,7 +1137,7 @@ static void start_bss_network(struct rtw
 	}
 
 	//set channel, bwmode
-	p = rtw_get_ie((pnetwork->IEs + sizeof(NDIS_802_11_FIXED_IEs)), _HT_ADD_INFO_IE_, &ie_len, (pnetwork->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+	p = rtw_get_ie((pnetwork->IEs + sizeof(struct ndis_802_11_fixed_ies)), _HT_ADD_INFO_IE_, &ie_len, (pnetwork->IELength - sizeof(struct ndis_802_11_fixed_ies)));
 	if( p && ie_len)
 	{
 		pht_info = (struct HT_info_element *)(p+2);
@@ -1260,7 +1260,7 @@ static void start_bss_network(struct rtw
 
 		// to update channel value in beacon
 		pnetwork->Configuration.DSConfig = cur_channel;
-		p = rtw_get_ie((pnetwork->IEs + sizeof(NDIS_802_11_FIXED_IEs)), _DSSET_IE_, &ie_len, (pnetwork->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+		p = rtw_get_ie((pnetwork->IEs + sizeof(struct ndis_802_11_fixed_ies)), _DSSET_IE_, &ie_len, (pnetwork->IELength - sizeof(struct ndis_802_11_fixed_ies)));
 		if(p && ie_len>0)
 			*(p + 2) = cur_channel;
 
@@ -1297,7 +1297,7 @@ static void start_bss_network(struct rtw
 	rtw_hal_set_hwreg(padapter, HW_VAR_BASIC_RATE, pnetwork->SupportedRates);
 
 	//udpate capability after cur_wireless_mode updated
-	update_capinfo(padapter, rtw_get_capability((WLAN_BSSID_EX *)pnetwork));
+	update_capinfo(padapter, rtw_get_capability((struct wlan_bssid_ex *)pnetwork));
 
 	//let pnetwork_mlmeext == pnetwork_mlme.
 	_rtw_memcpy(pnetwork_mlmeext, pnetwork, pnetwork->Length);
@@ -1341,7 +1341,7 @@ int rtw_check_beacon_data(struct rtw_ada
 	struct registry_priv *pregistrypriv = &padapter->registrypriv;
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
-	WLAN_BSSID_EX *pbss_network = (WLAN_BSSID_EX *)&pmlmepriv->cur_network.network;
+	struct wlan_bssid_ex *pbss_network = (struct wlan_bssid_ex *)&pmlmepriv->cur_network.network;
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	u8 *ie = pbss_network->IEs;
 
@@ -1436,7 +1436,7 @@ int rtw_check_beacon_data(struct rtw_ada
 	p = rtw_get_ie(ie + _BEACON_IE_OFFSET_, _ERPINFO_IE_, &ie_len, (pbss_network->IELength - _BEACON_IE_OFFSET_));
 	if(p && ie_len>0)
 	{
-		ERP_IE_handler(padapter, (PNDIS_802_11_VARIABLE_IEs)p);
+		ERP_IE_handler(padapter, (struct ndis_802_11_variable_ies *)p);
 	}
 
 	//update privacy/security
@@ -1697,14 +1697,14 @@ int rtw_check_beacon_data(struct rtw_ada
 			pmlmepriv->htpriv.ampdu_enable = true;
 		}
 
-		HT_caps_handler(padapter, (PNDIS_802_11_VARIABLE_IEs)pHT_caps_ie);
+		HT_caps_handler(padapter, (struct ndis_802_11_variable_ies *)pHT_caps_ie);
 
-		HT_info_handler(padapter, (PNDIS_802_11_VARIABLE_IEs)pHT_info_ie);
+		HT_info_handler(padapter, (struct ndis_802_11_variable_ies *)pHT_info_ie);
 	}
 #endif
 
 
-	pbss_network->Length = get_WLAN_BSSID_EX_sz((WLAN_BSSID_EX  *)pbss_network);
+	pbss_network->Length = get_wlan_bssid_ex_sz((struct wlan_bssid_ex  *)pbss_network);
 
 	//issue beacon to start bss network
 	start_bss_network(padapter, (u8*)pbss_network);
@@ -1870,7 +1870,7 @@ static void update_bcn_erpinfo_ie(struct
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX *pnetwork = &(pmlmeinfo->network);
+	struct wlan_bssid_ex *pnetwork = &(pmlmeinfo->network);
 	unsigned char *p, *ie = pnetwork->IEs;
 	u32 len = 0;
 
@@ -1883,7 +1883,7 @@ static void update_bcn_erpinfo_ie(struct
 	p = rtw_get_ie(ie + _BEACON_IE_OFFSET_, _ERPINFO_IE_, &len, (pnetwork->IELength - _BEACON_IE_OFFSET_));
 	if(p && len>0)
 	{
-		PNDIS_802_11_VARIABLE_IEs pIE = (PNDIS_802_11_VARIABLE_IEs)p;
+		struct ndis_802_11_variable_ies * pIE = (struct ndis_802_11_variable_ies *)p;
 
 		if (pmlmepriv->num_sta_non_erp == 1)
 			pIE->data[0] |= RTW_ERP_INFO_NON_ERP_PRESENT|RTW_ERP_INFO_USE_PROTECTION;
@@ -1937,7 +1937,7 @@ static void update_bcn_wps_ie(struct rtw
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX *pnetwork = &(pmlmeinfo->network);
+	struct wlan_bssid_ex *pnetwork = &(pmlmeinfo->network);
 	unsigned char *ie = pnetwork->IEs;
 	u32 ielen = pnetwork->IELength;
 
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -1012,7 +1012,7 @@ u8 rtw_createbss_cmd(struct rtw_adapter
 	struct cmd_obj*			pcmd;
 	struct cmd_priv				*pcmdpriv=&padapter->cmdpriv;
 	struct mlme_priv			*pmlmepriv = &padapter->mlmepriv;
-	WLAN_BSSID_EX		*pdev_network = &padapter->registrypriv.dev_network;
+	struct wlan_bssid_ex *pdev_network = &padapter->registrypriv.dev_network;
 	u8	res=_SUCCESS;
 
 _func_enter_;
@@ -1034,7 +1034,7 @@ _func_enter_;
 	_rtw_init_listhead(&pcmd->list);
 	pcmd->cmdcode = _CreateBss_CMD_;
 	pcmd->parmbuf = (unsigned char *)pdev_network;
-	pcmd->cmdsz = get_WLAN_BSSID_EX_sz((WLAN_BSSID_EX*)pdev_network);
+	pcmd->cmdsz = get_wlan_bssid_ex_sz((struct wlan_bssid_ex*)pdev_network);
 	pcmd->rsp = NULL;
 	pcmd->rspsz = 0;
 
@@ -1080,7 +1080,7 @@ u8 rtw_joinbss_cmd(struct rtw_adapter *p
 {
 	u8	*auth, res = _SUCCESS;
 	uint	t_len = 0;
-	WLAN_BSSID_EX		*psecnetwork;
+	struct wlan_bssid_ex	*psecnetwork;
 	struct cmd_obj		*pcmd;
 	struct cmd_priv		*pcmdpriv=&padapter->cmdpriv;
 	struct mlme_priv		*pmlmepriv = &padapter->mlmepriv;
@@ -1117,7 +1117,7 @@ _func_enter_;
 			sizeof (NDIS_802_11_RATES_EX)+ sizeof(WLAN_PHY_INFO)+ sizeof (u32) + MAX_IE_SZ;
 	*/
 	//for IEs is fix buf size
-	t_len = sizeof(WLAN_BSSID_EX);
+	t_len = sizeof(struct wlan_bssid_ex);
 
 
 	//for hidden ap to set fw_state here
@@ -1141,7 +1141,7 @@ _func_enter_;
 		}
 	}
 
-	psecnetwork=(WLAN_BSSID_EX *)&psecuritypriv->sec_bss;
+	psecnetwork=(struct wlan_bssid_ex *)&psecuritypriv->sec_bss;
 	if(psecnetwork==NULL)
 	{
 		if(pcmd !=NULL)
@@ -1156,7 +1156,7 @@ _func_enter_;
 
 	_rtw_memset(psecnetwork, 0, t_len);
 
-	_rtw_memcpy(psecnetwork, &pnetwork->network, get_WLAN_BSSID_EX_sz(&pnetwork->network));
+	_rtw_memcpy(psecnetwork, &pnetwork->network, get_wlan_bssid_ex_sz(&pnetwork->network));
 
 	auth=&psecuritypriv->authenticator_ie[0];
 	psecuritypriv->authenticator_ie[0]=(unsigned char)psecnetwork->IELength;
@@ -1234,7 +1234,7 @@ _func_enter_;
 	}
 	#endif
 
-	pcmd->cmdsz = get_WLAN_BSSID_EX_sz(psecnetwork);//get cmdsz before endian conversion
+	pcmd->cmdsz = get_wlan_bssid_ex_sz(psecnetwork);//get cmdsz before endian conversion
 
 	_rtw_init_listhead(&pcmd->list);
 	pcmd->cmdcode = _JoinBss_CMD_;//GEN_CMD_CODE(_JoinBss)
@@ -2617,7 +2617,7 @@ void rtw_createbss_cmd_callback(struct r
 	struct sta_info *psta = NULL;
 	struct wlan_network *pwlan = NULL;
 	struct	mlme_priv *pmlmepriv = &padapter->mlmepriv;
-	WLAN_BSSID_EX *pnetwork = (WLAN_BSSID_EX *)pcmd->parmbuf;
+	struct wlan_bssid_ex *pnetwork = (struct wlan_bssid_ex *)pcmd->parmbuf;
 	struct wlan_network *tgt_network = &(pmlmepriv->cur_network);
 
 _func_enter_;
@@ -2688,14 +2688,14 @@ _func_enter_;
 			rtw_list_insert_tail(&(pwlan->list), &pmlmepriv->scanned_queue.queue);
 		}
 
-		pnetwork->Length = get_WLAN_BSSID_EX_sz(pnetwork);
+		pnetwork->Length = get_wlan_bssid_ex_sz(pnetwork);
 		_rtw_memcpy(&(pwlan->network), pnetwork, pnetwork->Length);
 		//pwlan->fixed = true;
 
 		//rtw_list_insert_tail(&(pwlan->list), &pmlmepriv->scanned_queue.queue);
 
 		// copy pdev_network information to	pmlmepriv->cur_network
-		_rtw_memcpy(&tgt_network->network, pnetwork, (get_WLAN_BSSID_EX_sz(pnetwork)));
+		_rtw_memcpy(&tgt_network->network, pnetwork, (get_wlan_bssid_ex_sz(pnetwork)));
 
 		// reset DSConfig
 		//tgt_network->network.Configuration.DSConfig = (u32)rtw_ch2freq(pnetwork->Configuration.DSConfig);
--- a/drivers/staging/rtl8192du/core/rtw_ieee80211.c
+++ b/drivers/staging/rtl8192du/core/rtw_ieee80211.c
@@ -407,7 +407,7 @@ int rtw_generate_ie(struct registry_priv
 {
 	u8	wireless_mode;
 	int	sz = 0, rateLen;
-	WLAN_BSSID_EX*	pdev_network = &pregistrypriv->dev_network;
+	struct wlan_bssid_ex*	pdev_network = &pregistrypriv->dev_network;
 	u8*	ie = pdev_network->IEs;
 
 _func_enter_;
@@ -1522,7 +1522,7 @@ static uint rtw_p2p_attr_remove(u8 *ie,
 	return ielen;
 }
 
-void rtw_WLAN_BSSID_EX_remove_p2p_attr(WLAN_BSSID_EX *bss_ex, u8 attr_id)
+void rtw_wlan_bssid_ex_remove_p2p_attr(struct wlan_bssid_ex *bss_ex, u8 attr_id)
 {
 	u8 *p2p_ie;
 	uint p2p_ielen, p2p_ielen_ori;
--- a/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
+++ b/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
@@ -135,7 +135,7 @@ _func_enter_;
 				// submit createbss_cmd to change to a ADHOC_MASTER
 
 				//pmlmepriv->lock has been acquired by caller...
-				WLAN_BSSID_EX    *pdev_network = &(padapter->registrypriv.dev_network);
+				struct wlan_bssid_ex    *pdev_network = &(padapter->registrypriv.dev_network);
 
 				pmlmepriv->fw_state = WIFI_ADHOC_MASTER_STATE;
 
@@ -633,7 +633,7 @@ _func_exit_;
 	return ret;
 }
 
-u8 rtw_set_802_11_add_wep(struct rtw_adapter* padapter, NDIS_802_11_WEP *wep){
+u8 rtw_set_802_11_add_wep(struct rtw_adapter* padapter, struct ndis_802_11_wep *wep){
 
 	u8		bdefaultkey;
 	u8		btransmitkey;
@@ -740,7 +740,7 @@ _func_exit_;
 
 }
 
-u8 rtw_set_802_11_add_key(struct rtw_adapter* padapter, NDIS_802_11_KEY *key){
+u8 rtw_set_802_11_add_key(struct rtw_adapter* padapter, struct ndis_802_11_key *key){
 
 	uint	encryptionalgo;
 	u8 * pbssid;
@@ -935,8 +935,8 @@ _func_enter_;
 	{
 		u8 ret;
 		u32 keyindex;
-		u32 len = FIELD_OFFSET(NDIS_802_11_KEY, KeyMaterial) + key->KeyLength;
-		NDIS_802_11_WEP *wep = &padapter->securitypriv.ndiswep;
+		u32 len = FIELD_OFFSET(struct ndis_802_11_key, KeyMaterial) + key->KeyLength;
+		struct ndis_802_11_wep *wep = &padapter->securitypriv.ndiswep;
 
 		RT_TRACE(_module_rtl871x_ioctl_set_c_,_drv_err_,("OID_802_11_ADD_KEY: +++++ WEP key +++++\n"));
 
@@ -964,12 +964,12 @@ _func_enter_;
 		RT_TRACE(_module_rtl871x_ioctl_set_c_,_drv_err_,("OID_802_11_ADD_KEY: +++++ SetRSC+++++\n"));
 		if(bgroup == true)
 		{
-			NDIS_802_11_KEY_RSC keysrc=key->KeyRSC & 0x00FFFFFFFFFFFFULL;
+			unsigned long long keysrc=key->KeyRSC & 0x00FFFFFFFFFFFFULL;
 			_rtw_memcpy(&padapter->securitypriv.dot11Grprxpn, &keysrc, 8);
 		}
 		else
 		{
-			NDIS_802_11_KEY_RSC keysrc=key->KeyRSC & 0x00FFFFFFFFFFFFULL;
+			unsigned long long keysrc=key->KeyRSC & 0x00FFFFFFFFFFFFULL;
 			_rtw_memcpy(&padapter->securitypriv.dot11Grptxpn, &keysrc, 8);
 		}
 
@@ -1105,7 +1105,7 @@ _func_exit_;
 	return ret;
 }
 
-u8 rtw_set_802_11_remove_key(struct rtw_adapter*	padapter, NDIS_802_11_REMOVE_KEY *key){
+u8 rtw_set_802_11_remove_key(struct rtw_adapter*	padapter, struct ndis_802_11_remove_key *key){
 
 	uint				encryptionalgo;
 	u8 * pbssid;
@@ -1173,7 +1173,7 @@ u16 rtw_get_cur_max_rate(struct rtw_adap
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct registry_priv *pregistrypriv = &adapter->registrypriv;
 	struct mlme_priv	*pmlmepriv = &adapter->mlmepriv;
-	WLAN_BSSID_EX  *pcur_bss = &pmlmepriv->cur_network.network;
+	struct wlan_bssid_ex  *pcur_bss = &pmlmepriv->cur_network.network;
 #ifdef CONFIG_80211N_HT
 	struct rtw_ieee80211_ht_cap *pht_capie;
 	u8	rf_type = 0;
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -443,7 +443,7 @@ u8 *rtw_get_capability_from_ie(u8 *ie)
 }
 
 
-u16 rtw_get_capability(WLAN_BSSID_EX *bss)
+u16 rtw_get_capability(struct wlan_bssid_ex *bss)
 {
 	u16	val;
 _func_enter_;
@@ -571,8 +571,8 @@ int rtw_is_same_ibss(struct rtw_adapter
 
 }
 
-inline int is_same_ess(WLAN_BSSID_EX *a, WLAN_BSSID_EX *b);
-inline int is_same_ess(WLAN_BSSID_EX *a, WLAN_BSSID_EX *b)
+inline int is_same_ess(struct wlan_bssid_ex *a, struct wlan_bssid_ex *b);
+inline int is_same_ess(struct wlan_bssid_ex *a, struct wlan_bssid_ex *b)
 {
 	//RT_TRACE(_module_rtl871x_mlme_c_,_drv_err_,("(%s,%d)(%s,%d)\n",
 	//		a->Ssid.Ssid,a->Ssid.SsidLength,b->Ssid.Ssid,b->Ssid.SsidLength));
@@ -580,7 +580,7 @@ inline int is_same_ess(WLAN_BSSID_EX *a,
 		&&  _rtw_memcmp(a->Ssid.Ssid, b->Ssid.Ssid, a->Ssid.SsidLength)==true;
 }
 
-int is_same_network(WLAN_BSSID_EX *src, WLAN_BSSID_EX *dst)
+int is_same_network(struct wlan_bssid_ex *src, struct wlan_bssid_ex *dst)
 {
 	 u16 s_cap, d_cap;
 
@@ -637,7 +637,7 @@ _func_exit_;
 
 }
 
-static void update_network(WLAN_BSSID_EX *dst, WLAN_BSSID_EX *src,
+static void update_network(struct wlan_bssid_ex *dst, struct wlan_bssid_ex *src,
 	struct rtw_adapter * padapter, bool update_ie)
 {
 	u8 ss_ori = dst->PhyInfo.SignalStrength;
@@ -695,7 +695,7 @@ _func_enter_;
 	}
 
 	if (update_ie)
-		_rtw_memcpy((u8 *)dst, (u8 *)src, get_WLAN_BSSID_EX_sz(src));
+		_rtw_memcpy((u8 *)dst, (u8 *)src, get_wlan_bssid_ex_sz(src));
 
 	dst->PhyInfo.SignalStrength = ss_final;
 	dst->PhyInfo.SignalQuality = sq_final;
@@ -711,7 +711,7 @@ _func_enter_;
 _func_exit_;
 }
 
-static void update_current_network(struct rtw_adapter *adapter, WLAN_BSSID_EX *pnetwork)
+static void update_current_network(struct rtw_adapter *adapter, struct wlan_bssid_ex *pnetwork)
 {
 	struct	mlme_priv	*pmlmepriv = &(adapter->mlmepriv);
 
@@ -724,7 +724,7 @@ _func_enter_;
 		//if(pmlmepriv->cur_network.network.IELength<= pnetwork->IELength)
 		{
 			update_network(&(pmlmepriv->cur_network.network), pnetwork,adapter, true);
-			rtw_update_protection(adapter, (pmlmepriv->cur_network.network.IEs) + sizeof (NDIS_802_11_FIXED_IEs),
+			rtw_update_protection(adapter, (pmlmepriv->cur_network.network.IEs) + sizeof (struct ndis_802_11_fixed_ies),
 									pmlmepriv->cur_network.network.IELength);
 		}
 	}
@@ -740,7 +740,7 @@ Caller must hold pmlmepriv->lock first.
 
 
 */
-void rtw_update_scanned_network(struct rtw_adapter *adapter, WLAN_BSSID_EX *target)
+void rtw_update_scanned_network(struct rtw_adapter *adapter, struct wlan_bssid_ex *target)
 {
 	struct list_head *plist, *phead;
 	u32	bssid_ex_sz;
@@ -791,7 +791,7 @@ _func_enter_;
 			//target->PhyInfo.Optimum_antenna = pHalData->CurAntenna;//optimum_antenna=>For antenna diversity
 			rtw_hal_get_def_var(adapter, HAL_DEF_CURRENT_ANTENNA, &(target->PhyInfo.Optimum_antenna));
 #endif
-			_rtw_memcpy(&(pnetwork->network), target,  get_WLAN_BSSID_EX_sz(target));
+			_rtw_memcpy(&(pnetwork->network), target,  get_wlan_bssid_ex_sz(target));
 			//pnetwork->last_scanned = rtw_get_current_time();
 			// variable initialize
 			pnetwork->fixed = false;
@@ -815,7 +815,7 @@ _func_enter_;
 				goto exit;
 			}
 
-			bssid_ex_sz = get_WLAN_BSSID_EX_sz(target);
+			bssid_ex_sz = get_wlan_bssid_ex_sz(target);
 			target->Length = bssid_ex_sz;
 #ifdef CONFIG_ANTENNA_DIVERSITY
 			//target->PhyInfo.Optimum_antenna = pHalData->CurAntenna;
@@ -855,8 +855,8 @@ exit:
 _func_exit_;
 }
 
-void rtw_add_network(struct rtw_adapter *adapter, WLAN_BSSID_EX *pnetwork);
-void rtw_add_network(struct rtw_adapter *adapter, WLAN_BSSID_EX *pnetwork)
+void rtw_add_network(struct rtw_adapter *adapter, struct wlan_bssid_ex *pnetwork);
+void rtw_add_network(struct rtw_adapter *adapter, struct wlan_bssid_ex *pnetwork)
 {
 	struct	mlme_priv	*pmlmepriv = &(((struct rtw_adapter *)adapter)->mlmepriv);
 
@@ -865,7 +865,7 @@ _func_enter_;
 	//spin_lock_bh(&queue->lock);
 
 	#if defined(CONFIG_P2P) && defined(CONFIG_P2P_REMOVE_GROUP_INFO)
-	rtw_WLAN_BSSID_EX_remove_p2p_attr(pnetwork, P2P_ATTR_GROUP_INFO);
+	rtw_wlan_bssid_ex_remove_p2p_attr(pnetwork, P2P_ATTR_GROUP_INFO);
 	#endif
 
 	update_current_network(adapter, pnetwork);
@@ -946,17 +946,17 @@ _func_exit_;
 void rtw_survey_event_callback(struct rtw_adapter	*adapter, u8 *pbuf)
 {
 	u32 len;
-	WLAN_BSSID_EX *pnetwork;
+	struct wlan_bssid_ex *pnetwork;
 	struct	mlme_priv	*pmlmepriv = &(adapter->mlmepriv);
 
 _func_enter_;
 
-	pnetwork = (WLAN_BSSID_EX *)pbuf;
+	pnetwork = (struct wlan_bssid_ex *)pbuf;
 
 	RT_TRACE(_module_rtl871x_mlme_c_,_drv_info_,("rtw_survey_event_callback, ssid=%s\n",  pnetwork->Ssid.Ssid));
 
-	len = get_WLAN_BSSID_EX_sz(pnetwork);
-	if(len > (sizeof(WLAN_BSSID_EX)))
+	len = get_wlan_bssid_ex_sz(pnetwork);
+	if(len > (sizeof(struct wlan_bssid_ex)))
 	{
 		RT_TRACE(_module_rtl871x_mlme_c_,_drv_err_,("\n ****rtw_survey_event_callback: return a wrong bss ***\n"));
 		return;
@@ -1058,7 +1058,7 @@ _func_enter_;
 				}
 				else
 				{
-					WLAN_BSSID_EX    *pdev_network = &(adapter->registrypriv.dev_network);
+					struct wlan_bssid_ex    *pdev_network = &(adapter->registrypriv.dev_network);
 					u8 *pibss = adapter->registrypriv.dev_network.MacAddress;
 
 					//pmlmepriv->fw_state ^= _FW_UNDER_SURVEY;//because don't set assoc_timer
@@ -1594,7 +1594,7 @@ static void rtw_joinbss_update_network(s
 				break;
 	}
 
-	rtw_update_protection(padapter, (cur_network->network.IEs) + sizeof (NDIS_802_11_FIXED_IEs),
+	rtw_update_protection(padapter, (cur_network->network.IEs) + sizeof (struct ndis_802_11_fixed_ies),
 									(cur_network->network.IELength));
 
 #ifdef CONFIG_80211N_HT
@@ -1642,8 +1642,8 @@ _func_enter_;
 
 	the_same_macaddr = _rtw_memcmp(pnetwork->network.MacAddress, cur_network->network.MacAddress, ETH_ALEN);
 
-	pnetwork->network.Length = get_WLAN_BSSID_EX_sz(&pnetwork->network);
-	if(pnetwork->network.Length > sizeof(WLAN_BSSID_EX))
+	pnetwork->network.Length = get_wlan_bssid_ex_sz(&pnetwork->network);
+	if(pnetwork->network.Length > sizeof(struct wlan_bssid_ex))
 	{
 		RT_TRACE(_module_rtl871x_mlme_c_,_drv_err_,("\n\n ***joinbss_evt_callback return a wrong bss ***\n\n"));
 		goto ignore_joinbss_callback;
@@ -1938,7 +1938,7 @@ void rtw_stadel_event_callback(struct rt
 {
 	struct sta_info *psta;
 	struct wlan_network* pwlan = NULL;
-	WLAN_BSSID_EX    *pdev_network=NULL;
+	struct wlan_bssid_ex    *pdev_network=NULL;
 	u8* pibss = NULL;
 	struct	mlme_priv	*pmlmepriv = &(adapter->mlmepriv);
 	struct	stadel_event *pstadel	= (struct stadel_event*)pbuf;
@@ -2026,7 +2026,7 @@ _func_enter_;
 			pdev_network = &(adapter->registrypriv.dev_network);
 			pibss = adapter->registrypriv.dev_network.MacAddress;
 
-			_rtw_memcpy(pdev_network, &tgt_network->network, get_WLAN_BSSID_EX_sz(&tgt_network->network));
+			_rtw_memcpy(pdev_network, &tgt_network->network, get_wlan_bssid_ex_sz(&tgt_network->network));
 
 			_rtw_memset(&pdev_network->Ssid, 0, sizeof(struct ndis_802_11_ssid));
 			_rtw_memcpy(&pdev_network->Ssid, &pmlmepriv->assoc_ssid, sizeof(struct ndis_802_11_ssid));
@@ -2833,7 +2833,7 @@ void rtw_init_registrypriv_dev_network(
 {
 	struct registry_priv* pregistrypriv = &adapter->registrypriv;
 	struct eeprom_priv* peepriv = &adapter->eeprompriv;
-	WLAN_BSSID_EX    *pdev_network = &pregistrypriv->dev_network;
+	struct wlan_bssid_ex    *pdev_network = &pregistrypriv->dev_network;
 	u8 *myhwaddr = myid(peepriv);
 
 _func_enter_;
@@ -2842,7 +2842,7 @@ _func_enter_;
 
 	_rtw_memcpy(&pdev_network->Ssid, &pregistrypriv->ssid, sizeof(struct ndis_802_11_ssid));
 
-	pdev_network->Configuration.Length=sizeof(NDIS_802_11_CONFIGURATION);
+	pdev_network->Configuration.Length=sizeof(struct ndis_802_11_config);
 	pdev_network->Configuration.BeaconPeriod = 100;
 	pdev_network->Configuration.FHConfig.Length = 0;
 	pdev_network->Configuration.FHConfig.HopPattern = 0;
@@ -2858,7 +2858,7 @@ void rtw_update_registrypriv_dev_network
 {
 	int sz=0;
 	struct registry_priv* pregistrypriv = &adapter->registrypriv;
-	WLAN_BSSID_EX    *pdev_network = &pregistrypriv->dev_network;
+	struct wlan_bssid_ex    *pdev_network = &pregistrypriv->dev_network;
 	struct	security_priv*	psecuritypriv = &adapter->securitypriv;
 	struct	wlan_network	*cur_network = &adapter->mlmepriv.cur_network;
 	//struct	xmit_priv	*pxmitpriv = &adapter->xmitpriv;
@@ -2911,7 +2911,7 @@ _func_enter_;
 
 	pdev_network->IELength = sz;
 
-	pdev_network->Length = get_WLAN_BSSID_EX_sz((WLAN_BSSID_EX  *)pdev_network);
+	pdev_network->Length = get_wlan_bssid_ex_sz((struct wlan_bssid_ex  *)pdev_network);
 
 	//notes: translate IELength & Length after assign the Length to cmdsz in createbss_cmd();
 	//pdev_network->IELength = cpu_to_le32(sz);
@@ -3108,7 +3108,7 @@ void rtw_update_ht_cap(struct rtw_adapte
 
 	//check Max Rx A-MPDU Size
 	len = 0;
-	p = rtw_get_ie(pie+sizeof (NDIS_802_11_FIXED_IEs), _HT_CAPABILITY_IE_, &len, ie_len-sizeof (NDIS_802_11_FIXED_IEs));
+	p = rtw_get_ie(pie+sizeof (struct ndis_802_11_fixed_ies), _HT_CAPABILITY_IE_, &len, ie_len-sizeof (struct ndis_802_11_fixed_ies));
 	if(p && len>0)
 	{
 		pht_capie = (struct rtw_ieee80211_ht_cap *)(p+2);
@@ -3122,7 +3122,7 @@ void rtw_update_ht_cap(struct rtw_adapte
 
 
 	len=0;
-	p = rtw_get_ie(pie+sizeof (NDIS_802_11_FIXED_IEs), _HT_ADD_INFO_IE_, &len, ie_len-sizeof (NDIS_802_11_FIXED_IEs));
+	p = rtw_get_ie(pie+sizeof (struct ndis_802_11_fixed_ies), _HT_ADD_INFO_IE_, &len, ie_len-sizeof (struct ndis_802_11_fixed_ies));
 	if(p && len>0)
 	{
 		pht_addtinfo = (struct ieee80211_ht_addt_info *)(p+2);
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -778,7 +778,7 @@ unsigned int OnProbeReq(struct rtw_adapt
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX	*cur = &(pmlmeinfo->network);
+	struct wlan_bssid_ex	*cur = &(pmlmeinfo->network);
 	u8 *pframe = precv_frame->u.hdr.rx_data;
 	uint len = precv_frame->u.hdr.len;
 	u8 is_valid_p2p_probereq = false;
@@ -1417,7 +1417,7 @@ unsigned int OnAssocReq(struct rtw_adapt
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX	*cur = &(pmlmeinfo->network);
+	struct wlan_bssid_ex	*cur = &(pmlmeinfo->network);
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	u8 *pframe = precv_frame->u.hdr.rx_data;
 	uint pkt_len = precv_frame->u.hdr.len;
@@ -2017,11 +2017,11 @@ unsigned int OnAssocRsp(struct rtw_adapt
 	uint i;
 	int res;
 	unsigned short	status;
-	PNDIS_802_11_VARIABLE_IEs	pIE;
+	struct ndis_802_11_variable_ies *pIE;
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	//WLAN_BSSID_EX			*cur_network = &(pmlmeinfo->network);
+	//struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
 	u8 *pframe = precv_frame->u.hdr.rx_data;
 	uint pkt_len = precv_frame->u.hdr.len;
 
@@ -2062,7 +2062,7 @@ unsigned int OnAssocRsp(struct rtw_adapt
 	//for not to handle the synchronous IO in the tasklet
 	for (i = (6 + WLAN_HDR_A3_LEN); i < pkt_len;)
 	{
-		pIE = (PNDIS_802_11_VARIABLE_IEs)(pframe + i);
+		pIE = (struct ndis_802_11_variable_ies *)(pframe + i);
 
 		switch (pIE->ElementID)
 		{
@@ -4448,7 +4448,7 @@ void issue_probersp_p2p(struct rtw_adapt
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
-	//WLAN_BSSID_EX			*cur_network = &(pmlmeinfo->network);
+	//struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
 	u16					beacon_interval = 100;
 	u16					capInfo = 0;
 	struct wifidirect_info	*pwdinfo = &(padapter->wdinfo);
@@ -6005,7 +6005,7 @@ void issue_beacon(struct rtw_adapter *pa
 #endif //#if defined (CONFIG_AP_MODE) && defined (CONFIG_NATIVEAP_MLME)
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*cur_network = &(pmlmeinfo->network);
+	struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
 	u8	bc_addr[] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
 #ifdef CONFIG_P2P
 	struct wifidirect_info	*pwdinfo = &(padapter->wdinfo);
@@ -6319,7 +6319,7 @@ void issue_probersp(struct rtw_adapter *
 #endif //#if defined (CONFIG_AP_MODE) && defined (CONFIG_NATIVEAP_MLME)
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*cur_network = &(pmlmeinfo->network);
+	struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
 	unsigned int	rate_len;
 #ifdef CONFIG_P2P
 	struct wifidirect_info	*pwdinfo = &(padapter->wdinfo);
@@ -6867,7 +6867,7 @@ void issue_asocrsp(struct rtw_adapter *p
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX *pnetwork = &(pmlmeinfo->network);
+	struct wlan_bssid_ex *pnetwork = &(pmlmeinfo->network);
 	u8 *ie = pnetwork->IEs;
 #ifdef CONFIG_P2P
 	struct wifidirect_info	*pwdinfo = &(padapter->wdinfo);
@@ -7046,7 +7046,7 @@ void issue_assocreq(struct rtw_adapter *
 	unsigned short				val16;
 	unsigned int					i, j, ie_len, index=0;
 	unsigned char					rf_type, bssrate[NumRates], sta_bssrate[NumRates];
-	PNDIS_802_11_VARIABLE_IEs	pIE;
+	struct ndis_802_11_variable_ies *pIE;
 	struct registry_priv	*pregpriv = &padapter->registrypriv;
 	struct xmit_priv		*pxmitpriv = &(padapter->xmitpriv);
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
@@ -7224,7 +7224,7 @@ void issue_assocreq(struct rtw_adapter *
 #endif //CONFIG_DFS
 
 	//RSN
-	p = rtw_get_ie((pmlmeinfo->network.IEs + sizeof(NDIS_802_11_FIXED_IEs)), _RSN_IE_2_, &ie_len, (pmlmeinfo->network.IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+	p = rtw_get_ie((pmlmeinfo->network.IEs + sizeof(struct ndis_802_11_fixed_ies)), _RSN_IE_2_, &ie_len, (pmlmeinfo->network.IELength - sizeof(struct ndis_802_11_fixed_ies)));
 	if (p != NULL)
 	{
 		pframe = rtw_set_ie(pframe, _RSN_IE_2_, ie_len, (p + 2), &(pattrib->pktlen));
@@ -7234,7 +7234,7 @@ void issue_assocreq(struct rtw_adapter *
 	//HT caps
 	if(padapter->mlmepriv.htpriv.ht_option==true)
 	{
-		p = rtw_get_ie((pmlmeinfo->network.IEs + sizeof(NDIS_802_11_FIXED_IEs)), _HT_CAPABILITY_IE_, &ie_len, (pmlmeinfo->network.IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+		p = rtw_get_ie((pmlmeinfo->network.IEs + sizeof(struct ndis_802_11_fixed_ies)), _HT_CAPABILITY_IE_, &ie_len, (pmlmeinfo->network.IELength - sizeof(struct ndis_802_11_fixed_ies)));
 		if ((p != NULL) && (!(is_ap_in_tkip(padapter))))
 		{
 			_rtw_memcpy(&(pmlmeinfo->HT_caps), (p + 2), sizeof(struct HT_caps_element));
@@ -7320,9 +7320,9 @@ void issue_assocreq(struct rtw_adapter *
 #endif
 
 	//vendor specific IE, such as WPA, WMM, WPS
-	for (i = sizeof(NDIS_802_11_FIXED_IEs); i < pmlmeinfo->network.IELength;)
+	for (i = sizeof(struct ndis_802_11_fixed_ies); i < pmlmeinfo->network.IELength;)
 	{
-		pIE = (PNDIS_802_11_VARIABLE_IEs)(pmlmeinfo->network.IEs + i);
+		pIE = (struct ndis_802_11_variable_ies *)(pmlmeinfo->network.IEs + i);
 
 		switch (pIE->ElementID)
 		{
@@ -8214,7 +8214,7 @@ static void issue_action_BSSCoexistPacke
 		{
 			int len;
 			u8 *p;
-			WLAN_BSSID_EX *pbss_network;
+			struct wlan_bssid_ex *pbss_network;
 
 			if (rtw_end_of_queue_search(phead,plist)== true)
 				break;
@@ -8223,7 +8223,7 @@ static void issue_action_BSSCoexistPacke
 
 			plist = get_next(plist);
 
-			pbss_network = (WLAN_BSSID_EX *)&pnetwork->network;
+			pbss_network = (struct wlan_bssid_ex *)&pnetwork->network;
 
 			p = rtw_get_ie(pbss_network->IEs + _FIXED_IE_LENGTH_, _HT_CAPABILITY_IE_, &len, pbss_network->IELength - _FIXED_IE_LENGTH_);
 			if((p==NULL) || (len==0))//non-HT
@@ -8753,7 +8753,7 @@ void site_survey(struct rtw_adapter *pad
 }
 
 //collect bss info from Beacon and Probe response frames.
-u8 collect_bss_info(struct rtw_adapter *padapter, union recv_frame *precv_frame, WLAN_BSSID_EX *bssid)
+u8 collect_bss_info(struct rtw_adapter *padapter, union recv_frame *precv_frame, struct wlan_bssid_ex *bssid)
 {
 	int	i;
 	u32	len;
@@ -8773,7 +8773,7 @@ u8 collect_bss_info(struct rtw_adapter *
 		return _FAIL;
 	}
 
-	_rtw_memset(bssid, 0, sizeof(WLAN_BSSID_EX));
+	_rtw_memset(bssid, 0, sizeof(struct wlan_bssid_ex));
 
 	subtype = GetFrameSubType(pframe);
 
@@ -8782,7 +8782,7 @@ u8 collect_bss_info(struct rtw_adapter *
 	else
 		bssid->Reserved[0] = 0;
 
-	bssid->Length = sizeof(WLAN_BSSID_EX) - MAX_IE_SZ + len;
+	bssid->Length = sizeof(struct wlan_bssid_ex) - MAX_IE_SZ + len;
 
 	//below is to copy the information element
 	bssid->IELength = len;
@@ -8881,7 +8881,7 @@ u8 collect_bss_info(struct rtw_adapter *
 	_rtw_memcpy(&bssid->Configuration.BeaconPeriod, rtw_get_beacon_interval_from_ie(bssid->IEs), 2);
 	bssid->Configuration.BeaconPeriod = le32_to_cpu(bssid->Configuration.BeaconPeriod);
 
-	val16 = rtw_get_capability((WLAN_BSSID_EX *)bssid);
+	val16 = rtw_get_capability((struct wlan_bssid_ex *)bssid);
 
 	if (val16 & BIT(0))
 	{
@@ -8958,7 +8958,7 @@ void start_create_ibss(struct rtw_adapte
 	u8	join_type;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*pnetwork = (WLAN_BSSID_EX*)(&(pmlmeinfo->network));
+	struct wlan_bssid_ex	*pnetwork = (struct wlan_bssid_ex *)(&(pmlmeinfo->network));
 	pmlmeext->cur_channel = (u8)pnetwork->Configuration.DSConfig;
 	pmlmeinfo->bcn_interval = get_beacon_interval(pnetwork);
 
@@ -8966,7 +8966,7 @@ void start_create_ibss(struct rtw_adapte
 	update_wireless_mode(padapter);
 
 	//udpate capability
-	caps = rtw_get_capability((WLAN_BSSID_EX *)pnetwork);
+	caps = rtw_get_capability((struct wlan_bssid_ex *)pnetwork);
 	update_capinfo(padapter, caps);
 	if(caps&cap_IBSS)//adhoc master
 	{
@@ -9017,7 +9017,7 @@ void start_clnt_join(struct rtw_adapter*
 	u8	val8;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*pnetwork = (WLAN_BSSID_EX*)(&(pmlmeinfo->network));
+	struct wlan_bssid_ex	*pnetwork = (struct wlan_bssid_ex *)(&(pmlmeinfo->network));
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	u8	dc_join_status;
 #endif
@@ -9029,7 +9029,7 @@ void start_clnt_join(struct rtw_adapter*
 	update_wireless_mode(padapter);
 
 	//udpate capability
-	caps = rtw_get_capability((WLAN_BSSID_EX *)pnetwork);
+	caps = rtw_get_capability((struct wlan_bssid_ex *)pnetwork);
 	update_capinfo(padapter, caps);
 	if (caps&cap_ESS)
 	{
@@ -9169,7 +9169,7 @@ unsigned int receive_disconnect(struct r
 }
 
 #ifdef CONFIG_80211D
-static void process_80211d(struct rtw_adapter * padapter, WLAN_BSSID_EX *bssid)
+static void process_80211d(struct rtw_adapter * padapter, struct wlan_bssid_ex *bssid)
 {
 	struct registry_priv *pregistrypriv;
 	struct mlme_ext_priv *pmlmeext;
@@ -9489,7 +9489,7 @@ void report_survey_event(struct rtw_adap
 
 	psurvey_evt = (struct survey_event*)(pevtcmd + sizeof(struct C2HEvent_Header));
 
-	if (collect_bss_info(padapter, precv_frame, (WLAN_BSSID_EX *)&psurvey_evt->bss) == _FAIL)
+	if (collect_bss_info(padapter, precv_frame, (struct wlan_bssid_ex *)&psurvey_evt->bss) == _FAIL)
 	{
 		rtw_mfree((u8 *)pcmd_obj, sizeof(struct cmd_obj));
 		rtw_mfree((u8 *)pevtcmd, cmdsz);
@@ -9593,7 +9593,7 @@ void report_join_res(struct rtw_adapter
 	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
 
 	pjoinbss_evt = (struct joinbss_event*)(pevtcmd + sizeof(struct C2HEvent_Header));
-	_rtw_memcpy((unsigned char *)(&(pjoinbss_evt->network.network)), &(pmlmeinfo->network), sizeof(WLAN_BSSID_EX));
+	_rtw_memcpy((unsigned char *)(&(pjoinbss_evt->network.network)), &(pmlmeinfo->network), sizeof(struct wlan_bssid_ex));
 	pjoinbss_evt->network.join_res	= pjoinbss_evt->network.aid = res;
 
 	DBG_8192D("report_join_res(%d)\n", res);
@@ -9777,7 +9777,7 @@ void mlmeext_joinbss_event_callback(stru
 	struct sta_info		*psta, *psta_bmc;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*cur_network = &(pmlmeinfo->network);
+	struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
 	struct sta_priv		*pstapriv = &padapter->stapriv;
 	u8	join_type;
 
@@ -10388,7 +10388,7 @@ u8 createbss_hdl(struct rtw_adapter *pad
 {
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX	*pnetwork = (WLAN_BSSID_EX*)(&(pmlmeinfo->network));
+	struct wlan_bssid_ex	*pnetwork = (struct wlan_bssid_ex *)(&(pmlmeinfo->network));
 	struct joinbss_parm *pparm = (struct joinbss_parm *)pbuf;
 	u32	initialgain;
 
@@ -10434,13 +10434,13 @@ u8 createbss_hdl(struct rtw_adapter *pad
 		//clear CAM
 		flush_all_cam_entry(padapter);
 
-		_rtw_memcpy(pnetwork, pbuf, FIELD_OFFSET(WLAN_BSSID_EX, IELength));
-		pnetwork->IELength = ((WLAN_BSSID_EX *)pbuf)->IELength;
+		_rtw_memcpy(pnetwork, pbuf, FIELD_OFFSET(struct wlan_bssid_ex, IELength));
+		pnetwork->IELength = ((struct wlan_bssid_ex *)pbuf)->IELength;
 
 		if(pnetwork->IELength>MAX_IE_SZ)//Check pbuf->IELength
 			return H2C_PARAMETERS_ERROR;
 
-		_rtw_memcpy(pnetwork->IEs, ((WLAN_BSSID_EX *)pbuf)->IEs, pnetwork->IELength);
+		_rtw_memcpy(pnetwork->IEs, ((struct wlan_bssid_ex *)pbuf)->IEs, pnetwork->IELength);
 
 		start_create_ibss(padapter);
 
@@ -10453,11 +10453,11 @@ u8 createbss_hdl(struct rtw_adapter *pad
 u8 join_cmd_hdl(struct rtw_adapter *padapter, u8 *pbuf)
 {
 	u8	join_type;
-	PNDIS_802_11_VARIABLE_IEs	pIE;
+	struct ndis_802_11_variable_ies *pIE;
 	struct registry_priv	*pregpriv = &padapter->registrypriv;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*pnetwork = (WLAN_BSSID_EX*)(&(pmlmeinfo->network));
+	struct wlan_bssid_ex	*pnetwork = (struct wlan_bssid_ex *)(&(pmlmeinfo->network));
 #ifdef CONFIG_ANTENNA_DIVERSITY
 	struct joinbss_parm	*pparm = (struct joinbss_parm *)pbuf;
 #endif //CONFIG_ANTENNA_DIVERSITY
@@ -10506,20 +10506,20 @@ u8 join_cmd_hdl(struct rtw_adapter *pada
 	pmlmeinfo->bwmode_updated = false;
 	//pmlmeinfo->assoc_AP_vendor = maxAP;
 
-	_rtw_memcpy(pnetwork, pbuf, FIELD_OFFSET(WLAN_BSSID_EX, IELength));
-	pnetwork->IELength = ((WLAN_BSSID_EX *)pbuf)->IELength;
+	_rtw_memcpy(pnetwork, pbuf, FIELD_OFFSET(struct wlan_bssid_ex, IELength));
+	pnetwork->IELength = ((struct wlan_bssid_ex *)pbuf)->IELength;
 
 	if(pnetwork->IELength>MAX_IE_SZ)//Check pbuf->IELength
 		return H2C_PARAMETERS_ERROR;
 
-	_rtw_memcpy(pnetwork->IEs, ((WLAN_BSSID_EX *)pbuf)->IEs, pnetwork->IELength);
+	_rtw_memcpy(pnetwork->IEs, ((struct wlan_bssid_ex *)pbuf)->IEs, pnetwork->IELength);
 
 	//Check AP vendor to move rtw_joinbss_cmd()
 	//pmlmeinfo->assoc_AP_vendor = check_assoc_AP(pnetwork->IEs, pnetwork->IELength);
 
-	for (i = sizeof(NDIS_802_11_FIXED_IEs); i < pnetwork->IELength;)
+	for (i = sizeof(struct ndis_802_11_fixed_ies); i < pnetwork->IELength;)
 	{
-		pIE = (PNDIS_802_11_VARIABLE_IEs)(pnetwork->IEs + i);
+		pIE = (struct ndis_802_11_variable_ies *)(pnetwork->IEs + i);
 
 		switch (pIE->ElementID)
 		{
@@ -10609,7 +10609,7 @@ u8 disconnect_hdl(struct rtw_adapter *pa
 	struct disconnect_parm *param = (struct disconnect_parm *)pbuf;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*pnetwork = (WLAN_BSSID_EX*)(&(pmlmeinfo->network));
+	struct wlan_bssid_ex	*pnetwork = (struct wlan_bssid_ex *)(&(pmlmeinfo->network));
 	u8	val8;
 
 	if (is_client_associated_to_ap(padapter))
@@ -11093,7 +11093,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	_rtw_memcpy(&(ptxBeacon_parm->network), &(pmlmeinfo->network), sizeof(WLAN_BSSID_EX));
+	_rtw_memcpy(&(ptxBeacon_parm->network), &(pmlmeinfo->network), sizeof(struct wlan_bssid_ex));
 
 	len_diff = update_hidden_ssid(
 		ptxBeacon_parm->network.IEs+_BEACON_IE_OFFSET_
@@ -11254,7 +11254,7 @@ u8 tx_beacon_hdl(struct rtw_adapter *pad
 
 }
 
-void change_band_update_ie(struct rtw_adapter *padapter, WLAN_BSSID_EX *pnetwork)
+void change_band_update_ie(struct rtw_adapter *padapter, struct wlan_bssid_ex *pnetwork)
 {
 	u8	network_type,rate_len, total_rate_len,remainder_rate_len;
 	struct mlme_ext_priv *pmlmeext = &(padapter->mlmeextpriv);
@@ -11387,7 +11387,7 @@ u8 dc_handle_join_request(struct rtw_ada
 {
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*pnetwork = (WLAN_BSSID_EX*)(&(pmlmeinfo->network));
+	struct wlan_bssid_ex	*pnetwork = (struct wlan_bssid_ex *)(&(pmlmeinfo->network));
 	struct rtw_adapter * pbuddy_adapter = padapter->pbuddy_adapter;
 	struct mlme_ext_priv *pbuddy_mlmeext = NULL;
 	struct mlme_priv	*pbuddy_mlmepriv = NULL;
@@ -11447,7 +11447,7 @@ void dc_handle_join_done(struct rtw_adap
 	struct mlme_priv *pbuddy_mlmepriv = NULL;
 	struct mlme_ext_priv *pbuddy_mlmeext = NULL;
 	struct mlme_ext_info *pbuddy_mlmeinfo = NULL;
-	WLAN_BSSID_EX *pbuddy_network_mlmeext = NULL;
+	struct wlan_bssid_ex *pbuddy_network_mlmeext = NULL;
 	u8	change_band = false;
 
 
@@ -11482,7 +11482,7 @@ void dc_handle_join_done(struct rtw_adap
 
 				if(pbuddy_mlmeext->cur_bwmode == HT_CHANNEL_WIDTH_40)
 				{
-					p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(NDIS_802_11_FIXED_IEs)), _HT_ADD_INFO_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+					p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(struct ndis_802_11_fixed_ies)), _HT_ADD_INFO_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(struct ndis_802_11_fixed_ies)));
 					if( p && ie_len)
 					{
 						pht_info = (struct HT_info_element *)(p+2);
@@ -11539,11 +11539,11 @@ void dc_handle_join_done(struct rtw_adap
 
 				// to update channel value in beacon
 				pbuddy_network_mlmeext->Configuration.DSConfig = pmlmeext->cur_channel;
-				p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(NDIS_802_11_FIXED_IEs)), _DSSET_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+				p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(struct ndis_802_11_fixed_ies)), _DSSET_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(struct ndis_802_11_fixed_ies)));
 				if(p && ie_len>0)
 					*(p + 2) = pmlmeext->cur_channel;
 
-				p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(NDIS_802_11_FIXED_IEs)), _HT_ADD_INFO_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+				p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(struct ndis_802_11_fixed_ies)), _HT_ADD_INFO_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(struct ndis_802_11_fixed_ies)));
 				if( p && ie_len)
 				{
 					pht_info = (struct HT_info_element *)(p+2);
@@ -11703,8 +11703,8 @@ void dc_set_ap_channel_bandwidth(struct
 	u8	val8, cur_channel, cur_bwmode, cur_ch_offset, change_band;
 	int	ie_len;
 	struct registry_priv	*pregpriv = &padapter->registrypriv;
-	struct mlme_priv		*pmlmepriv = &(padapter->mlmepriv);
-	WLAN_BSSID_EX		*pnetwork = (WLAN_BSSID_EX *)&pmlmepriv->cur_network.network;
+	struct mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
+	struct wlan_bssid_ex	*pnetwork = (struct wlan_bssid_ex *)&pmlmepriv->cur_network.network;
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct HT_info_element	*pht_info=NULL;
@@ -11719,7 +11719,7 @@ void dc_set_ap_channel_bandwidth(struct
 	cur_ch_offset = channel_offset;
 	change_band = false;
 
-	p = rtw_get_ie((pnetwork->IEs + sizeof(NDIS_802_11_FIXED_IEs)), _HT_ADD_INFO_IE_, &ie_len, (pnetwork->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+	p = rtw_get_ie((pnetwork->IEs + sizeof(struct ndis_802_11_fixed_ies)), _HT_ADD_INFO_IE_, &ie_len, (pnetwork->IELength - sizeof(struct ndis_802_11_fixed_ies)));
 	if( p && ie_len)
 	{
 		pht_info = (struct HT_info_element *)(p+2);
@@ -11798,7 +11798,7 @@ void dc_set_ap_channel_bandwidth(struct
 
 			// to update channel value in beacon
 			pnetwork->Configuration.DSConfig = cur_channel;
-			p = rtw_get_ie((pnetwork->IEs + sizeof(NDIS_802_11_FIXED_IEs)), _DSSET_IE_, &ie_len, (pnetwork->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+			p = rtw_get_ie((pnetwork->IEs + sizeof(struct ndis_802_11_fixed_ies)), _DSSET_IE_, &ie_len, (pnetwork->IELength - sizeof(struct ndis_802_11_fixed_ies)));
 			if(p && ie_len>0)
 				*(p + 2) = cur_channel;
 
@@ -11980,7 +11980,7 @@ void concurrent_chk_joinbss_done(struct
 	struct mlme_priv *pbuddy_mlmepriv;
 	struct mlme_ext_priv *pbuddy_mlmeext;
 	struct mlme_ext_info *pbuddy_mlmeinfo;
-	WLAN_BSSID_EX *pbuddy_network_mlmeext;
+	struct wlan_bssid_ex *pbuddy_network_mlmeext;
 
 	if(!rtw_buddy_adapter_up(padapter))
 		return;
@@ -12017,7 +12017,7 @@ void concurrent_chk_joinbss_done(struct
 			pbuddy_mlmeext->cur_channel = pmlmeext->cur_channel;
 			if(pbuddy_mlmeext->cur_bwmode == HT_CHANNEL_WIDTH_40)
 			{
-				p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(NDIS_802_11_FIXED_IEs)), _HT_ADD_INFO_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+				p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(struct ndis_802_11_fixed_ies)), _HT_ADD_INFO_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(struct ndis_802_11_fixed_ies)));
 				if( p && ie_len)
 				{
 					pht_info = (struct HT_info_element *)(p+2);
@@ -12125,11 +12125,11 @@ void concurrent_chk_joinbss_done(struct
 
 			// to update channel value in beacon
 			pbuddy_network_mlmeext->Configuration.DSConfig = pmlmeext->cur_channel;
-			p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(NDIS_802_11_FIXED_IEs)), _DSSET_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+			p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(struct ndis_802_11_fixed_ies)), _DSSET_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(struct ndis_802_11_fixed_ies)));
 			if(p && ie_len>0)
 				*(p + 2) = pmlmeext->cur_channel;
 
-			p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(NDIS_802_11_FIXED_IEs)), _HT_ADD_INFO_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(NDIS_802_11_FIXED_IEs)));
+			p = rtw_get_ie((pbuddy_network_mlmeext->IEs + sizeof(struct ndis_802_11_fixed_ies)), _HT_ADD_INFO_IE_, &ie_len, (pbuddy_network_mlmeext->IELength - sizeof(struct ndis_802_11_fixed_ies)));
 			if( p && ie_len)
 			{
 				pht_info = (struct HT_info_element *)(p+2);
--- a/drivers/staging/rtl8192du/core/rtw_tdls.c
+++ b/drivers/staging/rtl8192du/core/rtw_tdls.c
@@ -2870,7 +2870,7 @@ u32 update_mask_tdls(_adapter *padapter,
 	unsigned int tx_ra_bitmap=0;
 	struct ht_priv	*psta_ht = NULL;
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
-	WLAN_BSSID_EX *pcur_network = (WLAN_BSSID_EX *)&pmlmepriv->cur_network.network;
+	struct wlan_bssid_ex *pcur_network = (struct wlan_bssid_ex *)&pmlmepriv->cur_network.network;
 
 	psta_ht = &psta->htpriv;
 	//b/g mode ra_bitmap
--- a/drivers/staging/rtl8192du/core/rtw_wlan_util.c
+++ b/drivers/staging/rtl8192du/core/rtw_wlan_util.c
@@ -583,12 +583,12 @@ int get_bsstype(unsigned short capabilit
 	}
 }
 
-__inline u8 *get_my_bssid(WLAN_BSSID_EX *pnetwork)
+__inline u8 *get_my_bssid(struct wlan_bssid_ex *pnetwork)
 {
 	return (pnetwork->MacAddress);
 }
 
-u16 get_beacon_interval(WLAN_BSSID_EX *bss)
+u16 get_beacon_interval(struct wlan_bssid_ex *bss)
 {
 	unsigned short val;
 	_rtw_memcpy((unsigned char *)&val, rtw_get_beacon_interval_from_ie(bss->IEs), 2);
@@ -803,7 +803,7 @@ void flush_all_cam_entry(struct rtw_adap
 }
 
 #if defined(CONFIG_P2P) && defined(CONFIG_WFD)
-int WFD_info_handler(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs	pIE)
+int WFD_info_handler(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies *	pIE)
 {
 	struct registry_priv	*pregpriv = &padapter->registrypriv;
 	struct mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
@@ -838,7 +838,7 @@ int WFD_info_handler(struct rtw_adapter
 }
 #endif
 
-int WMM_param_handler(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs	pIE)
+int WMM_param_handler(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies *pIE)
 {
 	//struct registry_priv	*pregpriv = &padapter->registrypriv;
 	struct mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
@@ -947,7 +947,7 @@ void WMMOnAssocRsp(struct rtw_adapter *p
 	return;
 }
 
-static void bwmode_update_check(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs pIE)
+static void bwmode_update_check(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies * pIE)
 {
 	unsigned char	 new_bwmode;
 	unsigned char  new_ch_offset;
@@ -1022,7 +1022,7 @@ static void bwmode_update_check(struct r
 	if(true == pmlmeinfo->bwmode_updated)
 	{
 		struct sta_info *psta;
-		WLAN_BSSID_EX	*cur_network = &(pmlmeinfo->network);
+		struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
 		struct sta_priv	*pstapriv = &padapter->stapriv;
 
 		//set_channel_bwmode(padapter, pmlmeext->cur_channel, pmlmeext->cur_ch_offset, pmlmeext->cur_bwmode);
@@ -1054,7 +1054,7 @@ static void bwmode_update_check(struct r
 
 }
 
-void HT_caps_handler(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs pIE)
+void HT_caps_handler(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies * pIE)
 {
 	unsigned int	i;
 	u8	rf_type;
@@ -1144,7 +1144,7 @@ void HT_caps_handler(struct rtw_adapter
 	return;
 }
 
-void HT_info_handler(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs pIE)
+void HT_info_handler(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies * pIE)
 {
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
@@ -1201,7 +1201,7 @@ void HTOnAssocRsp(struct rtw_adapter *pa
 
 }
 
-void ERP_IE_handler(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs pIE)
+void ERP_IE_handler(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies * pIE)
 {
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
@@ -1285,7 +1285,7 @@ void update_beacon_info(struct rtw_adapt
 {
 	unsigned int i;
 	unsigned int len;
-	PNDIS_802_11_VARIABLE_IEs	pIE;
+	struct ndis_802_11_variable_ies *	pIE;
 
 #ifdef CONFIG_TDLS
 	struct tdls_info *ptdlsinfo = &padapter->tdlsinfo;
@@ -1295,7 +1295,7 @@ void update_beacon_info(struct rtw_adapt
 	len = pkt_len - (_BEACON_IE_OFFSET_ + WLAN_HDR_A3_LEN);
 
 	for (i = 0; i < len;) {
-		pIE = (PNDIS_802_11_VARIABLE_IEs)(pframe + (_BEACON_IE_OFFSET_ + WLAN_HDR_A3_LEN) + i);
+		pIE = (struct ndis_802_11_variable_ies *)(pframe + (_BEACON_IE_OFFSET_ + WLAN_HDR_A3_LEN) + i);
 
 		switch (pIE->ElementID) {
 		case _HT_EXTRA_INFO_IE_:	//HT info
@@ -1324,14 +1324,14 @@ void process_csa_ie(struct rtw_adapter *
 {
 	unsigned int i;
 	unsigned int len;
-	PNDIS_802_11_VARIABLE_IEs	pIE;
+	struct ndis_802_11_variable_ies *	pIE;
 	u8 new_ch_no = 0;
 
 	len = pkt_len - (_BEACON_IE_OFFSET_ + WLAN_HDR_A3_LEN);
 
 	for (i = 0; i < len;)
 	{
-		pIE = (PNDIS_802_11_VARIABLE_IEs)(pframe + (_BEACON_IE_OFFSET_ + WLAN_HDR_A3_LEN) + i);
+		pIE = (struct ndis_802_11_variable_ies *)(pframe + (_BEACON_IE_OFFSET_ + WLAN_HDR_A3_LEN) + i);
 
 		switch (pIE->ElementID)
 		{
@@ -1352,16 +1352,16 @@ void process_csa_ie(struct rtw_adapter *
 unsigned int is_ap_in_tkip(struct rtw_adapter *padapter)
 {
 	u32 i;
-	PNDIS_802_11_VARIABLE_IEs	pIE;
+	struct ndis_802_11_variable_ies *	pIE;
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*cur_network = &(pmlmeinfo->network);
+	struct wlan_bssid_ex		*cur_network = &(pmlmeinfo->network);
 
-	if (rtw_get_capability((WLAN_BSSID_EX *)cur_network) & WLAN_CAPABILITY_PRIVACY)
+	if (rtw_get_capability((struct wlan_bssid_ex *)cur_network) & WLAN_CAPABILITY_PRIVACY)
 	{
-		for (i = sizeof(NDIS_802_11_FIXED_IEs); i < pmlmeinfo->network.IELength;)
+		for (i = sizeof(struct ndis_802_11_fixed_ies); i < pmlmeinfo->network.IELength;)
 		{
-			pIE = (PNDIS_802_11_VARIABLE_IEs)(pmlmeinfo->network.IEs + i);
+			pIE = (struct ndis_802_11_variable_ies *)(pmlmeinfo->network.IEs + i);
 
 			switch (pIE->ElementID)
 			{
@@ -1614,11 +1614,11 @@ void update_tx_basic_rate(struct rtw_ada
 unsigned char check_assoc_AP(u8 *pframe, uint len)
 {
 	unsigned int	i;
-	PNDIS_802_11_VARIABLE_IEs	pIE;
+	struct ndis_802_11_variable_ies *	pIE;
 
-	for (i = sizeof(NDIS_802_11_FIXED_IEs); i < len;)
+	for (i = sizeof(struct ndis_802_11_fixed_ies); i < len;)
 	{
-		pIE = (PNDIS_802_11_VARIABLE_IEs)(pframe + i);
+		pIE = (struct ndis_802_11_variable_ies *)(pframe + i);
 
 		switch (pIE->ElementID)
 		{
@@ -1785,7 +1785,7 @@ void update_wireless_mode(struct rtw_ada
 	u32	SIFS_Timer, mask;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*cur_network = &(pmlmeinfo->network);
+	struct wlan_bssid_ex		*cur_network = &(pmlmeinfo->network);
 	unsigned char			*rate = cur_network->SupportedRates;
 #ifdef CONFIG_CONCURRENT_MODE
 	struct rtw_adapter *pbuddy_adapter = padapter->pbuddy_adapter;
@@ -1885,12 +1885,12 @@ void update_bmc_sta_support_rate(struct
 int update_sta_support_rate(struct rtw_adapter *padapter, u8* pvar_ie, uint var_ie_len, int cam_idx)
 {
 	unsigned int	ie_len;
-	PNDIS_802_11_VARIABLE_IEs	pIE;
+	struct ndis_802_11_variable_ies *pIE;
 	int	supportRateNum = 0;
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 
-	pIE = (PNDIS_802_11_VARIABLE_IEs)rtw_get_ie(pvar_ie, _SUPPORTEDRATES_IE_, &ie_len, var_ie_len);
+	pIE = (struct ndis_802_11_variable_ies *)rtw_get_ie(pvar_ie, _SUPPORTEDRATES_IE_, &ie_len, var_ie_len);
 	if (pIE == NULL)
 	{
 		return _FAIL;
@@ -1899,7 +1899,7 @@ int update_sta_support_rate(struct rtw_a
 	_rtw_memcpy(pmlmeinfo->FW_sta_info[cam_idx].SupportedRates, pIE->data, ie_len);
 	supportRateNum = ie_len;
 
-	pIE = (PNDIS_802_11_VARIABLE_IEs)rtw_get_ie(pvar_ie, _EXT_SUPPORTEDRATES_IE_, &ie_len, var_ie_len);
+	pIE = (struct ndis_802_11_variable_ies *)rtw_get_ie(pvar_ie, _EXT_SUPPORTEDRATES_IE_, &ie_len, var_ie_len);
 	if (pIE)
 	{
 		_rtw_memcpy((pmlmeinfo->FW_sta_info[cam_idx].SupportedRates + supportRateNum), pIE->data, ie_len);
--- a/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
@@ -395,7 +395,7 @@ void ConstructBeacon(struct rtw_adapter
 	u32					rate_len, pktlen;
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*cur_network = &(pmlmeinfo->network);
+	struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
 	u8	bc_addr[] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
 
 
@@ -437,8 +437,8 @@ void ConstructBeacon(struct rtw_adapter
 	if( (pmlmeinfo->state&0x03) == WIFI_FW_AP_STATE)
 	{
 		DBG_8192D("ie len=%u\n", cur_network->IELength);
-		pktlen += cur_network->IELength - sizeof(NDIS_802_11_FIXED_IEs);
-		_rtw_memcpy(pframe, cur_network->IEs+sizeof(NDIS_802_11_FIXED_IEs), pktlen);
+		pktlen += cur_network->IELength - sizeof(struct ndis_802_11_fixed_ies);
+		_rtw_memcpy(pframe, cur_network->IEs+sizeof(struct ndis_802_11_fixed_ies), pktlen);
 
 		goto _ConstructBeacon;
 	}
@@ -584,7 +584,7 @@ void ConstructProbeRsp(struct rtw_adapte
 	u32					pktlen;
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*cur_network = &(pmlmeinfo->network);
+	struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
 
 
 	//DBG_8192D("%s\n", __FUNCTION__);
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -3575,7 +3575,7 @@ SelectRTSInitialRate(
 	struct mlme_priv		*pmlmepriv = &Adapter->mlmepriv;
 	struct mlme_ext_priv	*pmlmeext = &Adapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*cur_network = &(pmlmeinfo->network);
+	struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
 	struct sta_priv		*pstapriv = &Adapter->stapriv;
 	u8	bUseProtection;
 	u16	BasicRateCfg=0;
@@ -5550,7 +5550,7 @@ void UpdateHalRAMask8192DUsb(struct rtw_
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	WLAN_BSSID_EX		*cur_network = &(pmlmeinfo->network);
+	struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
 #ifdef CONFIG_BT_COEXIST
 	struct btcoexist_priv	*pbtpriv = &(pHalData->bt_coexist);
 #endif
--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -131,7 +131,7 @@ struct registry_priv {
 	u8	uapsd_acvi_en;
 	u8	uapsd_acvo_en;
 
-	WLAN_BSSID_EX    dev_network;
+	struct wlan_bssid_ex dev_network;
 
 #ifdef CONFIG_80211N_HT
 	u8	ht_enable;
@@ -193,10 +193,10 @@ struct registry_priv {
 
 
 //For registry parameters
-#define RGTRY_OFT(field) ((u32)FIELD_OFFSET(struct registry_priv,field))
+#define RGTRY_OFT(field) ((u32)FIELD_OFFSET(struct registry_priv, field))
 #define RGTRY_SZ(field)   sizeof(((struct registry_priv*) 0)->field)
-#define BSSID_OFT(field) ((u32)FIELD_OFFSET(WLAN_BSSID_EX,field))
-#define BSSID_SZ(field)   sizeof(((PWLAN_BSSID_EX) 0)->field)
+#define BSSID_OFT(field) ((u32)FIELD_OFFSET(struct wlan_bssid_ex, field))
+#define BSSID_SZ(field)   sizeof(((struct wlan_bssid_ex *) 0)->field)
 
 #define MAX_CONTINUAL_URB_ERR 4
 
--- a/drivers/staging/rtl8192du/include/hal_intf.h
+++ b/drivers/staging/rtl8192du/include/hal_intf.h
@@ -185,7 +185,7 @@ struct hal_ops {
 
 #ifdef CONFIG_ANTENNA_DIVERSITY
 	u8	(*AntDivBeforeLinkHandler)(struct rtw_adapter * Adapter);
-	void	(*AntDivCompareHandler)(struct rtw_adapter * Adapter, WLAN_BSSID_EX *dst, WLAN_BSSID_EX *src);
+	void	(*AntDivCompareHandler)(struct rtw_adapter * Adapter, struct wlan_bssid_ex *dst, struct wlan_bssid_ex *src);
 #endif
 	u8	(*interface_ps_func)(struct rtw_adapter * Adapter, enum HAL_INTF_PS_FUNC efunc_id, u8* val);
 
@@ -371,7 +371,7 @@ void rtw_hal_dm_watchdog(struct rtw_adap
 
 #ifdef CONFIG_ANTENNA_DIVERSITY
 u8 rtw_hal_antdiv_before_linked(struct rtw_adapter *padapter);
-void rtw_hal_antdiv_rssi_compared(struct rtw_adapter *padapter, WLAN_BSSID_EX *dst, WLAN_BSSID_EX *src);
+void rtw_hal_antdiv_rssi_compared(struct rtw_adapter *padapter, struct wlan_bssid_ex *dst, struct wlan_bssid_ex *src);
 #endif
 
 #ifdef CONFIG_HOSTAPD_MLME
--- a/drivers/staging/rtl8192du/include/ieee80211.h
+++ b/drivers/staging/rtl8192du/include/ieee80211.h
@@ -1271,7 +1271,7 @@ u8 *rtw_get_p2p_ie(u8 *in_ie, int in_len
 u8 *rtw_get_p2p_attr(u8 *p2p_ie, uint p2p_ielen, u8 target_attr_id ,u8 *buf_attr, u32 *len_attr);
 u8 *rtw_get_p2p_attr_content(u8 *p2p_ie, uint p2p_ielen, u8 target_attr_id ,u8 *buf_content, uint *len_content);
 u32 rtw_set_p2p_attr_content(u8 *pbuf, u8 attr_id, u16 attr_len, u8 *pdata_attr);
-void rtw_WLAN_BSSID_EX_remove_p2p_attr(WLAN_BSSID_EX *bss_ex, u8 attr_id);
+void rtw_wlan_bssid_ex_remove_p2p_attr(struct wlan_bssid_ex *bss_ex, u8 attr_id);
 #endif
 
 #ifdef CONFIG_WFD
--- a/drivers/staging/rtl8192du/include/rtl8192d_hal.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_hal.h
@@ -534,15 +534,6 @@ enum c2h_id_8192d {
 	MAX_C2HEVENT
 };
 
-
-//should be renamed and moved to another file
-enum INTERFACE_SELECT_8192DUSB {
-	INTF_SEL0_USB		= 0,		// USB
-	INTF_SEL1_MINICARD	= 1,		// Minicard
-	INTF_SEL2_EKB_PRO	= 2,		// Eee keyboard proprietary
-	INTF_SEL3_PRO		= 3,		// Customized proprietary
-};
-
 struct hal_data_8192du {
 	enum VERSION_8192D	VersionID;
 
@@ -575,8 +566,6 @@ struct hal_data_8192du {
 	u8	nCur40MhzPrimeSC;// Control channel sub-carrier
 	u16	BasicRateSet;
 
-	struct tx_power_info InterfaceSel;
-
 	//rf_ctrl
 	u8	rf_chip;
 	u8	rf_type;
--- a/drivers/staging/rtl8192du/include/rtw_ap.h
+++ b/drivers/staging/rtl8192du/include/rtw_ap.h
@@ -34,8 +34,8 @@ extern void rtw_indicate_sta_disassoc_ev
 
 void init_mlme_ap_info(struct rtw_adapter *padapter);
 void free_mlme_ap_info(struct rtw_adapter *padapter);
-void rtw_add_bcn_ie(struct rtw_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index, u8 *data, u8 len);
-void rtw_remove_bcn_ie(struct rtw_adapter *padapter, WLAN_BSSID_EX *pnetwork, u8 index);
+void rtw_add_bcn_ie(struct rtw_adapter *padapter, struct wlan_bssid_ex *pnetwork, u8 index, u8 *data, u8 len);
+void rtw_remove_bcn_ie(struct rtw_adapter *padapter, struct wlan_bssid_ex *pnetwork, u8 index);
 void update_beacon(struct rtw_adapter *padapter, u8 ie_id, u8 *oui, u8 tx);
 void expire_timeout_chk(struct rtw_adapter *padapter);
 void update_sta_info_apmode(struct rtw_adapter *padapter, struct sta_info *psta);
--- a/drivers/staging/rtl8192du/include/rtw_cmd.h
+++ b/drivers/staging/rtl8192du/include/rtw_cmd.h
@@ -207,7 +207,7 @@ Command Event Mode
 
 */
 struct joinbss_parm {
-	WLAN_BSSID_EX network;
+	struct wlan_bssid_ex network;
 };
 
 /*
@@ -230,7 +230,7 @@ Notes: To create a BSS
 Command Mode
 */
 struct createbss_parm {
-	WLAN_BSSID_EX network;
+	struct wlan_bssid_ex network;
 };
 
 /*
@@ -537,7 +537,7 @@ struct getrfintfs_parm {
 
 struct Tx_Beacon_param
 {
-	WLAN_BSSID_EX network;
+	struct wlan_bssid_ex network;
 };
 
 /*
--- a/drivers/staging/rtl8192du/include/rtw_event.h
+++ b/drivers/staging/rtl8192du/include/rtw_event.h
@@ -39,7 +39,7 @@ Used to report a bss has been scanned
 
 */
 struct survey_event	{
-	WLAN_BSSID_EX bss;
+	struct wlan_bssid_ex bss;
 };
 
 /*
@@ -138,7 +138,7 @@ struct c2hevent_queue {
 struct network_queue {
 	volatile int	head;
 	volatile int	tail;
-	WLAN_BSSID_EX networks[NETWORK_QUEUE_SZ];
+	struct wlan_bssid_ex networks[NETWORK_QUEUE_SZ];
 };
 
 
--- a/drivers/staging/rtl8192du/include/rtw_ioctl_set.h
+++ b/drivers/staging/rtl8192du/include/rtw_ioctl_set.h
@@ -23,16 +23,16 @@
 #include <drv_conf.h>
 #include <drv_types.h>
 
-u8 rtw_set_802_11_add_key(struct rtw_adapter * padapter, NDIS_802_11_KEY * key);
+u8 rtw_set_802_11_add_key(struct rtw_adapter * padapter, struct ndis_802_11_key *key);
 u8 rtw_set_802_11_authentication_mode(struct rtw_adapter *pdapter, enum NDIS_802_11_AUTHENTICATION_MODE authmode);
 u8 rtw_set_802_11_bssid(struct rtw_adapter* padapter, u8 *bssid);
-u8 rtw_set_802_11_add_wep(struct rtw_adapter * padapter, NDIS_802_11_WEP * wep);
+u8 rtw_set_802_11_add_wep(struct rtw_adapter * padapter, struct ndis_802_11_wep * wep);
 u8 rtw_set_802_11_disassociate(struct rtw_adapter * padapter);
 u8 rtw_set_802_11_bssid_list_scan(struct rtw_adapter* padapter, struct ndis_802_11_ssid *pssid, int ssid_max_num);
 u8 rtw_set_802_11_infrastructure_mode(struct rtw_adapter * padapter, enum NDIS_802_11_NETWORK_INFRASTRUCTURE networktype);
 u8 rtw_set_802_11_remove_wep(struct rtw_adapter * padapter, u32 keyindex);
 u8 rtw_set_802_11_ssid(struct rtw_adapter * padapter, struct ndis_802_11_ssid * ssid);
-u8 rtw_set_802_11_remove_key(struct rtw_adapter * padapter, NDIS_802_11_REMOVE_KEY * key);
+u8 rtw_set_802_11_remove_key(struct rtw_adapter * padapter, struct ndis_802_11_remove_key *key);
 
 u8 rtw_validate_ssid(struct ndis_802_11_ssid *ssid);
 
--- a/drivers/staging/rtl8192du/include/rtw_mlme.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme.h
@@ -671,8 +671,8 @@ __inline static void set_scanned_network
 	spin_unlock_bh(&pmlmepriv->lock);
 }
 
-extern u16 rtw_get_capability(WLAN_BSSID_EX *bss);
-extern void rtw_update_scanned_network(struct rtw_adapter *adapter, WLAN_BSSID_EX *target);
+extern u16 rtw_get_capability(struct wlan_bssid_ex *bss);
+extern void rtw_update_scanned_network(struct rtw_adapter *adapter, struct wlan_bssid_ex *target);
 extern void rtw_disconnect_hdl_under_linked(struct rtw_adapter* adapter, struct sta_info *psta, u8 free_assoc);
 extern void rtw_generate_random_ibss(u8 *pibss);
 extern struct wlan_network* rtw_find_network(struct __queue *scanned_queue, u8 *addr);
@@ -747,7 +747,7 @@ void rtw_issue_addbareq_cmd(struct rtw_a
 #endif
 
 int rtw_is_same_ibss(struct rtw_adapter *adapter, struct wlan_network *pnetwork);
-int is_same_network(WLAN_BSSID_EX *src, WLAN_BSSID_EX *dst);
+int is_same_network(struct wlan_bssid_ex *src, struct wlan_bssid_ex *dst);
 
 #ifdef CONFIG_LAYER2_ROAMING
 void _rtw_roaming(struct rtw_adapter *adapter, struct wlan_network *tgt_network);
--- a/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
@@ -386,7 +386,7 @@ struct mlme_ext_info
 	struct WMM_para_element	WMM_param;
 	struct HT_caps_element	HT_caps;
 	struct HT_info_element		HT_info;
-	WLAN_BSSID_EX			network;//join network or bss_network, if in ap mode, it is the same to cur_network.network
+	struct wlan_bssid_ex network;//join network or bss_network, if in ap mode, it is the same to cur_network.network
 	struct FW_Sta_Info		FW_sta_info[NUM_STA];
 
 #ifdef CONFIG_STA_MODE_SCAN_UNDER_AP_MODE
@@ -505,7 +505,7 @@ int judge_network_type(struct rtw_adapte
 void get_rate_set(struct rtw_adapter *padapter, unsigned char *pbssrate, int *bssrate_len);
 void UpdateBrateTbl(struct rtw_adapter *padapter,u8 *mBratesOS);
 void UpdateBrateTblForSoftAP(u8 *bssrateset, u32 bssratelen);
-void change_band_update_ie(struct rtw_adapter *padapter, WLAN_BSSID_EX *pnetwork);
+void change_band_update_ie(struct rtw_adapter *padapter, struct wlan_bssid_ex *pnetwork);
 
 void Save_DM_Func_Flag(struct rtw_adapter *padapter);
 void Restore_DM_Func_Flag(struct rtw_adapter *padapter);
@@ -539,11 +539,11 @@ void flush_all_cam_entry(struct rtw_adap
 bool IsLegal5GChannel(struct rtw_adapter *Adapter, u8 channel);
 
 void site_survey(struct rtw_adapter *padapter);
-u8 collect_bss_info(struct rtw_adapter *padapter, union recv_frame *precv_frame, WLAN_BSSID_EX *bssid);
+u8 collect_bss_info(struct rtw_adapter *padapter, union recv_frame *precv_frame, struct wlan_bssid_ex *bssid);
 
 int get_bsstype(unsigned short capability);
-u8* get_my_bssid(WLAN_BSSID_EX *pnetwork);
-u16 get_beacon_interval(WLAN_BSSID_EX *bss);
+u8* get_my_bssid(struct wlan_bssid_ex *pnetwork);
+u16 get_beacon_interval(struct wlan_bssid_ex *bss);
 
 int is_client_associated_to_ap(struct rtw_adapter *padapter);
 int is_client_associated_to_ibss(struct rtw_adapter *padapter);
@@ -551,17 +551,17 @@ int is_IBSS_empty(struct rtw_adapter *pa
 
 unsigned char check_assoc_AP(u8 *pframe, uint len);
 
-int WMM_param_handler(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs	pIE);
+int WMM_param_handler(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies *pIE);
 #ifdef CONFIG_WFD
-int WFD_info_handler(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs	pIE);
+int WFD_info_handler(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies *pIE);
 #endif
 void WMMOnAssocRsp(struct rtw_adapter *padapter);
 
-void HT_caps_handler(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs pIE);
-void HT_info_handler(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs pIE);
+void HT_caps_handler(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies *pIE);
+void HT_info_handler(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies *pIE);
 void HTOnAssocRsp(struct rtw_adapter *padapter);
 
-void ERP_IE_handler(struct rtw_adapter *padapter, PNDIS_802_11_VARIABLE_IEs pIE);
+void ERP_IE_handler(struct rtw_adapter *padapter, struct ndis_802_11_variable_ies *pIE);
 void VCS_update(struct rtw_adapter *padapter, struct sta_info *psta);
 
 void update_beacon_info(struct rtw_adapter *padapter, u8 *pframe, uint len, struct sta_info *psta);
--- a/drivers/staging/rtl8192du/include/rtw_security.h
+++ b/drivers/staging/rtl8192du/include/rtw_security.h
@@ -146,9 +146,9 @@ struct security_priv
 	u32 ndisauthtype;	// NDIS_802_11_AUTHENTICATION_MODE
 	u32 ndisencryptstatus;	// NDIS_802_11_ENCRYPTION_STATUS
 
-	WLAN_BSSID_EX sec_bss;  //for joinbss (h2c buffer) usage
+	struct wlan_bssid_ex sec_bss;  //for joinbss (h2c buffer) usage
 
-	NDIS_802_11_WEP ndiswep;
+	struct ndis_802_11_wep ndiswep;
 	u8 assoc_info[600];
 	u8 szofcapability[256]; //for wpa2 usage
 	u8 oidassociation[512]; //for wpa/wpa2 usage
--- a/drivers/staging/rtl8192du/include/wlan_bssdef.h
+++ b/drivers/staging/rtl8192du/include/wlan_bssdef.h
@@ -27,15 +27,8 @@
 #define NDIS_802_11_LENGTH_RATES        8
 #define NDIS_802_11_LENGTH_RATES_EX     16
 
-// typedef long			NDIS_802_11_RSSI;           // in dBm
-// typedef unsigned char   NDIS_802_11_RATES[NDIS_802_11_LENGTH_RATES];        // Set of 8 data rates
 typedef unsigned char   NDIS_802_11_RATES_EX[NDIS_802_11_LENGTH_RATES_EX];  // Set of 16 data rates
 
-
-// typedef  u32  NDIS_802_11_KEY_INDEX;
-typedef unsigned long long NDIS_802_11_KEY_RSC;
-
-
 struct ndis_802_11_ssid {
 	u32  SsidLength;
 	u8  Ssid[32];
@@ -49,29 +42,24 @@ enum NDIS_802_11_NETWORK_TYPE {
 	NDIS802_11NetworkTypeMax    // not a real type - upper bound
 };
 
-typedef struct _NDIS_802_11_CONFIGURATION_FH
-{
+struct ndis_802_11_config_fh {
     u32           Length;             // Length of structure
     u32           HopPattern;         // As defined by 802.11, MSB set
     u32           HopSet;             // to one if non-802.11
     u32           DwellTime;          // units are Kusec
-} NDIS_802_11_CONFIGURATION_FH, *PNDIS_802_11_CONFIGURATION_FH;
-
-
-/*
-	FW will only save the channel number in DSConfig.
-	ODI Handler will convert the channel number to freq. number.
-*/
-typedef struct _NDIS_802_11_CONFIGURATION
-{
-    u32           Length;             // Length of structure
-    u32           BeaconPeriod;       // units are Kusec
-    u32           ATIMWindow;         // units are Kusec
-    u32           DSConfig;           // Frequency, units are kHz
-    NDIS_802_11_CONFIGURATION_FH    FHConfig;
-} NDIS_802_11_CONFIGURATION, *PNDIS_802_11_CONFIGURATION;
+};
 
 
+/*	FW will only save the channel number in DSConfig.
+ *	ODI Handler will convert the channel number to freq. number.
+ */
+struct ndis_802_11_config {
+	u32           Length;             // Length of structure
+	u32           BeaconPeriod;       // units are Kusec
+	u32           ATIMWindow;         // units are Kusec
+	u32           DSConfig;           // Frequency, units are kHz
+	struct ndis_802_11_config_fh    FHConfig;
+};
 
 enum NDIS_802_11_NETWORK_INFRASTRUCTURE {
 	NDIS802_11IBSS,
@@ -81,24 +69,22 @@ enum NDIS_802_11_NETWORK_INFRASTRUCTURE
 	NDIS802_11APMODE
 };
 
-typedef struct _NDIS_802_11_FIXED_IEs
-{
-  u8  Timestamp[8];
-  u16  BeaconInterval;
-  u16  Capabilities;
-} NDIS_802_11_FIXED_IEs, *PNDIS_802_11_FIXED_IEs;
+struct ndis_802_11_fixed_ies {
+	u8  Timestamp[8];
+	u16  BeaconInterval;
+	u16  Capabilities;
+};
 
-typedef struct _NDIS_802_11_VARIABLE_IEs
-{
-  u8  ElementID;
-  u8  Length;
-  u8  data[1];
-} NDIS_802_11_VARIABLE_IEs, *PNDIS_802_11_VARIABLE_IEs;
+struct ndis_802_11_variable_ies {
+	u8  ElementID;
+	u8  Length;
+	u8  data[1];
+};
 
 /*
 Length is the 4 bytes multiples of the sume of
 	ETH_ALEN + 2 + sizeof (struct ndis_802_11_ssid) + sizeof (u32)
-+   sizeof (long) + sizeof (NDIS_802_11_NETWORK_TYPE) + sizeof (NDIS_802_11_CONFIGURATION)
++   sizeof (long) + sizeof (NDIS_802_11_NETWORK_TYPE) + sizeof (struct ndis_802_11_config)
 +   sizeof (NDIS_802_11_LENGTH_RATES * sizeof(unsigned char)) + IELength
 
 Except the IELength, all other fields are fixed length. Therefore, we can define a marco to present the
@@ -138,65 +124,58 @@ enum NDIS_802_11_ENCRYPTION_STATUS {
 #define NDIS_802_11_AI_RESFI_STATUSCODE        2
 #define NDIS_802_11_AI_RESFI_ASSOCIATIONID     4
 
-typedef struct _NDIS_802_11_AI_REQFI
-{
+struct ndis_802_11_ai_reqfi {
     u16 Capabilities;
     u16 ListenInterval;
     unsigned char CurrentAPAddress[ETH_ALEN];
-} NDIS_802_11_AI_REQFI, *PNDIS_802_11_AI_REQFI;
+};
 
-typedef struct _NDIS_802_11_AI_RESFI
-{
+struct ndis_802_11_ai_resfi {
     u16 Capabilities;
     u16 StatusCode;
     u16 AssociationId;
-} NDIS_802_11_AI_RESFI, *PNDIS_802_11_AI_RESFI;
+};
 
-typedef struct _NDIS_802_11_ASSOCIATION_INFORMATION
-{
+struct ndis_802_11_assoc_info {
     u32                   Length;
     u16                  AvailableRequestFixedIEs;
-    NDIS_802_11_AI_REQFI    RequestFixedIEs;
+    struct ndis_802_11_ai_reqfi    RequestFixedIEs;
     u32                   RequestIELength;
     u32                   OffsetRequestIEs;
     u16                  AvailableResponseFixedIEs;
-    NDIS_802_11_AI_RESFI    ResponseFixedIEs;
+    struct ndis_802_11_ai_resfi ResponseFixedIEs;
     u32                   ResponseIELength;
     u32                   OffsetResponseIEs;
-} NDIS_802_11_ASSOCIATION_INFORMATION, *PNDIS_802_11_ASSOCIATION_INFORMATION;
+};
 
 // Key mapping keys require a BSSID
-typedef struct _NDIS_802_11_KEY
-{
+struct ndis_802_11_key {
     u32           Length;             // Length of this structure
     u32           KeyIndex;
     u32           KeyLength;          // length of key in bytes
     unsigned char BSSID[ETH_ALEN];
-    NDIS_802_11_KEY_RSC KeyRSC;
+    unsigned long long KeyRSC;
     u8           KeyMaterial[32];     // variable length depending on above field
-} NDIS_802_11_KEY, *PNDIS_802_11_KEY;
+};
 
-typedef struct _NDIS_802_11_REMOVE_KEY
-{
+struct ndis_802_11_remove_key {
     u32                   Length;        // Length of this structure
     u32                   KeyIndex;
     unsigned char  BSSID[ETH_ALEN];
-} NDIS_802_11_REMOVE_KEY, *PNDIS_802_11_REMOVE_KEY;
+};
 
-typedef struct _NDIS_802_11_WEP
-{
+struct ndis_802_11_wep {
     u32     Length;        // Length of this structure
     u32     KeyIndex;      // 0 is the per-client key, 1-N are the global keys
     u32     KeyLength;     // length of key in bytes
     u8     KeyMaterial[16];// variable length depending on above field
-} NDIS_802_11_WEP, *PNDIS_802_11_WEP;
+};
 
-typedef struct _NDIS_802_11_AUTHENTICATION_REQUEST
-{
+struct ndis_802_11_auth_req {
     u32 Length;            // Length of structure
     unsigned char  Bssid[ETH_ALEN];
     u32 Flags;
-} NDIS_802_11_AUTHENTICATION_REQUEST, *PNDIS_802_11_AUTHENTICATION_REQUEST;
+};
 
 enum NDIS_802_11_STATUS_TYPE {
 	Ndis802_11StatusType_Authentication,
@@ -205,9 +184,9 @@ enum NDIS_802_11_STATUS_TYPE {
 	Ndis802_11StatusTypeMax    // not a real type, defined as an upper bound
 };
 
-typedef struct _NDIS_802_11_STATUS_INDICATION {
+struct ndis_802_11_status_ind {
 	enum NDIS_802_11_STATUS_TYPE StatusType;
-} NDIS_802_11_STATUS_INDICATION, *PNDIS_802_11_STATUS_INDICATION;
+};
 
 // mask for authentication/integrity fields
 #define NDIS_802_11_AUTH_REQUEST_AUTH_FIELDS        0x0f
@@ -219,37 +198,32 @@ typedef struct _NDIS_802_11_STATUS_INDIC
 // MIC check time, 60 seconds.
 #define MIC_CHECK_TIME	60000000
 
-typedef struct _NDIS_802_11_AUTHENTICATION_EVENT
-{
-    NDIS_802_11_STATUS_INDICATION       Status;
-    NDIS_802_11_AUTHENTICATION_REQUEST  Request[1];
-} NDIS_802_11_AUTHENTICATION_EVENT, *PNDIS_802_11_AUTHENTICATION_EVENT;
+struct ndis_802_11_auth_event {
+    struct ndis_802_11_status_ind Status;
+    struct ndis_802_11_auth_req Request[1];
+};
 
-typedef struct _NDIS_802_11_TEST
-{
+struct ndis_802_11_test {
     u32 Length;
     u32 Type;
-    union
-    {
-        NDIS_802_11_AUTHENTICATION_EVENT AuthenticationEvent;
+    union {
+        struct ndis_802_11_auth_event AuthenticationEvent;
         long RssiTrigger;
-    }tt;
-} NDIS_802_11_TEST, *PNDIS_802_11_TEST;
+    } tt;
+};
 
 #ifndef Ndis802_11APMode
 #define Ndis802_11APMode (Ndis802_11InfrastructureMax+1)
 #endif
 
-typedef struct _WLAN_PHY_INFO
-{
+struct wlan_phy_info {
 	u8	SignalStrength;//(in percentage)
 	u8	SignalQuality;//(in percentage)
 	u8	Optimum_antenna;  //for Antenna diversity
 	u8	Reserved_0;
-}WLAN_PHY_INFO,*PWLAN_PHY_INFO;
+};
 
-typedef struct _WLAN_BSSID_EX
-{
+struct wlan_bssid_ex {
 	u32  Length;
 	unsigned char MacAddress[ETH_ALEN];
 	u8  Reserved[2];//[0]: IS beacon frame
@@ -257,17 +231,17 @@ typedef struct _WLAN_BSSID_EX
 	u32  Privacy;
 	long  Rssi;//(in dBM,raw data ,get from PHY)
 	enum NDIS_802_11_NETWORK_TYPE  NetworkTypeInUse;
-	NDIS_802_11_CONFIGURATION  Configuration;
+	struct ndis_802_11_config  Configuration;
 	enum NDIS_802_11_NETWORK_INFRASTRUCTURE  InfrastructureMode;
 	NDIS_802_11_RATES_EX  SupportedRates;
-	WLAN_PHY_INFO	PhyInfo;
+	struct wlan_phy_info PhyInfo;
 	u32  IELength;
 	u8  IEs[MAX_IE_SZ];	//(timestamp, beacon interval, and capability information)
-} __attribute__((packed)) WLAN_BSSID_EX, *PWLAN_BSSID_EX;
+} __packed;
 
-__inline  static uint get_WLAN_BSSID_EX_sz(WLAN_BSSID_EX *bss)
+__inline  static uint get_wlan_bssid_ex_sz(struct wlan_bssid_ex *bss)
 {
-	return (sizeof(WLAN_BSSID_EX) - MAX_IE_SZ + bss->IELength);
+	return (sizeof(struct wlan_bssid_ex) - MAX_IE_SZ + bss->IELength);
 }
 
 struct	wlan_network {
@@ -277,7 +251,7 @@ struct	wlan_network {
 	unsigned long	last_scanned; //timestamp for the network
 	int	aid;			//will only be valid when a BSS is joinned.
 	int	join_res;
-	WLAN_BSSID_EX	network; //must be the last item
+	struct wlan_bssid_ex network; //must be the last item
 };
 
 enum VRTL_CARRIER_SENSE
@@ -321,35 +295,31 @@ enum UAPSD_MAX_SP
 *	WPA2
 */
 
-typedef struct _PMKID_CANDIDATE {
-    unsigned char  BSSID[ETH_ALEN];
-    u32 Flags;
-} PMKID_CANDIDATE, *PPMKID_CANDIDATE;
-
-typedef struct _NDIS_802_11_PMKID_CANDIDATE_LIST
-{
-    u32 Version;       // Version of the structure
-    u32 NumCandidates; // No. of pmkid candidates
-    PMKID_CANDIDATE CandidateList[1];
-} NDIS_802_11_PMKID_CANDIDATE_LIST, *PNDIS_802_11_PMKID_CANDIDATE_LIST;
+struct pmkid_candidate {
+	unsigned char  BSSID[ETH_ALEN];
+	u32 Flags;
+};
 
+struct ndis_802_11_pmkid_list {
+	u32 Version;       // Version of the structure
+	u32 NumCandidates; // No. of pmkid candidates
+	struct pmkid_candidate CandidateList[1];
+};
 
-typedef struct _NDIS_802_11_AUTHENTICATION_ENCRYPTION
-{
+struct ndis_802_11_auth_encr {
 	enum NDIS_802_11_AUTHENTICATION_MODE AuthModeSupported;
 	enum NDIS_802_11_ENCRYPTION_STATUS EncryptStatusSupported;
 
-} NDIS_802_11_AUTHENTICATION_ENCRYPTION, *PNDIS_802_11_AUTHENTICATION_ENCRYPTION;
+};
 
-typedef struct _NDIS_802_11_CAPABILITY
-{
+struct ndis_802_11_capa {
 	u32  Length;
 	u32  Version;
 	u32  NoOfPMKIDs;
 	u32  NoOfAuthEncryptPairsSupported;
-	NDIS_802_11_AUTHENTICATION_ENCRYPTION AuthenticationEncryptionSupported[1];
+	struct ndis_802_11_auth_encr AuthenticationEncryptionSupported[1];
 
-} NDIS_802_11_CAPABILITY, *PNDIS_802_11_CAPABILITY;
+};
 
 
 #endif //#ifndef WLAN_BSSDEF_H_
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -3467,8 +3467,8 @@ static int cfg80211_rtw_start_ap(struct
 	adapter->mlmeextpriv.mlmext_info.hidden_ssid_mode = settings->hidden_ssid;
 
 	if (settings->ssid && settings->ssid_len) {
-		WLAN_BSSID_EX *pbss_network = &adapter->mlmepriv.cur_network.network;
-		WLAN_BSSID_EX *pbss_network_ext = &adapter->mlmeextpriv.mlmext_info.network;
+		struct wlan_bssid_ex *pbss_network = &adapter->mlmepriv.cur_network.network;
+		struct wlan_bssid_ex *pbss_network_ext = &adapter->mlmeextpriv.mlmext_info.network;
 
 		if(0)
 		DBG_871X(FUNC_ADPT_FMT" ssid:(%s,%d), from ie:(%s,%d)\n", FUNC_ADPT_ARG(adapter),
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -657,7 +657,7 @@ static int wpa_set_encryption(struct net
 {
 	int ret = 0;
 	u32 wep_key_idx, wep_key_len,wep_total_len;
-	NDIS_802_11_WEP	 *pwep = NULL;
+	struct ndis_802_11_wep *pwep = NULL;
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
@@ -713,8 +713,8 @@ _func_enter_;
 		if (wep_key_len > 0)
 		{
 			wep_key_len = wep_key_len <= 5 ? 5 : 13;
-			wep_total_len = wep_key_len + FIELD_OFFSET(NDIS_802_11_WEP, KeyMaterial);
-			pwep =(NDIS_802_11_WEP	 *) rtw_malloc(wep_total_len);
+			wep_total_len = wep_key_len + FIELD_OFFSET(struct ndis_802_11_wep, KeyMaterial);
+			pwep =(struct ndis_802_11_wep *) rtw_malloc(wep_total_len);
 			if (pwep == NULL){
 				RT_TRACE(_module_rtl871x_ioctl_os_c,_drv_err_,(" wpa_set_encryption: pwep allocate fail !!!\n"));
 				goto exit;
@@ -1049,7 +1049,7 @@ static int rtw_wx_get_name(struct net_de
 	char *p;
 	u8 ht_cap=false;
 	struct	mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
-	WLAN_BSSID_EX  *pcur_bss = &pmlmepriv->cur_network.network;
+	struct wlan_bssid_ex *pcur_bss = &pmlmepriv->cur_network.network;
 	NDIS_802_11_RATES_EX* prates = NULL;
 
 	RT_TRACE(_module_rtl871x_mlme_c_,_drv_info_,("cmd_code=%x\n", info->cmd));
@@ -1130,7 +1130,7 @@ static int rtw_wx_get_freq(struct net_de
 {
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	struct	mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
-	WLAN_BSSID_EX  *pcur_bss = &pmlmepriv->cur_network.network;
+	struct wlan_bssid_ex *pcur_bss = &pmlmepriv->cur_network.network;
 
 	if (check_fwstate(pmlmepriv, _FW_LINKED) == true)
 	{
@@ -1618,7 +1618,7 @@ static int rtw_wx_get_wap(struct net_dev
 
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	struct	mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
-	WLAN_BSSID_EX  *pcur_bss = &pmlmepriv->cur_network.network;
+	struct wlan_bssid_ex *pcur_bss = &pmlmepriv->cur_network.network;
 
 	wrqu->ap_addr.sa_family = ARPHRD_ETHER;
 
@@ -2266,7 +2266,7 @@ static int rtw_wx_get_essid(struct net_d
 	u32 len,ret = 0;
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	struct	mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
-	WLAN_BSSID_EX  *pcur_bss = &pmlmepriv->cur_network.network;
+	struct wlan_bssid_ex *pcur_bss = &pmlmepriv->cur_network.network;
 
 	RT_TRACE(_module_rtl871x_mlme_c_,_drv_info_,("rtw_wx_get_essid\n"));
 
@@ -2517,7 +2517,7 @@ static int rtw_wx_set_enc(struct net_dev
 {
 	u32 key, ret = 0;
 	u32 keyindex_provided;
-	NDIS_802_11_WEP	 wep;
+	struct ndis_802_11_wep wep;
 	enum NDIS_802_11_AUTHENTICATION_MODE authmode;
 
 	struct iw_point *erq = &(wrqu->encoding);
@@ -2525,7 +2525,7 @@ static int rtw_wx_set_enc(struct net_dev
 	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
 	DBG_8192D("+rtw_wx_set_enc, flags=0x%x\n", erq->flags);
 
-	_rtw_memset(&wep, 0, sizeof(NDIS_802_11_WEP));
+	_rtw_memset(&wep, 0, sizeof(struct ndis_802_11_wep));
 
 	key = erq->flags & IW_ENCODE_INDEX;
 
@@ -2599,7 +2599,7 @@ static int rtw_wx_set_enc(struct net_dev
 	{
 		wep.KeyLength = erq->length <= 5 ? 5 : 13;
 
-		wep.Length = wep.KeyLength + FIELD_OFFSET(NDIS_802_11_WEP, KeyMaterial);
+		wep.Length = wep.KeyLength + FIELD_OFFSET(struct ndis_802_11_wep, KeyMaterial);
 	}
 	else
 	{
@@ -6864,7 +6864,7 @@ static int rtw_set_encryption(struct net
 {
 	int ret = 0;
 	u32 wep_key_idx, wep_key_len,wep_total_len;
-	NDIS_802_11_WEP	 *pwep = NULL;
+	struct ndis_802_11_wep *pwep = NULL;
 	struct sta_info *psta = NULL, *pbcmc_sta = NULL;
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
@@ -6934,8 +6934,8 @@ static int rtw_set_encryption(struct net
 		if (wep_key_len > 0)
 		{
 			wep_key_len = wep_key_len <= 5 ? 5 : 13;
-			wep_total_len = wep_key_len + FIELD_OFFSET(NDIS_802_11_WEP, KeyMaterial);
-			pwep =(NDIS_802_11_WEP *)rtw_malloc(wep_total_len);
+			wep_total_len = wep_key_len + FIELD_OFFSET(struct ndis_802_11_wep, KeyMaterial);
+			pwep =(struct ndis_802_11_wep *)rtw_malloc(wep_total_len);
 			if (pwep == NULL){
 				DBG_8192D(" r871x_set_encryption: pwep allocate fail !!!\n");
 				goto exit;
@@ -7640,8 +7640,8 @@ static int rtw_set_hidden_ssid(struct ne
 	ssid_ie = rtw_get_ie(param->u.bcn_ie.buf,  WLAN_EID_SSID, &ssid_len, ie_len);
 
 	if (ssid_ie && ssid_len) {
-		WLAN_BSSID_EX *pbss_network = &mlmepriv->cur_network.network;
-		WLAN_BSSID_EX *pbss_network_ext = &mlmeinfo->network;
+		struct wlan_bssid_ex *pbss_network = &mlmepriv->cur_network.network;
+		struct wlan_bssid_ex *pbss_network_ext = &mlmeinfo->network;
 
 		_rtw_memcpy(ssid, ssid_ie+2, ssid_len);
 		ssid[ssid_len>NDIS_802_11_LENGTH_SSID?NDIS_802_11_LENGTH_SSID:ssid_len] = 0x0;
