From b9fc6d9103fda229f96188a18fab7eb285a4c44e Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Thu, 2 May 2013 14:57:46 -0500
Subject: [PATCH 103/210] Fix a lot of CamelCase variables in rtw_cmd.h and
 rtw_mlme_ext.h

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_cmd.c         |  90 ++++++-------
 core/rtw_mlme.c        |   4 +-
 core/rtw_mlme_ext.c    |  68 +++++-----
 core/rtw_wlan_util.c   |  12 +-
 include/rtw_cmd.h      | 340 ++++++++++++++++++++++++-------------------------
 include/rtw_mlme_ext.h |  56 ++++----
 include/rtw_mp.h       |   2 +-
 include/rtw_rf.h       |   2 +-
 os_dep/ioctl_linux.c   |  17 +--
 9 files changed, 294 insertions(+), 297 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -281,7 +281,7 @@ int rtw_cmd_filter(struct cmd_priv *pcmd
 	}
 	#endif
 
-	if (cmd_obj->cmdcode == GEN_CMD_CODE(_SetChannelPlan))
+	if (cmd_obj->cmdcode == GEN_CMD_CODE(_SETCHANNELPLAN))
 		allow = true;
 
 	if ((pcmdpriv->padapter->hw_init_completed == false && allow == false) ||
@@ -351,7 +351,7 @@ void rtw_free_cmd_obj(struct cmd_obj *pc
 _func_enter_;
 
 	if ((pcmd->cmdcode != _JOINBSS_CMD_) &&
-	    (pcmd->cmdcode != _CreateBss_CMD_)) {
+	    (pcmd->cmdcode != _CREATEBSS_CMD_)) {
 		/* free parmbuf in cmd_obj */
 		rtw_mfree((unsigned char *)pcmd->parmbuf, pcmd->cmdsz);
 	}
@@ -588,7 +588,7 @@ _func_enter_;
 
 	psetusbsuspend->action = action;
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, psetusbsuspend, GEN_CMD_CODE(_SetUsbSuspend));
+	init_h2fwcmd_w_parm_no_rsp(ph2c, psetusbsuspend, GEN_CMD_CODE(_SETUSBSUSPEND));
 
 	ret = rtw_enqueue_cmd(pcmdpriv, ph2c);
 
@@ -641,7 +641,7 @@ _func_enter_;
 
 	RT_TRACE(_module_rtl871x_cmd_c_, _drv_info_, ("\nflush  network queue\n\n"));
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, psurveyPara, GEN_CMD_CODE(_SiteSurvey));
+	init_h2fwcmd_w_parm_no_rsp(ph2c, psurveyPara, GEN_CMD_CODE(_SITESURVEY));
 
 	/* psurveyPara->bsslimit = 48; */
 	psurveyPara->scan_mode = pmlmepriv->scan_mode;
@@ -719,12 +719,12 @@ _func_enter_;
 		goto exit;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, pbsetdataratepara, GEN_CMD_CODE(_SetDataRate));
+	init_h2fwcmd_w_parm_no_rsp(ph2c, pbsetdataratepara, GEN_CMD_CODE(_SETDATARATE));
 #ifdef MP_FIRMWARE_OFFLOAD
 	pbsetdataratepara->curr_rateidx = *(u32 *)rateset;
 #else
 	pbsetdataratepara->mac_id = 5;
-	_rtw_memcpy(pbsetdataratepara->datarates, rateset, NumRates);
+	_rtw_memcpy(pbsetdataratepara->datarates, rateset, NUMRATES);
 #endif
 	res = rtw_enqueue_cmd(pcmdpriv, ph2c);
 exit:
@@ -756,9 +756,9 @@ _func_enter_;
 		goto exit;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, pssetbasicratepara, _SetBasicRate_CMD_);
+	init_h2fwcmd_w_parm_no_rsp(ph2c, pssetbasicratepara, _SETBASICRATE_CMD_);
 
-	_rtw_memcpy(pssetbasicratepara->basicrates, rateset, NumRates);
+	_rtw_memcpy(pssetbasicratepara->basicrates, rateset, NUMRATES);
 
 	res = rtw_enqueue_cmd(pcmdpriv, ph2c);
 exit:
@@ -798,7 +798,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, psetphypara, _SetPhy_CMD_);
+	init_h2fwcmd_w_parm_no_rsp(ph2c, psetphypara, _SETPHY_CMD_);
 
 	RT_TRACE(_module_rtl871x_cmd_c_, _drv_info_, ("CH =%d, modem =%d", ch, modem));
 
@@ -831,7 +831,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, pwritebbparm, GEN_CMD_CODE(_SetBBReg));
+	init_h2fwcmd_w_parm_no_rsp(ph2c, pwritebbparm, GEN_CMD_CODE(_SETBBREG));
 
 	pwritebbparm->offset = offset;
 	pwritebbparm->value = val;
@@ -863,7 +863,7 @@ _func_enter_;
 	}
 
 	_rtw_init_listhead(&ph2c->list);
-	ph2c->cmdcode = GEN_CMD_CODE(_GetBBReg);
+	ph2c->cmdcode = GEN_CMD_CODE(_GETBBREG);
 	ph2c->parmbuf = (unsigned char *)prdbbparm;
 	ph2c->cmdsz =  sizeof(struct readBB_parm);
 	ph2c->rsp = pval;
@@ -897,7 +897,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, pwriterfparm, GEN_CMD_CODE(_SetRFReg));
+	init_h2fwcmd_w_parm_no_rsp(ph2c, pwriterfparm, GEN_CMD_CODE(_SETRFREG));
 
 	pwriterfparm->offset = offset;
 	pwriterfparm->value = val;
@@ -931,7 +931,7 @@ _func_enter_;
 	}
 
 	_rtw_init_listhead(&ph2c->list);
-	ph2c->cmdcode = GEN_CMD_CODE(_GetRFReg);
+	ph2c->cmdcode = GEN_CMD_CODE(_GETRFREG);
 	ph2c->parmbuf = (unsigned char *)prdrfparm;
 	ph2c->cmdsz =  sizeof(struct readRF_parm);
 	ph2c->rsp = pval;
@@ -1000,7 +1000,7 @@ _func_enter_;
 	}
 
 	_rtw_init_listhead(&pcmd->list);
-	pcmd->cmdcode = _CreateBss_CMD_;
+	pcmd->cmdcode = _CREATEBSS_CMD_;
 	pcmd->parmbuf = (unsigned char *)pdev_network;
 	pcmd->cmdsz = get_wlan_bssid_ex_sz((struct wlan_bssid_ex *)pdev_network);
 	pcmd->rsp = NULL;
@@ -1029,7 +1029,7 @@ _func_enter_;
 	}
 
 	_rtw_init_listhead(&pcmd->list);
-	pcmd->cmdcode = GEN_CMD_CODE(_CreateBss);
+	pcmd->cmdcode = GEN_CMD_CODE(_CREATEBSS);
 	pcmd->parmbuf = pbss;
 	pcmd->cmdsz =  sz;
 	pcmd->rsp = NULL;
@@ -1214,7 +1214,7 @@ _func_enter_;
 			rtw_mfree((u8 *)param, sizeof(*param));
 			goto exit;
 		}
-		init_h2fwcmd_w_parm_no_rsp(cmdobj, param, _DisConnect_CMD_);
+		init_h2fwcmd_w_parm_no_rsp(cmdobj, param, _DISCONNECT_CMD_);
 		res = rtw_enqueue_cmd(cmdpriv, cmdobj);
 	} else {
 		/* no need to enqueue, do the cmd hdl directly and free cmd parameter */
@@ -1253,7 +1253,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, psetop, _SetOpMode_CMD_);
+	init_h2fwcmd_w_parm_no_rsp(ph2c, psetop, _SETOPMODE_CMD_);
 	psetop->mode = (u8)networktype;
 
 	res = rtw_enqueue_cmd(pcmdpriv, ph2c);
@@ -1300,7 +1300,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, psetstakey_para, _SetStaKey_CMD_);
+	init_h2fwcmd_w_parm_no_rsp(ph2c, psetstakey_para, _SETSTAKEY_CMD_);
 	ph2c->rsp = (u8 *)psetstakey_rsp;
 	ph2c->rspsz = sizeof(struct set_stakey_rsp);
 
@@ -1344,10 +1344,10 @@ u8 rtw_clearstakey_cmd(struct rtw_adapte
 {
 	struct cmd_obj *ph2c;
 	struct set_stakey_parm *psetstakey_para;
-	struct cmd_priv				*pcmdpriv = &padapter->cmdpriv;
-	struct set_stakey_rsp		*psetstakey_rsp = NULL;
-	struct mlme_priv			*pmlmepriv = &padapter->mlmepriv;
-	struct security_priv		*psecuritypriv = &padapter->securitypriv;
+	struct cmd_priv *pcmdpriv = &padapter->cmdpriv;
+	struct set_stakey_rsp *psetstakey_rsp = NULL;
+	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
+	struct security_priv *psecuritypriv = &padapter->securitypriv;
 	struct sta_info *sta = (struct sta_info *)psta;
 	u8 res = _SUCCESS;
 
@@ -1377,7 +1377,7 @@ _func_enter_;
 			goto exit;
 		}
 
-		init_h2fwcmd_w_parm_no_rsp(ph2c, psetstakey_para, _SetStaKey_CMD_);
+		init_h2fwcmd_w_parm_no_rsp(ph2c, psetstakey_para, _SETSTAKEY_CMD_);
 		ph2c->rsp = (u8 *)psetstakey_rsp;
 		ph2c->rspsz = sizeof(struct set_stakey_rsp);
 
@@ -1415,7 +1415,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, psetrttblparm, GEN_CMD_CODE(_SetRaTable));
+	init_h2fwcmd_w_parm_no_rsp(ph2c, psetrttblparm, GEN_CMD_CODE(_SETRATABLE));
 
 	_rtw_memcpy(psetrttblparm, prate_table, sizeof(struct setratable_parm));
 
@@ -1447,7 +1447,7 @@ _func_enter_;
 	}
 
 	_rtw_init_listhead(&ph2c->list);
-	ph2c->cmdcode = GEN_CMD_CODE(_GetRaTable);
+	ph2c->cmdcode = GEN_CMD_CODE(_GETRATABLE);
 	ph2c->parmbuf = (unsigned char *)pgetrttblparm;
 	ph2c->cmdsz =  sizeof(struct getratable_parm);
 	ph2c->rsp = (u8 *)pval;
@@ -1492,7 +1492,7 @@ _func_enter_;
 		return _FAIL;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, psetassocsta_para, _SetAssocSta_CMD_);
+	init_h2fwcmd_w_parm_no_rsp(ph2c, psetassocsta_para, _SETASSOCSTA_CMD_);
 	ph2c->rsp = (u8 *)psetassocsta_rsp;
 	ph2c->rspsz = sizeof(struct set_assocsta_rsp);
 
@@ -1533,7 +1533,7 @@ _func_enter_;
 	paddbareq_parm->tid = tid;
 	_rtw_memcpy(paddbareq_parm->addr, addr, ETH_ALEN);
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, paddbareq_parm, GEN_CMD_CODE(_AddBAReq));
+	init_h2fwcmd_w_parm_no_rsp(ph2c, paddbareq_parm, GEN_CMD_CODE(_ADDBAREQ));
 
 	res = rtw_enqueue_cmd(pcmdpriv, ph2c);
 
@@ -1624,7 +1624,7 @@ _func_enter_;
 			goto exit;
 		}
 
-		init_h2fwcmd_w_parm_no_rsp(pcmdobj, set_ch_parm, GEN_CMD_CODE(_SetChannel));
+		init_h2fwcmd_w_parm_no_rsp(pcmdobj, set_ch_parm, GEN_CMD_CODE(_SETCHANNEL));
 		res = rtw_enqueue_cmd(pcmdpriv, pcmdobj);
 	} else {
 		/* no need to enqueue, do the cmd hdl directly and free cmd parameter */
@@ -1648,7 +1648,7 @@ _func_exit_;
 u8 rtw_set_chplan_cmd(struct rtw_adapter *padapter, u8 chplan, u8 enqueue)
 {
 	struct cmd_obj *pcmdobj;
-	struct SetChannelPlan_param *setChannelPlan_param;
+	struct setchannelplan_param *setchannelplan_param;
 	struct cmd_priv   *pcmdpriv = &padapter->cmdpriv;
 
 	u8 res = _SUCCESS;
@@ -1664,30 +1664,30 @@ _func_enter_;
 	}
 
 	/* prepare cmd parameter */
-	setChannelPlan_param = (struct SetChannelPlan_param *)rtw_zmalloc(sizeof(struct SetChannelPlan_param));
-	if (setChannelPlan_param == NULL) {
+	setchannelplan_param = (struct setchannelplan_param *)rtw_zmalloc(sizeof(struct setchannelplan_param));
+	if (setchannelplan_param == NULL) {
 		res = _FAIL;
 		goto exit;
 	}
-	setChannelPlan_param->channel_plan = chplan;
+	setchannelplan_param->channel_plan = chplan;
 
 	if (enqueue) {
 		/* need enqueue, prepare cmd_obj and enqueue */
 		pcmdobj = (struct cmd_obj *)rtw_zmalloc(sizeof(struct	cmd_obj));
 		if (pcmdobj == NULL) {
-			rtw_mfree((u8 *)setChannelPlan_param, sizeof(struct SetChannelPlan_param));
+			rtw_mfree((u8 *)setchannelplan_param, sizeof(struct setchannelplan_param));
 			res = _FAIL;
 			goto exit;
 		}
 
-		init_h2fwcmd_w_parm_no_rsp(pcmdobj, setChannelPlan_param, GEN_CMD_CODE(_SetChannelPlan));
+		init_h2fwcmd_w_parm_no_rsp(pcmdobj, setchannelplan_param, GEN_CMD_CODE(_SETCHANNELPLAN));
 		res = rtw_enqueue_cmd(pcmdpriv, pcmdobj);
 	} else {
 		/* no need to enqueue, do the cmd hdl directly and free cmd parameter */
-		if (H2C_SUCCESS != set_chplan_hdl(padapter, (unsigned char *)setChannelPlan_param))
+		if (H2C_SUCCESS != set_chplan_hdl(padapter, (unsigned char *)setchannelplan_param))
 			res = _FAIL;
 
-		rtw_mfree((u8 *)setChannelPlan_param, sizeof(struct SetChannelPlan_param));
+		rtw_mfree((u8 *)setchannelplan_param, sizeof(struct setchannelplan_param));
 	}
 
 	/* do something based on res... */
@@ -1704,7 +1704,7 @@ _func_exit_;
 u8 rtw_led_blink_cmd(struct rtw_adapter *padapter, struct LED_871X *pLed)
 {
 	struct cmd_obj *pcmdobj;
-	struct LedBlink_param *ledBlink_param;
+	struct ledblink_param *ledBlink_param;
 	struct cmd_priv   *pcmdpriv = &padapter->cmdpriv;
 
 	u8 res = _SUCCESS;
@@ -1719,7 +1719,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	ledBlink_param = (struct LedBlink_param *)rtw_zmalloc(sizeof(struct	LedBlink_param));
+	ledBlink_param = (struct ledblink_param *)rtw_zmalloc(sizeof(struct	ledblink_param));
 	if (ledBlink_param == NULL) {
 		rtw_mfree((u8 *)pcmdobj, sizeof(struct cmd_obj));
 		res = _FAIL;
@@ -1728,7 +1728,7 @@ _func_enter_;
 
 	ledBlink_param->pLed = pLed;
 
-	init_h2fwcmd_w_parm_no_rsp(pcmdobj, ledBlink_param, GEN_CMD_CODE(_LedBlink));
+	init_h2fwcmd_w_parm_no_rsp(pcmdobj, ledBlink_param, GEN_CMD_CODE(_LEDBLINK));
 	res = rtw_enqueue_cmd(pcmdpriv, pcmdobj);
 
 exit:
@@ -1741,7 +1741,7 @@ _func_exit_;
 u8 rtw_set_csa_cmd(struct rtw_adapter *padapter, u8 new_ch_no)
 {
 	struct cmd_obj *pcmdobj;
-	struct SetChannelSwitch_param *setChannelSwitch_param;
+	struct setchannelswitch_param *setchannelswitch_param;
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct cmd_priv   *pcmdpriv = &padapter->cmdpriv;
 
@@ -1757,16 +1757,16 @@ _func_enter_;
 		goto exit;
 	}
 
-	setChannelSwitch_param = (struct SetChannelSwitch_param *)rtw_zmalloc(sizeof(struct SetChannelSwitch_param));
-	if (setChannelSwitch_param == NULL) {
+	setchannelswitch_param = (struct setchannelswitch_param *)rtw_zmalloc(sizeof(struct setchannelswitch_param));
+	if (setchannelswitch_param == NULL) {
 		rtw_mfree((u8 *)pcmdobj, sizeof(struct cmd_obj));
 		res = _FAIL;
 		goto exit;
 	}
 
-	setChannelSwitch_param->new_ch_no = new_ch_no;
+	setchannelswitch_param->new_ch_no = new_ch_no;
 
-	init_h2fwcmd_w_parm_no_rsp(pcmdobj, setChannelSwitch_param, GEN_CMD_CODE(_SetChannelSwitch));
+	init_h2fwcmd_w_parm_no_rsp(pcmdobj, setchannelswitch_param, GEN_CMD_CODE(_SETCHANNELSWITCH));
 	res = rtw_enqueue_cmd(pcmdpriv, pcmdobj);
 
 exit:
@@ -2531,7 +2531,7 @@ createbss_cmd_fail:
 _func_exit_;
 }
 
-void rtw_setstaKey_cmdrsp_callback(struct rtw_adapter *padapter, struct cmd_obj *pcmd)
+void rtw_setstakey_cmdrsp_callback(struct rtw_adapter *padapter, struct cmd_obj *pcmd)
 {
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	struct set_stakey_rsp *psetstakey_rsp = (struct set_stakey_rsp *)(pcmd->rsp);
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -2535,7 +2535,7 @@ _func_enter_;
 	_rtw_memset(psetauthparm, 0, sizeof(struct setauth_parm));
 	psetauthparm->mode=(unsigned char)psecuritypriv->dot11AuthAlgrthm;
 
-	pcmd->cmdcode = _SetAuth_CMD_;
+	pcmd->cmdcode = _SETAUTH_CMD_;
 	pcmd->parmbuf = (unsigned char *)psetauthparm;
 	pcmd->cmdsz =  (sizeof(struct setauth_parm));
 	pcmd->rsp = NULL;
@@ -2631,7 +2631,7 @@ _func_enter_;
 	}
 
 
-	pcmd->cmdcode = _SetKey_CMD_;
+	pcmd->cmdcode = _SETKEY_CMD_;
 	pcmd->parmbuf = (u8 *)psetkeyparm;
 	pcmd->cmdsz =  (sizeof(struct setkey_parm));
 	pcmd->rsp = NULL;
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -293,8 +293,8 @@ static void init_mlme_ext_priv_value(str
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 
 	//unsigned char default_channel_set[MAX_CHANNEL_NUM] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 0};
-	unsigned char	mixed_datarate[NumRates] = {_1M_RATE_, _2M_RATE_, _5M_RATE_, _11M_RATE_, _6M_RATE_,_9M_RATE_, _12M_RATE_, _18M_RATE_, _24M_RATE_, _36M_RATE_, _48M_RATE_, _54M_RATE_, 0xff};
-	unsigned char	mixed_basicrate[NumRates] ={_1M_RATE_, _2M_RATE_, _5M_RATE_, _11M_RATE_, _6M_RATE_, _12M_RATE_, _24M_RATE_, 0xff,};
+	unsigned char	mixed_datarate[NUMRATES] = {_1M_RATE_, _2M_RATE_, _5M_RATE_, _11M_RATE_, _6M_RATE_,_9M_RATE_, _12M_RATE_, _18M_RATE_, _24M_RATE_, _36M_RATE_, _48M_RATE_, _54M_RATE_, 0xff};
+	unsigned char	mixed_basicrate[NUMRATES] ={_1M_RATE_, _2M_RATE_, _5M_RATE_, _11M_RATE_, _6M_RATE_, _12M_RATE_, _24M_RATE_, 0xff,};
 
 	ATOMIC_SET(&pmlmeext->event_seq, 0);
 	pmlmeext->mgnt_seq = 0;//reset to zero when disconnect at client mode
@@ -309,8 +309,8 @@ static void init_mlme_ext_priv_value(str
 
 	//_rtw_memcpy(pmlmeext->channel_set, DefaultChannelPlan[padapter->mlmepriv.ChannelPlan].Channel, DefaultChannelPlan[padapter->mlmepriv.ChannelPlan].Len);
 	//_rtw_memcpy(pmlmeext->channel_set, default_channel_set, MAX_CHANNEL_NUM);
-	_rtw_memcpy(pmlmeext->datarate, mixed_datarate, NumRates);
-	_rtw_memcpy(pmlmeext->basicrate, mixed_basicrate, NumRates);
+	_rtw_memcpy(pmlmeext->datarate, mixed_datarate, NUMRATES);
+	_rtw_memcpy(pmlmeext->basicrate, mixed_basicrate, NUMRATES);
 
 	if(pmlmeext->cur_channel > 14)
 		pmlmeext->tx_rate = IEEE80211_OFDM_RATE_6MB;
@@ -4794,7 +4794,7 @@ int _issue_probereq_p2p(struct rtw_adapt
 	struct rtw_ieee80211_hdr	*pwlanhdr;
 	unsigned short		*fctrl;
 	unsigned char			*mac;
-	unsigned char			bssrate[NumRates];
+	unsigned char			bssrate[NUMRATES];
 	struct xmit_priv		*pxmitpriv = &(padapter->xmitpriv);
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
@@ -6568,7 +6568,7 @@ int _issue_probereq(struct rtw_adapter *
 	struct rtw_ieee80211_hdr	*pwlanhdr;
 	unsigned short		*fctrl;
 	unsigned char			*mac;
-	unsigned char			bssrate[NumRates];
+	unsigned char			bssrate[NUMRATES];
 	struct xmit_priv		*pxmitpriv = &(padapter->xmitpriv);
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
@@ -7038,14 +7038,14 @@ void issue_asocrsp(struct rtw_adapter *p
 void issue_assocreq(struct rtw_adapter *padapter)
 {
 	int ret = _FAIL;
-	struct xmit_frame				*pmgntframe;
-	struct pkt_attrib				*pattrib;
-	unsigned char					*pframe, *p;
-	struct rtw_ieee80211_hdr			*pwlanhdr;
-	unsigned short				*fctrl;
-	unsigned short				val16;
-	unsigned int					i, j, ie_len, index=0;
-	unsigned char					rf_type, bssrate[NumRates], sta_bssrate[NumRates];
+	struct xmit_frame *pmgntframe;
+	struct pkt_attrib *pattrib;
+	unsigned char *pframe, *p;
+	struct rtw_ieee80211_hdr *pwlanhdr;
+	unsigned short *fctrl;
+	unsigned short val16;
+	unsigned int i, j, ie_len, index=0;
+	unsigned char rf_type, bssrate[NUMRATES], sta_bssrate[NUMRATES];
 	struct ndis_802_11_variable_ies *pIE;
 	struct registry_priv	*pregpriv = &padapter->registrypriv;
 	struct xmit_priv		*pxmitpriv = &(padapter->xmitpriv);
@@ -7170,7 +7170,7 @@ void issue_assocreq(struct rtw_adapter *
 	DBG_8192D("bssrate_len = %d\n", bssrate_len);
 
 #else	// Check if the AP's supported rates are also supported by STA.
-	for (bssrate_len = 0; bssrate_len < NumRates; bssrate_len++) {
+	for (bssrate_len = 0; bssrate_len < NUMRATES; bssrate_len++) {
 		if (pmlmeinfo->network.SupportedRates[bssrate_len] == 0) break;
 
 		if (pmlmeinfo->network.SupportedRates[bssrate_len] == 0x2C) // Avoid the proprietary data rate (22Mbps) of Handlink WSG-4000 AP
@@ -9475,7 +9475,7 @@ void report_survey_event(struct rtw_adap
 
 	_rtw_init_listhead(&pcmd_obj->list);
 
-	pcmd_obj->cmdcode = GEN_CMD_CODE(_Set_MLME_EVT);
+	pcmd_obj->cmdcode = GEN_CMD_CODE(_SET_MLME_EVT);
 	pcmd_obj->cmdsz = cmdsz;
 	pcmd_obj->parmbuf = pevtcmd;
 
@@ -9484,7 +9484,7 @@ void report_survey_event(struct rtw_adap
 
 	pc2h_evt_hdr = (struct C2HEvent_Header*)(pevtcmd);
 	pc2h_evt_hdr->len = sizeof(struct survey_event);
-	pc2h_evt_hdr->ID = GEN_EVT_CODE(_Survey);
+	pc2h_evt_hdr->ID = GEN_EVT_CODE(_SURVEY);
 	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
 
 	psurvey_evt = (struct survey_event*)(pevtcmd + sizeof(struct C2HEvent_Header));
@@ -9532,7 +9532,7 @@ void report_surveydone_event(struct rtw_
 
 	_rtw_init_listhead(&pcmd_obj->list);
 
-	pcmd_obj->cmdcode = GEN_CMD_CODE(_Set_MLME_EVT);
+	pcmd_obj->cmdcode = GEN_CMD_CODE(_SET_MLME_EVT);
 	pcmd_obj->cmdsz = cmdsz;
 	pcmd_obj->parmbuf = pevtcmd;
 
@@ -9541,7 +9541,7 @@ void report_surveydone_event(struct rtw_
 
 	pc2h_evt_hdr = (struct C2HEvent_Header*)(pevtcmd);
 	pc2h_evt_hdr->len = sizeof(struct surveydone_event);
-	pc2h_evt_hdr->ID = GEN_EVT_CODE(_SurveyDone);
+	pc2h_evt_hdr->ID = GEN_EVT_CODE(_SURVEYDONE);
 	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
 
 	psurveydone_evt = (struct surveydone_event*)(pevtcmd + sizeof(struct C2HEvent_Header));
@@ -9580,7 +9580,7 @@ void report_join_res(struct rtw_adapter
 
 	_rtw_init_listhead(&pcmd_obj->list);
 
-	pcmd_obj->cmdcode = GEN_CMD_CODE(_Set_MLME_EVT);
+	pcmd_obj->cmdcode = GEN_CMD_CODE(_SET_MLME_EVT);
 	pcmd_obj->cmdsz = cmdsz;
 	pcmd_obj->parmbuf = pevtcmd;
 
@@ -9589,7 +9589,7 @@ void report_join_res(struct rtw_adapter
 
 	pc2h_evt_hdr = (struct C2HEvent_Header*)(pevtcmd);
 	pc2h_evt_hdr->len = sizeof(struct joinbss_event);
-	pc2h_evt_hdr->ID = GEN_EVT_CODE(_JoinBss);
+	pc2h_evt_hdr->ID = GEN_EVT_CODE(_JOINBSS);
 	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
 
 	pjoinbss_evt = (struct joinbss_event*)(pevtcmd + sizeof(struct C2HEvent_Header));
@@ -9634,7 +9634,7 @@ void report_del_sta_event(struct rtw_ada
 
 	_rtw_init_listhead(&pcmd_obj->list);
 
-	pcmd_obj->cmdcode = GEN_CMD_CODE(_Set_MLME_EVT);
+	pcmd_obj->cmdcode = GEN_CMD_CODE(_SET_MLME_EVT);
 	pcmd_obj->cmdsz = cmdsz;
 	pcmd_obj->parmbuf = pevtcmd;
 
@@ -9643,7 +9643,7 @@ void report_del_sta_event(struct rtw_ada
 
 	pc2h_evt_hdr = (struct C2HEvent_Header*)(pevtcmd);
 	pc2h_evt_hdr->len = sizeof(struct stadel_event);
-	pc2h_evt_hdr->ID = GEN_EVT_CODE(_DelSTA);
+	pc2h_evt_hdr->ID = GEN_EVT_CODE(_DELSTA);
 	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
 
 	pdel_sta_evt = (struct stadel_event*)(pevtcmd + sizeof(struct C2HEvent_Header));
@@ -9690,7 +9690,7 @@ void report_add_sta_event(struct rtw_ada
 
 	_rtw_init_listhead(&pcmd_obj->list);
 
-	pcmd_obj->cmdcode = GEN_CMD_CODE(_Set_MLME_EVT);
+	pcmd_obj->cmdcode = GEN_CMD_CODE(_SET_MLME_EVT);
 	pcmd_obj->cmdsz = cmdsz;
 	pcmd_obj->parmbuf = pevtcmd;
 
@@ -9699,7 +9699,7 @@ void report_add_sta_event(struct rtw_ada
 
 	pc2h_evt_hdr = (struct C2HEvent_Header*)(pevtcmd);
 	pc2h_evt_hdr->len = sizeof(struct stassoc_event);
-	pc2h_evt_hdr->ID = GEN_EVT_CODE(_AddSTA);
+	pc2h_evt_hdr->ID = GEN_EVT_CODE(_ADDSTA);
 	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
 
 	padd_sta_evt = (struct stassoc_event*)(pevtcmd + sizeof(struct C2HEvent_Header));
@@ -10277,7 +10277,7 @@ void survey_timer_hdl(struct rtw_adapter
 			goto exit_survey_timer_hdl;
 		}
 
-		init_h2fwcmd_w_parm_no_rsp(ph2c, psurveyPara, GEN_CMD_CODE(_SiteSurvey));
+		init_h2fwcmd_w_parm_no_rsp(ph2c, psurveyPara, GEN_CMD_CODE(_SITESURVEY));
 		rtw_enqueue_cmd(pcmdpriv, ph2c);
 	}
 
@@ -11102,7 +11102,7 @@ _func_enter_;
 	);
 	ptxBeacon_parm->network.IELength += len_diff;
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, ptxBeacon_parm, GEN_CMD_CODE(_TX_Beacon));
+	init_h2fwcmd_w_parm_no_rsp(ph2c, ptxBeacon_parm, GEN_CMD_CODE(_TX_BEACON));
 
 	res = rtw_enqueue_cmd(pcmdpriv, ph2c);
 
@@ -12202,16 +12202,16 @@ u8 set_ch_hdl(struct rtw_adapter *padapt
 
 u8 set_chplan_hdl(struct rtw_adapter *padapter, unsigned char *pbuf)
 {
-	struct SetChannelPlan_param *setChannelPlan_param;
+	struct setchannelplan_param *setchannelplan_param;
 	struct mlme_priv		*pmlmepriv = &padapter->mlmepriv;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 
 	if(!pbuf)
 		return H2C_PARAMETERS_ERROR;
 
-	setChannelPlan_param = (struct SetChannelPlan_param *)pbuf;
+	setchannelplan_param = (struct setchannelplan_param *)pbuf;
 
-	pmlmeext->max_chan_nums = init_channel_set(padapter, setChannelPlan_param->channel_plan, pmlmeext->channel_set);
+	pmlmeext->max_chan_nums = init_channel_set(padapter, setchannelplan_param->channel_plan, pmlmeext->channel_set);
 	init_channel_list(padapter, pmlmeext->channel_set, pmlmeext->max_chan_nums, &pmlmeext->channel_list);
 
 	return	H2C_SUCCESS;
@@ -12236,8 +12236,8 @@ u8 led_blink_hdl(struct rtw_adapter *pad
 u8 set_csa_hdl(struct rtw_adapter *padapter, unsigned char *pbuf)
 {
 #ifdef CONFIG_DFS
-	struct SetChannelSwitch_param *setChannelSwitch_param;
-	struct SetChannelPlan_param *setChannelPlan_param;
+	struct setchannelswitch_param *setchannelswitch_param;
+	struct setchannelplan_param *setchannelplan_param;
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &pmlmeext->mlmext_info;
@@ -12247,8 +12247,8 @@ u8 set_csa_hdl(struct rtw_adapter *padap
 	if(!pbuf)
 		return H2C_PARAMETERS_ERROR;
 
-	setChannelSwitch_param = (struct SetChannelSwitch_param *)pbuf;
-	new_ch_no = setChannelSwitch_param->new_ch_no;
+	setchannelswitch_param = (struct setchannelswitch_param *)pbuf;
+	new_ch_no = setchannelswitch_param->new_ch_no;
 
 	rtw_hal_get_hwreg(padapter, HW_VAR_TXPAUSE, &gval8);
 
--- a/drivers/staging/rtl8192du/core/rtw_wlan_util.c
+++ b/drivers/staging/rtl8192du/core/rtw_wlan_util.c
@@ -247,7 +247,7 @@ int is_basicrate(struct rtw_adapter *pad
 	unsigned char val;
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 
-	for(i = 0; i < NumRates; i++)
+	for(i = 0; i < NUMRATES; i++)
 	{
 		val = pmlmeext->basicrate[i];
 
@@ -271,7 +271,7 @@ unsigned int ratetbl2rateset(struct rtw_
 	unsigned int	len = 0;
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 
-	for (i = 0; i < NumRates; i++)
+	for (i = 0; i < NUMRATES; i++)
 	{
 		rate = pmlmeext->datarate[i];
 
@@ -302,9 +302,9 @@ unsigned int ratetbl2rateset(struct rtw_
 
 void get_rate_set(struct rtw_adapter *padapter, unsigned char *pbssrate, int *bssrate_len)
 {
-	unsigned char supportedrates[NumRates];
+	unsigned char supportedrates[NUMRATES];
 
-	_rtw_memset(supportedrates, 0, NumRates);
+	_rtw_memset(supportedrates, 0, NUMRATES);
 	*bssrate_len = ratetbl2rateset(padapter, supportedrates);
 	_rtw_memcpy(pbssrate, supportedrates, *bssrate_len);
 }
@@ -1458,7 +1458,7 @@ unsigned int update_basic_rate(unsigned
 	unsigned int i, num_of_rate;
 	unsigned int mask = 0;
 
-	num_of_rate = (ptn_sz > NumRates)? NumRates: ptn_sz;
+	num_of_rate = (ptn_sz > NUMRATES)? NUMRATES: ptn_sz;
 
 	for (i = 0; i < num_of_rate; i++)
 	{
@@ -1475,7 +1475,7 @@ unsigned int update_supported_rate(unsig
 	unsigned int i, num_of_rate;
 	unsigned int mask = 0;
 
-	num_of_rate = (ptn_sz > NumRates)? NumRates: ptn_sz;
+	num_of_rate = (ptn_sz > NUMRATES)? NUMRATES: ptn_sz;
 
 	for (i = 0; i < num_of_rate; i++)
 	{
--- a/drivers/staging/rtl8192du/include/rtw_cmd.h
+++ b/drivers/staging/rtl8192du/include/rtw_cmd.h
@@ -243,7 +243,7 @@ Command Mode
 The definition of mode:
 
 #define IW_MODE_AUTO	0	// Let the driver decides which AP to join
-#define IW_MODE_ADHOC	1	// Single cell network (Ad-Hoc Clients)
+#define IW_MODE_ADHOC	1	// SINGLE cell network (Ad-Hoc Clients)
 #define IW_MODE_INFRA	2	// Multi cell network, roaming, ..
 #define IW_MODE_MASTER	3	// Synchronisation master or Access Point
 #define IW_MODE_REPEAT	4	// Wireless Repeater (forwarder)
@@ -387,7 +387,7 @@ Command Mode
 
 */
 struct	setbasicrate_parm {
-	u8	basicrates[NumRates];
+	u8	basicrates[NUMRATES];
 };
 
 /*
@@ -403,7 +403,7 @@ struct getbasicrate_parm {
 };
 
 struct getbasicrate_rsp {
-	u8 basicrates[NumRates];
+	u8 basicrates[NUMRATES];
 };
 
 /*
@@ -419,7 +419,7 @@ struct setdatarate_parm {
 	u32	curr_rateidx;
 #else
 	u8	mac_id;
-	u8	datarates[NumRates];
+	u8	datarates[NUMRATES];
 #endif
 };
 
@@ -436,7 +436,7 @@ struct getdatarate_parm {
 
 };
 struct getdatarate_rsp {
-	u8 datarates[NumRates];
+	u8 datarates[NUMRATES];
 };
 
 
@@ -455,7 +455,7 @@ Command Mode
 */
 
 struct	setphyinfo_parm {
-	struct regulatory_class class_sets[NUM_REGULATORYS];
+	struct regulatory_class class_SETs[NUM_REGULATORYS];
 	u8	status;
 };
 
@@ -464,7 +464,7 @@ struct	getphyinfo_parm {
 };
 
 struct	getphyinfo_rsp {
-	struct regulatory_class class_sets[NUM_REGULATORYS];
+	struct regulatory_class class_SETs[NUM_REGULATORYS];
 	u8	status;
 };
 
@@ -708,20 +708,20 @@ struct	getcountjudge_rsp {
 
 
 struct setratable_parm {
-	u8 ss_ForceUp[NumRates];
-	u8 ss_ULevel[NumRates];
-	u8 ss_DLevel[NumRates];
-	u8 count_judge[NumRates];
+	u8 ss_ForceUp[NUMRATES];
+	u8 ss_ULevel[NUMRATES];
+	u8 ss_DLevel[NUMRATES];
+	u8 count_judge[NUMRATES];
 };
 
 struct getratable_parm {
                 uint rsvd;
 };
 struct getratable_rsp {
-        u8 ss_ForceUp[NumRates];
-        u8 ss_ULevel[NumRates];
-        u8 ss_DLevel[NumRates];
-        u8 count_judge[NumRates];
+        u8 ss_ForceUp[NUMRATES];
+        u8 ss_ULevel[NUMRATES];
+        u8 ss_DLevel[NUMRATES];
+        u8 count_judge[NUMRATES];
 };
 
 
@@ -803,13 +803,13 @@ struct set_ch_parm {
 
 #ifdef MP_FIRMWARE_OFFLOAD
 /*H2C Handler index: 47 */
-struct SetTxPower_parm
+struct SetTXPOWER_parm
 {
-	u8 TxPower;
+	u8 TXPOWER;
 };
 
 /*H2C Handler index: 48 */
-struct SwitchAntenna_parm
+struct SWITCHANTENNA_parm
 {
 	u16 antenna_tx;
 	u16 antenna_rx;
@@ -818,41 +818,41 @@ struct SwitchAntenna_parm
 };
 
 /*H2C Handler index: 49 */
-struct SetCrystalCap_parm
+struct setcrystalcap_parm
 {
 	u32 curr_crystalcap;
 };
 
 /*H2C Handler index: 50 */
-struct SetSingleCarrierTx_parm
+struct setsinglecarriertx_parm
 {
-	u8 bStart;
+	u8 start;
 };
 
 /*H2C Handler index: 51 */
-struct SetSingleToneTx_parm
+struct setsingletonetx_parm
 {
-	u8 bStart;
+	u8 start;
 	u8 curr_rfpath;
 };
 
 /*H2C Handler index: 52 */
-struct SetCarrierSuppressionTx_parm
+struct setcarriersuppressiontx_parm
 {
-	u8 bStart;
+	u8 start;
 	u32 curr_rateidx;
 };
 
 /*H2C Handler index: 53 */
-struct SetContinuousTx_parm
+struct setcontinuoustx_parm
 {
-	u8 bStart;
-	u8 CCK_flag; /*1:CCK 2:OFDM*/
+	u8 start;
+	u8 cck_flag; /*1:CCK 2:OFDM*/
 	u32 curr_rateidx;
 };
 
 /*H2C Handler index: 54 */
-struct SwitchBandwidth_parm
+struct switchbandwidth_parm
 {
 	u8 curr_bandwidth;
 };
@@ -860,25 +860,25 @@ struct SwitchBandwidth_parm
 #endif	/* MP_FIRMWARE_OFFLOAD */
 
 /*H2C Handler index: 59 */
-struct SetChannelPlan_param
+struct setchannelplan_param
 {
 	u8 channel_plan;
 };
 
 /*H2C Handler index: 60 */
-struct LedBlink_param
+struct ledblink_param
 {
 	struct LED_871X	*pLed;
 };
 
 /*H2C Handler index: 61 */
-struct SetChannelSwitch_param
+struct setchannelswitch_param
 {
 	u8 new_ch_no;
 };
 
 /*H2C Handler index: 62 */
-struct TDLSoption_param
+struct tdlsoption_param
 {
 	u8 addr[ETH_ALEN];
 	u8 option;
@@ -968,7 +968,7 @@ extern void rtw_createbss_cmd_callback(s
 extern void rtw_getbbrfreg_cmdrsp_callback(struct rtw_adapter  *padapter, struct cmd_obj *pcmd);
 extern void rtw_readtssi_cmdrsp_callback(struct rtw_adapter*	padapter,  struct cmd_obj *pcmd);
 
-extern void rtw_setstaKey_cmdrsp_callback(struct rtw_adapter  *padapter,  struct cmd_obj *pcmd);
+extern void rtw_setstakey_cmdrsp_callback(struct rtw_adapter  *padapter,  struct cmd_obj *pcmd);
 extern void rtw_setassocsta_cmdrsp_callback(struct rtw_adapter  *padapter,  struct cmd_obj *pcmd);
 extern void rtw_getrttbl_cmdrsp_callback(struct rtw_adapter  *padapter,  struct cmd_obj *pcmd);
 
@@ -980,158 +980,158 @@ struct _cmd_callback {
 
 enum rtw_h2c_cmd
 {
-	GEN_CMD_CODE(_Read_MACREG) ,	/*0*/
-	GEN_CMD_CODE(_Write_MACREG) ,
-	GEN_CMD_CODE(_Read_BBREG) ,
-	GEN_CMD_CODE(_Write_BBREG) ,
-	GEN_CMD_CODE(_Read_RFREG) ,
-	GEN_CMD_CODE(_Write_RFREG) , /*5*/
-	GEN_CMD_CODE(_Read_EEPROM) ,
-	GEN_CMD_CODE(_Write_EEPROM) ,
-	GEN_CMD_CODE(_Read_EFUSE) ,
-	GEN_CMD_CODE(_Write_EFUSE) ,
-
-	GEN_CMD_CODE(_Read_CAM) ,	/*10*/
-	GEN_CMD_CODE(_Write_CAM) ,
-	GEN_CMD_CODE(_setBCNITV),
-	GEN_CMD_CODE(_setMBIDCFG),
+	GEN_CMD_CODE(_READ_MACREG) ,	/*0*/
+	GEN_CMD_CODE(_WRITE_MACREG) ,
+	GEN_CMD_CODE(_READ_BBREG) ,
+	GEN_CMD_CODE(_WRITE_BBREG) ,
+	GEN_CMD_CODE(_READ_RFREG) ,
+	GEN_CMD_CODE(_WRITE_RFREG) , /*5*/
+	GEN_CMD_CODE(_READ_EEPROM) ,
+	GEN_CMD_CODE(_WRITE_EEPROM) ,
+	GEN_CMD_CODE(_READ_EFUSE) ,
+	GEN_CMD_CODE(_WRITE_EFUSE) ,
+
+	GEN_CMD_CODE(_READ_CAM) ,	/*10*/
+	GEN_CMD_CODE(_WRITE_CAM) ,
+	GEN_CMD_CODE(_SETBCNITV),
+	GEN_CMD_CODE(_SETMBIDCFG),
 	GEN_CMD_CODE(_JOINBSS),   /*14*/
-	GEN_CMD_CODE(_DisConnect) , /*15*/
-	GEN_CMD_CODE(_CreateBss) ,
-	GEN_CMD_CODE(_SetOpMode) ,
-	GEN_CMD_CODE(_SiteSurvey),  /*18*/
-	GEN_CMD_CODE(_SetAuth) ,
-
-	GEN_CMD_CODE(_SetKey) ,	/*20*/
-	GEN_CMD_CODE(_SetStaKey) ,
-	GEN_CMD_CODE(_SetAssocSta) ,
-	GEN_CMD_CODE(_DelAssocSta) ,
-	GEN_CMD_CODE(_SetStaPwrState) ,
-	GEN_CMD_CODE(_SetBasicRate) , /*25*/
-	GEN_CMD_CODE(_GetBasicRate) ,
-	GEN_CMD_CODE(_SetDataRate) ,
-	GEN_CMD_CODE(_GetDataRate) ,
-	GEN_CMD_CODE(_SetPhyInfo) ,
-
-	GEN_CMD_CODE(_GetPhyInfo) ,	/*30*/
-	GEN_CMD_CODE(_SetPhy) ,
-	GEN_CMD_CODE(_GetPhy) ,
-	GEN_CMD_CODE(_readRssi) ,
-	GEN_CMD_CODE(_readGain) ,
-	GEN_CMD_CODE(_SetAtim) , /*35*/
-	GEN_CMD_CODE(_SetPwrMode) ,
-	GEN_CMD_CODE(_JoinbssRpt),
-	GEN_CMD_CODE(_SetRaTable) ,
-	GEN_CMD_CODE(_GetRaTable) ,
-
-	GEN_CMD_CODE(_GetCCXReport), /*40*/
-	GEN_CMD_CODE(_GetDTMReport),
-	GEN_CMD_CODE(_GetTXRateStatistics),
-	GEN_CMD_CODE(_SetUsbSuspend),
-	GEN_CMD_CODE(_SetH2cLbk),
-	GEN_CMD_CODE(_AddBAReq) , /*45*/
-	GEN_CMD_CODE(_SetChannel), /*46*/
-	GEN_CMD_CODE(_SetTxPower),
-	GEN_CMD_CODE(_SwitchAntenna),
-	GEN_CMD_CODE(_SetCrystalCap),
-	GEN_CMD_CODE(_SetSingleCarrierTx), /*50*/
-
-	GEN_CMD_CODE(_SetSingleToneTx),/*51*/
-	GEN_CMD_CODE(_SetCarrierSuppressionTx),
-	GEN_CMD_CODE(_SetContinuousTx),
-	GEN_CMD_CODE(_SwitchBandwidth), /*54*/
-	GEN_CMD_CODE(_TX_Beacon), /*55*/
+	GEN_CMD_CODE(_DISCONNECT) , /*15*/
+	GEN_CMD_CODE(_CREATEBSS) ,
+	GEN_CMD_CODE(_SETOPMODE) ,
+	GEN_CMD_CODE(_SITESURVEY),  /*18*/
+	GEN_CMD_CODE(_SETAUTH) ,
+
+	GEN_CMD_CODE(_SETKEY) ,	/*20*/
+	GEN_CMD_CODE(_SETSTAKEY) ,
+	GEN_CMD_CODE(_SETASSOCSTA) ,
+	GEN_CMD_CODE(_DELASSOCSTA) ,
+	GEN_CMD_CODE(_SETSTAPWRSTATE) ,
+	GEN_CMD_CODE(_SETBASICRATE) , /*25*/
+	GEN_CMD_CODE(_GETBASICRATE) ,
+	GEN_CMD_CODE(_SETDATARATE) ,
+	GEN_CMD_CODE(_GETDATARATE) ,
+	GEN_CMD_CODE(_SETPHYINFO) ,
+
+	GEN_CMD_CODE(_GETPHYINFO) ,	/*30*/
+	GEN_CMD_CODE(_SETPHY) ,
+	GEN_CMD_CODE(_GETPHY) ,
+	GEN_CMD_CODE(_READRSSI) ,
+	GEN_CMD_CODE(_READGAIN) ,
+	GEN_CMD_CODE(_SETATIM) , /*35*/
+	GEN_CMD_CODE(_SETPWRMODE) ,
+	GEN_CMD_CODE(_JOINBSSRPT),
+	GEN_CMD_CODE(_SETRATABLE) ,
+	GEN_CMD_CODE(_GETRATABLE) ,
+
+	GEN_CMD_CODE(_GETCCXREPORT), /*40*/
+	GEN_CMD_CODE(_GETDTMREPORT),
+	GEN_CMD_CODE(_GETTXRATESTATISTICS),
+	GEN_CMD_CODE(_SETUSBSUSPEND),
+	GEN_CMD_CODE(_SETH2CLBK),
+	GEN_CMD_CODE(_ADDBAREQ) , /*45*/
+	GEN_CMD_CODE(_SETCHANNEL), /*46*/
+	GEN_CMD_CODE(_SETTXPOWER),
+	GEN_CMD_CODE(_SWITCHANTENNA),
+	GEN_CMD_CODE(_SETCRYSTALCAP),
+	GEN_CMD_CODE(_SETSINGLECARRIERTX), /*50*/
+
+	GEN_CMD_CODE(_SETSINGLETONETX),/*51*/
+	GEN_CMD_CODE(_SETCARRIERSUPPRESSIONTX),
+	GEN_CMD_CODE(_SETCONTINUOUSTX),
+	GEN_CMD_CODE(_SWITCHBANDWIDTH), /*54*/
+	GEN_CMD_CODE(_TX_BEACON), /*55*/
 
-	GEN_CMD_CODE(_Set_MLME_EVT), /*56*/
+	GEN_CMD_CODE(_SET_MLME_EVT), /*56*/
 	GEN_CMD_CODE(_SET_DRV_EXTRA), /*57*/
-	GEN_CMD_CODE(_Set_H2C_MSG), /*58*/
+	GEN_CMD_CODE(_SET_H2C_MSG), /*58*/
 
-	GEN_CMD_CODE(_SetChannelPlan), /*59*/
-	GEN_CMD_CODE(_LedBlink), /*60*/
+	GEN_CMD_CODE(_SETCHANNELPLAN), /*59*/
+	GEN_CMD_CODE(_LEDBLINK), /*60*/
 
-	GEN_CMD_CODE(_SetChannelSwitch), /*61*/
+	GEN_CMD_CODE(_SETCHANNELSWITCH), /*61*/
 	GEN_CMD_CODE(_TDLS), /*62*/
 
 	MAX_H2CCMD
 };
 
-#define _GetBBReg_CMD_		_Read_BBREG_CMD_
-#define _SetBBReg_CMD_		_Write_BBREG_CMD_
-#define _GetRFReg_CMD_		_Read_RFREG_CMD_
-#define _SetRFReg_CMD_		_Write_RFREG_CMD_
+#define _GETBBREG_CMD_		_READ_BBREG_CMD_
+#define _SETBBREG_CMD_		_WRITE_BBREG_CMD_
+#define _GETRFREG_CMD_		_READ_RFREG_CMD_
+#define _SETRFREG_CMD_		_WRITE_RFREG_CMD_
 
 #ifdef _RTW_CMD_C_
 struct _cmd_callback	rtw_cmd_callback[] =
 {
-	{GEN_CMD_CODE(_Read_MACREG), NULL}, /*0*/
-	{GEN_CMD_CODE(_Write_MACREG), NULL},
-	{GEN_CMD_CODE(_Read_BBREG), &rtw_getbbrfreg_cmdrsp_callback},
-	{GEN_CMD_CODE(_Write_BBREG), NULL},
-	{GEN_CMD_CODE(_Read_RFREG), &rtw_getbbrfreg_cmdrsp_callback},
-	{GEN_CMD_CODE(_Write_RFREG), NULL}, /*5*/
-	{GEN_CMD_CODE(_Read_EEPROM), NULL},
-	{GEN_CMD_CODE(_Write_EEPROM), NULL},
-	{GEN_CMD_CODE(_Read_EFUSE), NULL},
-	{GEN_CMD_CODE(_Write_EFUSE), NULL},
-
-	{GEN_CMD_CODE(_Read_CAM),	NULL},	/*10*/
-	{GEN_CMD_CODE(_Write_CAM),	 NULL},
-	{GEN_CMD_CODE(_setBCNITV), NULL},
-	{GEN_CMD_CODE(_setMBIDCFG), NULL},
+	{GEN_CMD_CODE(_READ_MACREG), NULL}, /*0*/
+	{GEN_CMD_CODE(_WRITE_MACREG), NULL},
+	{GEN_CMD_CODE(_READ_BBREG), &rtw_getbbrfreg_cmdrsp_callback},
+	{GEN_CMD_CODE(_WRITE_BBREG), NULL},
+	{GEN_CMD_CODE(_READ_RFREG), &rtw_getbbrfreg_cmdrsp_callback},
+	{GEN_CMD_CODE(_WRITE_RFREG), NULL}, /*5*/
+	{GEN_CMD_CODE(_READ_EEPROM), NULL},
+	{GEN_CMD_CODE(_WRITE_EEPROM), NULL},
+	{GEN_CMD_CODE(_READ_EFUSE), NULL},
+	{GEN_CMD_CODE(_WRITE_EFUSE), NULL},
+
+	{GEN_CMD_CODE(_READ_CAM),	NULL},	/*10*/
+	{GEN_CMD_CODE(_WRITE_CAM),	 NULL},
+	{GEN_CMD_CODE(_SETBCNITV), NULL},
+	{GEN_CMD_CODE(_SETMBIDCFG), NULL},
 	{GEN_CMD_CODE(_JOINBSS), &rtw_joinbss_cmd_callback},  /*14*/
-	{GEN_CMD_CODE(_DisConnect), &rtw_disassoc_cmd_callback}, /*15*/
-	{GEN_CMD_CODE(_CreateBss), &rtw_createbss_cmd_callback},
-	{GEN_CMD_CODE(_SetOpMode), NULL},
-	{GEN_CMD_CODE(_SiteSurvey), &rtw_survey_cmd_callback}, /*18*/
-	{GEN_CMD_CODE(_SetAuth), NULL},
-
-	{GEN_CMD_CODE(_SetKey), NULL},	/*20*/
-	{GEN_CMD_CODE(_SetStaKey), &rtw_setstaKey_cmdrsp_callback},
-	{GEN_CMD_CODE(_SetAssocSta), &rtw_setassocsta_cmdrsp_callback},
-	{GEN_CMD_CODE(_DelAssocSta), NULL},
-	{GEN_CMD_CODE(_SetStaPwrState), NULL},
-	{GEN_CMD_CODE(_SetBasicRate), NULL}, /*25*/
-	{GEN_CMD_CODE(_GetBasicRate), NULL},
-	{GEN_CMD_CODE(_SetDataRate), NULL},
-	{GEN_CMD_CODE(_GetDataRate), NULL},
-	{GEN_CMD_CODE(_SetPhyInfo), NULL},
-
-	{GEN_CMD_CODE(_GetPhyInfo), NULL}, /*30*/
-	{GEN_CMD_CODE(_SetPhy), NULL},
-	{GEN_CMD_CODE(_GetPhy), NULL},
-	{GEN_CMD_CODE(_readRssi), NULL},
-	{GEN_CMD_CODE(_readGain), NULL},
-	{GEN_CMD_CODE(_SetAtim), NULL}, /*35*/
-	{GEN_CMD_CODE(_SetPwrMode), NULL},
-	{GEN_CMD_CODE(_JoinbssRpt), NULL},
-	{GEN_CMD_CODE(_SetRaTable), NULL},
-	{GEN_CMD_CODE(_GetRaTable) , NULL},
-
-	{GEN_CMD_CODE(_GetCCXReport), NULL}, /*40*/
-	{GEN_CMD_CODE(_GetDTMReport),	NULL},
-	{GEN_CMD_CODE(_GetTXRateStatistics), NULL},
-	{GEN_CMD_CODE(_SetUsbSuspend), NULL},
-	{GEN_CMD_CODE(_SetH2cLbk), NULL},
-	{GEN_CMD_CODE(_AddBAReq), NULL}, /*45*/
-	{GEN_CMD_CODE(_SetChannel), NULL},		/*46*/
-	{GEN_CMD_CODE(_SetTxPower), NULL},
-	{GEN_CMD_CODE(_SwitchAntenna), NULL},
-	{GEN_CMD_CODE(_SetCrystalCap), NULL},
-	{GEN_CMD_CODE(_SetSingleCarrierTx), NULL},	/*50*/
-
-	{GEN_CMD_CODE(_SetSingleToneTx), NULL}, /*51*/
-	{GEN_CMD_CODE(_SetCarrierSuppressionTx), NULL},
-	{GEN_CMD_CODE(_SetContinuousTx), NULL},
-	{GEN_CMD_CODE(_SwitchBandwidth), NULL},		/*54*/
-	{GEN_CMD_CODE(_TX_Beacon), NULL},/*55*/
+	{GEN_CMD_CODE(_DISCONNECT), &rtw_disassoc_cmd_callback}, /*15*/
+	{GEN_CMD_CODE(_CREATEBSS), &rtw_createbss_cmd_callback},
+	{GEN_CMD_CODE(_SETOPMODE), NULL},
+	{GEN_CMD_CODE(_SITESURVEY), &rtw_survey_cmd_callback}, /*18*/
+	{GEN_CMD_CODE(_SETAUTH), NULL},
+
+	{GEN_CMD_CODE(_SETKEY), NULL},	/*20*/
+	{GEN_CMD_CODE(_SETSTAKEY), &rtw_setstakey_cmdrsp_callback},
+	{GEN_CMD_CODE(_SETASSOCSTA), &rtw_setassocsta_cmdrsp_callback},
+	{GEN_CMD_CODE(_DELASSOCSTA), NULL},
+	{GEN_CMD_CODE(_SETSTAPWRSTATE), NULL},
+	{GEN_CMD_CODE(_SETBASICRATE), NULL}, /*25*/
+	{GEN_CMD_CODE(_GETBASICRATE), NULL},
+	{GEN_CMD_CODE(_SETDATARATE), NULL},
+	{GEN_CMD_CODE(_GETDATARATE), NULL},
+	{GEN_CMD_CODE(_SETPHYINFO), NULL},
+
+	{GEN_CMD_CODE(_GETPHYINFO), NULL}, /*30*/
+	{GEN_CMD_CODE(_SETPHY), NULL},
+	{GEN_CMD_CODE(_GETPHY), NULL},
+	{GEN_CMD_CODE(_READRSSI), NULL},
+	{GEN_CMD_CODE(_READGAIN), NULL},
+	{GEN_CMD_CODE(_SETATIM), NULL}, /*35*/
+	{GEN_CMD_CODE(_SETPWRMODE), NULL},
+	{GEN_CMD_CODE(_JOINBSSRPT), NULL},
+	{GEN_CMD_CODE(_SETRATABLE), NULL},
+	{GEN_CMD_CODE(_GETRATABLE) , NULL},
+
+	{GEN_CMD_CODE(_GETCCXREPORT), NULL}, /*40*/
+	{GEN_CMD_CODE(_GETDTMREPORT),	NULL},
+	{GEN_CMD_CODE(_GETTXRATESTATISTICS), NULL},
+	{GEN_CMD_CODE(_SETUSBSUSPEND), NULL},
+	{GEN_CMD_CODE(_SETH2CLBK), NULL},
+	{GEN_CMD_CODE(_ADDBAREQ), NULL}, /*45*/
+	{GEN_CMD_CODE(_SETCHANNEL), NULL},		/*46*/
+	{GEN_CMD_CODE(_SETTXPOWER), NULL},
+	{GEN_CMD_CODE(_SWITCHANTENNA), NULL},
+	{GEN_CMD_CODE(_SETCRYSTALCAP), NULL},
+	{GEN_CMD_CODE(_SETSINGLECARRIERTX), NULL},	/*50*/
+
+	{GEN_CMD_CODE(_SETSINGLETONETX), NULL}, /*51*/
+	{GEN_CMD_CODE(_SETCARRIERSUPPRESSIONTX), NULL},
+	{GEN_CMD_CODE(_SETCONTINUOUSTX), NULL},
+	{GEN_CMD_CODE(_SWITCHBANDWIDTH), NULL},		/*54*/
+	{GEN_CMD_CODE(_TX_BEACON), NULL},/*55*/
 
-	{GEN_CMD_CODE(_Set_MLME_EVT), NULL},/*56*/
+	{GEN_CMD_CODE(_SET_MLME_EVT), NULL},/*56*/
 	{GEN_CMD_CODE(_SET_DRV_EXTRA), NULL},/*57*/
-	{GEN_CMD_CODE(_Set_H2C_MSG), NULL},/*58*/
-	{GEN_CMD_CODE(_SetChannelPlan), NULL},/*59*/
-	{GEN_CMD_CODE(_LedBlink), NULL},/*60*/
+	{GEN_CMD_CODE(_SET_H2C_MSG), NULL},/*58*/
+	{GEN_CMD_CODE(_SETCHANNELPLAN), NULL},/*59*/
+	{GEN_CMD_CODE(_LEDBLINK), NULL},/*60*/
 
-	{GEN_CMD_CODE(_SetChannelSwitch), NULL},/*61*/
+	{GEN_CMD_CODE(_SETCHANNELSWITCH), NULL},/*61*/
 	{GEN_CMD_CODE(_TDLS), NULL},/*62*/
 };
 #endif
--- a/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
@@ -458,8 +458,8 @@ struct mlme_ext_priv
 	unsigned char	max_chan_nums;
 	struct rt_channel_info channel_set[MAX_CHANNEL_NUM];
 	struct p2p_channels channel_list;
-	unsigned char	basicrate[NumRates];
-	unsigned char	datarate[NumRates];
+	unsigned char	basicrate[NUMRATES];
+	unsigned char	datarate[NUMRATES];
 
 	struct ss_res		sitesurvey_res;
 	struct mlme_ext_info	mlmext_info;//for sta/adhoc mode, including current scanning/connecting/connected related info.
@@ -815,10 +815,10 @@ struct cmd_hdl wlancmds[] =
 	GEN_MLME_EXT_HANDLER(0, rtw_drvextra_cmd_hdl) /*57*/
 
 	GEN_MLME_EXT_HANDLER(0, h2c_msg_hdl) /*58*/
-	GEN_MLME_EXT_HANDLER(sizeof(struct SetChannelPlan_param), set_chplan_hdl) /*59*/
-	GEN_MLME_EXT_HANDLER(sizeof(struct LedBlink_param), led_blink_hdl) /*60*/
-	GEN_MLME_EXT_HANDLER(sizeof(struct SetChannelSwitch_param), set_csa_hdl) /*61*/
-	GEN_MLME_EXT_HANDLER(sizeof(struct TDLSoption_param), tdls_hdl) /*62*/
+	GEN_MLME_EXT_HANDLER(sizeof(struct setchannelplan_param), set_chplan_hdl) /*59*/
+	GEN_MLME_EXT_HANDLER(sizeof(struct ledblink_param), led_blink_hdl) /*60*/
+	GEN_MLME_EXT_HANDLER(sizeof(struct setchannelswitch_param), set_csa_hdl) /*61*/
+	GEN_MLME_EXT_HANDLER(sizeof(struct tdlsoption_param), tdls_hdl) /*62*/
 };
 
 #endif
@@ -853,32 +853,32 @@ void rtw_fwdbg_event_callback(struct rtw
 
 enum rtw_c2h_event
 {
-	GEN_EVT_CODE(_Read_MACREG)=0, /*0*/
-	GEN_EVT_CODE(_Read_BBREG),
-	GEN_EVT_CODE(_Read_RFREG),
-	GEN_EVT_CODE(_Read_EEPROM),
-	GEN_EVT_CODE(_Read_EFUSE),
-	GEN_EVT_CODE(_Read_CAM),			/*5*/
-	GEN_EVT_CODE(_Get_BasicRate),
-	GEN_EVT_CODE(_Get_DataRate),
-	GEN_EVT_CODE(_Survey),	 /*8*/
-	GEN_EVT_CODE(_SurveyDone),	 /*9*/
-
-	GEN_EVT_CODE(_JoinBss) , /*10*/
-	GEN_EVT_CODE(_AddSTA),
-	GEN_EVT_CODE(_DelSTA),
-	GEN_EVT_CODE(_AtimDone) ,
-	GEN_EVT_CODE(_TX_Report),
-	GEN_EVT_CODE(_CCX_Report),			/*15*/
-	GEN_EVT_CODE(_DTM_Report),
-	GEN_EVT_CODE(_TX_Rate_Statistics),
+	GEN_EVT_CODE(_READ_MACREG)=0, /*0*/
+	GEN_EVT_CODE(_READ_BBREG),
+	GEN_EVT_CODE(_READ_RFREG),
+	GEN_EVT_CODE(_READ_EEPROM),
+	GEN_EVT_CODE(_READ_EFUSE),
+	GEN_EVT_CODE(_READ_CAM),			/*5*/
+	GEN_EVT_CODE(_GET_BASICRATE),
+	GEN_EVT_CODE(_GET_DATARATE),
+	GEN_EVT_CODE(_SURVEY),	 /*8*/
+	GEN_EVT_CODE(_SURVEYDONE),	 /*9*/
+
+	GEN_EVT_CODE(_JOINBSS) , /*10*/
+	GEN_EVT_CODE(_ADDSTA),
+	GEN_EVT_CODE(_DELSTA),
+	GEN_EVT_CODE(_ATIMDONE) ,
+	GEN_EVT_CODE(_TX_REPORT),
+	GEN_EVT_CODE(_CCX_REPORT),			/*15*/
+	GEN_EVT_CODE(_DTM_REPORT),
+	GEN_EVT_CODE(_TX_RATE_STATISTICS),
 	GEN_EVT_CODE(_C2HLBK),
 	GEN_EVT_CODE(_FWDBG),
-	GEN_EVT_CODE(_C2HFEEDBACK),               /*20*/
+	GEN_EVT_CODE(_C2HFEEDBACK),            /*20*/
 	GEN_EVT_CODE(_ADDBA),
 	GEN_EVT_CODE(_C2HBCN),
-	GEN_EVT_CODE(_ReportPwrState),		//filen: only for PCIE, USB
-	GEN_EVT_CODE(_CloseRF),				//filen: only for PCIE, work around ASPM
+	GEN_EVT_CODE(_REPORTPWRSTATE),		//filen: only for PCIE, USB
+	GEN_EVT_CODE(_CLOSERF),			//filen: only for PCIE, work around ASPM
 	MAX_C2HEVT
 };
 
--- a/drivers/staging/rtl8192du/include/rtw_mp.h
+++ b/drivers/staging/rtl8192du/include/rtw_mp.h
@@ -330,7 +330,7 @@ enum MP_MODE {
 
 #define MAX_RF_PATH_NUMS	2
 
-extern u8 mpdatarate[NumRates];
+extern u8 mpdatarate[NUMRATES];
 
 /* MP set force data rate base on the definition. */
 enum MPT_RATE_E {
--- a/drivers/staging/rtl8192du/include/rtw_rf.h
+++ b/drivers/staging/rtl8192du/include/rtw_rf.h
@@ -27,7 +27,7 @@
 #define MIXED_PHY		2
 #define CCK_PHY		3
 
-#define NumRates	(13)
+#define NUMRATES	(13)
 
 // slot time for 11g
 #define SHORT_SLOT_TIME					9
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -2303,11 +2303,11 @@ static int rtw_wx_set_rate(struct net_de
 {
 	int	i, ret = 0;
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
-	u8	datarates[NumRates];
+	u8	datarates[NUMRATES];
 	u32	target_rate = wrqu->bitrate.value;
 	u32	fixed = wrqu->bitrate.fixed;
 	u32	ratevalue = 0;
-	 u8 mpdatarate[NumRates]={11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0xff};
+	 u8 mpdatarate[NUMRATES]={11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0xff};
 
 _func_enter_;
 
@@ -2364,15 +2364,12 @@ _func_enter_;
 
 set_rate:
 
-	for(i=0; i<NumRates; i++)
-	{
-		if (ratevalue==mpdatarate[i])
-		{
+	for (i = 0; i < NUMRATES; i++) {
+		if (ratevalue == mpdatarate[i]) {
 			datarates[i] = mpdatarate[i];
 			if (fixed == 0)
 				break;
-		}
-		else{
+		} else {
 			datarates[i] = 0xff;
 		}
 
@@ -6755,7 +6752,7 @@ static u8 set_pairwise_key(struct rtw_ad
 		goto exit;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, psetstakey_para, _SetStaKey_CMD_);
+	init_h2fwcmd_w_parm_no_rsp(ph2c, psetstakey_para, _SETSTAKEY_CMD_);
 
 
 	psetstakey_para->algorithm = (u8)psta->dot118021XPrivacy;
@@ -6821,7 +6818,7 @@ static int set_group_key(struct rtw_adap
 
 	_rtw_memcpy(&(psetkeyparm->key[0]), key, keylen);
 
-	pcmd->cmdcode = _SetKey_CMD_;
+	pcmd->cmdcode = _SETKEY_CMD_;
 	pcmd->parmbuf = (u8 *)psetkeyparm;
 	pcmd->cmdsz =  (sizeof(struct setkey_parm));
 	pcmd->rsp = NULL;
