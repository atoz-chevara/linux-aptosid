From d14dc169e915eee4efc9c472785c4d968ccbffe8 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 27 Apr 2013 22:49:21 -0500
Subject: [PATCH 075/390] Replace typedefs for _sema and _pwrlock

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 include/drv_types.h     |  2 +-
 include/osdep_intf.h    |  2 +-
 include/osdep_service.h |  9 ++++-----
 include/rtw_cmd.h       | 12 +++++-------
 include/rtw_io.h        |  2 +-
 include/rtw_pwrctrl.h   | 14 +++++---------
 include/rtw_recv.h      |  6 +++---
 include/rtw_xmit.h      |  6 +++---
 os_dep/osdep_service.c  |  8 ++++----
 9 files changed, 27 insertions(+), 34 deletions(-)

--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -259,7 +259,7 @@ struct dvobj_priv {
 
 	int	RegUsbSS;
 
-	_sema	usb_suspend_sema;
+	struct  semaphore usb_suspend_sema;
 
 #ifdef CONFIG_USB_VENDOR_REQ_MUTEX
 	_mutex  usb_vendor_req_mutex;
--- a/drivers/staging/rtl8192du/include/osdep_intf.h
+++ b/drivers/staging/rtl8192du/include/osdep_intf.h
@@ -55,7 +55,7 @@ The protection mechanism is through the
 	struct urb *piorw_urb;
 	u8 io_irp_cnt;
 	u8 bio_irp_pending;
-	_sema io_retevt;
+	struct  semaphore io_retevt;
 	_timer	io_timer;
 	u8 bio_irp_timeout;
 	u8 bio_timer_cancel;
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -90,7 +90,6 @@
 #endif
 #endif
 
-	typedef struct	semaphore _sema;
 	typedef	spinlock_t	_lock;
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37))
 	typedef struct mutex		_mutex;
@@ -373,10 +372,10 @@ extern void	rtw_list_insert_head(_list *
 extern void	rtw_list_insert_tail(_list *plist, _list *phead);
 extern void	rtw_list_delete(_list *plist);
 
-extern void	_rtw_init_sema(_sema *sema, int init_val);
-extern void	_rtw_free_sema(_sema	*sema);
-extern void	_rtw_up_sema(_sema	*sema);
-extern u32	_rtw_down_sema(_sema *sema);
+extern void	_rtw_init_sema(struct  semaphore *sema, int init_val);
+extern void	_rtw_free_sema(struct  semaphore *sema);
+extern void	_rtw_up_sema(struct  semaphore *sema);
+extern u32	_rtw_down_sema(struct  semaphore *sema);
 extern void	_rtw_mutex_init(_mutex *pmutex);
 extern void	_rtw_mutex_free(_mutex *pmutex);
 extern void	_rtw_spinlock_init(_lock *plock);
--- a/drivers/staging/rtl8192du/include/rtw_cmd.h
+++ b/drivers/staging/rtl8192du/include/rtw_cmd.h
@@ -47,14 +47,12 @@
 		u32	cmdsz;
 		u8	*rsp;
 		u32	rspsz;
-		//_sema		cmd_sem;
 		_list	list;
 	};
 
 	struct cmd_priv {
-		_sema	cmd_queue_sema;
-		//_sema	cmd_done_sema;
-		_sema	terminate_cmdthread_sema;
+		struct  semaphore cmd_queue_sema;
+		struct  semaphore terminate_cmdthread_sema;
 		_queue	cmd_queue;
 		u8	cmd_seq;
 		u8	*cmd_buf;	//shall be non-paged, and 4 bytes aligned
@@ -80,8 +78,8 @@
 
 	struct	evt_priv {
 #ifdef CONFIG_EVENT_THREAD_MODE
-		_sema	evt_notify;
-		_sema	terminate_evtthread_sema;
+		struct  semaphore evt_notify;
+		struct  semaphore terminate_evtthread_sema;
 		_queue	evt_queue;
 #endif
 
@@ -94,7 +92,7 @@
 #endif
 
 #ifdef CONFIG_H2CLBK
-		_sema	lbkevt_done;
+		struct  semaphore lbkevt_done;
 		u8	lbkevt_limit;
 		u8	lbkevt_num;
 		u8	*cmdevt_parm;
--- a/drivers/staging/rtl8192du/include/rtw_io.h
+++ b/drivers/staging/rtl8192du/include/rtw_io.h
@@ -158,7 +158,7 @@ struct io_req {
 	u32	command;
 	u32	status;
 	u8	*pbuf;
-	_sema	sema;
+	struct  semaphore sema;
 
 	void (*_async_io_callback)(_adapter *padater, struct io_req *pio_req, u8 *cnxt);
 	u8 *cnxt;
--- a/drivers/staging/rtl8192du/include/rtw_pwrctrl.h
+++ b/drivers/staging/rtl8192du/include/rtw_pwrctrl.h
@@ -110,28 +110,24 @@ struct reportpwrstate_parm {
 	unsigned short rsvd;
 };
 
-
-typedef _sema _pwrlock;
-
-
-__inline static void _init_pwrlock(_pwrlock *plock)
+__inline static void _init_pwrlock(struct  semaphore *plock)
 {
 	_rtw_init_sema(plock, 1);
 }
 
-__inline static void _free_pwrlock(_pwrlock *plock)
+__inline static void _free_pwrlock(struct  semaphore *plock)
 {
 	_rtw_free_sema(plock);
 }
 
 
-__inline static void _enter_pwrlock(_pwrlock *plock)
+__inline static void _enter_pwrlock(struct  semaphore *plock)
 {
 	_rtw_down_sema(plock);
 }
 
 
-__inline static void _exit_pwrlock(_pwrlock *plock)
+__inline static void _exit_pwrlock(struct  semaphore *plock)
 {
 	_rtw_up_sema(plock);
 }
@@ -183,7 +179,7 @@ enum { // for ips_mode
 
 struct pwrctrl_priv
 {
-	_pwrlock	lock;
+	struct  semaphore lock;
 	volatile u8 rpwm; // requested power state for fw
 	volatile u8 cpwm; // fw current power state. updated when 1. read from HCPWM 2. driver lowers power level
 	volatile u8 tog; // toggling
--- a/drivers/staging/rtl8192du/include/rtw_recv.h
+++ b/drivers/staging/rtl8192du/include/rtw_recv.h
@@ -192,8 +192,8 @@ struct recv_priv
 	  _lock	lock;
 
 #ifdef CONFIG_RECV_THREAD_MODE
-	_sema	recv_sema;
-	_sema	terminate_recvthread_sema;
+	struct  semaphore recv_sema;
+	struct  semaphore terminate_recvthread_sema;
 #endif
 
 	_queue	free_recv_queue;
@@ -218,7 +218,7 @@ struct recv_priv
 	uint  rx_smallpacket_crcerr;
 	uint  rx_middlepacket_crcerr;
 
-	_sema allrxreturnevt;
+	struct  semaphore allrxreturnevt;
 	uint	ff_hwaddr;
 	u8	rx_pending_cnt;
 
--- a/drivers/staging/rtl8192du/include/rtw_xmit.h
+++ b/drivers/staging/rtl8192du/include/rtw_xmit.h
@@ -368,8 +368,8 @@ struct	xmit_priv	{
 
 	_lock	lock;
 
-	_sema	xmit_sema;
-	_sema	terminate_xmitthread_sema;
+	struct  semaphore xmit_sema;
+	struct  semaphore terminate_xmitthread_sema;
 
 	//_queue	blk_strms[MAX_NUMBLKS];
 	_queue	be_pending;
@@ -413,7 +413,7 @@ struct	xmit_priv	{
 
 	struct hw_xmit *hwxmits;
 	u8	hwxmit_entry;
-	_sema	tx_retevt;//all tx return event;
+	struct  semaphore tx_retevt;//all tx return event;
 	u8		txirp_cnt;//
 	struct tasklet_struct xmit_tasklet;
 	//per AC pending irp
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -426,21 +426,21 @@ void rtw_list_insert_tail(_list *plist,
 Caller must check if the list is empty before calling rtw_list_delete
 */
 
-void _rtw_init_sema(_sema	*sema, int init_val)
+void _rtw_init_sema(struct  semaphore *sema, int init_val)
 {
 	sema_init(sema, init_val);
 }
 
-void _rtw_free_sema(_sema	*sema)
+void _rtw_free_sema(struct  semaphore *sema)
 {
 }
 
-void _rtw_up_sema(_sema	*sema)
+void _rtw_up_sema(struct  semaphore *sema)
 {
 	up(sema);
 }
 
-u32 _rtw_down_sema(_sema *sema)
+u32 _rtw_down_sema(struct  semaphore *sema)
 {
 	if (down_interruptible(sema))
 		return _FAIL;
