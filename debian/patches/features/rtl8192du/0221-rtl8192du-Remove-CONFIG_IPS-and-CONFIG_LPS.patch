From c263fe775edfe1f9e61456bf56379d628fc7acfc Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Thu, 20 Feb 2014 00:27:56 -0600
Subject: [PATCH 221/390] rtl8192du: Remove CONFIG_IPS and CONFIG_LPS*

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_cmd.c          |  26 +---
 core/rtw_ioctl_set.c    |   5 +-
 core/rtw_mlme.c         |  14 --
 core/rtw_mlme_ext.c     |   2 -
 core/rtw_pwrctrl.c      | 341 ------------------------------------------------
 core/rtw_xmit.c         |   5 +-
 hal/rtl8192d_dm.c       |   2 -
 include/autoconf.h      |   3 -
 include/osdep_intf.h    |   2 -
 include/rtw_pwrctrl.h   |  27 +---
 os_dep/ioctl_cfg80211.c |   3 -
 os_dep/os_intfs.c       |  14 +-
 os_dep/usb_intf.c       |  11 +-
 13 files changed, 13 insertions(+), 442 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -346,12 +346,6 @@ int rtw_cmd_thread(void *context)
 	while (1) {
 		if ((_rtw_down_sema(&(pcmdpriv->cmd_queue_sema))) == _FAIL)
 			break;
-
-#ifdef CONFIG_LPS_LCLK
-		if (rtw_register_cmd_alive(padapter) != _SUCCESS)
-			continue;
-#endif
-
 _next:
 		if ((padapter->bDriverStopped == true) ||
 		    (padapter->bSurpriseRemoved == true)) {
@@ -364,12 +358,8 @@ _next:
 		}
 
 		pcmd = rtw_dequeue_cmd(pcmdpriv);
-		if (!pcmd) {
-#ifdef CONFIG_LPS_LCLK
-			rtw_unregister_cmd_alive(padapter);
-#endif
+		if (!pcmd)
 			continue;
-		}
 
 		if (_FAIL == rtw_cmd_filter(pcmdpriv, pcmd)) {
 			pcmd->res = H2C_DROPPED;
@@ -417,7 +407,6 @@ post_process:
 		}
 
 		flush_signals_thread();
-
 		goto _next;
 	}
 	pcmdpriv->cmdthd_running = false;
@@ -539,11 +528,9 @@ u8 rtw_sitesurvey_cmd(struct rtw_adapter
 	struct cmd_priv		*pcmdpriv = &padapter->cmdpriv;
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 
-#ifdef CONFIG_LPS
 	if (check_fwstate(pmlmepriv, _FW_LINKED) == true) {
 		rtw_lps_ctrl_wk_cmd(padapter, LPS_CTRL_SCAN, 1);
 	}
-#endif
 
 #ifdef CONFIG_P2P_PS
 	if (check_fwstate(pmlmepriv, _FW_LINKED) == true) {
@@ -1642,9 +1629,7 @@ exit:
 
 static void traffic_status_watchdog(struct rtw_adapter *padapter)
 {
-#ifdef CONFIG_LPS
 	u8 enterps;
-#endif
 	u8 bBusyTraffic = false, bTxBusyTraffic = false, bRxBusyTraffic = false;
 	u8 bHigherBusyTraffic = false, bHigherBusyRxTraffic = false, bHigherBusyTxTraffic = false;
 	struct mlme_priv		*pmlmepriv = &(padapter->mlmepriv);
@@ -1687,7 +1672,6 @@ static void traffic_status_watchdog(stru
 #endif /* CONFIG_TDLS_AUTOSETUP */
 #endif /* CONFIG_TDLS */
 
-#ifdef CONFIG_LPS
 		/*  check traffic for  powersaving. */
 		if (((pmlmepriv->LinkDetectInfo.NumRxUnicastOkInPeriod + pmlmepriv->LinkDetectInfo.NumTxOkInPeriod) > 8) ||
 		    (pmlmepriv->LinkDetectInfo.NumRxUnicastOkInPeriod > 2))
@@ -1700,11 +1684,8 @@ static void traffic_status_watchdog(stru
 			rtw_lps_enter(padapter);
 		else
 			rtw_lps_leave(padapter);
-#endif
 	} else {
-#ifdef CONFIG_LPS
 		rtw_lps_leave(padapter);
-#endif
 	}
 
 	pmlmepriv->LinkDetectInfo.NumRxOkInPeriod = 0;
@@ -1752,8 +1733,6 @@ static void dynamic_chk_wk_hdl(struct rt
 	rtw_hal_dm_watchdog(padapter);
 }
 
-#ifdef CONFIG_LPS
-
 static void lps_ctrl_wk_hdl(struct rtw_adapter *padapter, u8 lps_ctrl_type)
 {
 	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
@@ -1835,7 +1814,6 @@ exit:
 	return res;
 }
 
-#endif
 #ifdef CONFIG_ANTENNA_DIVERSITY
 
 void antenna_select_wk_hdl(struct rtw_adapter *padapter, u8 antenna)
@@ -2140,11 +2118,9 @@ u8 rtw_drvextra_cmd_hdl(struct rtw_adapt
 	case POWER_SAVING_CTRL_WK_CID:
 		power_saving_wk_hdl(padapter, pdrvextra_cmd->pbuf, pdrvextra_cmd->type_size);
 		break;
-#ifdef CONFIG_LPS
 	case LPS_CTRL_WK_CID:
 		lps_ctrl_wk_hdl(padapter, (u8)pdrvextra_cmd->type_size);
 		break;
-#endif
 #ifdef CONFIG_ANTENNA_DIVERSITY
 	case ANT_SELECT_WK_CID:
 		antenna_select_wk_hdl(padapter, pdrvextra_cmd->type_size);
--- a/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
+++ b/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
@@ -295,12 +295,9 @@ u8 rtw_set_802_11_ssid(struct rtw_adapte
 				} else {
 					goto release_mlme_lock;/* it means driver is in WIFI_ADHOC_MASTER_STATE, we needn't create bss again. */
 				}
-			}
-#ifdef CONFIG_LPS
-			else {
+			} else {
 				rtw_lps_ctrl_wk_cmd(padapter, LPS_CTRL_JOINBSS, 1);
 			}
-#endif
 		} else {
 			RT_TRACE(_module_rtl871x_ioctl_set_c_, _drv_info_, ("Set SSID not the same ssid\n"));
 			RT_TRACE(_module_rtl871x_ioctl_set_c_, _drv_info_, ("set_ssid =[%s] len= 0x%x\n", ssid->Ssid, (unsigned int)ssid->SsidLength));
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -1297,14 +1297,10 @@ void rtw_indicate_disconnect(struct rtw_
 	p2p_ps_wk_cmd(padapter, P2P_PS_DISABLE, 1);
 #endif /*  CONFIG_P2P_PS */
 
-#ifdef CONFIG_LPS
 #ifdef CONFIG_WOWLAN
 	if (padapter->pwrctrlpriv.wowlan_mode == false)
 #endif /* CONFIG_WOWLAN */
 		rtw_lps_ctrl_wk_cmd(padapter, LPS_CTRL_DISCONNECT, 1);
-
-#endif
-
 }
 
 inline void rtw_indicate_scan_done(struct rtw_adapter *padapter, bool aborted)
@@ -1983,18 +1979,8 @@ void rtw_stadel_event_callback(struct rt
 
 void rtw_cpwm_event_callback(struct rtw_adapter *padapter, u8 *pbuf)
 {
-#ifdef CONFIG_LPS_LCLK
-	struct reportpwrstate_parm *preportpwrstate;
-#endif
-
 	RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_,
 		 ("rtw_cpwm_event_callback !!!\n"));
-#ifdef CONFIG_LPS_LCLK
-	preportpwrstate = (struct reportpwrstate_parm *)pbuf;
-	preportpwrstate->state |= (u8) (padapter->pwrctrlpriv.cpwm_tog + 0x80);
-	cpwm_int_hdl(padapter, preportpwrstate);
-#endif
-
 }
 
 /*
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -10048,9 +10048,7 @@ void mlmeext_joinbss_event_callback(stru
 
 		/* set_link_timer(pmlmeext, DISCONNECT_TO); */
 	}
-#ifdef CONFIG_LPS
 	rtw_lps_ctrl_wk_cmd(adapt, LPS_CTRL_CONNECT, 0);
-#endif
 
 exit_mlmeext_joinbss_event_callback:
 
--- a/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
+++ b/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
@@ -20,7 +20,6 @@
 #include <drv_types.h>
 #include <osdep_intf.h>
 
-#ifdef CONFIG_IPS
 void ips_enter(struct rtw_adapter *padapter)
 {
 	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
@@ -101,8 +100,6 @@ int ips_leave(struct rtw_adapter *padapt
 	return result;
 }
 
-#endif
-
 #ifdef CONFIG_AUTOSUSPEND
 extern void autosuspend_enter(struct rtw_adapter *padapter);
 extern int autoresume_enter(struct rtw_adapter *padapter);
@@ -269,9 +266,7 @@ void rtw_ps_processor(struct rtw_adapter
 		} else
 #endif /* CONFIG_AUTOSUSPEND */
 		{
-#ifdef CONFIG_IPS
 			ips_enter(padapter);
-#endif
 		}
 	}
 exit:
@@ -287,7 +282,6 @@ static void pwr_state_check_handler(void
 	rtw_ps_cmd(padapter);
 }
 
-#ifdef CONFIG_LPS
 /*
  *
  * Parameters
@@ -318,10 +312,6 @@ void rtw_set_rpwm(struct rtw_adapter *pa
 	}
 
 	rpwm = pslv | pwrpriv->tog;
-#ifdef CONFIG_LPS_LCLK
-	if ((pwrpriv->cpwm < PS_STATE_S2) && (pslv >= PS_STATE_S2))
-		rpwm |= PS_ACK;
-#endif
 	RT_TRACE(_module_rtl871x_pwrctrl_c_, _drv_notice_,
 		 ("rtw_set_rpwm: rpwm=0x%02x cpwm=0x%02x\n", rpwm,
 		  pwrpriv->cpwm));
@@ -405,9 +395,6 @@ void rtw_set_ps_mode(struct rtw_adapter
 		if (pwdinfo->opp_ps == 0)
 #endif /*  CONFIG_P2P_PS */
 		{
-#ifdef CONFIG_LPS_LCLK
-			_enter_pwrlock(&pwrpriv->lock);
-#endif
 			DBG_8192D
 			    ("rtw_set_ps_mode(): Busy Traffic , Leave 802.11 power save..\n");
 
@@ -440,35 +427,12 @@ void rtw_set_ps_mode(struct rtw_adapter
 			pwrpriv->pwr_mode = ps_mode;
 
 			rtw_set_rpwm(padapter, PS_STATE_S4);
-#ifdef CONFIG_LPS_LCLK
-			{
-				u32 n = 0;
-				while (pwrpriv->cpwm != PS_STATE_S4) {
-					n++;
-					if (n == 10000)
-						break;
-					if (padapter->bSurpriseRemoved == true)
-						break;
-					rtw_msleep_os(1);
-				}
-				if (n == 10000)
-					printk(KERN_ERR
-					       "%s: wait CPWM to S4 too long! cpwm=0x%02x\n",
-					       __func__, pwrpriv->cpwm);
-			}
-#endif
 			rtw_hal_set_hwreg(padapter, HW_VAR_H2C_FW_PWRMODE,
 					  (u8 *)(&ps_mode));
 			pwrpriv->bFwCurrentInPSMode = false;
-#ifdef CONFIG_LPS_LCLK
-			_exit_pwrlock(&pwrpriv->lock);
-#endif
 		}
 	} else {
 		if (ps_rdy_check(padapter)) {
-#ifdef CONFIG_LPS_LCLK
-			_enter_pwrlock(&pwrpriv->lock);
-#endif
 			DBG_8192D
 			    ("rtw_set_ps_mode(): Enter 802.11 power save mode...\n");
 
@@ -506,28 +470,14 @@ void rtw_set_ps_mode(struct rtw_adapter
 			if (pwdinfo->opp_ps == 1)
 				p2p_ps_wk_cmd(padapter, P2P_PS_ENABLE, 0);
 #endif /*  CONFIG_P2P_PS */
-#ifdef CONFIG_LPS_LCLK
-			if (pwrpriv->alives == 0)
-				rtw_set_rpwm(padapter, PS_STATE_S0);
-#else
 			rtw_set_rpwm(padapter, PS_STATE_S2);
-#endif
-#ifdef CONFIG_LPS_LCLK
-			_exit_pwrlock(&pwrpriv->lock);
-#endif
 		}
-		/* else */
-		/*  */
-		/*      pwrpriv->pwr_mode = PS_MODE_ACTIVE; */
-		/*  */
 	}
 
 }
 
-/*  */
 /*	Description: */
 /*		Enter the leisure power save mode. */
-/*  */
 void rtw_lps_enter(struct rtw_adapter *padapter)
 {
 	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
@@ -563,7 +513,6 @@ void rtw_lps_enter(struct rtw_adapter *p
 			return;
 	}
 #endif
-
 	if ((check_fwstate(pmlmepriv, _FW_LINKED) == false) ||
 	    (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY) == true) ||
 	    (check_fwstate(pmlmepriv, WIFI_AP_STATE) == true) ||
@@ -585,7 +534,6 @@ void rtw_lps_enter(struct rtw_adapter *p
 			pwrpriv->LpsIdleCount++;
 		}
 	}
-
 }
 
 /*  */
@@ -630,12 +578,8 @@ void rtw_lps_leave(struct rtw_adapter *p
 			}
 		}
 	}
-
 }
 
-#endif
-
-/*  */
 /*  Description: Leave all power save mode: LPS, FwLPS, IPS if needed. */
 /*  Move code to function by tynli. 2010.03.26. */
 /*  */
@@ -648,10 +592,7 @@ void LeaveAllPowerSaveMode(struct rtw_ad
 #ifdef CONFIG_P2P_PS
 		p2p_ps_wk_cmd(adapter, P2P_PS_DISABLE, 0);
 #endif /*  CONFIG_P2P_PS */
-#ifdef CONFIG_LPS
-		/* DBG_8192D("==> leave LPS.......\n"); */
 		rtw_lps_leave(adapter);
-#endif
 	} else {
 		if (adapter->pwrctrlpriv.rf_pwrstate == rf_off) {
 #ifdef CONFIG_AUTOSUSPEND
@@ -667,286 +608,6 @@ void LeaveAllPowerSaveMode(struct rtw_ad
 
 }
 
-#ifdef CONFIG_LPS_LCLK
-/*
- * Caller:ISR handler...
- *
- * This will be called when CPWM interrupt is up.
- *
- * using to update cpwn of drv; and drv willl make a decision to up or down pwr level
- */
-void cpwm_int_hdl(struct rtw_adapter *padapter,
-		  struct reportpwrstate_parm *preportpwrstate)
-{
-	struct pwrctrl_priv *pwrpriv;
-
-	pwrpriv = &padapter->pwrctrlpriv;
-	pwrpriv->cpwm = PS_STATE(preportpwrstate->state);
-	pwrpriv->cpwm_tog = preportpwrstate->state & PS_TOGGLE;
-
-	if (pwrpriv->cpwm >= PS_STATE_S2) {
-		if (pwrpriv->alives & CMD_ALIVE)
-			_rtw_up_sema(&padapter->cmdpriv.cmd_queue_sema);
-
-		if (pwrpriv->alives & XMIT_ALIVE)
-			_rtw_up_sema(&padapter->xmitpriv.xmit_sema);
-	}
-
-exit:
-	RT_TRACE(_module_rtl871x_pwrctrl_c_, _drv_notice_,
-		 ("cpwm_int_hdl: cpwm=0x%02x\n", pwrpriv->cpwm));
-
-}
-
-static inline void register_task_alive(struct pwrctrl_priv *pwrctrl, u32 tag)
-{
-	pwrctrl->alives |= tag;
-}
-
-static inline void unregister_task_alive(struct pwrctrl_priv *pwrctrl,
-					   u32 tag)
-{
-	pwrctrl->alives &= ~tag;
-}
-
-/*
- * Caller: rtw_xmit_thread
- *
- * Check if the fw_pwrstate is okay for xmit.
- * If not (cpwm is less than S3), then the sub-routine
- * will raise the cpwm to be greater than or equal to S3.
- *
- * Calling Context: Passive
- *
- * Return Value:
- *	 _SUCCESS	rtw_xmit_thread can write fifo/txcmd afterwards.
- *	 _FAIL		rtw_xmit_thread can not do anything.
- */
-s32 rtw_register_tx_alive(struct rtw_adapter *padapter)
-{
-	s32 res;
-	struct pwrctrl_priv *pwrctrl;
-
-	res = _SUCCESS;
-	pwrctrl = &padapter->pwrctrlpriv;
-
-	_enter_pwrlock(&pwrctrl->lock);
-
-	register_task_alive(pwrctrl, XMIT_ALIVE);
-
-	if (pwrctrl->bFwCurrentInPSMode == true) {
-		RT_TRACE(_module_rtl871x_pwrctrl_c_, _drv_err_,
-			 ("rtw_register_tx_alive: cpwm=0x%02x alives=0x%08x\n",
-			  pwrctrl->cpwm, pwrctrl->alives));
-
-		if (pwrctrl->cpwm < PS_STATE_S2) {
-			if (pwrctrl->rpwm < PS_STATE_S2)
-				rtw_set_rpwm(padapter, PS_STATE_S2);
-			res = _FAIL;
-		}
-	}
-
-	_exit_pwrlock(&pwrctrl->lock);
-
-	return res;
-}
-
-/*
- * Caller: rtw_cmd_thread
- *
- * Check if the fw_pwrstate is okay for issuing cmd.
- * If not (cpwm should be is less than S2), then the sub-routine
- * will raise the cpwm to be greater than or equal to S2.
- *
- * Calling Context: Passive
- *
- * Return Value:
- *	_SUCCESS	rtw_cmd_thread can issue cmds to firmware afterwards.
- *	_FAIL		rtw_cmd_thread can not do anything.
- */
-s32 rtw_register_cmd_alive(struct rtw_adapter *padapter)
-{
-	s32 res;
-	struct pwrctrl_priv *pwrctrl;
-
-	res = _SUCCESS;
-	pwrctrl = &padapter->pwrctrlpriv;
-
-	_enter_pwrlock(&pwrctrl->lock);
-
-	register_task_alive(pwrctrl, CMD_ALIVE);
-
-	if (pwrctrl->bFwCurrentInPSMode == true) {
-		RT_TRACE(_module_rtl871x_pwrctrl_c_, _drv_notice_,
-			 ("rtw_register_cmd_alive: cpwm=0x%02x alives=0x%08x\n",
-			  pwrctrl->cpwm, pwrctrl->alives));
-
-		if (pwrctrl->cpwm < PS_STATE_S2) {
-			if (pwrctrl->rpwm < PS_STATE_S2)
-				rtw_set_rpwm(padapter, PS_STATE_S2);
-			res = _FAIL;
-		}
-	}
-
-	_exit_pwrlock(&pwrctrl->lock);
-
-	return res;
-}
-
-/*
- * Caller: rx_isr
- *
- * Calling Context: Dispatch/ISR
- *
- * Return Value:
- *	_SUCCESS
- *	_FAIL
- */
-s32 rtw_register_rx_alive(struct rtw_adapter *padapter)
-{
-	struct pwrctrl_priv *pwrctrl;
-
-	pwrctrl = &padapter->pwrctrlpriv;
-
-	_enter_pwrlock(&pwrctrl->lock);
-
-	register_task_alive(pwrctrl, RECV_ALIVE);
-	RT_TRACE(_module_rtl871x_pwrctrl_c_, _drv_notice_,
-		 ("rtw_register_rx_alive: cpwm=0x%02x alives=0x%08x\n",
-		  pwrctrl->cpwm, pwrctrl->alives));
-
-	_exit_pwrlock(&pwrctrl->lock);
-
-	return _SUCCESS;
-}
-
-/*
- * Caller: evt_isr or evt_thread
- *
- * Calling Context: Dispatch/ISR or Passive
- *
- * Return Value:
- *	_SUCCESS
- *	_FAIL
- */
-s32 rtw_register_evt_alive(struct rtw_adapter *padapter)
-{
-	struct pwrctrl_priv *pwrctrl;
-
-	pwrctrl = &padapter->pwrctrlpriv;
-
-	_enter_pwrlock(&pwrctrl->lock);
-
-	register_task_alive(pwrctrl, EVT_ALIVE);
-	RT_TRACE(_module_rtl871x_pwrctrl_c_, _drv_notice_,
-		 ("rtw_register_evt_alive: cpwm=0x%02x alives=0x%08x\n",
-		  pwrctrl->cpwm, pwrctrl->alives));
-
-	_exit_pwrlock(&pwrctrl->lock);
-
-	return _SUCCESS;
-}
-
-/*
- * Caller: ISR
- *
- * If ISR's txdone,
- * No more pkts for TX,
- * Then driver shall call this fun. to power down firmware again.
- */
-void rtw_unregister_tx_alive(struct rtw_adapter *padapter)
-{
-	struct pwrctrl_priv *pwrctrl;
-
-	pwrctrl = &padapter->pwrctrlpriv;
-
-	_enter_pwrlock(&pwrctrl->lock);
-
-	unregister_task_alive(pwrctrl, XMIT_ALIVE);
-
-	if ((pwrctrl->pwr_mode != PS_MODE_ACTIVE) &&
-	    (pwrctrl->bFwCurrentInPSMode == true)) {
-		if ((pwrctrl->alives == 0) && (pwrctrl->cpwm > PS_STATE_S0))
-			rtw_set_rpwm(padapter, PS_STATE_S0);
-
-		RT_TRACE(_module_rtl871x_pwrctrl_c_, _drv_notice_,
-			 ("rtw_unregister_tx_alive: cpwm=0x%02x alives=0x%08x\n",
-			  pwrctrl->cpwm, pwrctrl->alives));
-	}
-
-	_exit_pwrlock(&pwrctrl->lock);
-
-}
-
-/*
- * Caller: ISR
- *
- * If all commands have been done,
- * and no more command to do,
- * then driver shall call this fun. to power down firmware again.
- */
-void rtw_unregister_cmd_alive(struct rtw_adapter *padapter)
-{
-	struct pwrctrl_priv *pwrctrl;
-
-	pwrctrl = &padapter->pwrctrlpriv;
-
-	_enter_pwrlock(&pwrctrl->lock);
-
-	unregister_task_alive(pwrctrl, CMD_ALIVE);
-
-	if ((pwrctrl->pwr_mode != PS_MODE_ACTIVE) &&
-	    (pwrctrl->bFwCurrentInPSMode == true)) {
-		if ((pwrctrl->alives == 0) && (pwrctrl->cpwm > PS_STATE_S0))
-			rtw_set_rpwm(padapter, PS_STATE_S0);
-
-		RT_TRACE(_module_rtl871x_pwrctrl_c_, _drv_notice_,
-			 ("rtw_unregister_cmd_alive: cpwm=0x%02x alives=0x%08x\n",
-			  pwrctrl->cpwm, pwrctrl->alives));
-	}
-
-	_exit_pwrlock(&pwrctrl->lock);
-
-}
-
-/*
- * Caller: ISR
- */
-void rtw_unregister_rx_alive(struct rtw_adapter *padapter)
-{
-	struct pwrctrl_priv *pwrctrl;
-
-	pwrctrl = &padapter->pwrctrlpriv;
-
-	_enter_pwrlock(&pwrctrl->lock);
-
-	unregister_task_alive(pwrctrl, RECV_ALIVE);
-
-	RT_TRACE(_module_rtl871x_pwrctrl_c_, _drv_notice_,
-		 ("rtw_unregister_rx_alive: cpwm=0x%02x alives=0x%08x\n",
-		  pwrctrl->cpwm, pwrctrl->alives));
-
-	_exit_pwrlock(&pwrctrl->lock);
-
-}
-
-void rtw_unregister_evt_alive(struct rtw_adapter *padapter)
-{
-	struct pwrctrl_priv *pwrctrl;
-
-	pwrctrl = &padapter->pwrctrlpriv;
-
-	unregister_task_alive(pwrctrl, EVT_ALIVE);
-
-	RT_TRACE(_module_rtl871x_pwrctrl_c_, _drv_notice_,
-		 ("rtw_unregister_evt_alive: cpwm=0x%02x alives=0x%08x\n",
-		  pwrctrl->cpwm, pwrctrl->alives));
-
-	_exit_pwrlock(&pwrctrl->lock);
-
-}
-#endif /* CONFIG_LPS_LCLK */
-
 #ifdef CONFIG_RESUME_IN_WORKQUEUE
 static void resume_workitem_callback(struct work_struct *work);
 #endif /* CONFIG_RESUME_IN_WORKQUEUE */
@@ -1275,7 +936,6 @@ int _rtw_pwr_wakeup(struct rtw_adapter *
 		} else
 #endif
 		{
-#ifdef CONFIG_IPS
 			DBG_8192D("%s call ips_leave....\n", __func__);
 			if (_FAIL == ips_leave(padapter)) {
 				DBG_8192D
@@ -1283,7 +943,6 @@ int _rtw_pwr_wakeup(struct rtw_adapter *
 				ret = _FAIL;
 				goto exit;
 			}
-#endif
 		}
 	}
 
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -472,12 +472,9 @@ static s32 update_attrib(struct rtw_adap
 	if ((pattrib->ether_type == 0x888e) || (pattrib->dhcp_pkt == 1))
 		rtw_set_scan_deny(padapter, 3000);
 
-#ifdef CONFIG_LPS
 	/*  If EAPOL , ARP , OR DHCP packet, driver must be in active mode. */
-	if ((pattrib->ether_type == 0x0806) || (pattrib->ether_type == 0x888e) || (pattrib->dhcp_pkt == 1)) {
+	if ((pattrib->ether_type == 0x0806) || (pattrib->ether_type == 0x888e) || (pattrib->dhcp_pkt == 1))
 		rtw_lps_ctrl_wk_cmd(padapter, LPS_CTRL_SPECIAL_PACKET, 1);
-	}
-#endif
 
 	bmcast = IS_MCAST(pattrib->ra);
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
@@ -2371,7 +2371,6 @@ rtl8192d_HalDmWatchDog(
 	if (hw_init_completed == false)
 		goto skip_dm;
 
-#ifdef CONFIG_LPS
 	#if defined(CONFIG_CONCURRENT_MODE)
 	if (adapter->iface_type != IFACE_PORT0 && pbuddy_adapter) {
 		bFwCurrentInPSMode = pbuddy_adapter->pwrctrlpriv.bFwCurrentInPSMode;
@@ -2382,7 +2381,6 @@ rtl8192d_HalDmWatchDog(
 		bFwCurrentInPSMode = adapter->pwrctrlpriv.bFwCurrentInPSMode;
 		rtw_hal_get_hwreg(adapter, HW_VAR_FWLPS_RF_ON, (u8 *)(&bFwPSAwake));
 	}
-#endif
 
 #ifdef CONFIG_P2P_PS
 	/*  Fw is under p2p powersaving mode, driver should stop dynamic mechanism. */
--- a/drivers/staging/rtl8192du/include/autoconf.h
+++ b/drivers/staging/rtl8192du/include/autoconf.h
@@ -41,9 +41,6 @@
 
 #define CONFIG_RECV_REORDERING_CTRL	1
 
-#define CONFIG_IPS	1
-#define CONFIG_LPS	1
-
 #define CONFIG_92D_AP_MODE 1
 #define CONFIG_NATIVEAP_MLME 1
 #ifndef CONFIG_NATIVEAP_MLME
--- a/drivers/staging/rtl8192du/include/osdep_intf.h
+++ b/drivers/staging/rtl8192du/include/osdep_intf.h
@@ -87,10 +87,8 @@ static void rtw_proc_remove_one(struct n
 #endif /* CONFIG_PROC_DEBUG */
 
 void rtw_ips_dev_unload(struct rtw_adapter *padapter);
-#ifdef CONFIG_IPS
 int rtw_ips_pwr_up(struct rtw_adapter *padapter);
 void rtw_ips_pwr_down(struct rtw_adapter *padapter);
-#endif
 
 #ifdef CONFIG_CONCURRENT_MODE
 struct _io_ops;
--- a/drivers/staging/rtl8192du/include/rtw_pwrctrl.h
+++ b/drivers/staging/rtl8192du/include/rtw_pwrctrl.h
@@ -272,28 +272,13 @@ struct pwrctrl_priv
 #define rtw_set_pwr_state_check_timer(pwrctrlpriv) \
 	_rtw_set_pwr_state_check_timer((pwrctrlpriv), (pwrctrlpriv)->pwr_state_check_interval)
 
-extern void rtw_init_pwrctrl_priv(struct rtw_adapter *adapter);
-extern void rtw_free_pwrctrl_priv(struct rtw_adapter * adapter);
-
-#ifdef CONFIG_LPS_LCLK
-extern s32 rtw_register_tx_alive(struct rtw_adapter * padapter);
-extern void rtw_unregister_tx_alive(struct rtw_adapter * padapter);
-extern s32 rtw_register_rx_alive(struct rtw_adapter * padapter);
-extern void rtw_unregister_rx_alive(struct rtw_adapter * padapter);
-extern s32 rtw_register_cmd_alive(struct rtw_adapter * padapter);
-extern void rtw_unregister_cmd_alive(struct rtw_adapter * padapter);
-extern s32 rtw_register_evt_alive(struct rtw_adapter * padapter);
-extern void rtw_unregister_evt_alive(struct rtw_adapter * padapter);
-extern void cpwm_int_hdl(struct rtw_adapter * padapter, struct reportpwrstate_parm *preportpwrstate);
-#endif
-
-extern void rtw_set_ps_mode(struct rtw_adapter * padapter, u8 ps_mode, u8 smart_ps);
-extern void rtw_set_rpwm(struct rtw_adapter * padapter, u8 val8);
-extern void LeaveAllPowerSaveMode(struct rtw_adapter * adapter);
-#ifdef CONFIG_IPS
+void rtw_init_pwrctrl_priv(struct rtw_adapter *adapter);
+void rtw_free_pwrctrl_priv(struct rtw_adapter * adapter);
+void rtw_set_ps_mode(struct rtw_adapter * padapter, u8 ps_mode, u8 smart_ps);
+void rtw_set_rpwm(struct rtw_adapter * padapter, u8 val8);
+void LeaveAllPowerSaveMode(struct rtw_adapter * adapter);
 void ips_enter(struct rtw_adapter * padapter);
 int ips_leave(struct rtw_adapter * padapter);
-#endif
 
 void rtw_ps_processor(struct rtw_adapter*padapter);
 
@@ -305,10 +290,8 @@ rt_rf_power_state RfOnOffDetect(IN	struc
 #endif
 
 
-#ifdef CONFIG_LPS
 void rtw_lps_enter(struct rtw_adapter * padapter);
 void rtw_lps_leave(struct rtw_adapter * padapter);
-#endif
 
 #ifdef CONFIG_RESUME_IN_WORKQUEUE
 void rtw_resume_in_workqueue(struct pwrctrl_priv *pwrpriv);
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -2496,11 +2496,8 @@ static int cfg80211_rtw_set_power_mgmt(s
 
 	rtw_wdev_priv->power_mgmt = enabled;
 
-	#ifdef CONFIG_LPS
 	if (!enabled)
 		LPS_Leave(padapter);
-	#endif
-
 	return 0;
 }
 
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -56,11 +56,7 @@ static int debug = 1;
 /* int smart_ps = 1; */
 #ifdef CONFIG_POWER_SAVING
 static int rtw_power_mgnt = 1;
-#ifdef CONFIG_IPS_LEVEL_2
-static int rtw_ips_mode = IPS_LEVEL_2;
-#else
 static int rtw_ips_mode = IPS_NORMAL;
-#endif
 #else
 int rtw_power_mgnt = PS_MODE_ACTIVE;
 int rtw_ips_mode = IPS_NONE;
@@ -2111,7 +2107,6 @@ int netdev_open(struct net_device *pnetd
 	return ret;
 }
 
-#ifdef CONFIG_IPS
 static int  ips_netdrv_open(struct rtw_adapter *padapter)
 {
 	int status = _SUCCESS;
@@ -2123,16 +2118,13 @@ static int  ips_netdrv_open(struct rtw_a
 	padapter->bCardDisableWOHSM = false;
 
 	status = rtw_hal_init(padapter);
-	if (status == _FAIL)
-	{
+	if (status == _FAIL) {
 		RT_TRACE(_module_os_intfs_c_, _drv_err_, ("ips_netdrv_open(): Can't init h/w!\n"));
 		goto netdev_open_error;
 	}
 
 	if (padapter->intf_start)
-	{
 		padapter->intf_start(padapter);
-	}
 
 	rtw_set_pwr_state_check_timer(&padapter->pwrctrlpriv);
 	_set_timer(&padapter->mlmepriv.dynamic_chk_timer, 5000);
@@ -2174,7 +2166,7 @@ void rtw_ips_pwr_down(struct rtw_adapter
 	padapter->bCardDisableWOHSM = false;
 	DBG_8192D("<=== rtw_ips_pwr_down..................... in %dms\n", rtw_get_passing_time_ms(start_time));
 }
-#endif
+
 void rtw_ips_dev_unload(struct rtw_adapter *padapter)
 {
 	struct net_device *pnetdev = (struct net_device*)padapter->pnetdev;
@@ -2196,10 +2188,8 @@ int pm_netdev_open(struct net_device *pn
 	int status;
 	if (bnormal)
 		status = netdev_open(pnetdev);
-#ifdef CONFIG_IPS
 	else
 		status =  (_SUCCESS == ips_netdrv_open((struct rtw_adapter *)rtw_netdev_priv(pnetdev)))?(0):(-1);
-#endif
 
 	return status;
 }
--- a/drivers/staging/rtl8192du/os_dep/usb_intf.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_intf.c
@@ -547,10 +547,8 @@ int rtw_hw_suspend(struct rtw_adapter *p
 
 				rtw_os_indicate_disconnect(padapter);
 
-				#ifdef CONFIG_LPS
-				/* donnot enqueue cmd */
+				/* do not enqueue cmd */
 				rtw_lps_ctrl_wk_cmd(padapter, LPS_CTRL_DISCONNECT, 0);
-				#endif
 			}
 
 		}
@@ -559,17 +557,14 @@ int rtw_hw_suspend(struct rtw_adapter *p
 
 		/* s2-4. */
 		rtw_free_network_queue(padapter,true);
-		#ifdef CONFIG_IPS
 		rtw_ips_dev_unload(padapter);
-		#endif
 		pwrpriv->rf_pwrstate = rf_off;
 		pwrpriv->bips_processing = false;
 
 		_exit_pwrlock(&pwrpriv->lock);
-	}
-	else
+	} else {
 		goto error_exit;
-
+	}
 	return 0;
 
 error_exit:
