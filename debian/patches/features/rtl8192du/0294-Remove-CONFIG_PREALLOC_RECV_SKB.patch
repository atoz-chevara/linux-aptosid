From c899aa2622308adef752023a64bf512f8eed432a Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 15 Mar 2014 16:49:56 -0500
Subject: [PATCH 294/390] Remove CONFIG_PREALLOC_RECV_SKB

Having this configured makes the most sense.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 hal/rtl8192du_recv.c | 39 +++++++++++++++------------------------
 hal/usb_ops_linux.c  | 25 ++++---------------------
 include/autoconf.h   |  4 ----
 3 files changed, 19 insertions(+), 49 deletions(-)

--- a/drivers/staging/rtl8192du/hal/rtl8192du_recv.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_recv.c
@@ -45,8 +45,11 @@ void rtl8192du_init_recvbuf(struct rtw_a
 int	rtl8192du_init_recv_priv(struct rtw_adapter *padapter)
 {
 	struct recv_priv	*precvpriv = &padapter->recvpriv;
+	struct sk_buff *pskb=NULL;
 	int	i, res = _SUCCESS;
 	struct recv_buf *precvbuf;
+	SIZE_PTR tmpaddr=0;
+	SIZE_PTR alignment=0;
 
 	tasklet_init(&precvpriv->recv_tasklet,
 	     (void(*)(unsigned long))rtl8192du_recv_tasklet,
@@ -66,8 +69,7 @@ int	rtl8192du_init_recv_priv(struct rtw_
 
 	precvbuf = (struct recv_buf*)precvpriv->precv_buf;
 
-	for (i=0; i < NR_RECVBUFF ; i++)
-	{
+	for (i=0; i < NR_RECVBUFF ; i++) {
 		INIT_LIST_HEAD(&precvbuf->list);
 
 		spin_lock_init(&precvbuf->recvbuf_lock);
@@ -87,33 +89,24 @@ int	rtl8192du_init_recv_priv(struct rtw_
 	precvpriv->free_recv_buf_queue_cnt = NR_RECVBUFF;
 	skb_queue_head_init(&precvpriv->rx_skb_queue);
 
-#ifdef CONFIG_PREALLOC_RECV_SKB
-	{
-		int i;
-		SIZE_PTR tmpaddr=0;
-		SIZE_PTR alignment=0;
-		struct sk_buff *pskb=NULL;
+	skb_queue_head_init(&precvpriv->free_recv_skb_queue);
 
-		skb_queue_head_init(&precvpriv->free_recv_skb_queue);
+	for (i = 0; i < NR_PREALLOC_RECV_SKB; i++) {
+		pskb = netdev_alloc_skb(padapter->pnetdev, MAX_RECVBUF_SZ + RECVBUFF_ALIGN_SZ);
 
-		for (i = 0; i < NR_PREALLOC_RECV_SKB; i++) {
-			pskb = netdev_alloc_skb(padapter->pnetdev, MAX_RECVBUF_SZ + RECVBUFF_ALIGN_SZ);
+		if (pskb) {
+			pskb->dev = padapter->pnetdev;
 
-			if (pskb) {
-				pskb->dev = padapter->pnetdev;
+			tmpaddr = (SIZE_PTR)pskb->data;
+			alignment = tmpaddr & (RECVBUFF_ALIGN_SZ-1);
+			skb_reserve(pskb, (RECVBUFF_ALIGN_SZ - alignment));
 
-				tmpaddr = (SIZE_PTR)pskb->data;
-				alignment = tmpaddr & (RECVBUFF_ALIGN_SZ-1);
-				skb_reserve(pskb, (RECVBUFF_ALIGN_SZ - alignment));
-
-				skb_queue_tail(&precvpriv->free_recv_skb_queue, pskb);
-			}
+			skb_queue_tail(&precvpriv->free_recv_skb_queue, pskb);
+		}
 
-			pskb=NULL;
+		pskb=NULL;
 
-		}
 	}
-#endif
 
 exit:
 
@@ -140,12 +133,10 @@ void rtl8192du_free_recv_priv (struct rt
 
 	skb_queue_purge(&precvpriv->rx_skb_queue);
 
-#ifdef CONFIG_PREALLOC_RECV_SKB
 
 	if (skb_queue_len(&precvpriv->free_recv_skb_queue)) {
 		DBG_8192D(KERN_WARNING "free_recv_skb_queue not empty, %d\n", skb_queue_len(&precvpriv->free_recv_skb_queue));
 	}
 
 	skb_queue_purge(&precvpriv->free_recv_skb_queue);
-#endif
 }
--- a/drivers/staging/rtl8192du/hal/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/hal/usb_ops_linux.c
@@ -604,17 +604,10 @@ void rtl8192du_recv_tasklet(void *priv)
 
 		recvbuf2recvframe(padapter, pskb);
 
-#ifdef CONFIG_PREALLOC_RECV_SKB
-
 		skb_reset_tail_pointer(pskb);
 		pskb->len = 0;
 
 		skb_queue_tail(&precvpriv->free_recv_skb_queue, pskb);
-
-#else
-		dev_kfree_skb_any(pskb);
-#endif
-
 	}
 }
 
@@ -629,19 +622,12 @@ static void usb_read_port_complete(struc
 
 	precvpriv->rx_pending_cnt --;
 
-	if (padapter->bSurpriseRemoved || padapter->bDriverStopped||padapter->bReadPortCancel)
-	{
-		RT_TRACE(_module_hci_ops_os_c_,_drv_err_,("usb_read_port_complete:bDriverStopped(%d) OR bSurpriseRemoved(%d)\n", padapter->bDriverStopped, padapter->bSurpriseRemoved));
+	if (padapter->bSurpriseRemoved || padapter->bDriverStopped||padapter->bReadPortCancel) {
+		RT_TRACE(_module_hci_ops_os_c_, _drv_err_,
+			 ("usb_read_port_complete:bDriverStopped(%d) OR bSurpriseRemoved(%d)\n",
+			 padapter->bDriverStopped, padapter->bSurpriseRemoved));
 
-	#ifdef CONFIG_PREALLOC_RECV_SKB
 		precvbuf->reuse = true;
-	#else
-		if (precvbuf->pskb) {
-			DBG_8192D("==> free skb(%p)\n",precvbuf->pskb);
-			dev_kfree_skb_any(precvbuf->pskb);
-		}
-	#endif
-
 		return;
 	}
 
@@ -720,13 +706,10 @@ static u32 usb_read_port(struct intf_hdl
 		RT_TRACE(_module_hci_ops_os_c_,_drv_err_,("usb_read_port:precvbuf ==NULL\n"));
 		return _FAIL;
 	}
-#ifdef CONFIG_PREALLOC_RECV_SKB
 	if ((precvbuf->reuse == false) || (precvbuf->pskb == NULL)) {
 		if (NULL != (precvbuf->pskb = skb_dequeue(&precvpriv->free_recv_skb_queue)))
 			precvbuf->reuse = true;
 	}
-#endif
-
 	if (precvbuf != NULL) {
 		rtl8192du_init_recvbuf(adapter, precvbuf);
 
--- a/drivers/staging/rtl8192du/include/autoconf.h
+++ b/drivers/staging/rtl8192du/include/autoconf.h
@@ -54,10 +54,6 @@
 	#define CONFIG_TSF_RESET_OFFLOAD 1			/*  For 2 PORT TSF SYNC. */
 #endif	/*  CONFIG_CONCURRENT_MODE */
 
-/* Interface  Related Config */
-
-#define CONFIG_PREALLOC_RECV_SKB	1
-
 /*
  * USB VENDOR REQ BUFFER ALLOCATION METHOD
  * if not set we'll use function local variable (stack memory)
