From 3da387980e78c142796090aabe0f43d66e18fc99 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Wed, 19 Feb 2014 22:30:37 -0600
Subject: [PATCH 219/390] rtl8192du: Remove CONFIG_80211N_HT

This configuration variable will always be selected.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c          | 19 -------------
 core/rtw_cmd.c         |  3 ---
 core/rtw_ioctl_set.c   |  7 +----
 core/rtw_mlme.c        | 14 +---------
 core/rtw_mlme_ext.c    |  6 -----
 core/rtw_recv.c        | 73 +-------------------------------------------------
 include/autoconf.h     |  2 --
 include/drv_types.h    | 16 ++++-------
 include/rtw_mlme.h     | 10 -------
 include/rtw_mlme_ext.h |  4 ---
 include/sta_info.h     |  4 ---
 include/usb_osintf.h   |  2 --
 include/wifi.h         |  2 --
 os_dep/ioctl_linux.c   |  8 +-----
 os_dep/os_intfs.c      |  8 ------
 os_dep/usb_intf.c      |  9 +++----
 16 files changed, 12 insertions(+), 175 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -1202,7 +1202,6 @@ int rtw_check_beacon_data(struct rtw_ada
 	pmlmepriv->cur_network.network_type = network_type;
 
 	pmlmepriv->htpriv.ht_option = false;
-#ifdef CONFIG_80211N_HT
 	/* ht_cap */
 	if (pregistrypriv->ht_enable && ht_cap) {
 		pmlmepriv->htpriv.ht_option = true;
@@ -1215,7 +1214,6 @@ int rtw_check_beacon_data(struct rtw_ada
 
 		HT_info_handler(padapter, (struct ndis_802_11_variable_ies *)pHT_info_ie);
 	}
-#endif
 
 	pbss_network->Length = get_wlan_bssid_ex_sz((struct wlan_bssid_ex  *)pbss_network);
 
@@ -1539,8 +1537,6 @@ void update_beacon(struct rtw_adapter *p
 #endif /* CONFIG_INTERRUPT_BASED_TXBCN */
 }
 
-#ifdef CONFIG_80211N_HT
-
 /*
 op_mode
 Set to 0 (HT pure) under the followign conditions
@@ -1620,8 +1616,6 @@ static int rtw_ht_operation_update(struc
 	return op_mode_changes;
 }
 
-#endif /* CONFIG_80211N_HT */
-
 void associated_clients_update(struct rtw_adapter *padapter, u8 updated)
 {
 	/* update associcated stations cap. */
@@ -1732,8 +1726,6 @@ void bss_cap_update_on_sta_join(struct r
 		}
 	}
 
-#ifdef CONFIG_80211N_HT
-
 	if (psta->flags & WLAN_STA_HT) {
 		u16 ht_capab = psta->htpriv.ht_cap.cap_info;
 
@@ -1782,8 +1774,6 @@ void bss_cap_update_on_sta_join(struct r
 		update_beacon(padapter, _HT_ADD_INFO_IE_, NULL, true);
 	}
 
-#endif /* CONFIG_80211N_HT */
-
 	/* update associcated stations cap. */
 	associated_clients_update(padapter,  beacon_updated);
 
@@ -1829,8 +1819,6 @@ u8 bss_cap_update_on_sta_leave(struct rt
 		}
 	}
 
-#ifdef CONFIG_80211N_HT
-
 	if (psta->no_ht_gf_set) {
 		psta->no_ht_gf_set = 0;
 		pmlmepriv->num_sta_ht_no_gf--;
@@ -1851,8 +1839,6 @@ u8 bss_cap_update_on_sta_leave(struct rt
 		update_beacon(padapter, _HT_ADD_INFO_IE_, NULL, true);
 	}
 
-#endif /* CONFIG_80211N_HT */
-
 	/* update associcated stations cap. */
 
 	DBG_8192D("%s, updated =%d\n", __func__, beacon_updated);
@@ -2005,7 +1991,6 @@ void sta_info_update(struct rtw_adapter
 	if (pmlmepriv->qospriv.qos_option == 0)
 		psta->qos_option = 0;
 
-#ifdef CONFIG_80211N_HT
 	/* update 802.11n ht cap. */
 	if (WLAN_STA_HT&flags) {
 		psta->htpriv.ht_option = true;
@@ -2016,8 +2001,6 @@ void sta_info_update(struct rtw_adapter
 
 	if (pmlmepriv->htpriv.ht_option)
 		psta->htpriv.ht_option = false;
-#endif
-
 	update_sta_info_apmode(padapter, psta);
 }
 
@@ -2050,9 +2033,7 @@ void start_ap_mode(struct rtw_adapter *p
 	pmlmepriv->olbc = false;
 	pmlmepriv->olbc_ht = false;
 
-#ifdef CONFIG_80211N_HT
 	pmlmepriv->ht_op_mode = 0;
-#endif
 
 	for (i = 0; i < NUM_STA; i++)
 		pstapriv->sta_aid[i] = NULL;
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -1023,7 +1023,6 @@ u8 rtw_joinbss_cmd(struct rtw_adapter *p
 		}
 	}
 
-#ifdef CONFIG_80211N_HT
 	phtpriv->ht_option = false;
 	if (pregistrypriv->ht_enable) {
 		/*	Added by Albert 2010/06/23 */
@@ -1041,8 +1040,6 @@ u8 rtw_joinbss_cmd(struct rtw_adapter *p
 		}
 	}
 
-#endif
-
 	pmlmeinfo->assoc_AP_vendor = check_assoc_AP(pnetwork->network.IEs, pnetwork->network.IELength);
 
 	pcmd->cmdsz = get_wlan_bssid_ex_sz(psecnetwork);/* get cmdsz before endian conversion */
--- a/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
+++ b/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
@@ -992,19 +992,16 @@ u16 rtw_get_cur_max_rate(struct rtw_adap
 	struct registry_priv *pregistrypriv = &adapter->registrypriv;
 	struct mlme_priv	*pmlmepriv = &adapter->mlmepriv;
 	struct wlan_bssid_ex  *pcur_bss = &pmlmepriv->cur_network.network;
-#ifdef CONFIG_80211N_HT
 	struct rtw_ieee80211_ht_cap *pht_capie;
 	u8	rf_type = 0;
 	u8	bw_40MHz = 0, short_GI_20 = 0, short_GI_40 = 0;
 	u16	mcs_rate = 0;
 	u32	ht_ielen = 0;
-#endif
 
 	if ((check_fwstate(pmlmepriv, _FW_LINKED) != true) &&
 	    (check_fwstate(pmlmepriv, WIFI_ADHOC_MASTER_STATE) != true))
 		return 0;
 
-#ifdef CONFIG_80211N_HT
 	if (pmlmeext->cur_wireless_mode & (WIRELESS_11_24N|WIRELESS_11_5N)) {
 		p = rtw_get_ie(&pcur_bss->IEs[12], _HT_CAPABILITY_IE_, &ht_ielen, pcur_bss->IELength-12);
 		if (p && ht_ielen > 0) {
@@ -1027,9 +1024,7 @@ u16 rtw_get_cur_max_rate(struct rtw_adap
 				pmlmeinfo->HT_caps.u.HT_cap_element.MCS_rate
 			);
 		}
-	} else
-#endif /* CONFIG_80211N_HT */
-	{
+	} else {
 		while ((pcur_bss->SupportedRates[i] != 0) && (pcur_bss->SupportedRates[i] != 0xFF)) {
 			rate = pcur_bss->SupportedRates[i]&0x7F;
 			if (rate > max_rate)
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -1508,11 +1508,9 @@ static void rtw_joinbss_update_network(s
 			      sizeof(struct ndis_802_11_fixed_ies),
 			      (cur_network->network.IELength));
 
-#ifdef CONFIG_80211N_HT
 	rtw_update_ht_cap(padapter, cur_network->network.IEs,
 			  cur_network->network.IELength,
 			  (u8) cur_network->network.Configuration.DSConfig);
-#endif
 }
 
 /* Notes: the fucntion could be > passive_level (the same context as Rx tasklet) */
@@ -2775,17 +2773,12 @@ void rtw_get_encrypt_decrypt_from_regist
 /* the fucntion is at passive_level */
 void rtw_joinbss_reset(struct rtw_adapter *padapter)
 {
-	u8 threshold;
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
-
-#ifdef CONFIG_80211N_HT
 	struct ht_priv *phtpriv = &pmlmepriv->htpriv;
-#endif
+	u8 threshold;
 
 	/* todo: if you want to do something io/reg/hw setting before join_bss, please add code here */
 
-#ifdef CONFIG_80211N_HT
-
 	pmlmepriv->num_FortyMHzIntolerant = 0;
 
 	pmlmepriv->num_sta_no_ht = 0;
@@ -2806,11 +2799,8 @@ void rtw_joinbss_reset(struct rtw_adapte
 		rtw_hal_set_hwreg(padapter, HW_VAR_RXDMA_AGG_PG_TH,
 				  (u8 *)(&threshold));
 	}
-#endif
 }
 
-#ifdef CONFIG_80211N_HT
-
 /* the fucntion is >= passive_level */
 unsigned int rtw_restructure_ht_ie(struct rtw_adapter *padapter, u8 *in_ie,
 				   u8 *out_ie, uint in_len, uint *pout_len,
@@ -3054,8 +3044,6 @@ void rtw_issue_addbareq_cmd(struct rtw_a
 	}
 }
 
-#endif
-
 #ifdef CONFIG_LAYER2_ROAMING
 inline void rtw_set_roaming(struct rtw_adapter *adapter, u8 to_roaming)
 {
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -1702,7 +1702,6 @@ unsigned int OnAssocReq(struct rtw_adapt
 		}
 	}
 
-#ifdef CONFIG_80211N_HT
 	/* save HT capabilities in the sta object */
 	memset(&pstat->htpriv.ht_cap, 0, sizeof(struct rtw_ieee80211_ht_cap));
 	if (elems.ht_capabilities &&
@@ -1732,7 +1731,6 @@ unsigned int OnAssocReq(struct rtw_adapt
 		/* status = WLAN_STATUS_CIPHER_REJECTED_PER_POLICY; */
 		/* goto OnAssocReqFail; */
 	}
-#endif /* CONFIG_80211N_HT */
 
 	pstat->flags |= WLAN_STA_NONERP;
 	for (i = 0; i < pstat->bssratelen; i++) {
@@ -7120,7 +7118,6 @@ void issue_asocrsp(struct rtw_adapter *a
 			       &(pattrib->pktlen));
 	}
 
-#ifdef CONFIG_80211N_HT
 	if ((pstat->flags & WLAN_STA_HT) && (pmlmepriv->htpriv.ht_option)) {
 		uint ie_len = 0;
 
@@ -7148,7 +7145,6 @@ void issue_asocrsp(struct rtw_adapter *a
 			pattrib->pktlen += (ie_len + 2);
 		}
 	}
-#endif
 
 	/* FILL WMM IE */
 	if ((pstat->flags & WLAN_STA_WME) && (pmlmepriv->qospriv.qos_option)) {
@@ -7414,7 +7410,6 @@ void issue_assocreq(struct rtw_adapter *
 		    rtw_set_ie(pframe, _RSN_IE_2_, ie_len, (p + 2),
 			       &(pattrib->pktlen));
 	}
-#ifdef CONFIG_80211N_HT
 	/* HT caps */
 	if (adapt->mlmepriv.htpriv.ht_option == true) {
 		p = rtw_get_ie((pmlmeinfo->network.IEs +
@@ -7508,7 +7503,6 @@ void issue_assocreq(struct rtw_adapter *
 				       &(pattrib->pktlen));
 		}
 	}
-#endif
 
 	/* vendor specific IE, such as WPA, WMM, WPS */
 	for (i = sizeof(struct ndis_802_11_fixed_ies);
--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -2561,8 +2561,6 @@ static int process_recv_indicatepkts(str
 	struct sta_info *psta = prframe->psta;
 #endif /* CONFIG_TDLS */
 
-#ifdef CONFIG_80211N_HT
-
 	struct ht_priv *phtpriv = &pmlmepriv->htpriv;
 
 #ifdef CONFIG_TDLS
@@ -2587,9 +2585,7 @@ static int process_recv_indicatepkts(str
 				return retval;
 			}
 		}
-	} else			/* B/G mode */
-#endif
-	{
+	} else {	/* B/G mode */
 		retval = wlanhdr_to_ethhdr(prframe);
 		if (retval != _SUCCESS) {
 			RT_TRACE(_module_rtl871x_recv_c_, _drv_err_,
@@ -2717,8 +2713,6 @@ static int recv_func_posthandle(struct r
 	count_rx_stats(padapter, prframe, NULL);
 #endif /* CONFIG_TDLS */
 
-#ifdef CONFIG_80211N_HT
-
 	ret = process_recv_indicatepkts(padapter, prframe);
 	if (ret != _SUCCESS) {
 		RT_TRACE(_module_rtl871x_recv_c_, _drv_err_,
@@ -2731,71 +2725,6 @@ static int recv_func_posthandle(struct r
 		rtw_free_recvframe(orig_prframe, pfree_recv_queue);	/* free this recv_frame */
 		goto _recv_data_drop;
 	}
-#else /*  CONFIG_80211N_HT */
-
-	if (!pattrib->amsdu) {
-		ret = wlanhdr_to_ethhdr(prframe);
-		if (ret != _SUCCESS) {
-			RT_TRACE(_module_rtl871x_recv_c_, _drv_err_,
-				 ("wlanhdr_to_ethhdr: drop pkt\n"));
-#ifdef DBG_RX_DROP_FRAME
-			DBG_8192D
-			    ("DBG_RX_DROP_FRAME %s wlanhdr_to_ethhdr: drop pkt\n",
-			     __func__);
-#endif
-			rtw_free_recvframe(orig_prframe, pfree_recv_queue);	/* free this recv_frame */
-			goto _recv_data_drop;
-		}
-
-		if ((padapter->bDriverStopped == false) &&
-		    (padapter->bSurpriseRemoved == false)) {
-			RT_TRACE(_module_rtl871x_recv_c_, _drv_alert_,
-				 ("@@@@ recv_func: recv_func rtw_recv_indicatepkt\n"));
-			/* indicate this recv_frame */
-			ret = rtw_recv_indicatepkt(padapter, prframe);
-			if (ret != _SUCCESS) {
-#ifdef DBG_RX_DROP_FRAME
-				DBG_8192D
-				    ("DBG_RX_DROP_FRAME %s rtw_recv_indicatepkt fail!\n",
-				     __func__);
-#endif
-				goto _recv_data_drop;
-			}
-		} else {
-			RT_TRACE(_module_rtl871x_recv_c_, _drv_alert_,
-				 ("@@@@  recv_func: rtw_free_recvframe\n"));
-			RT_TRACE(_module_rtl871x_recv_c_, _drv_debug_,
-				 ("recv_func:bDriverStopped(%d) OR bSurpriseRemoved(%d)",
-				  padapter->bDriverStopped,
-				  padapter->bSurpriseRemoved));
-#ifdef DBG_RX_DROP_FRAME
-			DBG_8192D
-			    ("DBG_RX_DROP_FRAME %s ecv_func:bDriverStopped(%d) OR bSurpriseRemoved(%d)\n",
-			     __func__, padapter->bDriverStopped,
-			     padapter->bSurpriseRemoved);
-#endif
-			ret = _FAIL;
-			rtw_free_recvframe(orig_prframe, pfree_recv_queue);	/* free this recv_frame */
-		}
-
-	} else if (pattrib->amsdu == 1) {
-		ret = amsdu_to_msdu(padapter, prframe);
-		if (ret != _SUCCESS) {
-#ifdef DBG_RX_DROP_FRAME
-			DBG_8192D("DBG_RX_DROP_FRAME %s amsdu_to_msdu fail\n",
-				  __func__);
-#endif
-			rtw_free_recvframe(orig_prframe, pfree_recv_queue);
-			goto _recv_data_drop;
-		}
-	} else {
-#ifdef DBG_RX_DROP_FRAME
-		DBG_8192D("DBG_RX_DROP_FRAME %s what is this condition??\n",
-			  __func__);
-#endif
-		goto _recv_data_drop;
-	}
-#endif /*  CONFIG_80211N_HT */
 
 _exit_recv_func:
 	return ret;
--- a/drivers/staging/rtl8192du/include/autoconf.h
+++ b/drivers/staging/rtl8192du/include/autoconf.h
@@ -39,8 +39,6 @@
 #endif /* CONFIG_WAKE_ON_WLAN */
 #define CONFIG_R871X_TEST	1
 
-#define CONFIG_80211N_HT	1
-
 #define CONFIG_RECV_REORDERING_CTRL	1
 
 #define CONFIG_IPS	1
--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -26,16 +26,7 @@
 #include <drv_conf.h>
 #include <osdep_service.h>
 #include <wlan_bssdef.h>
-
-enum {
-	UP_LINK,
-	DOWN_LINK,
-};
-
-#ifdef CONFIG_80211N_HT
 #include <rtw_ht.h>
-#endif
-
 #include <rtw_cmd.h>
 #include <wlan_bssdef.h>
 #include <rtw_xmit.h>
@@ -77,6 +68,11 @@ enum {
 #define SPEC_DEV_ID_RF_CONFIG_2T2R BIT(4)
 #define SPEC_DEV_ID_ASSIGN_IFNAME BIT(5)
 
+enum {
+	UP_LINK,
+	DOWN_LINK,
+};
+
 struct specific_device_id{
 
 	u32		flags;
@@ -125,13 +121,11 @@ struct registry_priv {
 
 	struct wlan_bssid_ex dev_network;
 
-#ifdef CONFIG_80211N_HT
 	u8	ht_enable;
 	u8	cbw40_enable;
 	u8	ampdu_enable;/* for tx */
 	u8	rx_stbc;
 	u8	ampdu_amsdu;/* A-MPDU Supports A-MSDU is permitted */
-#endif
 	u8	lowrate_two_xmit;
 
 	u8	rf_config ;
--- a/drivers/staging/rtl8192du/include/rtw_mlme.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme.h
@@ -400,8 +400,6 @@ struct mlme_priv {
 
 	struct qos_priv qospriv;
 
-#ifdef CONFIG_80211N_HT
-
 	/* Number of non-HT AP/stations */
 	int num_sta_no_ht;
 
@@ -412,9 +410,6 @@ struct mlme_priv {
 	int num_FortyMHzIntolerant;
 
 	struct ht_priv	htpriv;
-
-#endif
-
 	struct rt_link_detect LinkDetectInfo;
 	struct timer_list dynamic_chk_timer; /* dynamic/periodic check timer */
 
@@ -451,10 +446,7 @@ struct mlme_priv {
 	/* Overlapping BSS information */
 	int olbc_ht;
 
-#ifdef CONFIG_80211N_HT
 	u16 ht_op_mode;
-#endif /* CONFIG_80211N_HT */
-
 	u8 *assoc_req;
 	u32 assoc_req_len;
 	u8 *assoc_rsp;
@@ -705,11 +697,9 @@ u8 *rtw_get_beacon_interval_from_ie(u8 *
 
 void rtw_joinbss_reset(struct rtw_adapter *padapter);
 
-#ifdef CONFIG_80211N_HT
 unsigned int rtw_restructure_ht_ie(struct rtw_adapter *padapter, u8 *in_ie, u8 *out_ie, uint in_len, uint *pout_len, u8 channel);
 void rtw_update_ht_cap(struct rtw_adapter *padapter, u8 *pie, uint ie_len, u8 channel);
 void rtw_issue_addbareq_cmd(struct rtw_adapter *padapter, struct xmit_frame *pxmitframe);
-#endif
 
 int rtw_is_same_ibss(struct rtw_adapter *adapter, struct wlan_network *pnetwork);
 int is_same_network(struct wlan_bssid_ex *src, struct wlan_bssid_ex *dst);
--- a/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
@@ -465,11 +465,7 @@ struct mlme_ext_priv
 #ifdef CONFIG_80211D
 	u8 update_channel_plan_by_ap_done;
 #endif
-
-#ifdef CONFIG_ACTIVE_KEEP_ALIVE_CHECK
 	u8 active_keep_alive_check;
-#endif
-
 };
 
 int init_mlme_ext_priv(struct rtw_adapter *padapter);
--- a/drivers/staging/rtl8192du/include/sta_info.h
+++ b/drivers/staging/rtl8192du/include/sta_info.h
@@ -160,11 +160,7 @@ struct sta_info {
 
 	/* for A-MPDU Tx */
 	u16	BA_starting_seqctrl[16];
-
-
-#ifdef CONFIG_80211N_HT
 	struct ht_priv	htpriv;
-#endif
 
 	/* Notes: */
 	/* STA_Mode: */
--- a/drivers/staging/rtl8192du/include/usb_osintf.h
+++ b/drivers/staging/rtl8192du/include/usb_osintf.h
@@ -23,11 +23,9 @@
 
 #define USBD_HALTED(Status) ((u32)(Status) >> 30 == 3)
 
-#ifdef CONFIG_80211N_HT
 extern int rtw_ht_enable;
 extern int rtw_cbw40_enable;
 extern int rtw_ampdu_enable;/* for enable tx_ampdu */
-#endif
 
 extern int rtw_mc2u_disable;
 extern char *rtw_initmac;
--- a/drivers/staging/rtl8192du/include/wifi.h
+++ b/drivers/staging/rtl8192du/include/wifi.h
@@ -624,8 +624,6 @@ __inline static int IsFrameTypeCtrl(unsi
 #define IEEE80211_DELBA_PARAM_TID_MASK 0xF000
 #define IEEE80211_DELBA_PARAM_INITIATOR_MASK 0x0800
 
-/* ifdef CONFIG_80211N_HT */
-
 #define SetOrderBit(pbuf)	\
 	do	{	\
 		*(unsigned short *)(pbuf) |= cpu_to_le16(_ORDER_); \
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -6462,7 +6462,6 @@ static int rtw_add_sta(struct net_device
 		if (pmlmepriv->qospriv.qos_option == 0)
 			psta->qos_option = 0;
 
-#ifdef CONFIG_80211N_HT
 		/* chec 802.11n ht cap. */
 		if (WLAN_STA_HT&flags)
 		{
@@ -6477,16 +6476,11 @@ static int rtw_add_sta(struct net_device
 
 		if (pmlmepriv->htpriv.ht_option == false)
 			psta->htpriv.ht_option = false;
-#endif
-
 		update_sta_info_apmode(padapter, psta);
 
-	}
-	else
-	{
+	} else {
 		ret = -ENOMEM;
 	}
-
 	return ret;
 }
 
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -89,13 +89,11 @@ static int rtw_uapsd_acbe_en;
 static int rtw_uapsd_acvi_en;
 static int rtw_uapsd_acvo_en;
 
-#ifdef CONFIG_80211N_HT
 int rtw_ht_enable = 1;
 int rtw_cbw40_enable = 3; /*  0 :diable, bit(0): enable 2.4g, bit(1): enable 5g */
 int rtw_ampdu_enable = 1;/* for enable tx_ampdu */
 static int rtw_rx_stbc = 1;/*  0: disable, bit(0):enable 2.4g, bit(1):enable 5g, default is set to enable 2.4GHZ for IOT issue with bufflao's AP at 5GHZ */
 static int rtw_ampdu_amsdu;/*  0: disabled, 1:enabled, 2:auto */
-#endif
 
 static int rtw_lowrate_two_xmit = 1;/* Use 2 path Tx to transmit MCS0~7 and legacy mode */
 
@@ -172,13 +170,11 @@ module_param(rtw_wmm_enable, int, 0644);
 module_param(rtw_vrtl_carrier_sense, int, 0644);
 module_param(rtw_vcs_type, int, 0644);
 module_param(rtw_busy_thresh, int, 0644);
-#ifdef CONFIG_80211N_HT
 module_param(rtw_ht_enable, int, 0644);
 module_param(rtw_cbw40_enable, int, 0644);
 module_param(rtw_ampdu_enable, int, 0644);
 module_param(rtw_rx_stbc, int, 0644);
 module_param(rtw_ampdu_amsdu, int, 0644);
-#endif
 
 module_param(rtw_lowrate_two_xmit, int, 0644);
 
@@ -673,13 +669,11 @@ static uint loadparam(struct rtw_adapter
 	registry_par->uapsd_acvi_en = (u8)rtw_uapsd_acvi_en;
 	registry_par->uapsd_acvo_en = (u8)rtw_uapsd_acvo_en;
 
-#ifdef CONFIG_80211N_HT
 	registry_par->ht_enable = (u8)rtw_ht_enable;
 	registry_par->cbw40_enable = (u8)rtw_cbw40_enable;
 	registry_par->ampdu_enable = (u8)rtw_ampdu_enable;
 	registry_par->rx_stbc = (u8)rtw_rx_stbc;
 	registry_par->ampdu_amsdu = (u8)rtw_ampdu_amsdu;
-#endif
 
 	registry_par->lowrate_two_xmit = (u8)rtw_lowrate_two_xmit;
 	registry_par->rf_config = (u8)rtw_rf_config;
@@ -1016,9 +1010,7 @@ u8 rtw_init_default_value(struct rtw_ada
 	/* qos_priv */
 
 	/* ht_priv */
-#ifdef CONFIG_80211N_HT
 	pmlmepriv->htpriv.ampdu_enable = false;/* set to disabled */
-#endif
 
 	/* security_priv */
 	psecuritypriv->binstallGrpkey = _FAIL;
--- a/drivers/staging/rtl8192du/os_dep/usb_intf.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_intf.c
@@ -489,20 +489,17 @@ static void process_spec_devid(const str
 	int i;
 	int num = sizeof(specific_device_id_tbl)/sizeof(struct specific_device_id);
 
-	for (i=0; i<num; i++)
-	{
+	for (i = 0; i < num; i++) {
 		vid = specific_device_id_tbl[i].idVendor;
 		pid = specific_device_id_tbl[i].idProduct;
 		flags = specific_device_id_tbl[i].flags;
 
-#ifdef CONFIG_80211N_HT
-		if ((pdid->idVendor==vid) && (pdid->idProduct==pid) && (flags&SPEC_DEV_ID_DISABLE_HT))
-		{
+		if ((pdid->idVendor == vid) && (pdid->idProduct == pid) &&
+		    (flags & SPEC_DEV_ID_DISABLE_HT)) {
 			 rtw_ht_enable = 0;
 			 rtw_cbw40_enable = 0;
 			 rtw_ampdu_enable = 0;
 		}
-#endif
 
 	}
 }
