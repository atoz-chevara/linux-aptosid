From 30b16955a2ab704eb45be6d60cf2aee043e02213 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 15 Mar 2014 22:43:35 -0500
Subject: [PATCH 340/390] Remove EFUSE_ERROE_HANDLE

This symbol is always 1.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 hal/rtl8192d_hal_init.c | 20 ++------------------
 include/rtw_efuse.h     | 29 ++++++++++++-----------------
 2 files changed, 14 insertions(+), 35 deletions(-)

--- a/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
@@ -1500,9 +1500,7 @@ rtl8192d_Efuse_PgPacketWrite(struct rtw_
 				/*   so-1 ******************* */
 				if (tmp_pkt.offset  != target_pkt.offset) {
 					efuse_addr = efuse_addr + (tmp_word_cnts*2) +1; /* Next pg_packet */
-#if (EFUSE_ERROE_HANDLE == 1)
 					WriteState = PG_STATE_HEADER;
-#endif
 				} else {		/* write the same offset */
 					/*   so-2 ******************* */
 					for (tmpindex = 0; tmpindex < (tmp_word_cnts*2); tmpindex++) {
@@ -1513,9 +1511,7 @@ rtl8192d_Efuse_PgPacketWrite(struct rtw_
 					/*   so-2-1 ******************* */
 					if (!bDataEmpty) {
 						efuse_addr = efuse_addr + (tmp_word_cnts*2) +1; /* Next pg_packet */
-#if (EFUSE_ERROE_HANDLE == 1)
 						WriteState = PG_STATE_HEADER;
-#endif
 					} else {/*   so-2-2 ******************* */
 
 						match_word_en = 0x0F;			/* same bit as original wren */
@@ -1558,22 +1554,18 @@ rtl8192d_Efuse_PgPacketWrite(struct rtw_
 							} else {
 								bContinual = false;
 							}
-#if (EFUSE_ERROE_HANDLE == 1)
 							WriteState = PG_STATE_HEADER;
 							repeat_times++;
 							if (repeat_times>EFUSE_REPEAT_THRESHOLD_) {
 								bContinual = false;
 								bResult = false;
 							}
-#endif
 						} else {/*   so-2-2-B ******************* */
 							/* reorganize other pg packet */
 							efuse_addr = efuse_addr + (2*tmp_word_cnts) +1;/* next pg packet addr */
 							target_pkt.offset = offset;
 							target_pkt.word_en = target_pkt.word_en;
-#if (EFUSE_ERROE_HANDLE == 1)
 							WriteState = PG_STATE_HEADER;
-#endif
 						}
 					}
 				}
@@ -1659,9 +1651,7 @@ rtl8192d_Efuse_PgPacketWrite(struct rtw_
 				if (tmp_header == pg_header) {
 					/*   s1-1******************* */
 					WriteState = PG_STATE_DATA;
-				}
-#if (EFUSE_ERROE_HANDLE == 1)
-				else if (tmp_header == 0xFF) {/*   s1-3: if Write or read func doesn't work ******************* */
+				} else if (tmp_header == 0xFF) {/*   s1-3: if Write or read func doesn't work ******************* */
 					/* efuse_addr doesn't change */
 					WriteState = PG_STATE_HEADER;
 					repeat_times++;
@@ -1669,9 +1659,7 @@ rtl8192d_Efuse_PgPacketWrite(struct rtw_
 						bContinual = false;
 						bResult = false;
 					}
-				}
-#endif
-				else {/*   s1-2 : fixed the header procedure ******************* */
+				} else {/*   s1-2 : fixed the header procedure ******************* */
 					if (!bExtendedHeader) {
 						tmp_pkt.offset = (tmp_header>>4) & 0x0F;
 						tmp_pkt.word_en =  tmp_header & 0x0F;
@@ -1699,14 +1687,12 @@ rtl8192d_Efuse_PgPacketWrite(struct rtw_
 						efuse_addr = efuse_addr + (tmp_word_cnts*2) +1; /* Next pg_packet */
 					}
 
-#if (EFUSE_ERROE_HANDLE == 1)
 					WriteState = PG_STATE_HEADER;
 					repeat_times++;
 					if (repeat_times>EFUSE_REPEAT_THRESHOLD_) {
 						bContinual = false;
 						bResult = false;
 					}
-#endif
 				}
 			}
 		}
@@ -1725,14 +1711,12 @@ rtl8192d_Efuse_PgPacketWrite(struct rtw_
 				target_pkt.offset = offset;
 				target_pkt.word_en = badworden;
 				target_word_cnts =  Efuse_CalculateWordCnts(target_pkt.word_en);
-#if (EFUSE_ERROE_HANDLE == 1)
 				WriteState = PG_STATE_HEADER;
 				repeat_times++;
 				if (repeat_times>EFUSE_REPEAT_THRESHOLD_) {
 					bContinual = false;
 					bResult = false;
 				}
-#endif
 			}
 		}
 	}
--- a/drivers/staging/rtl8192du/include/rtw_efuse.h
+++ b/drivers/staging/rtl8192du/include/rtw_efuse.h
@@ -19,49 +19,44 @@
 #include <autoconf.h>
 #include <osdep_service.h>
 
-#define	EFUSE_ERROE_HANDLE		1
-
 #define	PG_STATE_HEADER			0x01
-#define	PG_STATE_WORD_0		0x02
-#define	PG_STATE_WORD_1		0x04
-#define	PG_STATE_WORD_2		0x08
-#define	PG_STATE_WORD_3		0x10
+#define	PG_STATE_WORD_0			0x02
+#define	PG_STATE_WORD_1			0x04
+#define	PG_STATE_WORD_2			0x08
+#define	PG_STATE_WORD_3			0x10
 #define	PG_STATE_DATA			0x20
 
 #define	PG_SWBYTE_H			0x01
 #define	PG_SWBYTE_L			0x02
 
-#define	PGPKT_DATA_SIZE		8
+#define	PGPKT_DATA_SIZE			8
 
-#define	EFUSE_WIFI				0
-#define	EFUSE_BT				1
+#define	EFUSE_WIFI			0
+#define	EFUSE_BT			1
 
 enum _EFUSE_DEF_TYPE {
-	TYPE_EFUSE_MAX_SECTION				= 0,
-	TYPE_EFUSE_REAL_CONTENT_LEN			= 1,
+	TYPE_EFUSE_MAX_SECTION			= 0,
+	TYPE_EFUSE_REAL_CONTENT_LEN		= 1,
 	TYPE_AVAILABLE_EFUSE_BYTES_BANK		= 2,
 	TYPE_AVAILABLE_EFUSE_BYTES_TOTAL	= 3,
-	TYPE_EFUSE_MAP_LEN					= 4,
+	TYPE_EFUSE_MAP_LEN			= 4,
 	TYPE_EFUSE_PROTECT_BYTES_BANK		= 5,
 };
 
 #define		EFUSE_MAX_MAP_LEN		256
 #define		EFUSE_MAX_HW_SIZE		512
-#define		EFUSE_MAX_SECTION_BASE	16
+#define		EFUSE_MAX_SECTION_BASE		16
 
 #define EXT_HEADER(header) ((header & 0x1F) == 0x0F)
 #define ALL_WORDS_DISABLED(wde)	((wde & 0x0F) == 0x0F)
 #define GET_HDR_OFFSET_2_0(header) ((header & 0xE0) >> 5)
 
-#define		EFUSE_REPEAT_THRESHOLD_			3
+#define EFUSE_REPEAT_THRESHOLD_			3
 
-/*  */
 /* 	The following is for BT Efuse definition */
-/*  */
 #define		EFUSE_BT_MAX_MAP_LEN		1024
 #define		EFUSE_MAX_BANK			4
 #define		EFUSE_MAX_BT_BANK		(EFUSE_MAX_BANK-1)
-/*  */
 /*--------------------------Define Parameters-------------------------------*/
 #define		EFUSE_MAX_WORD_UNIT			4
 
