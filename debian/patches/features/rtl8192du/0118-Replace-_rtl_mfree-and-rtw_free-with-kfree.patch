From a865f3b1d94838b74f3e79d4970536a764f9afc7 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 4 May 2013 18:15:31 -0500
Subject: [PATCH 118/210] Replace _rtl_mfree() and rtw_free() with kfree()

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c           |  12 ++---
 core/rtw_br_ext.c       |   5 +-
 core/rtw_cmd.c          | 134 ++++++++++++++++++++----------------------------
 core/rtw_efuse.c        |   2 +-
 core/rtw_mlme.c         |  22 +++-----
 core/rtw_mlme_ext.c     |  54 +++++++++----------
 core/rtw_p2p.c          |   6 +--
 core/rtw_security.c     |   6 +--
 core/rtw_sta_mgt.c      |   3 --
 core/rtw_xmit.c         |  10 +---
 hal/rtl8192d_cmd.c      |  49 +++++++++---------
 hal/rtl8192d_hal_init.c |   3 +-
 hal/rtl8192du_recv.c    |  11 ++--
 hal/usb_ops_linux.c     |   2 +-
 include/osdep_service.h |   2 -
 os_dep/ioctl_cfg80211.c |  59 +++++++++------------
 os_dep/ioctl_linux.c    |  82 ++++++++++-------------------
 os_dep/mlme_linux.c     |   3 +-
 os_dep/os_intfs.c       |   3 +-
 os_dep/osdep_service.c  |  11 ++--
 os_dep/usb_intf.c       |   9 ++--
 os_dep/usb_ops_linux.c  |  19 ++-----
 os_dep/xmit_linux.c     |   3 +-
 23 files changed, 197 insertions(+), 313 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -167,8 +167,7 @@ static void update_BCNTIM(struct rtw_ada
 		/* copy remainder IE */
 		if (pbackup_remainder_ie) {
 			memcpy(dst_ie, pbackup_remainder_ie, remainder_ielen);
-
-			rtw_mfree(pbackup_remainder_ie, remainder_ielen);
+			kfree(pbackup_remainder_ie);
 		}
 
 		offset =  (uint)(dst_ie - pie);
@@ -235,8 +234,7 @@ void rtw_add_bcn_ie(struct rtw_adapter *
 	/* copy remainder IE */
 	if (pbackup_remainder_ie) {
 		memcpy(dst_ie, pbackup_remainder_ie, remainder_ielen);
-
-		rtw_mfree(pbackup_remainder_ie, remainder_ielen);
+		kfree(pbackup_remainder_ie);
 	}
 
 	offset =  (uint)(dst_ie - pie);
@@ -271,8 +269,7 @@ void rtw_remove_bcn_ie(struct rtw_adapte
 	/* copy remainder IE */
 	if (pbackup_remainder_ie) {
 		memcpy(dst_ie, pbackup_remainder_ie, remainder_ielen);
-
-		rtw_mfree(pbackup_remainder_ie, remainder_ielen);
+		kfree(pbackup_remainder_ie);
 	}
 
 	offset =  (uint)(dst_ie - pie);
@@ -1557,8 +1554,7 @@ static void update_bcn_wps_ie(struct rtw
 		pnetwork->IELength = wps_offset + (wps_ielen+2) + remainder_ielen;
 	}
 
-	if (pbackup_remainder_ie)
-		rtw_mfree(pbackup_remainder_ie, remainder_ielen);
+	kfree(pbackup_remainder_ie);
 }
 
 static void update_bcn_p2p_ie(struct rtw_adapter *padapter)
--- a/drivers/staging/rtl8192du/core/rtw_br_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_br_ext.c
@@ -578,7 +578,7 @@ void nat25_db_cleanup(struct rtw_adapter
 				priv->scdb_entry = NULL;
 			}
 			__network_hash_unlink(f);
-			rtw_mfree((u8 *)f, sizeof(struct nat25_network_db_entry));
+			kfree(f);
 
 			f = g;
 		}
@@ -660,10 +660,9 @@ void nat25_db_expire(struct rtw_adapter
 						priv->scdb_entry = NULL;
 					}
 					__network_hash_unlink(f);
-					rtw_mfree((u8 *)f, sizeof(struct nat25_network_db_entry));
+					kfree(f);
 				}
 			}
-
 			f = g;
 		}
 	}
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -136,9 +136,7 @@ _func_enter_;
 	_rtw_free_sema(&(pevtpriv->evt_notify));
 	_rtw_free_sema(&(pevtpriv->terminate_evtthread_sema));
 
-
-	if (pevtpriv->evt_allocated_buf)
-		rtw_mfree(pevtpriv->evt_allocated_buf, MAX_EVTSZ + 4);
+	kfree(pevtpriv->evt_allocated_buf);
 #endif
 
 #ifdef CONFIG_C2H_WK
@@ -149,7 +147,7 @@ _func_enter_;
 	while (!rtw_cbuf_empty(pevtpriv->c2h_queue)) {
 		void *c2h = rtw_cbuf_pop(pevtpriv->c2h_queue);
 		if (c2h != NULL && c2h != (void *)pevtpriv)
-			rtw_mfree(c2h, 16);
+			kfree(c2h);
 	}
 #endif
 
@@ -166,12 +164,8 @@ _func_enter_;
 		_rtw_spinlock_free(&(pcmdpriv->cmd_queue.lock));
 		_rtw_free_sema(&(pcmdpriv->cmd_queue_sema));
 		_rtw_free_sema(&(pcmdpriv->terminate_cmdthread_sema));
-
-		if (pcmdpriv->cmd_allocated_buf)
-			rtw_mfree(pcmdpriv->cmd_allocated_buf, MAX_CMDSZ + CMDBUFF_ALIGN_SZ);
-
-		if (pcmdpriv->rsp_allocated_buf)
-			rtw_mfree(pcmdpriv->rsp_allocated_buf, MAX_RSPSZ + 4);
+		kfree(pcmdpriv->cmd_allocated_buf);
+		kfree(pcmdpriv->rsp_allocated_buf);
 	}
 _func_exit_;
 }
@@ -353,18 +347,18 @@ _func_enter_;
 	if ((pcmd->cmdcode != _JOINBSS_CMD_) &&
 	    (pcmd->cmdcode != _CREATEBSS_CMD_)) {
 		/* free parmbuf in cmd_obj */
-		rtw_mfree((unsigned char *)pcmd->parmbuf, pcmd->cmdsz);
+		kfree(pcmd->parmbuf);
 	}
 
 	if (pcmd->rsp != NULL) {
 		if (pcmd->rspsz != 0) {
 			/* free rsp in cmd_obj */
-			rtw_mfree((unsigned char *)pcmd->rsp, pcmd->rspsz);
+			kfree(pcmd->rsp);
 		}
 	}
 
 	/* free cmd_obj */
-	rtw_mfree((unsigned char *)pcmd, sizeof(struct cmd_obj));
+	kfree(pcmd);
 
 _func_exit_;
 }
@@ -541,12 +535,8 @@ _func_exit_;
 void rtw_free_evt_obj(struct evt_obj *pevtobj)
 {
 _func_enter_;
-
-	if (pevtobj->parmbuf)
-		rtw_mfree((unsigned char *)pevtobj->parmbuf, pevtobj->evtsz);
-
-	rtw_mfree((unsigned char *)pevtobj, sizeof(struct evt_obj));
-
+	kfree(pevtobj->parmbuf);
+	kfree(pevtobj);
 _func_exit_;
 }
 
@@ -559,10 +549,6 @@ _func_exit_;
 }
 #endif
 
-
-/*
-u8 rtw_setstandby_cmd(unsigned char  *adapter)
-*/
 u8 rtw_setstandby_cmd(struct rtw_adapter *padapter, uint action)
 {
 	struct cmd_obj *ph2c;
@@ -581,7 +567,7 @@ _func_enter_;
 
 	psetusbsuspend = (struct usb_suspend_parm *)rtw_zmalloc(sizeof(struct usb_suspend_parm));
 	if (psetusbsuspend == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		ret = _FAIL;
 		goto exit;
 	}
@@ -633,7 +619,7 @@ _func_enter_;
 
 	psurveyPara = (struct sitesurvey_parm *)rtw_zmalloc(sizeof(struct sitesurvey_parm));
 	if (psurveyPara == NULL) {
-		rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		return _FAIL;
 	}
 
@@ -714,7 +700,7 @@ _func_enter_;
 
 	pbsetdataratepara = (struct setdatarate_parm *)rtw_zmalloc(sizeof(struct setdatarate_parm));
 	if (pbsetdataratepara == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -751,7 +737,7 @@ _func_enter_;
 	pssetbasicratepara = (struct setbasicrate_parm *)rtw_zmalloc(sizeof(struct setbasicrate_parm));
 
 	if (pssetbasicratepara == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -789,11 +775,11 @@ _func_enter_;
 	if (ph2c == NULL) {
 		res = _FAIL;
 		goto exit;
-		}
+	}
 	psetphypara = (struct setphy_parm *)rtw_zmalloc(sizeof(struct setphy_parm));
 
 	if (psetphypara == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -826,7 +812,7 @@ _func_enter_;
 	pwritebbparm = (struct writeBB_parm *)rtw_zmalloc(sizeof(struct writeBB_parm));
 
 	if (pwritebbparm == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -854,11 +840,11 @@ _func_enter_;
 	if (ph2c == NULL) {
 		res = _FAIL;
 		goto exit;
-		}
+	}
 	prdbbparm = (struct readBB_parm *)rtw_zmalloc(sizeof(struct readBB_parm));
 
 	if (prdbbparm == NULL) {
-		rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		return _FAIL;
 	}
 
@@ -892,7 +878,7 @@ _func_enter_;
 	pwriterfparm = (struct writeRF_parm *)rtw_zmalloc(sizeof(struct writeRF_parm));
 
 	if (pwriterfparm == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -925,7 +911,7 @@ _func_enter_;
 
 	prdrfparm = (struct readRF_parm *)rtw_zmalloc(sizeof(struct readRF_parm));
 	if (prdrfparm == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -952,8 +938,8 @@ void rtw_getbbrfreg_cmdrsp_callback(stru
 {
  _func_enter_;
 
-	rtw_mfree((unsigned char *)pcmd->parmbuf, pcmd->cmdsz);
-	rtw_mfree((unsigned char *)pcmd, sizeof(struct cmd_obj));
+	kfree(pcmd->parmbuf);
+	kfree(pcmd);
 
 #ifdef CONFIG_MP_INCLUDED
 	padapter->mppriv.workparam.bcompleted = true;
@@ -965,8 +951,8 @@ void rtw_readtssi_cmdrsp_callback(struct
 {
  _func_enter_;
 
-	rtw_mfree((unsigned char *)pcmd->parmbuf, pcmd->cmdsz);
-	rtw_mfree((unsigned char *)pcmd, sizeof(struct cmd_obj));
+	kfree(pcmd->parmbuf);
+	kfree(pcmd);
 
 #ifdef CONFIG_MP_INCLUDED
 	padapter->mppriv.workparam.bcompleted = true;
@@ -1098,13 +1084,9 @@ _func_enter_;
 
 	psecnetwork = (struct wlan_bssid_ex *)&psecuritypriv->sec_bss;
 	if (psecnetwork == NULL) {
-		if (pcmd != NULL)
-			rtw_mfree((unsigned char *)pcmd, sizeof(struct cmd_obj));
-
+		kfree(pcmd);
 		res = _FAIL;
-
 		RT_TRACE(_module_rtl871x_cmd_c_, _drv_err_, ("rtw_joinbss_cmd :psecnetwork == NULL!!!\n"));
-
 		goto exit;
 	}
 
@@ -1211,7 +1193,7 @@ _func_enter_;
 		cmdobj = (struct cmd_obj *)rtw_zmalloc(sizeof(*cmdobj));
 		if (cmdobj == NULL) {
 			res = _FAIL;
-			rtw_mfree((u8 *)param, sizeof(*param));
+			kfree(param);
 			goto exit;
 		}
 		init_h2fwcmd_w_parm_no_rsp(cmdobj, param, _DISCONNECT_CMD_);
@@ -1220,7 +1202,7 @@ _func_enter_;
 		/* no need to enqueue, do the cmd hdl directly and free cmd parameter */
 		if (H2C_SUCCESS != disconnect_hdl(padapter, (u8 *)param))
 			res = _FAIL;
-		rtw_mfree((u8 *)param, sizeof(*param));
+		kfree(param);
 	}
 
 exit:
@@ -1246,9 +1228,8 @@ _func_enter_;
 		goto exit;
 	}
 	psetop = (struct setopmode_parm *)rtw_zmalloc(sizeof(struct setopmode_parm));
-
 	if (psetop == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = false;
 		goto exit;
 	}
@@ -1287,15 +1268,15 @@ _func_enter_;
 
 	psetstakey_para = (struct set_stakey_parm *)rtw_zmalloc(sizeof(struct set_stakey_parm));
 	if (psetstakey_para == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
 
 	psetstakey_rsp = (struct set_stakey_rsp *)rtw_zmalloc(sizeof(struct set_stakey_rsp));
 	if (psetstakey_rsp == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
-		rtw_mfree((u8 *)psetstakey_para, sizeof(struct set_stakey_parm));
+		kfree(ph2c);
+		kfree(psetstakey_para);
 		res = _FAIL;
 		goto exit;
 	}
@@ -1364,15 +1345,15 @@ _func_enter_;
 
 		psetstakey_para = (struct set_stakey_parm *)rtw_zmalloc(sizeof(struct set_stakey_parm));
 		if (psetstakey_para == NULL) {
-			rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+			kfree(ph2c);
 			res = _FAIL;
 			goto exit;
 		}
 
 		psetstakey_rsp = (struct set_stakey_rsp *)rtw_zmalloc(sizeof(struct set_stakey_rsp));
 		if (psetstakey_rsp == NULL) {
-			rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
-			rtw_mfree((u8 *)psetstakey_para, sizeof(struct set_stakey_parm));
+			kfree(ph2c);
+			kfree(psetstakey_para);
 			res = _FAIL;
 			goto exit;
 		}
@@ -1410,7 +1391,7 @@ _func_enter_;
 	psetrttblparm = (struct setratable_parm *)rtw_zmalloc(sizeof(struct setratable_parm));
 
 	if (psetrttblparm == NULL) {
-		rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -1441,7 +1422,7 @@ _func_enter_;
 	pgetrttblparm = (struct getratable_parm *)rtw_zmalloc(sizeof(struct getratable_parm));
 
 	if (pgetrttblparm == NULL) {
-		rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -1480,15 +1461,15 @@ _func_enter_;
 
 	psetassocsta_para = (struct set_assocsta_parm *)rtw_zmalloc(sizeof(struct set_assocsta_parm));
 	if (psetassocsta_para == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
 
 	psetassocsta_rsp = (struct set_stakey_rsp *)rtw_zmalloc(sizeof(struct set_assocsta_rsp));
 	if (psetassocsta_rsp == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
-		rtw_mfree((u8 *)psetassocsta_para, sizeof(struct set_assocsta_parm));
+		kfree(ph2c);
+		kfree(psetassocsta_para);
 		return _FAIL;
 	}
 
@@ -1525,7 +1506,7 @@ _func_enter_;
 
 	paddbareq_parm = (struct addBaReq_parm *)rtw_zmalloc(sizeof(struct addBaReq_parm));
 	if (paddbareq_parm == NULL) {
-		rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -1571,7 +1552,7 @@ _func_enter_;
 
 	pdrvextra_cmd_parm = (struct drvextra_cmd_parm *)rtw_zmalloc(sizeof(struct drvextra_cmd_parm));
 	if (pdrvextra_cmd_parm == NULL) {
-		rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -1619,7 +1600,7 @@ _func_enter_;
 		/* need enqueue, prepare cmd_obj and enqueue */
 		pcmdobj = (struct cmd_obj *)rtw_zmalloc(sizeof(struct cmd_obj));
 		if (pcmdobj == NULL) {
-			rtw_mfree((u8 *)set_ch_parm, sizeof(*set_ch_parm));
+			kfree(set_ch_parm);
 			res = _FAIL;
 			goto exit;
 		}
@@ -1631,7 +1612,7 @@ _func_enter_;
 		if (H2C_SUCCESS != set_ch_hdl(padapter, (u8 *)set_ch_parm))
 			res = _FAIL;
 
-		rtw_mfree((u8 *)set_ch_parm, sizeof(*set_ch_parm));
+		kfree(set_ch_parm);
 	}
 
 	/* do something based on res... */
@@ -1675,7 +1656,7 @@ _func_enter_;
 		/* need enqueue, prepare cmd_obj and enqueue */
 		pcmdobj = (struct cmd_obj *)rtw_zmalloc(sizeof(struct	cmd_obj));
 		if (pcmdobj == NULL) {
-			rtw_mfree((u8 *)setchannelplan_param, sizeof(struct setchannelplan_param));
+			kfree(setchannelplan_param);
 			res = _FAIL;
 			goto exit;
 		}
@@ -1687,7 +1668,7 @@ _func_enter_;
 		if (H2C_SUCCESS != set_chplan_hdl(padapter, (unsigned char *)setchannelplan_param))
 			res = _FAIL;
 
-		rtw_mfree((u8 *)setchannelplan_param, sizeof(struct setchannelplan_param));
+		kfree(setchannelplan_param);
 	}
 
 	/* do something based on res... */
@@ -1721,7 +1702,7 @@ _func_enter_;
 
 	ledBlink_param = (struct ledblink_param *)rtw_zmalloc(sizeof(struct	ledblink_param));
 	if (ledBlink_param == NULL) {
-		rtw_mfree((u8 *)pcmdobj, sizeof(struct cmd_obj));
+		kfree(pcmdobj);
 		res = _FAIL;
 		goto exit;
 	}
@@ -1759,7 +1740,7 @@ _func_enter_;
 
 	setchannelswitch_param = (struct setchannelswitch_param *)rtw_zmalloc(sizeof(struct setchannelswitch_param));
 	if (setchannelswitch_param == NULL) {
-		rtw_mfree((u8 *)pcmdobj, sizeof(struct cmd_obj));
+		kfree(pcmdobj);
 		res = _FAIL;
 		goto exit;
 	}
@@ -1799,7 +1780,7 @@ _func_enter_;
 
 	TDLSoption = (struct TDLSoption_param *)rtw_zmalloc(sizeof(struct TDLSoption_param));
 	if (TDLSoption == NULL) {
-		rtw_mfree((u8 *)pcmdobj, sizeof(struct cmd_obj));
+		kfree(pcmdobj);
 		res = _FAIL;
 		goto exit;
 	}
@@ -2002,7 +1983,7 @@ _func_enter_;
 
 		pdrvextra_cmd_parm = (struct drvextra_cmd_parm *)rtw_zmalloc(sizeof(struct drvextra_cmd_parm));
 		if (pdrvextra_cmd_parm == NULL) {
-			rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+			kfree(ph2c);
 			res = _FAIL;
 			goto exit;
 		}
@@ -2055,7 +2036,7 @@ _func_enter_;
 
 		pdrvextra_cmd_parm = (struct drvextra_cmd_parm *)rtw_zmalloc(sizeof(struct drvextra_cmd_parm));
 		if (pdrvextra_cmd_parm == NULL) {
-			rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+			kfree(ph2c);
 			res = _FAIL;
 			goto exit;
 		}
@@ -2102,7 +2083,7 @@ _func_enter_;
 
 	pdrvextra_cmd_parm = (struct drvextra_cmd_parm *)rtw_zmalloc(sizeof(struct drvextra_cmd_parm));
 	if (pdrvextra_cmd_parm == NULL) {
-		rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -2142,7 +2123,7 @@ _func_enter_;
 
 	pdrvextra_cmd_parm = (struct drvextra_cmd_parm *)rtw_zmalloc(sizeof(struct drvextra_cmd_parm));
 	if (pdrvextra_cmd_parm == NULL) {
-		rtw_mfree((unsigned char *)ppscmd, sizeof(struct cmd_obj));
+		kfree(ppscmd);
 		res = _FAIL;
 		goto exit;
 	}
@@ -2203,7 +2184,7 @@ u8 rtw_chk_hi_queue_cmd(struct rtw_adapt
 	}
 	pdrvextra_cmd_parm = (struct drvextra_cmd_parm *)rtw_zmalloc(sizeof(struct drvextra_cmd_parm));
 	if (pdrvextra_cmd_parm == NULL) {
-		rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -2235,7 +2216,7 @@ u8 rtw_c2h_wk_cmd(struct rtw_adapter *pa
 
 	pdrvextra_cmd_parm = (struct drvextra_cmd_parm *)rtw_zmalloc(sizeof(struct drvextra_cmd_parm));
 	if (pdrvextra_cmd_parm == NULL) {
-		rtw_mfree((u8 *)ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res = _FAIL;
 		goto exit;
 	}
@@ -2303,14 +2284,14 @@ static void c2h_wk_callback(_workitem *w
 			continue;
 
 		if (!c2h_evt_exist(c2h_evt)) {
-			rtw_mfree((u8 *)c2h_evt, 16);
+			kfree(c2h_evt);
 			continue;
 		}
 
 		if (ccx_id_filter(c2h_evt->id) == true) {
 			/* Handle CCX report here */
 			rtw_hal_c2h_handler(adapter, c2h_evt);
-			rtw_mfree((u8 *)c2h_evt, 16);
+			kfree(c2h_evt);
 		} else {
 			/* Enqueue into cmd_thread for others */
 			rtw_c2h_wk_cmd(adapter, (u8 *)c2h_evt);
@@ -2374,9 +2355,8 @@ u8 rtw_drvextra_cmd_hdl(struct rtw_adapt
 		break;
 	}
 
-
 	if (pdrvextra_cmd->pbuf && pdrvextra_cmd->type_size > 0)
-		rtw_mfree(pdrvextra_cmd->pbuf, pdrvextra_cmd->type_size);
+		kfree(pdrvextra_cmd->pbuf);
 
 	return H2C_SUCCESS;
 }
--- a/drivers/staging/rtl8192du/core/rtw_efuse.c
+++ b/drivers/staging/rtl8192du/core/rtw_efuse.c
@@ -622,7 +622,7 @@ u8 rtw_efuse_map_write(struct rtw_adapte
 
 exit:
 
-	rtw_mfree(map, maplen);
+	kfree(map);
 
 	return ret;
 }
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -103,7 +103,6 @@ _func_exit_;
 	return res;
 }
 
-void rtw_mfree_mlme_priv_lock (struct mlme_priv *pmlmepriv);
 void rtw_mfree_mlme_priv_lock (struct mlme_priv *pmlmepriv)
 {
 	_rtw_spinlock_free(&pmlmepriv->lock);
@@ -113,9 +112,8 @@ void rtw_mfree_mlme_priv_lock (struct ml
 
 static void rtw_free_mlme_ie_data(u8 **ppie, u32 *plen)
 {
-	if(*ppie)
-	{
-		_rtw_mfree(*ppie, *plen);
+	if (*ppie) {
+		kfree(*ppie);
 		*plen = 0;
 		*ppie=NULL;
 	}
@@ -1021,7 +1019,7 @@ _func_enter_;
 	{
 		u32 free_len = pmlmepriv->wps_probe_req_ie_len;
 		pmlmepriv->wps_probe_req_ie_len = 0;
-		rtw_mfree(pmlmepriv->wps_probe_req_ie, free_len);
+		kfree(pmlmepriv->wps_probe_req_ie);
 		pmlmepriv->wps_probe_req_ie = NULL;
 	}
 
@@ -1858,27 +1856,23 @@ _func_enter_;
 					assoc_req_len = psta->assoc_req_len;
 					memcpy(passoc_req, psta->passoc_req, assoc_req_len);
 
-					_rtw_mfree(psta->passoc_req , psta->assoc_req_len);
+					kfree(psta->passoc_req);
 					psta->passoc_req = NULL;
 					psta->assoc_req_len = 0;
 				}
 			}
 			spin_unlock_bh(&psta->lock);
 
-			if(passoc_req && assoc_req_len>0)
-			{
+			if (passoc_req && assoc_req_len > 0) {
 				rtw_cfg80211_indicate_sta_assoc(adapter, passoc_req, assoc_req_len);
 
-				_rtw_mfree(passoc_req, assoc_req_len);
+				kfree(passoc_req);
 			}
 #endif //(LINUX_VERSION_CODE < KERNEL_VERSION(2,6,37)) || defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER)
 #endif //CONFIG_IOCTL_CFG80211
 
-			//bss_cap_update_on_sta_join(adapter, psta);
-			//sta_info_update(adapter, psta);
 			ap_sta_info_defer_update(adapter, psta);
 		}
-
 		goto exit;
 	}
 #endif
@@ -2527,7 +2521,7 @@ _func_enter_;
 
 	psetauthparm=(struct setauth_parm*)rtw_zmalloc(sizeof(struct setauth_parm));
 	if(psetauthparm==NULL){
-		rtw_mfree((unsigned char *)pcmd, sizeof(struct	cmd_obj));
+		kfree(pcmd);
 		res= _FAIL;
 		goto exit;
 	}
@@ -2575,7 +2569,7 @@ _func_enter_;
 	}
 	psetkeyparm=(struct setkey_parm*)rtw_zmalloc(sizeof(struct setkey_parm));
 	if(psetkeyparm==NULL){
-		rtw_mfree((unsigned char *)pcmd, sizeof(struct	cmd_obj));
+		kfree(pcmd);
 		res= _FAIL;
 		goto exit;
 	}
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -1948,16 +1948,12 @@ unsigned int OnAssocReq(struct rtw_adapt
 			rtw_cfg80211_indicate_sta_assoc(padapter, pframe, pkt_len);
 			#else //(LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37)) && !defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER)
 			spin_lock_bh(&pstat->lock);
-			if(pstat->passoc_req)
-			{
-				rtw_mfree(pstat->passoc_req, pstat->assoc_req_len);
-				pstat->passoc_req = NULL;
-				pstat->assoc_req_len = 0;
-			}
+			kfree(pstat->passoc_req);
+			pstat->passoc_req = NULL;
+			pstat->assoc_req_len = 0;
 
 			pstat->passoc_req =  rtw_zmalloc(pkt_len);
-			if(pstat->passoc_req)
-			{
+			if(pstat->passoc_req) {
 				memcpy(pstat->passoc_req, pframe, pkt_len);
 				pstat->assoc_req_len = pkt_len;
 			}
@@ -9462,14 +9458,12 @@ void report_survey_event(struct rtw_adap
 
 
 	if ((pcmd_obj = (struct cmd_obj*)rtw_zmalloc(sizeof(struct cmd_obj))) == NULL)
-	{
 		return;
-	}
 
 	cmdsz = (sizeof(struct survey_event) + sizeof(struct C2HEvent_Header));
-	if ((pevtcmd = (u8*)rtw_zmalloc(cmdsz)) == NULL)
-	{
-		rtw_mfree((u8 *)pcmd_obj, sizeof(struct cmd_obj));
+	pevtcmd = (u8*)rtw_zmalloc(cmdsz);
+	if (pevtcmd == NULL) {
+		kfree(pcmd_obj);
 		return;
 	}
 
@@ -9491,8 +9485,8 @@ void report_survey_event(struct rtw_adap
 
 	if (collect_bss_info(padapter, precv_frame, (struct wlan_bssid_ex *)&psurvey_evt->bss) == _FAIL)
 	{
-		rtw_mfree((u8 *)pcmd_obj, sizeof(struct cmd_obj));
-		rtw_mfree((u8 *)pevtcmd, cmdsz);
+		kfree(pcmd_obj);
+		kfree(pevtcmd);
 		return;
 	}
 
@@ -9518,15 +9512,14 @@ void report_surveydone_event(struct rtw_
 	struct mlme_ext_priv		*pmlmeext = &padapter->mlmeextpriv;
 	struct cmd_priv *pcmdpriv = &padapter->cmdpriv;
 
-	if ((pcmd_obj = (struct cmd_obj*)rtw_zmalloc(sizeof(struct cmd_obj))) == NULL)
-	{
+	pcmd_obj = (struct cmd_obj*)rtw_zmalloc(sizeof(struct cmd_obj));
+	if (pcmd_obj == NULL)
 		return;
-	}
 
 	cmdsz = (sizeof(struct surveydone_event) + sizeof(struct C2HEvent_Header));
-	if ((pevtcmd = (u8*)rtw_zmalloc(cmdsz)) == NULL)
-	{
-		rtw_mfree((u8 *)pcmd_obj, sizeof(struct cmd_obj));
+	pevtcmd = (u8*)rtw_zmalloc(cmdsz);
+	if (pevtcmd == NULL) {
+		kfree(pcmd_obj);
 		return;
 	}
 
@@ -9566,15 +9559,14 @@ void report_join_res(struct rtw_adapter
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct cmd_priv *pcmdpriv = &padapter->cmdpriv;
 
-	if ((pcmd_obj = (struct cmd_obj*)rtw_zmalloc(sizeof(struct cmd_obj))) == NULL)
-	{
+	pcmd_obj = (struct cmd_obj *)rtw_zmalloc(sizeof(struct cmd_obj));
+	if (pcmd_obj == NULL)
 		return;
-	}
 
 	cmdsz = (sizeof(struct joinbss_event) + sizeof(struct C2HEvent_Header));
-	if ((pevtcmd = (u8*)rtw_zmalloc(cmdsz)) == NULL)
-	{
-		rtw_mfree((u8 *)pcmd_obj, sizeof(struct cmd_obj));
+	pevtcmd = (u8 *)rtw_zmalloc(cmdsz);
+	if (pevtcmd == NULL) {
+		kfree(pcmd_obj);
 		return;
 	}
 
@@ -9628,7 +9620,7 @@ void report_del_sta_event(struct rtw_ada
 	cmdsz = (sizeof(struct stadel_event) + sizeof(struct C2HEvent_Header));
 	if ((pevtcmd = (u8*)rtw_zmalloc(cmdsz)) == NULL)
 	{
-		rtw_mfree((u8 *)pcmd_obj, sizeof(struct cmd_obj));
+		kfree(pcmd_obj);
 		return;
 	}
 
@@ -9684,7 +9676,7 @@ void report_add_sta_event(struct rtw_ada
 	cmdsz = (sizeof(struct stassoc_event) + sizeof(struct C2HEvent_Header));
 	if ((pevtcmd = (u8*)rtw_zmalloc(cmdsz)) == NULL)
 	{
-		rtw_mfree((u8 *)pcmd_obj, sizeof(struct cmd_obj));
+		kfree(pcmd_obj);
 		return;
 	}
 
@@ -10273,7 +10265,7 @@ void survey_timer_hdl(struct rtw_adapter
 
 		if ((psurveyPara = (struct sitesurvey_parm*)rtw_zmalloc(sizeof(struct sitesurvey_parm))) == NULL)
 		{
-			rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+			kfree(ph2c);
 			goto exit_survey_timer_hdl;
 		}
 
@@ -11088,7 +11080,7 @@ _func_enter_;
 
 	if ((ptxBeacon_parm = (struct Tx_Beacon_param *)rtw_zmalloc(sizeof(struct Tx_Beacon_param))) == NULL)
 	{
-		rtw_mfree((unsigned char *)ph2c, sizeof(struct	cmd_obj));
+		kfree(ph2c);
 		res= _FAIL;
 		goto exit;
 	}
--- a/drivers/staging/rtl8192du/core/rtw_p2p.c
+++ b/drivers/staging/rtl8192du/core/rtw_p2p.c
@@ -166,7 +166,7 @@ static u32 go_add_group_info_attr(struct
 		len = rtw_set_p2p_attr_content(pbuf, P2P_ATTR_GROUP_INFO, attr_len, pdata_attr);
 	}
 
-	rtw_mfree(pdata_attr, MAX_P2P_IE_LEN);
+	kfree(pdata_attr);
 
 	return len;
 
@@ -2442,7 +2442,7 @@ u32 process_assoc_req_p2p_ie(struct wifi
 					memcpy(psta->dev_name, pattr_content+4, psta->dev_name_len);
 				}
 
-				rtw_mfree(pbuf, attr_contentlen);
+				kfree(pbuf);
 
 			}
 
@@ -4270,7 +4270,7 @@ _func_enter_;
 
 		pdrvextra_cmd_parm = (struct drvextra_cmd_parm*)rtw_zmalloc(sizeof(struct drvextra_cmd_parm));
 		if(pdrvextra_cmd_parm==NULL){
-			rtw_mfree((unsigned char *)ph2c, sizeof(struct cmd_obj));
+			kfree(ph2c);
 			res= _FAIL;
 			goto exit;
 		}
--- a/drivers/staging/rtl8192du/core/rtw_security.c
+++ b/drivers/staging/rtl8192du/core/rtw_security.c
@@ -2546,7 +2546,7 @@ static void gf_mulx(u8 *pad)
 static void aes_encrypt_deinit(void *ctx)
 {
 	memset(ctx, 0, AES_PRIV_SIZE);
-	rtw_mfree(ctx, AES_PRIV_SIZE);
+	kfree(ctx);
 }
 
 
@@ -2743,7 +2743,7 @@ int wpa_tdls_ftie_mic(u8 *kck, u8 trans_
 	pos += 2 + ftie[1];
 
 	ret = omac1_aes_128(kck, buf, pos - buf, mic);
-	rtw_mfree(buf, len);
+	kfree(buf);
 	return ret;
 
 }
@@ -2794,7 +2794,7 @@ int tdls_verify_mic(u8 *kck, u8 trans_se
 	pos += *(ftie+1);
 
 	ret = omac1_aes_128(kck, buf, pos - buf, mic);
-	rtw_mfree(buf, len);
+	kfree(buf);
 	if (ret)
 		return 0;
 	rx_ftie = ftie+4;
--- a/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
+++ b/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
@@ -189,7 +189,6 @@ _func_exit_;
 
 }
 
-void rtw_mfree_stainfo(struct sta_info *psta);
 void rtw_mfree_stainfo(struct sta_info *psta)
 {
 _func_enter_;
@@ -205,7 +204,6 @@ _func_exit_;
 
 
 // this function is used to free the memory of lock || sema for all stainfos
-void rtw_mfree_all_stainfo(struct sta_priv *pstapriv );
 void rtw_mfree_all_stainfo(struct sta_priv *pstapriv )
 {
 	struct list_head *plist, *phead;
@@ -232,7 +230,6 @@ _func_exit_;
 
 }
 
-void rtw_mfree_sta_priv_lock(struct	sta_priv *pstapriv);
 void rtw_mfree_sta_priv_lock(struct	sta_priv *pstapriv)
 {
 #ifdef CONFIG_AP_MODE
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -327,10 +327,6 @@ void _rtw_free_xmit_priv (struct xmit_pr
 	for(i=0; i<NR_XMITBUFF; i++)
 	{
 		rtw_os_xmit_resource_free(padapter, pxmitbuf,(MAX_XMITBUF_SZ + XMITBUF_ALIGN_SZ));
-
-		//if(pxmitbuf->pallocated_buf)
-		//	rtw_mfree(pxmitbuf->pallocated_buf, MAX_XMITBUF_SZ + XMITBUF_ALIGN_SZ);
-
 		pxmitbuf++;
 	}
 
@@ -351,9 +347,6 @@ void _rtw_free_xmit_priv (struct xmit_pr
 	{
 		rtw_os_xmit_resource_free(padapter, pxmitbuf,(MAX_XMIT_EXTBUF_SZ + XMITBUF_ALIGN_SZ));
 
-		//if(pxmitbuf->pallocated_buf)
-		//	rtw_mfree(pxmitbuf->pallocated_buf, MAX_XMIT_EXTBUF_SZ);
-
 		pxmitbuf++;
 	}
 
@@ -2450,8 +2443,7 @@ void rtw_free_hwxmits(struct rtw_adapter
 	struct xmit_priv *pxmitpriv = &padapter->xmitpriv;
 
 	hwxmits = pxmitpriv->hwxmits;
-	if(hwxmits)
-		rtw_mfree((u8 *)hwxmits, (sizeof (struct hw_xmit) * pxmitpriv->hwxmit_entry));
+	kfree(hwxmits);
 }
 
 void rtw_init_hwxmits(struct hw_xmit *phwxmit, int entry)
--- a/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
@@ -676,13 +676,12 @@ FillFakeTxDescriptor92D(
 //			Now we just send 4 types packet to rsvd page.
 //			(1)Beacon, (2)Ps-poll, (3)Null data, (4)ProbeRsp.
 //	Input:
-//	    bDLFinished - FALSE: At the first time we will send all the packets as a large packet to Hw,
+//	    dl_finish - FALSE: At the first time we will send all the packets as a large packet to Hw,
 //						so we need to set the packet length to total lengh.
 //			      TRUE: At the second time, we should send the first packet (default:beacon)
 //						to Hw again and set the lengh in descriptor to the real beacon lengh.
 // 2009.10.15 by tynli.
-void SetFwRsvdPagePkt(struct rtw_adapter * Adapter, bool bDLFinished);
-void SetFwRsvdPagePkt(struct rtw_adapter * Adapter, bool bDLFinished)
+void SetFwRsvdPagePkt(struct rtw_adapter * Adapter, bool dl_finish)
 {
 	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct xmit_frame	*pmgntframe;
@@ -691,22 +690,22 @@ void SetFwRsvdPagePkt(struct rtw_adapter
 	struct mlme_ext_priv	*pmlmeext = &(Adapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	u32	BeaconLength, ProbeRspLength, PSPollLength, NullFunctionDataLength;
-	u8	*ReservedPagePacket;
+	u8	*reservedpagepacket;
 	u8	PageNum=0, U1bTmp, TxDescLen=0, TxDescOffset=0;
 	u16	BufIndex=0;
 	u32	TotalPacketLen;
 	u8	u1RsvdPageLoc[3]={0};
-	bool	bDLOK = false;
+	bool	dlok = false;
 
 	DBG_8192D("%s\n", __FUNCTION__);
 
-	ReservedPagePacket = (u8*)rtw_malloc(1000);
-	if(ReservedPagePacket == NULL){
-		DBG_8192D("%s(): alloc ReservedPagePacket fail !!!\n", __FUNCTION__);
+	reservedpagepacket = (u8*)rtw_malloc(1000);
+	if(reservedpagepacket == NULL){
+		DBG_8192D("%s(): alloc reservedpagepacket fail !!!\n", __FUNCTION__);
 		return;
 	}
 
-	memset(ReservedPagePacket, 0, 1000);
+	memset(reservedpagepacket, 0, 1000);
 
 	TxDescLen = 32;//TX_DESC_SIZE;
 
@@ -714,11 +713,11 @@ void SetFwRsvdPagePkt(struct rtw_adapter
 	TxDescOffset = TxDescLen+8; //Shift index for 8 bytes because the dummy bytes in the first descipstor.
 
 	//(1) beacon
-	ConstructBeacon(Adapter,&ReservedPagePacket[BufIndex],&BeaconLength);
+	ConstructBeacon(Adapter,&reservedpagepacket[BufIndex],&BeaconLength);
 
 	RT_PRINT_DATA(_module_rtl8712_cmd_c_, _drv_info_,
 		"SetFwRsvdPagePkt(): HW_VAR_SET_TX_CMD: BCN\n",
-		&ReservedPagePacket[BufIndex], (BeaconLength+BufIndex));
+		&reservedpagepacket[BufIndex], (BeaconLength+BufIndex));
 
 //--------------------------------------------------------------------
 
@@ -734,13 +733,13 @@ void SetFwRsvdPagePkt(struct rtw_adapter
 	BufIndex = (PageNum*128) + TxDescOffset;
 
 	//(2) ps-poll
-	ConstructPSPoll(Adapter, &ReservedPagePacket[BufIndex],&PSPollLength);
+	ConstructPSPoll(Adapter, &reservedpagepacket[BufIndex],&PSPollLength);
 
-	FillFakeTxDescriptor92D(Adapter, &ReservedPagePacket[BufIndex-TxDescLen], PSPollLength, true);
+	FillFakeTxDescriptor92D(Adapter, &reservedpagepacket[BufIndex-TxDescLen], PSPollLength, true);
 
 	RT_PRINT_DATA(_module_rtl8712_cmd_c_, _drv_info_,
 		"SetFwRsvdPagePkt(): HW_VAR_SET_TX_CMD: PS-POLL\n",
-		&ReservedPagePacket[BufIndex-TxDescLen], (PSPollLength+TxDescLen));
+		&reservedpagepacket[BufIndex-TxDescLen], (PSPollLength+TxDescLen));
 
 	SET_H2CCMD_RSVDPAGE_LOC_PSPOLL(u1RsvdPageLoc, PageNum );
 
@@ -754,18 +753,18 @@ void SetFwRsvdPagePkt(struct rtw_adapter
 	//(3) null data
 	ConstructNullFunctionData(
 		Adapter,
-		&ReservedPagePacket[BufIndex],
+		&reservedpagepacket[BufIndex],
 		&NullFunctionDataLength,
 		get_my_bssid(&(pmlmeinfo->network)),
 		false);
 
-	FillFakeTxDescriptor92D(Adapter, &ReservedPagePacket[BufIndex-TxDescLen], NullFunctionDataLength, false);
+	FillFakeTxDescriptor92D(Adapter, &reservedpagepacket[BufIndex-TxDescLen], NullFunctionDataLength, false);
 
 	SET_H2CCMD_RSVDPAGE_LOC_NULL_DATA(u1RsvdPageLoc, PageNum);
 
 	RT_PRINT_DATA(_module_rtl8712_cmd_c_, _drv_info_,
 		"SetFwRsvdPagePkt(): HW_VAR_SET_TX_CMD: NULL DATA \n",
-		&ReservedPagePacket[BufIndex-TxDescLen], (NullFunctionDataLength+TxDescLen));
+		&reservedpagepacket[BufIndex-TxDescLen], (NullFunctionDataLength+TxDescLen));
 //------------------------------------------------------------------
 
 	U1bTmp = (u8)PageNum_128(NullFunctionDataLength+TxDescLen);
@@ -776,18 +775,18 @@ void SetFwRsvdPagePkt(struct rtw_adapter
 	//(4) probe response
 	ConstructProbeRsp(
 		Adapter,
-		&ReservedPagePacket[BufIndex],
+		&reservedpagepacket[BufIndex],
 		&ProbeRspLength,
 		get_my_bssid(&(pmlmeinfo->network)),
 		false);
 
-	FillFakeTxDescriptor92D(Adapter, &ReservedPagePacket[BufIndex-TxDescLen], ProbeRspLength, false);
+	FillFakeTxDescriptor92D(Adapter, &reservedpagepacket[BufIndex-TxDescLen], ProbeRspLength, false);
 
 	SET_H2CCMD_RSVDPAGE_LOC_PROBE_RSP(u1RsvdPageLoc, PageNum);
 
 	RT_PRINT_DATA(_module_rtl8712_cmd_c_, _drv_info_,
 		"SetFwRsvdPagePkt(): HW_VAR_SET_TX_CMD: PROBE RSP \n",
-		&ReservedPagePacket[BufIndex-TxDescLen], (ProbeRspLength-TxDescLen));
+		&reservedpagepacket[BufIndex-TxDescLen], (ProbeRspLength-TxDescLen));
 
 //------------------------------------------------------------------
 
@@ -807,20 +806,18 @@ void SetFwRsvdPagePkt(struct rtw_adapter
 	update_mgntframe_attrib(Adapter, pattrib);
 	pattrib->qsel = 0x10;
 	pattrib->pktlen = pattrib->last_txcmdsz = TotalPacketLen - TxDescLen;
-	memcpy(pmgntframe->buf_addr, ReservedPagePacket, TotalPacketLen);
+	memcpy(pmgntframe->buf_addr, reservedpagepacket, TotalPacketLen);
 
 	rtw_hal_mgnt_xmit(Adapter, pmgntframe);
 
-	bDLOK = true;
+	dlok = true;
 
-	if(bDLOK)
-	{
+	if(dlok) {
 		DBG_8192D("Set RSVD page location to Fw.\n");
 		FillH2CCmd92D(Adapter, H2C_RSVDPAGE, sizeof(u1RsvdPageLoc), u1RsvdPageLoc);
-		//FillH2CCmd92D(Adapter, H2C_RSVDPAGE, sizeof(RsvdPageLoc), (u8 *)&RsvdPageLoc);
 	}
 
-	rtw_mfree(ReservedPagePacket,1000);
+	kfree(reservedpagepacket);
 }
 
 void rtl8192d_set_FwJoinBssReport_cmd(struct rtw_adapter* padapter, u8 mstatus)
--- a/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
@@ -1270,8 +1270,7 @@ _func_enter_;
 
 	DBG_8192D("===== rtl8192du_free_hal_data =====\n");
 
-	if(padapter->HalData)
-		rtw_mfree(padapter->HalData, sizeof(struct hal_data_8192du));
+	kfree(padapter->HalData);
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	GlobalFirstConfigurationForNormalChip = true;
 #endif
--- a/drivers/staging/rtl8192du/hal/rtl8192du_recv.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_recv.c
@@ -171,22 +171,17 @@ void rtl8192du_free_recv_priv (struct rt
 
 	precvbuf = (struct recv_buf *)precvpriv->precv_buf;
 
-	for(i=0; i < NR_RECVBUFF ; i++)
-	{
+	for (i = 0; i < NR_RECVBUFF; i++) {
 		rtw_os_recvbuf_resource_free(padapter, precvbuf);
 		precvbuf++;
 	}
 
-	if(precvpriv->pallocated_recv_buf)
-		rtw_mfree(precvpriv->pallocated_recv_buf, NR_RECVBUFF *sizeof(struct recv_buf) + 4);
+	kfree(precvpriv->pallocated_recv_buf);
 
 #ifdef CONFIG_USB_INTERRUPT_IN_PIPE
 	if(precvpriv->int_in_urb)
-	{
 		usb_free_urb(precvpriv->int_in_urb);
-	}
-	if(precvpriv->int_in_buf)
-		rtw_mfree(precvpriv->int_in_buf, sizeof(INTERRUPT_MSG_FORMAT_EX));
+	kfree(precvpriv->int_in_buf);
 #endif
 
 	if (skb_queue_len(&precvpriv->rx_skb_queue)) {
--- a/drivers/staging/rtl8192du/hal/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/hal/usb_ops_linux.c
@@ -167,7 +167,7 @@ static int usbctrl_vendorreq(struct intf
 
 	// release IO memory used by vendorreq
 	#ifdef CONFIG_USB_VENDOR_REQ_BUFFER_DYNAMIC_ALLOCATE
-	rtw_mfree(tmp_buf, tmp_buflen);
+	kfree(tmp_buf);
 	#endif
 
 release_mutex:
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -302,14 +302,12 @@ extern u8*	_rtw_zvmalloc(u32 sz);
 extern void	_rtw_vmfree(u8 *pbuf, u32 sz);
 extern u8*	_rtw_zmalloc(u32 sz);
 extern u8*	_rtw_malloc(u32 sz);
-extern void	_rtw_mfree(u8 *pbuf, u32 sz);
 
 #define rtw_vmalloc(sz)			_rtw_vmalloc((sz))
 #define rtw_zvmalloc(sz)			_rtw_zvmalloc((sz))
 #define rtw_vmfree(pbuf, sz)		_rtw_vmfree((pbuf), (sz))
 #define rtw_malloc(sz)			_rtw_malloc((sz))
 #define rtw_zmalloc(sz)			_rtw_zmalloc((sz))
-#define rtw_mfree(pbuf, sz)		_rtw_mfree((pbuf), (sz))
 
 extern int	_rtw_memcmp(void *dst, void *src, u32 sz);
 
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -238,7 +238,7 @@ void rtw_spt_band_free(struct ieee80211_
 	{
 
 	}
-	rtw_mfree((u8*)spt_band, size);
+	kfree(spt_band);
 }
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37)) || defined(COMPAT_KERNEL_RELEASE)
@@ -614,7 +614,7 @@ static u8 set_pairwise_key(_adapter *pad
 
 	psetstakey_para = (struct set_stakey_parm*)rtw_zmalloc(sizeof(struct set_stakey_parm));
 	if(psetstakey_para==NULL){
-		rtw_mfree((u8 *) ph2c, sizeof(struct cmd_obj));
+		kfree(ph2c);
 		res=_FAIL;
 		goto exit;
 	}
@@ -654,7 +654,7 @@ static int set_group_key(_adapter *padap
 	}
 	psetkeyparm=(struct setkey_parm*)rtw_zmalloc(sizeof(struct setkey_parm));
 	if(psetkeyparm==NULL){
-		rtw_mfree((unsigned char *)pcmd, sizeof(struct cmd_obj));
+		kfree(pcmd);
 		res= _FAIL;
 		goto exit;
 	}
@@ -1287,17 +1287,12 @@ static int cfg80211_rtw_add_key(struct w
 
 		ret = rtw_cfg80211_ap_set_encryption(ndev, param, param_len);
 #endif
-	}
-	else
-	{
+	} else {
 		DBG_8192C("error! fw_state=0x%x, iftype=%d\n", pmlmepriv->fw_state, rtw_wdev->iftype);
-
 	}
 
 	if(param)
-	{
-		rtw_mfree((u8*)param, param_len);
-	}
+		kfree(param);
 
 	return ret;
 
@@ -1700,7 +1695,7 @@ static int rtw_cfg80211_set_probe_req_wp
 			{
 				u32 free_len = pmlmepriv->wps_probe_req_ie_len;
 				pmlmepriv->wps_probe_req_ie_len = 0;
-				rtw_mfree(pmlmepriv->wps_probe_req_ie, free_len);
+				kfree(pmlmepriv->wps_probe_req_ie);
 				pmlmepriv->wps_probe_req_ie = NULL;
 			}
 
@@ -1728,7 +1723,7 @@ static int rtw_cfg80211_set_probe_req_wp
 			{
 				u32 free_len = pmlmepriv->p2p_probe_req_ie_len;
 				pmlmepriv->p2p_probe_req_ie_len = 0;
-				rtw_mfree(pmlmepriv->p2p_probe_req_ie, free_len);
+				kfree(pmlmepriv->p2p_probe_req_ie);
 				pmlmepriv->p2p_probe_req_ie = NULL;
 			}
 
@@ -1757,7 +1752,7 @@ static int rtw_cfg80211_set_probe_req_wp
 			{
 				u32 free_len = pmlmepriv->wfd_probe_req_ie_len;
 				pmlmepriv->wfd_probe_req_ie_len = 0;
-				rtw_mfree(pmlmepriv->wfd_probe_req_ie, free_len);
+				kfree(pmlmepriv->wfd_probe_req_ie);
 				pmlmepriv->wfd_probe_req_ie = NULL;
 			}
 
@@ -2300,7 +2295,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 			{
 				u32 free_len = pmlmepriv->p2p_assoc_req_ie_len;
 				pmlmepriv->p2p_assoc_req_ie_len = 0;
-				rtw_mfree(pmlmepriv->p2p_assoc_req_ie, free_len);
+				kfree(pmlmepriv->p2p_assoc_req_ie);
 				pmlmepriv->p2p_assoc_req_ie = NULL;
 			}
 
@@ -2331,7 +2326,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 			{
 				u32 free_len = pmlmepriv->wfd_assoc_req_ie_len;
 				pmlmepriv->wfd_assoc_req_ie_len = 0;
-				rtw_mfree(pmlmepriv->wfd_assoc_req_ie, free_len);
+				kfree(pmlmepriv->wfd_assoc_req_ie);
 				pmlmepriv->wfd_assoc_req_ie = NULL;
 			}
 
@@ -2359,7 +2354,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 
 exit:
 	if (buf)
-		rtw_mfree(buf, ielen);
+		kfree(buf);
 	if (ret)
 		_clr_fwstate_(&padapter->mlmepriv, WIFI_UNDER_WPS);
 	return ret;
@@ -2609,13 +2604,10 @@ static int cfg80211_rtw_connect(struct w
 		memcpy(pwep->KeyMaterial,  (void *)sme->key, pwep->KeyLength);
 
 		if(rtw_set_802_11_add_wep(padapter, pwep) == (u8)_FAIL)
-		{
 			ret = -EOPNOTSUPP ;
-		}
 
-		if (pwep) {
-			rtw_mfree((u8 *)pwep,wep_total_len);
-		}
+		if (pwep)
+			kfree((u8 *)pwep);
 
 		if(ret < 0)
 			goto exit;
@@ -3210,7 +3202,7 @@ static int rtw_cfg80211_add_monitor_if(_
 
 out:
 	if (ret && mon_wdev) {
-		rtw_mfree((u8*)mon_wdev, sizeof(struct wireless_dev));
+		kfree(mon_wdev);
 		mon_wdev = NULL;
 	}
 
@@ -3412,7 +3404,7 @@ static int rtw_add_beacon(_adapter *adap
 	}
 
 
-	rtw_mfree(pbuf, head_len+tail_len);
+	kfree(pbuf);
 
 	return ret;
 }
@@ -4517,7 +4509,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 			{
 				u32 free_len = pmlmepriv->wps_beacon_ie_len;
 				pmlmepriv->wps_beacon_ie_len = 0;
-				rtw_mfree(pmlmepriv->wps_beacon_ie, free_len);
+				kfree(pmlmepriv->wps_beacon_ie);
 				pmlmepriv->wps_beacon_ie = NULL;
 			}
 
@@ -4549,7 +4541,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 			{
 				u32 free_len = pmlmepriv->p2p_beacon_ie_len;
 				pmlmepriv->p2p_beacon_ie_len = 0;
-				rtw_mfree(pmlmepriv->p2p_beacon_ie, free_len);
+				kfree(pmlmepriv->p2p_beacon_ie);
 				pmlmepriv->p2p_beacon_ie = NULL;
 			}
 
@@ -4580,7 +4572,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 			{
 				u32 free_len = pmlmepriv->wfd_beacon_ie_len;
 				pmlmepriv->wfd_beacon_ie_len = 0;
-				rtw_mfree(pmlmepriv->wfd_beacon_ie, free_len);
+				kfree(pmlmepriv->wfd_beacon_ie);
 				pmlmepriv->wfd_beacon_ie = NULL;
 			}
 
@@ -4633,7 +4625,7 @@ static int rtw_cfg80211_set_probe_resp_w
 			{
 				u32 free_len = pmlmepriv->wps_probe_resp_ie_len;
 				pmlmepriv->wps_probe_resp_ie_len = 0;
-				rtw_mfree(pmlmepriv->wps_probe_resp_ie, free_len);
+				kfree(pmlmepriv->wps_probe_resp_ie);
 				pmlmepriv->wps_probe_resp_ie = NULL;
 			}
 
@@ -4697,7 +4689,7 @@ static int rtw_cfg80211_set_probe_resp_w
 				{
 					u32 free_len = pmlmepriv->p2p_probe_resp_ie_len;
 					pmlmepriv->p2p_probe_resp_ie_len = 0;
-					rtw_mfree(pmlmepriv->p2p_probe_resp_ie, free_len);
+					kfree(pmlmepriv->p2p_probe_resp_ie);
 					pmlmepriv->p2p_probe_resp_ie = NULL;
 				}
 
@@ -4716,7 +4708,7 @@ static int rtw_cfg80211_set_probe_resp_w
 				{
 					u32 free_len = pmlmepriv->p2p_go_probe_resp_ie_len;
 					pmlmepriv->p2p_go_probe_resp_ie_len = 0;
-					rtw_mfree(pmlmepriv->p2p_go_probe_resp_ie, free_len);
+					kfree(pmlmepriv->p2p_go_probe_resp_ie);
 					pmlmepriv->p2p_go_probe_resp_ie = NULL;
 				}
 
@@ -4747,7 +4739,7 @@ static int rtw_cfg80211_set_probe_resp_w
 			{
 				u32 free_len = pmlmepriv->wfd_probe_resp_ie_len;
 				pmlmepriv->wfd_probe_resp_ie_len = 0;
-				rtw_mfree(pmlmepriv->wfd_probe_resp_ie, free_len);
+				kfree(pmlmepriv->wfd_probe_resp_ie);
 				pmlmepriv->wfd_probe_resp_ie = NULL;
 			}
 
@@ -4781,7 +4773,7 @@ static int rtw_cfg80211_set_assoc_resp_w
 		{
 			u32 free_len = pmlmepriv->wps_assoc_resp_ie_len;
 			pmlmepriv->wps_assoc_resp_ie_len = 0;
-			rtw_mfree(pmlmepriv->wps_assoc_resp_ie, free_len);
+			kfree(pmlmepriv->wps_assoc_resp_ie);
 			pmlmepriv->wps_assoc_resp_ie = NULL;
 		}
 
@@ -5129,14 +5121,13 @@ int rtw_wdev_alloc(_adapter *padapter, s
 
 	return ret;
 
-	rtw_mfree((u8*)wdev, sizeof(struct wireless_dev));
+	kfree(wdev);
 unregister_wiphy:
 	wiphy_unregister(wiphy);
  free_wiphy:
 	wiphy_free(wiphy);
 exit:
 	return ret;
-
 }
 
 void rtw_wdev_free(struct wireless_dev *wdev)
@@ -5155,7 +5146,7 @@ void rtw_wdev_free(struct wireless_dev *
 
 	wiphy_free(wdev->wiphy);
 
-	rtw_mfree((u8*)wdev, sizeof(struct wireless_dev));
+	kfree(wdev);
 }
 
 void rtw_wdev_unregister(struct wireless_dev *wdev)
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -151,7 +151,7 @@ static void indicate_wx_custom_event(str
 	DBG_8192D("%s %s\n", __func__, buff);
 	wireless_send_event(padapter->pnetdev, IWEVCUSTOM, &wrqu, buff);
 
-	rtw_mfree(buff, IW_CUSTOM_MAX+1);
+	kfree(buff);
 #endif
 }
 
@@ -182,10 +182,7 @@ static void request_wps_pbc_event(struct
 
 	wireless_send_event(padapter->pnetdev, IWEVCUSTOM, &wrqu, buff);
 
-	if (buff)
-	{
-		rtw_mfree(buff, IW_CUSTOM_MAX);
-	}
+	kfree(buff);
 #endif
 }
 
@@ -861,9 +858,7 @@ _func_enter_;
 
 exit:
 
-	if (pwep) {
-		rtw_mfree((u8 *)pwep, wep_total_len);
-	}
+	kfree(pwep);
 
 	_func_exit_;
 
@@ -1034,7 +1029,7 @@ static int rtw_set_wpa_ie(struct rtw_ada
 
 exit:
 
-	if (buf) rtw_mfree(buf, ielen);
+	kfree(buf);
 
 	return ret;
 }
@@ -2962,10 +2957,7 @@ static int rtw_wx_set_enc_ext(struct net
 	ret =  wpa_set_encryption(dev, param, param_len);
 
 
-	if (param)
-	{
-		rtw_mfree((u8*)param, param_len);
-	}
+	kfree(param);
 
 
 	return ret;
@@ -3012,7 +3004,7 @@ static int rtw_wx_read32(struct net_devi
 		return -ENOMEM;
 
 	if (copy_from_user(ptmp, p->pointer, len)) {
-		rtw_mfree(ptmp, len);
+		kfree(ptmp);
 		return -EFAULT;
 	}
 
@@ -3039,7 +3031,7 @@ static int rtw_wx_read32(struct net_devi
 	}
 	DBG_8192D("%s: addr=0x%08X data=%s\n", __func__, addr, extra);
 
-	rtw_mfree(ptmp, len);
+	kfree(ptmp);
 
 	return 0;
 }
@@ -3212,7 +3204,7 @@ static  int rtw_drvext_hdl(struct net_de
 	if (bset)//set info
 	{
 		if (copy_from_user(pparmbuf, p->pointer,len)) {
-			rtw_mfree(pparmbuf, len);
+			kfree(pparmbuf);
 			ret = -EFAULT;
 			goto _rtw_drvext_hdl_exit;
 		}
@@ -3495,10 +3487,7 @@ static int rtw_mp_ioctl_hdl(struct net_d
 
 _rtw_mp_ioctl_hdl_exit:
 
-	if (pparmbuf)
-		rtw_mfree(pparmbuf, len);
-
-	//mutex_unlock(&ioctl_mutex);
+	kfree(pparmbuf);
 
 	return ret;
 }
@@ -5831,10 +5820,7 @@ static int rtw_p2p_get2(struct net_devic
 	}
 
 bad:
-	if (buffer)
-	{
-		_rtw_mfree(buffer, length);
-	}
+	kfree(buffer);
 
 #endif //CONFIG_P2P
 
@@ -6687,7 +6673,7 @@ static int wpa_supplicant_ioctl(struct n
 
 	if (copy_from_user(param, p->pointer, p->length))
 	{
-		rtw_mfree((u8*)param, p->length);
+		kfree(param);
 		ret = -EFAULT;
 		goto out;
 	}
@@ -6721,7 +6707,7 @@ static int wpa_supplicant_ioctl(struct n
 	if (ret == 0 && copy_to_user(p->pointer, param, p->length))
 		ret = -EFAULT;
 
-	rtw_mfree((u8 *)param, p->length);
+	kfree(param);
 
 out:
 
@@ -6746,8 +6732,8 @@ static u8 set_pairwise_key(struct rtw_ad
 	}
 
 	psetstakey_para = (struct set_stakey_parm*)rtw_zmalloc(sizeof(struct set_stakey_parm));
-	if (psetstakey_para==NULL){
-		rtw_mfree((u8 *) ph2c, sizeof(struct cmd_obj));
+	if (psetstakey_para == NULL){
+		kfree(ph2c);
 		res=_FAIL;
 		goto exit;
 	}
@@ -6787,7 +6773,7 @@ static int set_group_key(struct rtw_adap
 	}
 	psetkeyparm=(struct setkey_parm*)rtw_zmalloc(sizeof(struct setkey_parm));
 	if (psetkeyparm==NULL){
-		rtw_mfree((unsigned char *)pcmd, sizeof(struct cmd_obj));
+		kfree(pcmd);
 		res= _FAIL;
 		goto exit;
 	}
@@ -7174,10 +7160,7 @@ static int rtw_set_encryption(struct net
 
 exit:
 
-	if (pwep)
-	{
-		rtw_mfree((u8 *)pwep,wep_total_len);
-	}
+	kfree(pwep);
 
 	return ret;
 
@@ -7509,11 +7492,8 @@ static int rtw_set_wps_beacon(struct net
 	ie_len = len-12-2;// 12 = param header, 2:no packed
 
 
-	if (pmlmepriv->wps_beacon_ie)
-	{
-		rtw_mfree(pmlmepriv->wps_beacon_ie, pmlmepriv->wps_beacon_ie_len);
-		pmlmepriv->wps_beacon_ie = NULL;
-	}
+	kfree(pmlmepriv->wps_beacon_ie);
+	pmlmepriv->wps_beacon_ie = NULL;
 
 	if (ie_len>0)
 	{
@@ -7552,11 +7532,8 @@ static int rtw_set_wps_probe_resp(struct
 	ie_len = len-12-2;// 12 = param header, 2:no packed
 
 
-	if (pmlmepriv->wps_probe_resp_ie)
-	{
-		rtw_mfree(pmlmepriv->wps_probe_resp_ie, pmlmepriv->wps_probe_resp_ie_len);
-		pmlmepriv->wps_probe_resp_ie = NULL;
-	}
+	kfree(pmlmepriv->wps_probe_resp_ie);
+	pmlmepriv->wps_probe_resp_ie = NULL;
 
 	if (ie_len>0)
 	{
@@ -7589,14 +7566,10 @@ static int rtw_set_wps_assoc_resp(struct
 	ie_len = len-12-2;// 12 = param header, 2:no packed
 
 
-	if (pmlmepriv->wps_assoc_resp_ie)
-	{
-		rtw_mfree(pmlmepriv->wps_assoc_resp_ie, pmlmepriv->wps_assoc_resp_ie_len);
-		pmlmepriv->wps_assoc_resp_ie = NULL;
-	}
+	kfree(pmlmepriv->wps_assoc_resp_ie);
+	pmlmepriv->wps_assoc_resp_ie = NULL;
 
-	if (ie_len>0)
-	{
+	if (ie_len > 0) {
 		pmlmepriv->wps_assoc_resp_ie = rtw_malloc(ie_len);
 		pmlmepriv->wps_assoc_resp_ie_len = ie_len;
 		if (pmlmepriv->wps_assoc_resp_ie == NULL) {
@@ -7758,7 +7731,7 @@ static int rtw_hostapd_ioctl(struct net_
 
 	if (copy_from_user(param, p->pointer, p->length))
 	{
-		rtw_mfree((u8*)param, p->length);
+		kfree(param);
 		ret = -EFAULT;
 		goto out;
 	}
@@ -7862,7 +7835,7 @@ static int rtw_hostapd_ioctl(struct net_
 		ret = -EFAULT;
 
 
-	rtw_mfree((u8 *)param, p->length);
+	kfree(param);
 
 out:
 
@@ -7940,7 +7913,7 @@ static int rtw_wx_set_priv(struct net_de
 			{
 				u32 free_len = pmlmepriv->wps_probe_req_ie_len;
 				pmlmepriv->wps_probe_req_ie_len = 0;
-				rtw_mfree(pmlmepriv->wps_probe_req_ie, free_len);
+				kfree(pmlmepriv->wps_probe_req_ie);
 				pmlmepriv->wps_probe_req_ie = NULL;
 			}
 
@@ -10253,8 +10226,7 @@ static int rtw_wowlan_ctrl(struct net_de
 
 
 _rtw_wowlan_ctrl_exit_free:
-	//DBG_8192D("-rtw_wowlan_ctrl(subcode = %d)\n", poidparam->subcode);
-	rtw_mfree(pparmbuf, len);
+	kfree(pparmbuf);
 _rtw_wowlan_ctrl_exit:
 
 
--- a/drivers/staging/rtl8192du/os_dep/mlme_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/mlme_linux.c
@@ -218,8 +218,7 @@ _func_enter_;
 
 		wireless_send_event(adapter->pnetdev,IWEVCUSTOM,&wrqu,buff);
 
-		if(buff)
-		    rtw_mfree(buff, IW_CUSTOM_MAX);
+		kfree(buff);
 
 	}
 
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -2495,8 +2495,7 @@ void rtw_ndev_destructor(struct net_devi
 	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 #ifdef CONFIG_IOCTL_CFG80211
-	if (ndev->ieee80211_ptr)
-		rtw_mfree((u8 *)ndev->ieee80211_ptr, sizeof(struct wireless_dev));
+	kfree(ndev->ieee80211_ptr);
 #endif
 	free_netdev(ndev);
 }
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -108,11 +108,6 @@ u8* _rtw_zmalloc(u32 sz)
 	return pbuf;
 }
 
-void	_rtw_mfree(u8 *pbuf, u32 sz)
-{
-	kfree(pbuf);
-}
-
 int	_rtw_memcmp(void *dst, void *src, u32 sz)
 {
 //under Linux/GNU/GLibc, the return value of memcmp for two same mem. chunk is 0
@@ -789,7 +784,7 @@ void rtw_buf_free(u8 **buf, u32 *buf_len
 
 	if (*buf) {
 		*buf_len = 0;
-		_rtw_mfree(*buf, *buf_len);
+		kfree(*buf);
 		*buf = NULL;
 	}
 }
@@ -824,7 +819,7 @@ keep_ori:
 
 	/* free ori */
 	if (ori && ori_len > 0)
-		_rtw_mfree(ori, ori_len);
+		kfree(ori);
 }
 
 
@@ -918,5 +913,5 @@ struct rtw_cbuf *rtw_cbuf_alloc(u32 size
  */
 void rtw_cbuf_free(struct rtw_cbuf *cbuf)
 {
-	rtw_mfree((u8*)cbuf, sizeof(*cbuf) + sizeof(void*)*cbuf->size);
+	kfree(cbuf);
 }
--- a/drivers/staging/rtl8192du/os_dep/usb_intf.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_intf.c
@@ -284,8 +284,7 @@ static u8 rtw_deinit_intf_priv(struct dv
 	u8 rst = _SUCCESS;
 
 	#ifdef CONFIG_USB_VENDOR_REQ_BUFFER_PREALLOC
-	if(dvobj->usb_vendor_req_buf)
-		rtw_mfree(dvobj->usb_alloc_vendor_req_buf, MAX_USB_IO_CTL_SIZE);
+		kfree(dvobj->usb_alloc_vendor_req_buf);
 	#endif
 
 	#ifdef CONFIG_USB_VENDOR_REQ_MUTEX
@@ -458,7 +457,7 @@ free_dvobj:
 		_rtw_mutex_free(&pdvobjpriv->h2c_fwcmd_mutex);
 		_rtw_mutex_free(&pdvobjpriv->setch_mutex);
 		_rtw_mutex_free(&pdvobjpriv->setbw_mutex);
-		rtw_mfree((u8*)pdvobjpriv, sizeof(*pdvobjpriv));
+		kfree(pdvobjpriv);
 		pdvobjpriv = NULL;
 	}
 exit:
@@ -489,7 +488,7 @@ _func_enter_;
 		_rtw_mutex_free(&dvobj->h2c_fwcmd_mutex);
 		_rtw_mutex_free(&dvobj->setch_mutex);
 		_rtw_mutex_free(&dvobj->setbw_mutex);
-		rtw_mfree((u8*)dvobj, sizeof(*dvobj));
+		kfree(dvobj);
 	}
 
 	//DBG_8192D("%s %d\n", __func__, ATOMIC_READ(&usb_intf->dev.kobj.kref.refcount));
@@ -1209,7 +1208,7 @@ struct rtw_adapter *rtw_usb_if1_init(str
 
 free_hal_data:
 	if(status != _SUCCESS && padapter->HalData)
-		rtw_mfree(padapter->HalData, sizeof(*(padapter->HalData)));
+		kfree(padapter->HalData);
 free_wdev:
 	if(status != _SUCCESS) {
 		#ifdef CONFIG_IOCTL_CFG80211
--- a/drivers/staging/rtl8192du/os_dep/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_ops_linux.c
@@ -64,7 +64,7 @@ static int _usbctrl_vendorreq_async_writ
 
 	urb = usb_alloc_urb(0, GFP_ATOMIC);
 	if (!urb) {
-		rtw_mfree((u8*)buf, sizeof(*buf));
+		kfree(buf);
 		rc = -ENOMEM;
 		goto exit;
 	}
@@ -84,7 +84,7 @@ static int _usbctrl_vendorreq_async_writ
 
 	rc = usb_submit_urb(urb, GFP_ATOMIC);
 	if (rc < 0) {
-		rtw_mfree((u8*)buf, sizeof(*buf));
+		kfree(buf);
 		usb_free_urb(urb);
 	}
 
@@ -193,23 +193,14 @@ static void usb_bulkout_zero_complete(st
 
 	//DBG_8192D("+usb_bulkout_zero_complete\n");
 
-	if(pcontext)
-	{
-		if(pcontext->pbuf)
-		{
-			rtw_mfree(pcontext->pbuf, sizeof(int));
-		}
+	if(pcontext) {
+		kfree(pcontext->pbuf);
 
 		if(pcontext->purb && (pcontext->purb==purb))
-		{
 			usb_free_urb(pcontext->purb);
-		}
 
-
-		rtw_mfree((u8*)pcontext, sizeof(struct zero_bulkout_context));
+		kfree(pcontext);
 	}
-
-
 }
 
 static u32 usb_bulkout_zero(struct intf_hdl *pintfhdl, u32 addr)
--- a/drivers/staging/rtl8192du/os_dep/xmit_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/xmit_linux.c
@@ -182,8 +182,7 @@ void rtw_os_xmit_resource_free(struct rt
 	pxmitbuf->pallocated_buf =  NULL;
 	pxmitbuf->dma_transfer_addr = 0;
 #else	// CONFIG_USE_USB_BUFFER_ALLOC_TX
-	if(pxmitbuf->pallocated_buf)
-		rtw_mfree(pxmitbuf->pallocated_buf, free_sz);
+	kfree(pxmitbuf->pallocated_buf);
 #endif	// CONFIG_USE_USB_BUFFER_ALLOC_TX
 }
 
