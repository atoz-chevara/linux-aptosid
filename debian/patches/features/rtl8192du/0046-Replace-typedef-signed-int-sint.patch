From cc84ae4f995993aa627464a16db61e0fdcc9f01f Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 20 Apr 2013 13:59:16 -0500
Subject: [PATCH 046/210] Replace "typedef signed int sint"

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c           |   6 +-
 core/rtw_cmd.c          |  10 +--
 core/rtw_ieee80211.c    |   6 +-
 core/rtw_ioctl_set.c    |   2 +-
 core/rtw_mlme.c         |  28 +++----
 core/rtw_mlme_ext.c     |  10 +--
 core/rtw_pwrctrl.c      |   2 +-
 core/rtw_recv.c         | 197 ++++++++++--------------------------------------
 core/rtw_security.c     |  88 ++++++++++-----------
 core/rtw_tdls.c         |  32 ++++----
 core/rtw_xmit.c         |  38 +++++-----
 hal/rtl8192du_xmit.c    |   4 +-
 include/basic_types.h   |   2 -
 include/cmd_osdep.h     |   6 +-
 include/ieee80211.h     |   4 +-
 include/osdep_service.h |   2 +-
 include/recv_osdep.h    |   2 +-
 include/rtw_cmd.h       |   3 +-
 include/rtw_mlme.h      |  30 ++++----
 include/rtw_mlme_ext.h  |   4 +-
 include/rtw_mp.h        |   4 +-
 include/rtw_recv.h      |  36 ++++-----
 include/rtw_tdls.h      |  18 ++---
 include/rtw_xmit.h      |  28 +++----
 include/xmit_osdep.h    |   2 +-
 os_dep/ioctl_cfg80211.c |   2 +-
 os_dep/ioctl_linux.c    |   6 +-
 os_dep/usb_intf.c       |   2 +-
 os_dep/xmit_linux.c     |   2 +-
 29 files changed, 228 insertions(+), 348 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -110,7 +110,7 @@ static void update_BCNTIM(_adapter *pada
 
 			premainder_ie = p+tim_ielen;
 
-			tim_ie_offset = (sint)(p -pie);
+			tim_ie_offset = (int)(p -pie);
 
 			remainder_ielen = pnetwork_mlmeext->IELength - tim_ie_offset - tim_ielen;
 
@@ -240,7 +240,7 @@ void rtw_add_bcn_ie(_adapter *padapter,
 
 		premainder_ie = p+ielen;
 
-		ie_offset = (sint)(p -pie);
+		ie_offset = (int)(p -pie);
 
 		remainder_ielen = pnetwork->IELength - ie_offset - ielen;
 
@@ -288,7 +288,7 @@ void rtw_remove_bcn_ie(_adapter *padapte
 
 		premainder_ie = p+ielen;
 
-		ie_offset = (sint)(p -pie);
+		ie_offset = (int)(p -pie);
 
 		remainder_ielen = pnetwork->IELength - ie_offset - ielen;
 
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -34,9 +34,9 @@ Caller and the rtw_cmd_thread can protec
 No irqsave is necessary.
 */
 
-sint	_rtw_init_cmd_priv (struct	cmd_priv *pcmdpriv)
+int	_rtw_init_cmd_priv (struct	cmd_priv *pcmdpriv)
 {
-	sint res=_SUCCESS;
+	int res=_SUCCESS;
 
 _func_enter_;
 
@@ -77,9 +77,9 @@ _func_exit_;
 #ifdef CONFIG_C2H_WK
 static void c2h_wk_callback(_workitem *work);
 #endif
-sint _rtw_init_evt_priv(struct evt_priv *pevtpriv)
+int _rtw_init_evt_priv(struct evt_priv *pevtpriv)
 {
-	sint res=_SUCCESS;
+	int res=_SUCCESS;
 
 _func_enter_;
 
@@ -186,7 +186,7 @@ ISR/Call-Back functions can't call this
 
 */
 
-sint	_rtw_enqueue_cmd(_queue *queue, struct cmd_obj *obj)
+int	_rtw_enqueue_cmd(_queue *queue, struct cmd_obj *obj)
 {
 	_irqL irqL;
 
--- a/drivers/staging/rtl8192du/core/rtw_ieee80211.c
+++ b/drivers/staging/rtl8192du/core/rtw_ieee80211.c
@@ -147,7 +147,7 @@ u8 *rtw_set_fixed_ie(unsigned char *pbuf
 u8 *rtw_set_ie
 (
 	u8 *pbuf,
-	sint index,
+	int index,
 	uint len,
 	u8 *source,
 	uint *frlen //frame length
@@ -223,9 +223,9 @@ inline u8 *rtw_set_ie_mesh_ch_switch_par
 /*----------------------------------------------------------------------------
 index: the information element id index, limit is the limit for search
 -----------------------------------------------------------------------------*/
-u8 *rtw_get_ie(u8 *pbuf, sint index, sint *len, sint limit)
+u8 *rtw_get_ie(u8 *pbuf, int index, int *len, int limit)
 {
-	sint tmp,i;
+	int tmp,i;
 	u8 *p;
 _func_enter_;
 	if (limit < 1){
--- a/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
+++ b/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
@@ -644,7 +644,7 @@ u8 rtw_set_802_11_add_wep(_adapter* pada
 
 	u8		bdefaultkey;
 	u8		btransmitkey;
-	sint		keyid,res;
+	int		keyid,res;
 	struct security_priv* psecuritypriv=&(padapter->securitypriv);
 	u8		ret=_SUCCESS;
 
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -43,13 +43,13 @@ extern unsigned char	MCS_rate_2R[16];
 #endif //CONFIG_DISABLE_MCS13TO15
 extern unsigned char	MCS_rate_1R[16];
 
-sint	_rtw_init_mlme_priv (_adapter* padapter)
+int	_rtw_init_mlme_priv (_adapter* padapter)
 {
-	sint	i;
+	int	i;
 	u8	*pbuf;
 	struct wlan_network	*pnetwork;
 	struct mlme_priv		*pmlmepriv = &padapter->mlmepriv;
-	sint	res = _SUCCESS;
+	int	res = _SUCCESS;
 
 _func_enter_;
 
@@ -164,7 +164,7 @@ _func_enter_;
 _func_exit_;
 }
 
-sint	_rtw_enqueue_network(_queue *queue, struct wlan_network *pnetwork)
+int	_rtw_enqueue_network(_queue *queue, struct wlan_network *pnetwork)
 {
 	_irqL irqL;
 
@@ -414,9 +414,9 @@ _func_exit_;
 
 
 
-sint rtw_if_up(_adapter *padapter)	{
+int rtw_if_up(_adapter *padapter)	{
 
-	sint res;
+	int res;
 _func_enter_;
 
 	if( padapter->bDriverStopped || padapter->bSurpriseRemoved ||
@@ -2538,12 +2538,12 @@ _func_exit_;
 	return ret;
 }
 
-sint rtw_set_auth(_adapter * adapter,struct security_priv *psecuritypriv)
+int rtw_set_auth(_adapter * adapter,struct security_priv *psecuritypriv)
 {
 	struct	cmd_obj* pcmd;
 	struct	setauth_parm *psetauthparm;
 	struct	cmd_priv	*pcmdpriv=&(adapter->cmdpriv);
-	sint		res=_SUCCESS;
+	int		res=_SUCCESS;
 
 _func_enter_;
 
@@ -2585,14 +2585,14 @@ _func_exit_;
 }
 
 
-sint rtw_set_key(_adapter * adapter,struct security_priv *psecuritypriv,sint keyid, u8 set_tx)
+int rtw_set_key(_adapter * adapter,struct security_priv *psecuritypriv,int keyid, u8 set_tx)
 {
 	u8	keylen;
 	struct cmd_obj		*pcmd;
 	struct setkey_parm	*psetkeyparm;
 	struct cmd_priv		*pcmdpriv = &(adapter->cmdpriv);
 	struct mlme_priv		*pmlmepriv = &(adapter->mlmepriv);
-	sint	res=_SUCCESS;
+	int	res=_SUCCESS;
 
 _func_enter_;
 
@@ -2794,7 +2794,7 @@ static int rtw_append_pmkid(_adapter *Ad
 	return (ie_len);
 
 }
-sint rtw_restruct_sec_ie(_adapter *adapter,u8 *in_ie, u8 *out_ie, uint in_len)
+int rtw_restruct_sec_ie(_adapter *adapter,u8 *in_ie, u8 *out_ie, uint in_len)
 {
 	u8 authmode, securitytype, match;
 	u8 sec_ie[255], uncst_oui[4], bkup_ie[255];
@@ -3352,9 +3352,9 @@ void _rtw_roaming(_adapter *padapter, st
 #endif
 
 #ifdef CONFIG_CONCURRENT_MODE
-sint rtw_buddy_adapter_up(_adapter *padapter)
+int rtw_buddy_adapter_up(_adapter *padapter)
 {
-	sint res = false;
+	int res = false;
 
 	if(padapter == NULL)
 		return res;
@@ -3378,7 +3378,7 @@ sint rtw_buddy_adapter_up(_adapter *pada
 
 }
 
-sint check_buddy_fwstate(_adapter *padapter, sint state)
+int check_buddy_fwstate(_adapter *padapter, int state)
 {
 	if(padapter == NULL)
 		return false;
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -5968,7 +5968,7 @@ s32 dump_mgntframe_and_wait_ack(_adapter
 int update_hidden_ssid(u8 *ies, u32 ies_len, u8 hidden_ssid_mode)
 {
 	u8 *ssid_ie;
-	sint ssid_len_ori;
+	int ssid_len_ori;
 	int len_diff = 0;
 
 	ssid_ie = rtw_get_ie(ies,  WLAN_EID_SSID, &ssid_len_ori, ies_len);
@@ -6426,8 +6426,8 @@ void issue_probersp(_adapter *padapter,
 		/* retrieve SSID IE from cur_network->Ssid */
 		{
 			u8 *ssid_ie;
-			sint ssid_ielen;
-			sint ssid_ielen_diff;
+			int ssid_ielen;
+			int ssid_ielen_diff;
 			u8 buf[MAX_IE_SZ];
 			u8 *ies = pmgntframe->buf_addr+TXDESC_OFFSET+sizeof(struct rtw_ieee80211_hdr_3addr);
 
@@ -11597,7 +11597,7 @@ void dc_handle_join_done(_adapter *padap
 	}
 }
 
-sint	dc_check_fwstate(_adapter *padapter, sint fw_state)
+int	dc_check_fwstate(_adapter *padapter, int fw_state)
 {
 	PADAPTER pbuddy_adapter = padapter->pbuddy_adapter;
 	struct mlme_priv *pbuddy_mlmepriv = NULL;
@@ -11878,7 +11878,7 @@ u8	dc_check_xmit(_adapter *padapter)
 #endif
 
 #ifdef CONFIG_CONCURRENT_MODE
-sint check_buddy_mlmeinfo_state(_adapter *padapter, u32 state)
+int check_buddy_mlmeinfo_state(_adapter *padapter, u32 state)
 {
 	PADAPTER pbuddy_adapter;
 	struct mlme_ext_priv *pbuddy_mlmeext;
--- a/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
+++ b/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
@@ -60,7 +60,7 @@ int ips_leave(_adapter * padapter)
 	struct security_priv* psecuritypriv=&(padapter->securitypriv);
 	struct mlme_priv		*pmlmepriv = &(padapter->mlmepriv);
 	int result = _SUCCESS;
-	sint keyid;
+	int keyid;
 	_enter_pwrlock(&pwrpriv->lock);
 	if((pwrpriv->rf_pwrstate == rf_off) &&(!pwrpriv->bips_processing))
 	{
--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -54,13 +54,13 @@ _func_exit_;
 
 }
 
-sint _rtw_init_recv_priv(struct recv_priv *precvpriv, _adapter *padapter)
+int _rtw_init_recv_priv(struct recv_priv *precvpriv, _adapter *padapter)
 {
-	sint i;
+	int i;
 
 	union recv_frame *precvframe;
 
-	sint	res=_SUCCESS;
+	int	res=_SUCCESS;
 
 _func_enter_;
 
@@ -279,7 +279,7 @@ _func_exit_;
 
 
 
-sint _rtw_enqueue_recvframe(union recv_frame *precvframe, _queue *queue)
+int _rtw_enqueue_recvframe(union recv_frame *precvframe, _queue *queue)
 {
 
 	_adapter *padapter=precvframe->u.hdr.adapter;
@@ -303,9 +303,9 @@ _func_exit_;
 	return _SUCCESS;
 }
 
-sint rtw_enqueue_recvframe(union recv_frame *precvframe, _queue *queue)
+int rtw_enqueue_recvframe(union recv_frame *precvframe, _queue *queue)
 {
-	sint ret;
+	int ret;
 	_irqL irqL;
 
 	//_spinlock(&pfree_recv_queue->lock);
@@ -318,7 +318,7 @@ sint rtw_enqueue_recvframe(union recv_fr
 }
 
 /*
-sint	rtw_enqueue_recvframe(union recv_frame *precvframe, _queue *queue)
+int	rtw_enqueue_recvframe(union recv_frame *precvframe, _queue *queue)
 {
 	return rtw_free_recvframe(precvframe, queue);
 }
@@ -377,7 +377,7 @@ u32 rtw_free_uc_swdec_pending_queue(_ada
 }
 
 
-sint rtw_enqueue_recvbuf_to_head(struct recv_buf *precvbuf, _queue *queue)
+int rtw_enqueue_recvbuf_to_head(struct recv_buf *precvbuf, _queue *queue)
 {
 	_irqL irqL;
 
@@ -391,7 +391,7 @@ sint rtw_enqueue_recvbuf_to_head(struct
 	return _SUCCESS;
 }
 
-sint rtw_enqueue_recvbuf(struct recv_buf *precvbuf, _queue *queue)
+int rtw_enqueue_recvbuf(struct recv_buf *precvbuf, _queue *queue)
 {
 	_irqL irqL;
 
@@ -439,10 +439,10 @@ struct recv_buf *rtw_dequeue_recvbuf (_q
 
 }
 
-sint recvframe_chkmic(_adapter *adapter,  union recv_frame *precvframe);
-sint recvframe_chkmic(_adapter *adapter,  union recv_frame *precvframe){
+int recvframe_chkmic(_adapter *adapter,  union recv_frame *precvframe);
+int recvframe_chkmic(_adapter *adapter,  union recv_frame *precvframe){
 
-	sint	i,res=_SUCCESS;
+	int	i,res=_SUCCESS;
 	u32	datalen;
 	u8	miccode[8];
 	u8	bmic_err=false,brpt_micerror = true;
@@ -757,10 +757,10 @@ _func_exit_;
 
 }
 
-sint recv_decache(union recv_frame *precv_frame, u8 bretry, struct stainfo_rxcache *prxcache);
-sint recv_decache(union recv_frame *precv_frame, u8 bretry, struct stainfo_rxcache *prxcache)
+int recv_decache(union recv_frame *precv_frame, u8 bretry, struct stainfo_rxcache *prxcache);
+int recv_decache(union recv_frame *precv_frame, u8 bretry, struct stainfo_rxcache *prxcache)
 {
-	sint tid = precv_frame->u.hdr.attrib.priority;
+	int tid = precv_frame->u.hdr.attrib.priority;
 
 	u16 seq_ctrl = ( (precv_frame->u.hdr.attrib.seq_num&0xffff) << 4) |
 		(precv_frame->u.hdr.attrib.frag_num & 0xf);
@@ -912,10 +912,10 @@ void process_wmmps_data(_adapter *padapt
 }
 
 #ifdef CONFIG_TDLS
-sint OnTDLS(_adapter *adapter, union recv_frame *precv_frame)
+int OnTDLS(_adapter *adapter, union recv_frame *precv_frame)
 {
 	struct rx_pkt_attrib	*pattrib = & precv_frame->u.hdr.attrib;
-	sint ret = _SUCCESS;
+	int ret = _SUCCESS;
 	u8 *paction = get_recvframe_data(precv_frame);
 	u8 category_field = 1;
 #ifdef CONFIG_WFD
@@ -1037,26 +1037,26 @@ void count_rx_stats(_adapter *padapter,
 
 }
 
-sint sta2sta_data_frame(
+int sta2sta_data_frame(
 	_adapter *adapter,
 	union recv_frame *precv_frame,
 	struct sta_info**psta
 );
-sint sta2sta_data_frame(
+int sta2sta_data_frame(
 	_adapter *adapter,
 	union recv_frame *precv_frame,
 	struct sta_info**psta
 )
 {
 	u8 *ptr = precv_frame->u.hdr.rx_data;
-	sint ret = _SUCCESS;
+	int ret = _SUCCESS;
 	struct rx_pkt_attrib *pattrib = & precv_frame->u.hdr.attrib;
 	struct	sta_priv		*pstapriv = &adapter->stapriv;
 	struct	mlme_priv	*pmlmepriv = &adapter->mlmepriv;
 	u8 *mybssid  = get_bssid(pmlmepriv);
 	u8 *myhwaddr = myid(&adapter->eeprompriv);
 	u8 * sta_addr = NULL;
-	sint bmcast = IS_MCAST(pattrib->dst);
+	int bmcast = IS_MCAST(pattrib->dst);
 
 #ifdef CONFIG_TDLS
 	struct tdls_info *ptdlsinfo = &adapter->tdlsinfo;
@@ -1254,23 +1254,23 @@ _func_exit_;
 
 }
 
-sint ap2sta_data_frame(
+int ap2sta_data_frame(
 	_adapter *adapter,
 	union recv_frame *precv_frame,
 	struct sta_info**psta );
-sint ap2sta_data_frame(
+int ap2sta_data_frame(
 	_adapter *adapter,
 	union recv_frame *precv_frame,
 	struct sta_info**psta )
 {
 	u8 *ptr = precv_frame->u.hdr.rx_data;
 	struct rx_pkt_attrib *pattrib = & precv_frame->u.hdr.attrib;
-	sint ret = _SUCCESS;
+	int ret = _SUCCESS;
 	struct	sta_priv		*pstapriv = &adapter->stapriv;
 	struct	mlme_priv	*pmlmepriv = &adapter->mlmepriv;
 	u8 *mybssid  = get_bssid(pmlmepriv);
 	u8 *myhwaddr = myid(&adapter->eeprompriv);
-	sint bmcast = IS_MCAST(pattrib->dst);
+	int bmcast = IS_MCAST(pattrib->dst);
 
 _func_enter_;
 
@@ -1413,11 +1413,11 @@ _func_exit_;
 
 }
 
-sint sta2ap_data_frame(
+int sta2ap_data_frame(
 	_adapter *adapter,
 	union recv_frame *precv_frame,
 	struct sta_info**psta );
-sint sta2ap_data_frame(
+int sta2ap_data_frame(
 	_adapter *adapter,
 	union recv_frame *precv_frame,
 	struct sta_info**psta )
@@ -1427,7 +1427,7 @@ sint sta2ap_data_frame(
 	struct	sta_priv		*pstapriv = &adapter->stapriv;
 	struct	mlme_priv	*pmlmepriv = &adapter->mlmepriv;
 	unsigned char *mybssid  = get_bssid(pmlmepriv);
-	sint ret=_SUCCESS;
+	int ret=_SUCCESS;
 
 _func_enter_;
 
@@ -1485,8 +1485,8 @@ _func_exit_;
 
 }
 
-sint validate_recv_ctrl_frame(_adapter *padapter, union recv_frame *precv_frame);
-sint validate_recv_ctrl_frame(_adapter *padapter, union recv_frame *precv_frame)
+int validate_recv_ctrl_frame(_adapter *padapter, union recv_frame *precv_frame);
+int validate_recv_ctrl_frame(_adapter *padapter, union recv_frame *precv_frame)
 {
 #ifdef CONFIG_AP_MODE
 	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
@@ -1645,8 +1645,8 @@ sint validate_recv_ctrl_frame(_adapter *
 }
 
 union recv_frame* recvframe_chk_defrag(PADAPTER padapter, union recv_frame *precv_frame);
-sint validate_recv_mgnt_frame(PADAPTER padapter, union recv_frame *precv_frame);
-sint validate_recv_mgnt_frame(PADAPTER padapter, union recv_frame *precv_frame)
+int validate_recv_mgnt_frame(PADAPTER padapter, union recv_frame *precv_frame);
+int validate_recv_mgnt_frame(PADAPTER padapter, union recv_frame *precv_frame)
 {
 	RT_TRACE(_module_rtl871x_recv_c_, _drv_info_, ("+validate_recv_mgnt_frame\n"));
 
@@ -1683,7 +1683,7 @@ sint validate_recv_mgnt_frame(PADAPTER p
 
 }
 
-sint validate_recv_data_frame(_adapter *adapter, union recv_frame *precv_frame)
+int validate_recv_data_frame(_adapter *adapter, union recv_frame *precv_frame)
 {
 	u8 bretry;
 	u8 *psa, *pda, *pbssid;
@@ -1691,7 +1691,7 @@ sint validate_recv_data_frame(_adapter *
 	u8 *ptr = precv_frame->u.hdr.rx_data;
 	struct rx_pkt_attrib	*pattrib = & precv_frame->u.hdr.attrib;
 	struct security_priv	*psecuritypriv = &adapter->securitypriv;
-	sint ret = _SUCCESS;
+	int ret = _SUCCESS;
 #ifdef CONFIG_TDLS
 	struct tdls_info *ptdlsinfo = &adapter->tdlsinfo;
 #endif //CONFIG_TDLS
@@ -1835,8 +1835,8 @@ _func_exit_;
 	return ret;
 }
 
-sint validate_recv_frame(_adapter *adapter, union recv_frame *precv_frame);
-sint validate_recv_frame(_adapter *adapter, union recv_frame *precv_frame)
+int validate_recv_frame(_adapter *adapter, union recv_frame *precv_frame);
+int validate_recv_frame(_adapter *adapter, union recv_frame *precv_frame)
 {
 	//shall check frame subtype, to / from ds, da, bssid
 
@@ -1844,7 +1844,7 @@ sint validate_recv_frame(_adapter *adapt
 
 	u8 type;
 	u8 subtype;
-	sint retval = _SUCCESS;
+	int retval = _SUCCESS;
 
 	struct rx_pkt_attrib *pattrib = & precv_frame->u.hdr.attrib;
 
@@ -1934,20 +1934,17 @@ _func_exit_;
 	return retval;
 }
 
-
 //remove the wlanhdr and add the eth_hdr
-#if 1
 
-sint wlanhdr_to_ethhdr ( union recv_frame *precvframe);
-sint wlanhdr_to_ethhdr ( union recv_frame *precvframe)
+int wlanhdr_to_ethhdr ( union recv_frame *precvframe)
 {
-	sint	rmv_len;
+	int	rmv_len;
 	u16	eth_type, len;
 	u8	bsnaphdr;
 	u8	*psnap_type;
 	struct ieee80211_snap_hdr	*psnap;
 
-	sint ret=_SUCCESS;
+	int ret=_SUCCESS;
 	_adapter			*adapter =precvframe->u.hdr.adapter;
 	struct mlme_priv	*pmlmepriv = &adapter->mlmepriv;
 
@@ -2015,120 +2012,6 @@ _func_exit_;
 
 }
 
-#else
-
-sint wlanhdr_to_ethhdr ( union recv_frame *precvframe)
-{
-	sint rmv_len;
-	u16 eth_type;
-	u8	bsnaphdr;
-	u8	*psnap_type;
-	struct ieee80211_snap_hdr	*psnap;
-
-	sint ret=_SUCCESS;
-	_adapter	*adapter =precvframe->u.hdr.adapter;
-	struct	mlme_priv	*pmlmepriv = &adapter->mlmepriv;
-
-	u8* ptr = get_recvframe_data(precvframe) ; // point to frame_ctrl field
-	struct rx_pkt_attrib *pattrib = & precvframe->u.hdr.attrib;
-	struct _vlan *pvlan = NULL;
-
-_func_enter_;
-
-	psnap=(struct ieee80211_snap_hdr	*)(ptr+pattrib->hdrlen + pattrib->iv_len);
-	psnap_type=ptr+pattrib->hdrlen + pattrib->iv_len+SNAP_SIZE;
-	if (psnap->dsap==0xaa && psnap->ssap==0xaa && psnap->ctrl==0x03)
-	{
-		if (_rtw_memcmp(psnap->oui, oui_rfc1042, WLAN_IEEE_OUI_LEN))
-			bsnaphdr=true;//wlan_pkt_format = WLAN_PKT_FORMAT_SNAP_RFC1042;
-		else if (_rtw_memcmp(psnap->oui, SNAP_HDR_APPLETALK_DDP, WLAN_IEEE_OUI_LEN) &&
-			_rtw_memcmp(psnap_type, SNAP_ETH_TYPE_APPLETALK_DDP, 2) )
-			bsnaphdr=true;	//wlan_pkt_format = WLAN_PKT_FORMAT_APPLETALK;
-		else if (_rtw_memcmp( psnap->oui, oui_8021h, WLAN_IEEE_OUI_LEN))
-			bsnaphdr=true;	//wlan_pkt_format = WLAN_PKT_FORMAT_SNAP_TUNNEL;
-		else {
-			RT_TRACE(_module_rtl871x_recv_c_,_drv_err_,("drop pkt due to invalid frame format!\n"));
-			ret= _FAIL;
-			goto exit;
-		}
-
-	} else
-		bsnaphdr=false;//wlan_pkt_format = WLAN_PKT_FORMAT_OTHERS;
-
-	rmv_len = pattrib->hdrlen + pattrib->iv_len +(bsnaphdr?SNAP_SIZE:0);
-	RT_TRACE(_module_rtl871x_recv_c_,_drv_info_,("===pattrib->hdrlen: %x,  pattrib->iv_len:%x ===\n", pattrib->hdrlen,  pattrib->iv_len));
-
-	if (check_fwstate(pmlmepriv, WIFI_MP_STATE) == true)
-	{
-		ptr += rmv_len ;
-		*ptr = 0x87;
-		*(ptr+1) = 0x12;
-
-		//back to original pointer
-		ptr -= rmv_len;
-	}
-
-	ptr += rmv_len ;
-
-	_rtw_memcpy(&eth_type, ptr, 2);
-	eth_type= ntohs((unsigned short )eth_type); //pattrib->ether_type
-	ptr +=2;
-
-	if(pattrib->encrypt){
-		recvframe_pull_tail(precvframe, pattrib->icv_len);
-	}
-
-	if(eth_type == 0x8100) //vlan
-	{
-		pvlan = (struct _vlan *) ptr;
-
-		//eth_type = get_vlan_encap_proto(pvlan);
-		//eth_type = pvlan->h_vlan_encapsulated_proto;//?
-		rmv_len += 4;
-		ptr+=4;
-	}
-
-	if(eth_type==0x0800)//ip
-	{
-		//struct iphdr*  piphdr = (struct iphdr*) ptr;
-		//__u8 tos = (unsigned char)(pattrib->priority & 0xff);
-
-		//piphdr->tos = tos;
-
-		//if (piphdr->protocol == 0x06)
-		//{
-		//	RT_TRACE(_module_rtl871x_recv_c_,_drv_info_,("@@@===recv tcp len:%d @@@===\n", precvframe->u.hdr.len));
-		//}
-	}
-	else if(eth_type==0x8712)// append rx status for mp test packets
-	{
-		//ptr -= 16;
-		//_rtw_memcpy(ptr, get_rxmem(precvframe), 16);
-	}
-
-	if(eth_type==0x8712)// append rx status for mp test packets
-	{
-		ptr = recvframe_pull(precvframe, (rmv_len-sizeof(struct ethhdr)+2)-24);
-		_rtw_memcpy(ptr, get_rxmem(precvframe), 24);
-		ptr+=24;
-	}
-	else
-		ptr = recvframe_pull(precvframe, (rmv_len-sizeof(struct ethhdr)+2));
-
-	_rtw_memcpy(ptr, pattrib->dst, ETH_ALEN);
-	_rtw_memcpy(ptr+ETH_ALEN, pattrib->src, ETH_ALEN);
-
-	eth_type = htons((unsigned short)eth_type) ;
-	_rtw_memcpy(ptr+12, &eth_type, 2);
-
-exit:
-
-_func_exit_;
-
-	return ret;
-}
-#endif
-
 //perform defrag
 union recv_frame * recvframe_defrag(_adapter *adapter,_queue *defrag_q);
 union recv_frame * recvframe_defrag(_adapter *adapter,_queue *defrag_q)
--- a/drivers/staging/rtl8192du/core/rtw_security.c
+++ b/drivers/staging/rtl8192du/core/rtw_security.c
@@ -98,7 +98,7 @@ _func_enter_;
 _func_exit_;
 }
 
-static sint bcrc32initialized = 0;
+static int bcrc32initialized = 0;
 static u32 crc32_table[256];
 
 
@@ -113,7 +113,7 @@ _func_enter_;
 	if (bcrc32initialized == 1)
 		goto exit;
 	else{
-		sint i, j;
+		int i, j;
 		u32 c;
 		u8 *p=(u8 *)&c, *p1;
 		u8 k;
@@ -139,7 +139,7 @@ exit:
 _func_exit_;
 }
 
-static u32 getcrc32(u8 *buf, sint len)
+static u32 getcrc32(u8 *buf, int len)
 {
 	u8 *p;
 	u32  crc;
@@ -166,7 +166,7 @@ void rtw_wep_encrypt(_adapter *padapter,
 	unsigned char	crc[4];
 	struct arc4context	 mycontext;
 
-	sint	curfragnum,length;
+	int	curfragnum,length;
 	u32	keylength;
 
 	u8	*pframe, *payload,*iv;    //,*wepkey
@@ -238,7 +238,7 @@ void rtw_wep_decrypt(_adapter  *padapter
 	// exclude ICV
 	u8	crc[4];
 	struct arc4context	 mycontext;
-	sint	length;
+	int	length;
 	u32	keylength;
 	u8	*pframe, *payload,*iv,wepkey[16];
 	u8	 keyindex;
@@ -547,7 +547,7 @@ static const unsigned short Sbox1[2][256
 */
 static void phase1(u16 *p1k,const u8 *tk,const u8 *ta,u32 iv32)
 {
-	sint  i;
+	int  i;
 _func_enter_;
 	/* Initialize the 80 bits of P1K[] from IV32 and TA[0..5]     */
 	p1k[0]      = Lo16(iv32);
@@ -596,7 +596,7 @@ _func_exit_;
 */
 static void phase2(u8 *rc4key,const u8 *tk,const u16 *p1k,u16 iv16)
 {
-	sint  i;
+	int  i;
 	u16 PPK[6];                          /* temporary key for mixing    */
 _func_enter_;
 	/* Note: all adds in the PPK[] equations below are mod 2**16         */
@@ -649,7 +649,7 @@ u32	rtw_tkip_encrypt(_adapter *padapter,
 	u8   ttkey[16];
 	u8	crc[4];
 	struct arc4context mycontext;
-	sint			curfragnum,length;
+	int			curfragnum,length;
 	u32	prwskeylen;
 
 	u8	*pframe, *payload,*iv,*prwskey;
@@ -756,7 +756,7 @@ u32 rtw_tkip_decrypt(_adapter *padapter,
 	u8   ttkey[16];
 	u8	crc[4];
 	struct arc4context mycontext;
-	sint			length;
+	int			length;
 	u32	prwskeylen;
 
 	u8	*pframe, *payload,*iv,*prwskey;
@@ -890,38 +890,38 @@ exit:
 static void bitwise_xor(u8 *ina, u8 *inb, u8 *out);
 static void construct_mic_iv(
                         u8 *mic_header1,
-                        sint qc_exists,
-                        sint a4_exists,
+                        int qc_exists,
+                        int a4_exists,
                         u8 *mpdu,
                         uint payload_length,
                         u8 * pn_vector);
 static void construct_mic_header1(
                         u8 *mic_header1,
-                        sint header_length,
+                        int header_length,
                         u8 *mpdu);
 static void construct_mic_header2(
                     u8 *mic_header2,
                     u8 *mpdu,
-                    sint a4_exists,
-                    sint qc_exists);
+                    int a4_exists,
+                    int qc_exists);
 static void construct_ctr_preload(
                         u8 *ctr_preload,
-                        sint a4_exists,
-                        sint qc_exists,
+                        int a4_exists,
+                        int qc_exists,
                         u8 *mpdu,
                         u8 *pn_vector,
-                        sint c);
+                        int c);
 static void xor_128(u8 *a, u8 *b, u8 *out);
 static void xor_32(u8 *a, u8 *b, u8 *out);
 static u8 sbox(u8 a);
-static void next_key(u8 *key, sint round);
+static void next_key(u8 *key, int round);
 static void byte_sub(u8 *in, u8 *out);
 static void shift_row(u8 *in, u8 *out);
 static void mix_column(u8 *in, u8 *out);
 static void add_round_key( u8 *shiftrow_in,
                     u8 *mcol_in,
                     u8 *block_in,
-                    sint round,
+                    int round,
                     u8 *out);
 static void aes128k128d(u8 *key, u8 *data, u8 *ciphertext);
 
@@ -933,7 +933,7 @@ static void aes128k128d(u8 *key, u8 *dat
 /****************************************/
 static void xor_128(u8 *a, u8 *b, u8 *out)
 {
-    sint i;
+    int i;
 _func_enter_;
     for (i=0;i<16; i++)
     {
@@ -945,7 +945,7 @@ _func_exit_;
 
 static void xor_32(u8 *a, u8 *b, u8 *out)
 {
-    sint i;
+    int i;
 _func_enter_;
     for (i=0;i<4; i++)
     {
@@ -957,11 +957,11 @@ _func_exit_;
 
 static u8 sbox(u8 a)
 {
-    return sbox_table[(sint)a];
+    return sbox_table[(int)a];
 }
 
 
-static void next_key(u8 *key, sint round)
+static void next_key(u8 *key, int round)
 {
     u8 rcon;
     u8 sbox_key[4];
@@ -990,7 +990,7 @@ _func_exit_;
 
 static void byte_sub(u8 *in, u8 *out)
 {
-    sint i;
+    int i;
 _func_enter_;
     for (i=0; i< 16; i++)
     {
@@ -1025,7 +1025,7 @@ _func_exit_;
 
 static void mix_column(u8 *in, u8 *out)
 {
-    sint i;
+    int i;
     u8 add1b[4];
     u8 add1bf7[4];
     u8 rotl[4];
@@ -1088,8 +1088,8 @@ _func_exit_;
 
 static void aes128k128d(u8 *key, u8 *data, u8 *ciphertext)
 {
-    sint round;
-    sint i;
+    int round;
+    int i;
     u8 intermediatea[16];
     u8 intermediateb[16];
     u8 round_key[16];
@@ -1131,14 +1131,14 @@ _func_exit_;
 /************************************************/
 static void construct_mic_iv(
                         u8 *mic_iv,
-                        sint qc_exists,
-                        sint a4_exists,
+                        int qc_exists,
+                        int a4_exists,
                         u8 *mpdu,
                         uint payload_length,
                         u8 *pn_vector
                         )
 {
-    sint i;
+    int i;
 _func_enter_;
     mic_iv[0] = 0x59;
     if (qc_exists && a4_exists) mic_iv[1] = mpdu[30] & 0x0f;    /* QoS_TC           */
@@ -1166,7 +1166,7 @@ _func_exit_;
 /************************************************/
 static void construct_mic_header1(
                         u8 *mic_header1,
-                        sint header_length,
+                        int header_length,
                         u8 *mpdu
                         )
 {
@@ -1199,11 +1199,11 @@ _func_exit_;
 static void construct_mic_header2(
                 u8 *mic_header2,
                 u8 *mpdu,
-                sint a4_exists,
-                sint qc_exists
+                int a4_exists,
+                int qc_exists
                 )
 {
-    sint i;
+    int i;
 _func_enter_;
     for (i = 0; i<16; i++) mic_header2[i]=0x00;
 
@@ -1250,14 +1250,14 @@ _func_exit_;
 /************************************************/
 static void construct_ctr_preload(
                         u8 *ctr_preload,
-                        sint a4_exists,
-                        sint qc_exists,
+                        int a4_exists,
+                        int qc_exists,
                         u8 *mpdu,
                         u8 *pn_vector,
-                        sint c
+                        int c
                         )
 {
-    sint i = 0;
+    int i = 0;
 _func_enter_;
     for (i=0; i<16; i++) ctr_preload[i] = 0x00;
     i = 0;
@@ -1289,7 +1289,7 @@ _func_exit_;
 /************************************/
 static void bitwise_xor(u8 *ina, u8 *inb, u8 *out)
 {
-    sint i;
+    int i;
 _func_enter_;
     for (i=0; i<16; i++)
     {
@@ -1299,7 +1299,7 @@ _func_exit_;
 }
 
 
-static sint aes_cipher(u8 *key, uint	hdrlen,
+static int aes_cipher(u8 *key, uint	hdrlen,
 			u8 *pframe, uint plen)
 {
 //	/*static*/ unsigned char	message[MAX_MSG_SIZE];
@@ -1501,7 +1501,7 @@ u32	rtw_aes_encrypt(_adapter *padapter,
 //	unsigned char	message[MAX_MSG_SIZE];
 
 	/* Intermediate Buffers */
-	sint	curfragnum,length;
+	int	curfragnum,length;
 	u32	prwskeylen;
 	u8	*pframe,*prwskey;	//, *payload,*iv
 	struct	sta_info		*stainfo;
@@ -1593,13 +1593,13 @@ _func_exit_;
 		return res;
 }
 
-static sint aes_decipher(u8 *key, uint	hdrlen,
+static int aes_decipher(u8 *key, uint	hdrlen,
 			u8 *pframe, uint plen)
 {
 	static u8	message[MAX_MSG_SIZE];
 	uint	qc_exists, a4_exists, i, j, payload_remainder,
 			num_blocks, payload_index;
-	sint res = _SUCCESS;
+	int res = _SUCCESS;
 	u8 pn_vector[6];
 	u8 mic_iv[16];
 	u8 mic_header1[16];
@@ -1880,7 +1880,7 @@ u32	rtw_aes_decrypt(_adapter *padapter,
 	/* Intermediate Buffers */
 
 
-	sint		length;
+	int	length;
 	u8	*pframe,*prwskey;	//, *payload,*iv
 	struct	sta_info		*stainfo;
 	struct	rx_pkt_attrib	 *prxattrib = &((union recv_frame *)precvframe)->u.hdr.attrib;
--- a/drivers/staging/rtl8192du/core/rtw_tdls.c
+++ b/drivers/staging/rtl8192du/core/rtw_tdls.c
@@ -138,7 +138,7 @@ s32 update_tdls_attrib(_adapter *padapte
 	struct qos_priv		*pqospriv= &pmlmepriv->qospriv;
 
 	s32 res=_SUCCESS;
-	sint bmcast;
+	int bmcast;
 
 	bmcast = IS_MCAST(pattrib->ra);
 
@@ -1009,7 +1009,7 @@ exit:
 	return;
 }
 
-sint On_TDLS_Dis_Rsp(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Dis_Rsp(_adapter *adapter, union recv_frame *precv_frame)
 {
 	struct sta_info *ptdls_sta = NULL, *psta = rtw_get_stainfo(&(adapter->stapriv), get_bssid(&(adapter->mlmepriv)));
 	struct recv_priv *precvpriv = &(adapter->recvpriv);
@@ -1085,7 +1085,7 @@ sint On_TDLS_Dis_Rsp(_adapter *adapter,
 	return _SUCCESS;
 }
 
-sint On_TDLS_Setup_Req(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Setup_Req(_adapter *adapter, union recv_frame *precv_frame)
 {
 	struct tdls_info *ptdlsinfo = &adapter->tdlsinfo;
 	u8 *psa, *pmyid;
@@ -1102,7 +1102,7 @@ sint On_TDLS_Setup_Req(_adapter *adapter
 	u16 j;
 	u8 SNonce[32];
 	u32 *timeout_interval;
-	sint parsing_length;	//frame body length, without icv_len
+	int parsing_length;	//frame body length, without icv_len
 	PNDIS_802_11_VARIABLE_IEs	pIE;
 	u8 FIXED_IE = 5;
 	unsigned char		supportRate[16];
@@ -1304,7 +1304,7 @@ exit:
 	return _FAIL;
 }
 
-sint On_TDLS_Setup_Rsp(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Setup_Rsp(_adapter *adapter, union recv_frame *precv_frame)
 {
 	struct tdls_info *ptdlsinfo = &adapter->tdlsinfo;
 	struct sta_info *ptdls_sta= NULL;
@@ -1314,7 +1314,7 @@ sint On_TDLS_Setup_Rsp(_adapter *adapter
 	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
 	u8 *psa;
 	u16 stat_code;
-	sint parsing_length;	//frame body length, without icv_len
+	int parsing_length;	//frame body length, without icv_len
 	PNDIS_802_11_VARIABLE_IEs	pIE;
 	u8 FIXED_IE =7;
 	u8  *pftie, *ptimeout_ie, *plinkid_ie, *prsnie, *pftie_mic, *ppairwise_cipher;
@@ -1479,7 +1479,7 @@ sint On_TDLS_Setup_Rsp(_adapter *adapter
 
 }
 
-sint On_TDLS_Setup_Cfm(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Setup_Cfm(_adapter *adapter, union recv_frame *precv_frame)
 {
 	struct tdls_info *ptdlsinfo = &adapter->tdlsinfo;
 	struct sta_info *ptdls_sta= NULL;
@@ -1489,7 +1489,7 @@ sint On_TDLS_Setup_Cfm(_adapter *adapter
 	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
 	u8 *psa;
 	u16 stat_code;
-	sint parsing_length;
+	int parsing_length;
 	PNDIS_802_11_VARIABLE_IEs	pIE;
 	u8 FIXED_IE =5;
 	u8  *pftie, *ptimeout_ie, *plinkid_ie, *prsnie, *pftie_mic, *ppairwise_cipher;
@@ -1574,13 +1574,13 @@ sint On_TDLS_Setup_Cfm(_adapter *adapter
 
 }
 
-sint On_TDLS_Dis_Req(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Dis_Req(_adapter *adapter, union recv_frame *precv_frame)
 {
 	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
 	struct sta_priv *pstapriv = &adapter->stapriv;
 	struct sta_info *psta_ap;
 	u8 *ptr = precv_frame->u.hdr.rx_data;
-	sint parsing_length;	//frame body length, without icv_len
+	int parsing_length;	//frame body length, without icv_len
 	PNDIS_802_11_VARIABLE_IEs	pIE;
 	u8 FIXED_IE = 3, *dst, *pdialog = NULL;
 	u16 j;
@@ -1634,7 +1634,7 @@ exit:
 
 }
 
-sint On_TDLS_Teardown(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Teardown(_adapter *adapter, union recv_frame *precv_frame)
 {
 	u8 *psa;
 	u8 *ptr = precv_frame->u.hdr.rx_data;
@@ -1673,7 +1673,7 @@ u8 TDLS_check_ch_state(uint state){
 }
 
 //we process buffered data for 1. U-APSD, 2. ch. switch, 3. U-APSD + ch. switch here
-sint On_TDLS_Peer_Traffic_Rsp(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Peer_Traffic_Rsp(_adapter *adapter, union recv_frame *precv_frame)
 {
 	struct tdls_info *ptdlsinfo = &adapter->tdlsinfo;
 	struct mlme_ext_priv *pmlmeext = &adapter->mlmeextpriv;
@@ -1768,14 +1768,14 @@ sint On_TDLS_Peer_Traffic_Rsp(_adapter *
 	return _FAIL;
 }
 
-sint On_TDLS_Ch_Switch_Req(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Ch_Switch_Req(_adapter *adapter, union recv_frame *precv_frame)
 {
 	struct sta_info *ptdls_sta= NULL;
 	struct sta_priv *pstapriv = &adapter->stapriv;
 	u8 *ptr = precv_frame->u.hdr.rx_data;
 	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
 	u8 *psa;
-	sint parsing_length;
+	int parsing_length;
 	PNDIS_802_11_VARIABLE_IEs	pIE;
 	u8 FIXED_IE =3;
 	u16 j;
@@ -1841,14 +1841,14 @@ sint On_TDLS_Ch_Switch_Req(_adapter *ada
 	return _FAIL;
 }
 
-sint On_TDLS_Ch_Switch_Rsp(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Ch_Switch_Rsp(_adapter *adapter, union recv_frame *precv_frame)
 {
 	struct sta_info *ptdls_sta= NULL;
 	struct sta_priv *pstapriv = &adapter->stapriv;
 	u8 *ptr = precv_frame->u.hdr.rx_data;
 	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
 	u8 *psa;
-	sint parsing_length;
+	int parsing_length;
 	PNDIS_802_11_VARIABLE_IEs	pIE;
 	u8 FIXED_IE =4;
 	u16 stat_code, j, switch_time, switch_timeout;
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -72,7 +72,7 @@ s32	_rtw_init_xmit_priv(struct xmit_priv
 	int i;
 	struct xmit_buf *pxmitbuf;
 	struct xmit_frame *pxframe;
-	sint	res=_SUCCESS;
+	int	res=_SUCCESS;
 
 _func_enter_;
 
@@ -583,12 +583,12 @@ static s32 update_attrib(_adapter *padap
 	struct sta_info *psta = NULL;
 	struct ethhdr etherhdr;
 
-	sint bmcast;
+	int bmcast;
 	struct sta_priv		*pstapriv = &padapter->stapriv;
 	struct security_priv	*psecuritypriv = &padapter->securitypriv;
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct qos_priv		*pqospriv= &pmlmepriv->qospriv;
-	sint res = _SUCCESS;
+	int res = _SUCCESS;
 
  _func_enter_;
 
@@ -838,7 +838,7 @@ _func_exit_;
 }
 
 static s32 xmitframe_addmic(_adapter *padapter, struct xmit_frame *pxmitframe){
-	sint			curfragnum,length;
+	int			curfragnum,length;
 	u8	*pframe, *payload,mic[8];
 	struct	mic_data		micdata;
 	struct	sta_info		*stainfo;
@@ -847,7 +847,7 @@ static s32 xmitframe_addmic(_adapter *pa
 	struct	security_priv	*psecuritypriv=&padapter->securitypriv;
 	struct	xmit_priv		*pxmitpriv=&padapter->xmitpriv;
 	u8 priority[4]={0x0,0x0,0x0,0x0};
-	sint bmcst = IS_MCAST(pattrib->ra);
+	int bmcst = IS_MCAST(pattrib->ra);
 
 	if(pattrib->psta)
 	{
@@ -1018,12 +1018,12 @@ s32 rtw_make_wlanhdr (_adapter *padapter
 	u8 direct_link=0;
 #endif //CONFIG_TDLS
 
-	sint res = _SUCCESS;
+	int res = _SUCCESS;
 	u16 *fctrl = &pwlanhdr->frame_ctl;
 
 	struct sta_info *psta;
 
-	sint bmcst = IS_MCAST(pattrib->ra);
+	int bmcst = IS_MCAST(pattrib->ra);
 
 _func_enter_;
 
@@ -1314,7 +1314,7 @@ s32 rtw_make_tdls_wlanhdr (_adapter *pad
 	struct sta_info *psta=NULL, *ptdls_sta=NULL;
 	u8 tdls_seq=0, baddr[ETH_ALEN] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
 
-	sint res = _SUCCESS;
+	int res = _SUCCESS;
 	u16 *fctrl = &pwlanhdr->frame_ctl;
 
 _func_enter_;
@@ -1768,7 +1768,7 @@ void rtw_update_protection(_adapter *pad
 
 	uint	protection;
 	u8	*perp;
-	sint	 erp_len;
+	int	 erp_len;
 	struct	xmit_priv *pxmitpriv = &padapter->xmitpriv;
 	struct	registry_priv *pregistrypriv = &padapter->registrypriv;
 
@@ -2214,7 +2214,7 @@ static struct xmit_frame *dequeue_one_xm
 	return pxmitframe;
 }
 
-struct xmit_frame* rtw_dequeue_xframe(struct xmit_priv *pxmitpriv, struct hw_xmit *phwxmit_i, sint entry)
+struct xmit_frame* rtw_dequeue_xframe(struct xmit_priv *pxmitpriv, struct hw_xmit *phwxmit_i, int entry)
 {
 	_irqL irqL0;
 	_list *sta_plist, *sta_phead;
@@ -2307,7 +2307,7 @@ _func_exit_;
 	return pxmitframe;
 }
 
-struct tx_servq *rtw_get_sta_pending(_adapter *padapter, struct sta_info *psta, sint up, u8 *ac)
+struct tx_servq *rtw_get_sta_pending(_adapter *padapter, struct sta_info *psta, int up, u8 *ac)
 {
 	struct tx_servq *ptxservq;
 
@@ -2357,7 +2357,7 @@ s32 rtw_xmit_classifier(_adapter *padapt
 	struct pkt_attrib	*pattrib = &pxmitframe->attrib;
 	struct sta_priv	*pstapriv = &padapter->stapriv;
 	struct hw_xmit	*phwxmits =  padapter->xmitpriv.hwxmits;
-	sint res = _SUCCESS;
+	int res = _SUCCESS;
 
 _func_enter_;
 
@@ -2470,9 +2470,9 @@ void rtw_free_hwxmits(_adapter *padapter
 		rtw_mfree((u8 *)hwxmits, (sizeof (struct hw_xmit) * pxmitpriv->hwxmit_entry));
 }
 
-void rtw_init_hwxmits(struct hw_xmit *phwxmit, sint entry)
+void rtw_init_hwxmits(struct hw_xmit *phwxmit, int entry)
 {
-	sint i;
+	int i;
 _func_enter_;
 	for(i = 0; i < entry; i++, phwxmit++)
 	{
@@ -2767,9 +2767,9 @@ s32 rtw_xmit(_adapter *padapter, _pkt **
 }
 
 #ifdef CONFIG_TDLS
-sint xmitframe_enqueue_for_tdls_sleeping_sta(_adapter *padapter, struct xmit_frame *pxmitframe)
+int xmitframe_enqueue_for_tdls_sleeping_sta(_adapter *padapter, struct xmit_frame *pxmitframe)
 {
-	sint ret=false;
+	int ret=false;
 
 	_irqL irqL;
 	struct sta_info *ptdls_sta=NULL;
@@ -2843,15 +2843,15 @@ sint xmitframe_enqueue_for_tdls_sleeping
 
 #if defined(CONFIG_AP_MODE) || defined(CONFIG_TDLS)
 
-sint xmitframe_enqueue_for_sleeping_sta(_adapter *padapter, struct xmit_frame *pxmitframe)
+int xmitframe_enqueue_for_sleeping_sta(_adapter *padapter, struct xmit_frame *pxmitframe)
 {
 	_irqL irqL;
-	sint ret=false;
+	int ret=false;
 	struct sta_info *psta=NULL;
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	struct pkt_attrib *pattrib = &pxmitframe->attrib;
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
-	sint bmcst = IS_MCAST(pattrib->ra);
+	int bmcst = IS_MCAST(pattrib->ra);
 #ifdef CONFIG_TDLS
 	struct tdls_info *ptdlsinfo = &padapter->tdlsinfo;
 
--- a/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
@@ -252,7 +252,7 @@ static s32 update_txdesc(struct xmit_fra
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct pkt_attrib		*pattrib = &pxmitframe->attrib;
 	struct tx_desc		*ptxdesc = (struct tx_desc *)pmem;
-	sint	bmcst = IS_MCAST(pattrib->ra);
+	int	bmcst = IS_MCAST(pattrib->ra);
 #ifdef CONFIG_P2P
 	struct wifidirect_info	*pwdinfo = &padapter->wdinfo;
 	struct registry_priv	*pregistrypriv = &padapter->registrypriv;
@@ -859,7 +859,7 @@ s32 rtl8192du_xmitframe_complete(_adapte
 {
 
 	struct hw_xmit *phwxmits;
-	sint hwentry;
+	int hwentry;
 	struct xmit_frame *pxmitframe=NULL;
 	int res=_SUCCESS, xcnt = 0;
 
--- a/drivers/staging/rtl8192du/include/basic_types.h
+++ b/drivers/staging/rtl8192du/include/basic_types.h
@@ -28,8 +28,6 @@
 
 #include <linux/types.h>
 
-typedef	signed int sint;
-
 typedef void (*proc_t)(void*);
 
 typedef		__kernel_size_t	SIZE_T;
--- a/drivers/staging/rtl8192du/include/cmd_osdep.h
+++ b/drivers/staging/rtl8192du/include/cmd_osdep.h
@@ -25,11 +25,11 @@
 #include <osdep_service.h>
 #include <drv_types.h>
 
-extern sint _rtw_init_cmd_priv (struct	cmd_priv *pcmdpriv);
-extern sint _rtw_init_evt_priv(struct evt_priv *pevtpriv);
+extern int _rtw_init_cmd_priv (struct	cmd_priv *pcmdpriv);
+extern int _rtw_init_evt_priv(struct evt_priv *pevtpriv);
 extern void _rtw_free_evt_priv (struct	evt_priv *pevtpriv);
 extern void _rtw_free_cmd_priv (struct	cmd_priv *pcmdpriv);
-extern sint _rtw_enqueue_cmd(_queue *queue, struct cmd_obj *obj);
+extern int _rtw_enqueue_cmd(_queue *queue, struct cmd_obj *obj);
 extern struct	cmd_obj	*_rtw_dequeue_cmd(_queue *queue);
 
 #endif
--- a/drivers/staging/rtl8192du/include/ieee80211.h
+++ b/drivers/staging/rtl8192du/include/ieee80211.h
@@ -1223,7 +1223,7 @@ ParseRes rtw_ieee802_11_parse_elems(u8 *
 				int show_errors);
 
 u8 *rtw_set_fixed_ie(unsigned char *pbuf, unsigned int len, unsigned char *source, unsigned int *frlen);
-u8 *rtw_set_ie(u8 *pbuf, sint index, uint len, u8 *source, uint *frlen);
+u8 *rtw_set_ie(u8 *pbuf, int index, uint len, u8 *source, uint *frlen);
 
 enum secondary_ch_offset {
 	SCN = 0, /* no secondary channel */
@@ -1236,7 +1236,7 @@ u8 *rtw_set_ie_ch_switch(u8 *buf, u32 *b
 u8 *rtw_set_ie_secondary_ch_offset(u8 *buf, u32 *buf_len, u8 secondary_ch_offset);
 u8 *rtw_set_ie_mesh_ch_switch_parm(u8 *buf, u32 *buf_len, u8 ttl, u8 flags, u16 reason, u16 precedence);
 
-u8 *rtw_get_ie(u8*pbuf, sint index, sint *len, sint limit);
+u8 *rtw_get_ie(u8*pbuf, int index, int *len, int limit);
 u8 *rtw_get_ie_ex(u8 *in_ie, uint in_len, u8 eid, u8 *oui, u8 oui_len, u8 *ie, uint *ielen);
 int rtw_ies_remove_ie(u8 *ies, uint *ies_len, uint offset, u8 eid, u8 *oui, u8 oui_len);
 
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -469,7 +469,7 @@ static inline void flush_signals_thread(
 		flush_signals(current);
 }
 
-static inline _OS_STATUS res_to_status(sint res)
+static inline _OS_STATUS res_to_status(int res)
 {
 	return res;
 }
--- a/drivers/staging/rtl8192du/include/recv_osdep.h
+++ b/drivers/staging/rtl8192du/include/recv_osdep.h
@@ -25,7 +25,7 @@
 #include <drv_types.h>
 
 
-extern sint _rtw_init_recv_priv(struct recv_priv *precvpriv, _adapter *padapter);
+extern int _rtw_init_recv_priv(struct recv_priv *precvpriv, _adapter *padapter);
 extern void _rtw_free_recv_priv (struct recv_priv *precvpriv);
 
 
--- a/drivers/staging/rtl8192du/include/rtw_cmd.h
+++ b/drivers/staging/rtl8192du/include/rtw_cmd.h
@@ -270,8 +270,7 @@ Command-Event Mode
 #define RTW_SSID_SCAN_AMOUNT 9 // for WEXT_CSCAN_AMOUNT 9
 #define RTW_CHANNEL_SCAN_AMOUNT (14+37)
 struct sitesurvey_parm {
-	sint scan_mode;	//active: 1, passive: 0
-	/* sint bsslimit;	// 1 ~ 48 */
+	int scan_mode;	//active: 1, passive: 0
 	u8 ssid_num;
 	u8 ch_num;
 	NDIS_802_11_SSID ssid[RTW_SSID_SCAN_AMOUNT];
--- a/drivers/staging/rtl8192du/include/rtw_mlme.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme.h
@@ -151,7 +151,7 @@ SHALL not lock up more than one locks at
 struct sitesurvey_ctrl {
 	u64	last_tx_pkts;
 	uint	last_rx_pkts;
-	sint	traffic_busy;
+	int	traffic_busy;
 	_timer	sitesurvey_ctrl_timer;
 };
 
@@ -380,7 +380,7 @@ struct tdls_info{
 struct mlme_priv {
 
 	_lock	lock;
-	sint	fw_state;	//shall we protect this variable? maybe not necessarily...
+	int	fw_state;	//shall we protect this variable? maybe not necessarily...
 
 	u8	to_join; //flag
 	#ifdef CONFIG_LAYER2_ROAMING
@@ -587,9 +587,9 @@ extern void _rtw_scan_timeout_handler(vo
 extern void rtw_free_network_queue(_adapter *adapter,u8 isfreeall);
 extern int rtw_init_mlme_priv(_adapter *adapter);// (struct mlme_priv *pmlmepriv);
 extern void rtw_free_mlme_priv (struct mlme_priv *pmlmepriv);
-extern sint rtw_select_and_join_from_scanned_queue(struct mlme_priv *pmlmepriv);
-extern sint rtw_set_key(_adapter *adapter,struct security_priv *psecuritypriv,sint keyid, u8 set_tx);
-extern sint rtw_set_auth(_adapter *adapter,struct security_priv *psecuritypriv);
+extern int rtw_select_and_join_from_scanned_queue(struct mlme_priv *pmlmepriv);
+extern int rtw_set_key(_adapter *adapter,struct security_priv *psecuritypriv,int keyid, u8 set_tx);
+extern int rtw_set_auth(_adapter *adapter,struct security_priv *psecuritypriv);
 
 __inline static u8 *get_bssid(struct mlme_priv *pmlmepriv)
 {	//if sta_mode:pmlmepriv->cur_network.network.MacAddress=> bssid
@@ -597,7 +597,7 @@ __inline static u8 *get_bssid(struct mlm
 	return pmlmepriv->cur_network.network.MacAddress;
 }
 
-__inline static sint check_fwstate(struct mlme_priv *pmlmepriv, sint state)
+__inline static int check_fwstate(struct mlme_priv *pmlmepriv, int state)
 {
 	if (pmlmepriv->fw_state & state)
 		return true;
@@ -605,7 +605,7 @@ __inline static sint check_fwstate(struc
 	return false;
 }
 
-__inline static sint get_fwstate(struct mlme_priv *pmlmepriv)
+__inline static int get_fwstate(struct mlme_priv *pmlmepriv)
 {
 	return pmlmepriv->fw_state;
 }
@@ -617,12 +617,12 @@ __inline static sint get_fwstate(struct
  * ### NOTE:#### (!!!!)
  * MUST TAKE CARE THAT BEFORE CALLING THIS FUNC, YOU SHOULD HAVE LOCKED pmlmepriv->lock
  */
-__inline static void set_fwstate(struct mlme_priv *pmlmepriv, sint state)
+__inline static void set_fwstate(struct mlme_priv *pmlmepriv, int state)
 {
 	pmlmepriv->fw_state |= state;
 }
 
-__inline static void _clr_fwstate_(struct mlme_priv *pmlmepriv, sint state)
+__inline static void _clr_fwstate_(struct mlme_priv *pmlmepriv, int state)
 {
 	pmlmepriv->fw_state &= ~state;
 }
@@ -631,7 +631,7 @@ __inline static void _clr_fwstate_(struc
  * No Limit on the calling context,
  * therefore set it to be the critical section...
  */
-__inline static void clr_fwstate(struct mlme_priv *pmlmepriv, sint state)
+__inline static void clr_fwstate(struct mlme_priv *pmlmepriv, int state)
 {
 	_irqL irqL;
 
@@ -641,7 +641,7 @@ __inline static void clr_fwstate(struct
 	_exit_critical_bh(&pmlmepriv->lock, &irqL);
 }
 
-__inline static void clr_fwstate_ex(struct mlme_priv *pmlmepriv, sint state)
+__inline static void clr_fwstate_ex(struct mlme_priv *pmlmepriv, int state)
 {
 	_irqL irqL;
 
@@ -660,8 +660,8 @@ __inline static void up_scanned_network(
 }
 
 #ifdef CONFIG_CONCURRENT_MODE
-sint rtw_buddy_adapter_up(_adapter *padapter);
-sint check_buddy_fwstate(_adapter *padapter, sint state);
+int rtw_buddy_adapter_up(_adapter *padapter);
+int check_buddy_fwstate(_adapter *padapter, int state);
 #endif //CONFIG_CONCURRENT_MODE
 
 __inline static void down_scanned_network(struct mlme_priv *pmlmepriv)
@@ -673,7 +673,7 @@ __inline static void down_scanned_networ
 	_exit_critical_bh(&pmlmepriv->lock, &irqL);
 }
 
-__inline static void set_scanned_network_val(struct mlme_priv *pmlmepriv, sint val)
+__inline static void set_scanned_network_val(struct mlme_priv *pmlmepriv, int val)
 {
 	_irqL irqL;
 
@@ -741,7 +741,7 @@ extern struct wlan_network* _rtw_find_ne
 
 extern void _rtw_free_network_queue(_adapter* padapter, u8 isfreeall);
 
-extern sint rtw_if_up(_adapter *padapter);
+extern int rtw_if_up(_adapter *padapter);
 
 
 u8 *rtw_get_capability_from_ie(u8 *ie);
--- a/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
@@ -704,7 +704,7 @@ extern void correct_TSF(_adapter *padapt
 
 
 #ifdef CONFIG_CONCURRENT_MODE
- sint check_buddy_mlmeinfo_state(_adapter *padapter, u32 state);
+int check_buddy_mlmeinfo_state(_adapter *padapter, u32 state);
 int concurrent_chk_start_clnt_join(_adapter *padapter);
 void concurrent_chk_joinbss_done(_adapter *padapter, int join_res);
 #endif //CONFIG_CONCURRENT_MODE
@@ -715,7 +715,7 @@ void	dc_SetBWMode(_adapter *padapter, un
 void	dc_set_channel_bwmode_disconnect(_adapter *padapter);
 u8	dc_handle_join_request(_adapter *padapter);
 void	dc_handle_join_done(_adapter *padapter, u8 join_res);
-sint	dc_check_fwstate(_adapter *padapter, sint fw_state);
+int	dc_check_fwstate(_adapter *padapter, int fw_state);
 u8	dc_handle_site_survey(_adapter *padapter);
 void	dc_report_survey_event(_adapter *padapter, union recv_frame *precv_frame);
 void	dc_set_channel_bwmode_survey_done(_adapter *padapter);
--- a/drivers/staging/rtl8192du/include/rtw_mp.h
+++ b/drivers/staging/rtl8192du/include/rtw_mp.h
@@ -104,8 +104,8 @@ struct mp_xmit_frame
 	PURB pxmit_urb[8];
 
 	u8 bpending[8];
-	sint ac_tag[8];
-	sint last[8];
+	int ac_tag[8];
+	int last[8];
 	uint irpcnt;
 	uint fragcnt;
 	uint mem[(MAX_MP_XMITBUF_SZ >> 2)];
--- a/drivers/staging/rtl8192du/include/rtw_recv.h
+++ b/drivers/staging/rtl8192du/include/rtw_recv.h
@@ -286,7 +286,7 @@ struct recv_priv
 struct sta_recv_priv {
 
 	_lock	lock;
-	sint	option;
+	int	option;
 
 	//_queue	blk_strms[MAX_RX_NUMBLKS];
 	_queue defrag_q;	 //keeping the fragment frame until defrag
@@ -405,13 +405,13 @@ extern int rtw_enqueue_recvframe(union r
 extern void rtw_free_recvframe_queue(_queue *pframequeue,  _queue *pfree_recv_queue);
 u32 rtw_free_uc_swdec_pending_queue(_adapter *adapter);
 
-sint rtw_enqueue_recvbuf_to_head(struct recv_buf *precvbuf, _queue *queue);
-sint rtw_enqueue_recvbuf(struct recv_buf *precvbuf, _queue *queue);
+int rtw_enqueue_recvbuf_to_head(struct recv_buf *precvbuf, _queue *queue);
+int rtw_enqueue_recvbuf(struct recv_buf *precvbuf, _queue *queue);
 struct recv_buf *rtw_dequeue_recvbuf (_queue *queue);
 
 void rtw_reordering_ctrl_timeout_handler(void *pcontext);
 
-__inline static u8 *get_rxmem(union recv_frame *precvframe)
+static inline u8 *get_rxmem(union recv_frame *precvframe)
 {
 	//always return rx_head...
 	if(precvframe==NULL)
@@ -420,14 +420,14 @@ __inline static u8 *get_rxmem(union recv
 	return precvframe->u.hdr.rx_head;
 }
 
-__inline static u8 *get_rx_status(union recv_frame *precvframe)
+static inline u8 *get_rx_status(union recv_frame *precvframe)
 {
 
 	return get_rxmem(precvframe);
 
 }
 
-__inline static u8 *get_recvframe_data(union recv_frame *precvframe)
+static inline u8 *get_recvframe_data(union recv_frame *precvframe)
 {
 
 	//alwasy return rx_data
@@ -438,7 +438,7 @@ __inline static u8 *get_recvframe_data(u
 
 }
 
-__inline static u8 *recvframe_push(union recv_frame *precvframe, sint sz)
+static inline u8 *recvframe_push(union recv_frame *precvframe, int sz)
 {
 	// append data before rx_data
 
@@ -466,7 +466,7 @@ __inline static u8 *recvframe_push(union
 }
 
 
-__inline static u8 *recvframe_pull(union recv_frame *precvframe, sint sz)
+static inline u8 *recvframe_pull(union recv_frame *precvframe, int sz)
 {
 	// rx_data += sz; move rx_data sz bytes  hereafter
 
@@ -491,7 +491,7 @@ __inline static u8 *recvframe_pull(union
 
 }
 
-__inline static u8 *recvframe_put(union recv_frame *precvframe, sint sz)
+static inline u8 *recvframe_put(union recv_frame *precvframe, int sz)
 {
 	// rx_tai += sz; move rx_tail sz bytes  hereafter
 
@@ -520,7 +520,7 @@ __inline static u8 *recvframe_put(union
 
 
 
-__inline static u8 *recvframe_pull_tail(union recv_frame *precvframe, sint sz)
+static inline u8 *recvframe_pull_tail(union recv_frame *precvframe, int sz)
 {
 	// rmv data from rx_tail (by yitsen)
 
@@ -546,7 +546,7 @@ __inline static u8 *recvframe_pull_tail(
 
 
 
-__inline static _buffer * get_rxbuf_desc(union recv_frame *precvframe)
+static inline _buffer * get_rxbuf_desc(union recv_frame *precvframe)
 {
 	_buffer * buf_desc;
 
@@ -556,7 +556,7 @@ __inline static _buffer * get_rxbuf_desc
 }
 
 
-__inline static union recv_frame *rxmem_to_recvframe(u8 *rxmem)
+static inline union recv_frame *rxmem_to_recvframe(u8 *rxmem)
 {
 	//due to the design of 2048 bytes alignment of recv_frame, we can reference the union recv_frame
 	//from any given member of recv_frame.
@@ -566,7 +566,7 @@ __inline static union recv_frame *rxmem_
 
 }
 
-__inline static union recv_frame *pkt_to_recvframe(_pkt *pkt)
+static inline union recv_frame *pkt_to_recvframe(_pkt *pkt)
 {
 
 	u8 * buf_star;
@@ -576,7 +576,7 @@ __inline static union recv_frame *pkt_to
 	return precv_frame;
 }
 
-__inline static u8 *pkt_to_recvmem(_pkt *pkt)
+static inline u8 *pkt_to_recvmem(_pkt *pkt)
 {
 	// return the rx_head
 
@@ -586,7 +586,7 @@ __inline static u8 *pkt_to_recvmem(_pkt
 
 }
 
-__inline static u8 *pkt_to_recvdata(_pkt *pkt)
+static inline u8 *pkt_to_recvdata(_pkt *pkt)
 {
 	// return the rx_data
 
@@ -597,12 +597,12 @@ __inline static u8 *pkt_to_recvdata(_pkt
 }
 
 
-__inline static sint get_recvframe_len(union recv_frame *precvframe)
+static inline int get_recvframe_len(union recv_frame *precvframe)
 {
 	return precvframe->u.hdr.len;
 }
 
-__inline static u8 query_rx_pwr_percentage(s8 antpower )
+static inline u8 query_rx_pwr_percentage(s8 antpower )
 {
 	if ((antpower <= -100) || (antpower >= 20))
 	{
@@ -618,7 +618,7 @@ __inline static u8 query_rx_pwr_percenta
 	}
 }
 
-__inline static s32 translate_percentage_to_dbm(u32 SignalStrengthIndex)
+static inline s32 translate_percentage_to_dbm(u32 SignalStrengthIndex)
 {
 	s32	SignalPower; // in dBm.
 
--- a/drivers/staging/rtl8192du/include/rtw_tdls.h
+++ b/drivers/staging/rtl8192du/include/rtw_tdls.h
@@ -114,15 +114,15 @@ void issue_tdls_teardown(_adapter *padap
 void issue_tdls_peer_traffic_indication(_adapter *padapter, struct sta_info *psta);
 void issue_tdls_ch_switch_req(_adapter *padapter, u8 *mac_addr);
 void issue_tdls_ch_switch_rsp(_adapter *padapter, u8 *mac_addr);
-sint On_TDLS_Dis_Rsp(_adapter *adapter, union recv_frame *precv_frame);
-sint On_TDLS_Setup_Req(_adapter *adapter, union recv_frame *precv_frame);
-sint On_TDLS_Setup_Rsp(_adapter *adapter, union recv_frame *precv_frame);
-sint On_TDLS_Setup_Cfm(_adapter *adapter, union recv_frame *precv_frame);
-sint On_TDLS_Dis_Req(_adapter *adapter, union recv_frame *precv_frame);
-sint On_TDLS_Teardown(_adapter *adapter, union recv_frame *precv_frame);
-sint On_TDLS_Peer_Traffic_Rsp(_adapter *adapter, union recv_frame *precv_frame);
-sint On_TDLS_Ch_Switch_Req(_adapter *adapter, union recv_frame *precv_frame);
-sint On_TDLS_Ch_Switch_Rsp(_adapter *adapter, union recv_frame *precv_frame);
+int On_TDLS_Dis_Rsp(_adapter *adapter, union recv_frame *precv_frame);
+int On_TDLS_Setup_Req(_adapter *adapter, union recv_frame *precv_frame);
+int On_TDLS_Setup_Rsp(_adapter *adapter, union recv_frame *precv_frame);
+int On_TDLS_Setup_Cfm(_adapter *adapter, union recv_frame *precv_frame);
+int On_TDLS_Dis_Req(_adapter *adapter, union recv_frame *precv_frame);
+int On_TDLS_Teardown(_adapter *adapter, union recv_frame *precv_frame);
+int On_TDLS_Peer_Traffic_Rsp(_adapter *adapter, union recv_frame *precv_frame);
+int On_TDLS_Ch_Switch_Req(_adapter *adapter, union recv_frame *precv_frame);
+int On_TDLS_Ch_Switch_Rsp(_adapter *adapter, union recv_frame *precv_frame);
 void rtw_build_tdls_setup_req_ies(_adapter * padapter, struct xmit_frame * pxmitframe, u8 *pframe);
 void rtw_build_tdls_setup_rsp_ies(_adapter * padapter, struct xmit_frame * pxmitframe, u8 *pframe);
 void rtw_build_tdls_setup_cfm_ies(_adapter * padapter, struct xmit_frame * pxmitframe, u8 *pframe);
--- a/drivers/staging/rtl8192du/include/rtw_xmit.h
+++ b/drivers/staging/rtl8192du/include/rtw_xmit.h
@@ -169,7 +169,7 @@ struct	hw_xmit	{
 	//_list	pending;
 	_queue *sta_queue;
 	//struct hw_txqueue *phwtxqueue;
-	//sint	txcmdcnt;
+	//int	txcmdcnt;
 	int	accnt;
 };
 
@@ -286,7 +286,7 @@ struct xmit_buf
 	PURB	pxmit_urb[8];
 	dma_addr_t dma_transfer_addr;	/* (in) dma addr for transfer_buffer */
 	u8 bpending[8];
-	sint last[8];
+	int last[8];
 #ifdef DBG_XMIT_BUF
 	u8 no;
 #endif
@@ -331,8 +331,8 @@ struct tx_servq {
 struct sta_xmit_priv
 {
 	_lock	lock;
-	sint	option;
-	sint	apsd_setting;	//When bit mask is on, the associated edca queue supports APSD.
+	int	option;
+	int	apsd_setting;	//When bit mask is on, the associated edca queue supports APSD.
 
 
 	//struct tx_servq blk_q[MAX_NUMBLKS];
@@ -353,14 +353,14 @@ struct sta_xmit_priv
 
 
 struct	hw_txqueue	{
-	volatile sint	head;
-	volatile sint	tail;
-	volatile sint	free_sz;	//in units of 64 bytes
-	volatile sint      free_cmdsz;
-	volatile sint	 txsz[8];
+	volatile int	head;
+	volatile int	tail;
+	volatile int	free_sz;	//in units of 64 bytes
+	volatile int      free_cmdsz;
+	volatile int	 txsz[8];
 	uint	ff_hwaddr;
 	uint	cmd_hwaddr;
-	sint	ac_tag;
+	int	ac_tag;
 };
 
 
@@ -456,9 +456,9 @@ extern s32 rtw_put_snap(u8 *data, u16 h_
 extern struct xmit_frame *rtw_alloc_xmitframe(struct xmit_priv *pxmitpriv);
 extern s32 rtw_free_xmitframe(struct xmit_priv *pxmitpriv, struct xmit_frame *pxmitframe);
 extern void rtw_free_xmitframe_queue(struct xmit_priv *pxmitpriv, _queue *pframequeue);
-struct tx_servq *rtw_get_sta_pending(_adapter *padapter, struct sta_info *psta, sint up, u8 *ac);
+struct tx_servq *rtw_get_sta_pending(_adapter *padapter, struct sta_info *psta, int up, u8 *ac);
 extern s32 rtw_xmitframe_enqueue(_adapter *padapter, struct xmit_frame *pxmitframe);
-extern struct xmit_frame* rtw_dequeue_xframe(struct xmit_priv *pxmitpriv, struct hw_xmit *phwxmit_i, sint entry);
+extern struct xmit_frame* rtw_dequeue_xframe(struct xmit_priv *pxmitpriv, struct hw_xmit *phwxmit_i, int entry);
 
 extern s32 rtw_xmit_classifier(_adapter *padapter, struct xmit_frame *pxmitframe);
 extern thread_return rtw_xmit_thread(thread_context context);
@@ -474,7 +474,7 @@ void _rtw_init_sta_xmit_priv(struct sta_
 
 s32 rtw_txframes_pending(_adapter *padapter);
 s32 rtw_txframes_sta_ac_pending(_adapter *padapter, struct pkt_attrib *pattrib);
-void rtw_init_hwxmits(struct hw_xmit *phwxmit, sint entry);
+void rtw_init_hwxmits(struct hw_xmit *phwxmit, int entry);
 
 
 s32 _rtw_init_xmit_priv(struct xmit_priv *pxmitpriv, _adapter *padapter);
@@ -488,7 +488,7 @@ void rtw_free_hwxmits(_adapter *padapter
 s32 rtw_xmit(_adapter *padapter, _pkt **pkt);
 
 #if defined(CONFIG_AP_MODE) || defined(CONFIG_TDLS)
-sint xmitframe_enqueue_for_sleeping_sta(_adapter *padapter, struct xmit_frame *pxmitframe);
+int xmitframe_enqueue_for_sleeping_sta(_adapter *padapter, struct xmit_frame *pxmitframe);
 void stop_sta_xmit(_adapter *padapter, struct sta_info *psta);
 void wakeup_sta_to_xmit(_adapter *padapter, struct sta_info *psta);
 void xmit_delivery_enabled_frames(_adapter *padapter, struct sta_info *psta);
--- a/drivers/staging/rtl8192du/include/xmit_osdep.h
+++ b/drivers/staging/rtl8192du/include/xmit_osdep.h
@@ -53,7 +53,7 @@ extern void rtw_set_tx_chksum_offload(_p
 extern uint rtw_remainder_len(struct pkt_file *pfile);
 extern void _rtw_open_pktfile(_pkt *pkt, struct pkt_file *pfile);
 extern uint _rtw_pktfile_read (struct pkt_file *pfile, u8 *rmem, uint rlen);
-extern sint rtw_endofpktfile (struct pkt_file *pfile);
+extern int rtw_endofpktfile (struct pkt_file *pfile);
 
 extern void rtw_os_pkt_complete(_adapter *padapter, _pkt *pkt);
 extern void rtw_os_xmit_complete(_adapter *padapter, struct xmit_frame *pxframe);
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -1632,7 +1632,7 @@ void rtw_cfg80211_surveydone_event_callb
 	struct	wlan_network	*pnetwork = NULL;
 	u32 cnt=0;
 	u32 wait_for_surveydone;
-	sint wait_status;
+	int wait_status;
 #ifdef CONFIG_P2P
 	struct	wifidirect_info*	pwdinfo = &padapter->wdinfo;
 #endif //CONFIG_P2P
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -513,7 +513,7 @@ static char *translate_scan(_adapter *pa
 		u8 wpa_ie[255],rsn_ie[255];
 		u16 wpa_len=0,rsn_len=0;
 		u8 *p;
-		sint out_len=0;
+		int out_len=0;
 		out_len=rtw_get_sec_ie(pnetwork->network.IEs ,pnetwork->network.IELength,rsn_ie,&rsn_len,wpa_ie,&wpa_len);
 		RT_TRACE(_module_rtl871x_mlme_c_,_drv_info_,("rtw_wx_get_scan: ssid=%s\n",pnetwork->network.Ssid.Ssid));
 		RT_TRACE(_module_rtl871x_mlme_c_,_drv_info_,("rtw_wx_get_scan: wpa_len=%d rsn_len=%d\n",wpa_len,rsn_len));
@@ -1942,7 +1942,7 @@ static int rtw_wx_get_scan(struct net_de
 	u32 ret = 0;
 	u32 cnt=0;
 	u32 wait_for_surveydone;
-	sint wait_status;
+	int wait_status;
 #ifdef CONFIG_CONCURRENT_MODE
 	//PADAPTER pbuddy_adapter = padapter->pbuddy_adapter;
 	//struct mlme_priv *pbuddy_mlmepriv = &(pbuddy_adapter->mlmepriv);
@@ -7651,7 +7651,7 @@ static int rtw_set_hidden_ssid(struct ne
 	int ie_len;
 	u8 *ssid_ie;
 	char ssid[NDIS_802_11_LENGTH_SSID + 1];
-	sint ssid_len;
+	int ssid_len;
 	u8 ignore_broadcast_ssid;
 
 	if (check_fwstate(mlmepriv, WIFI_AP_STATE) != true)
--- a/drivers/staging/rtl8192du/os_dep/usb_intf.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_intf.c
@@ -944,7 +944,7 @@ int rtw_resume_process(_adapter *padapte
 			if(	(_WEP40_ == padapter->securitypriv.dot11PrivacyAlgrthm) ||
 				(_WEP104_ == padapter->securitypriv.dot11PrivacyAlgrthm))
 			{
-				sint keyid;
+				int keyid;
 
 				for(keyid=0;keyid<4;keyid++){
 					if(pwrpriv->wepkeymask & BIT(keyid)) {
--- a/drivers/staging/rtl8192du/os_dep/xmit_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/xmit_linux.c
@@ -71,7 +71,7 @@ _func_exit_;
 	return len;
 }
 
-sint rtw_endofpktfile(struct pkt_file *pfile)
+int rtw_endofpktfile(struct pkt_file *pfile)
 {
 _func_enter_;
 
