From 25485299816edefe3d6a852f9c48e7fd6d460e59 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Wed, 19 Feb 2014 21:27:54 -0600
Subject: [PATCH 214/390] rtl8192du: Remove CONFIG_ADAPTOR_INFO_CACHING_FILE

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_efuse.c       | 64 +++-----------------------------------------------
 include/drv_types.h    |  4 ----
 include/rtw_eeprom.h   | 20 +++++-----------
 os_dep/os_intfs.c      | 11 ---------
 os_dep/osdep_service.c | 16 ++++++-------
 5 files changed, 17 insertions(+), 98 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_efuse.c
+++ b/drivers/staging/rtl8192du/core/rtw_efuse.c
@@ -703,66 +703,8 @@ void EFUSE_ShadowMapUpdate(struct rtw_ad
 
 	EFUSE_GetEfuseDefinition(adapter, efusetype, TYPE_EFUSE_MAP_LEN, (void *)&maplen, test);
 
-	if (pEEPROM->bautoload_fail_flag == true) {
+	if (pEEPROM->bautoload_fail_flag == true)
 		memset(pEEPROM->efuse_eeprom_data, 0xFF, maplen);
-	} else {
-		#ifdef CONFIG_ADAPTOR_INFO_CACHING_FILE
-		if (_SUCCESS != retriveAdaptorInfoFile(adapter->registrypriv.adaptor_info_caching_file_path, pEEPROM)) {
-		#endif
-
-			Efuse_ReadAllMap(adapter, efusetype, pEEPROM->efuse_eeprom_data, test);
-
-		#ifdef CONFIG_ADAPTOR_INFO_CACHING_FILE
-			storeAdaptorInfoFile(adapter->registrypriv.adaptor_info_caching_file_path, pEEPROM);
-		}
-		#endif
-	}
-} /*  EFUSE_ShadowMapUpdate */
-
-#ifdef CONFIG_ADAPTOR_INFO_CACHING_FILE
-
-int isAdaptorInfoFileValid(void)
-{
-	return true;
-}
-
-int storeAdaptorInfoFile(char *path, struct eeprom_priv *eeprom_priv)
-{
-	int ret = _SUCCESS;
-
-	if (path && eeprom_priv) {
-		ret = rtw_store_to_file(path, eeprom_priv->efuse_eeprom_data,
-					EEPROM_MAX_SIZE);
-		if (ret == EEPROM_MAX_SIZE)
-			ret = _SUCCESS;
-		else
-			ret = _FAIL;
-	} else {
-		DBG_8192D("%s NULL pointer\n", __func__);
-		ret =  _FAIL;
-	}
-	return ret;
-}
-
-int retriveAdaptorInfoFile(char *path, struct eeprom_priv *eeprom_priv)
-{
-	int ret = _SUCCESS;
-	mm_segment_t oldfs;
-	struct file *fp;
-
-	if (path && eeprom_priv) {
-		ret = rtw_retrive_from_file(path,
-					    eeprom_priv->efuse_eeprom_data,
-					    EEPROM_MAX_SIZE);
-
-		if (ret == EEPROM_MAX_SIZE)
-			ret = _SUCCESS;
-		else
-			ret = _FAIL;
-	} else {
-		DBG_8192D("%s NULL pointer\n", __func__);
-		ret = _FAIL;
-	}
-	return ret;
+	else
+		Efuse_ReadAllMap(adapter, efusetype, pEEPROM->efuse_eeprom_data, test);
 }
-#endif /* CONFIG_ADAPTOR_INFO_CACHING_FILE */
--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -155,10 +155,6 @@ struct registry_priv {
 
 	u8	hw_wps_pbc;/* 0:disable,1:enable */
 
-#ifdef CONFIG_ADAPTOR_INFO_CACHING_FILE
-	char	adaptor_info_caching_file_path[PATH_LENGTH_MAX];
-#endif
-
 #ifdef CONFIG_LAYER2_ROAMING
 	u8	max_roaming_times; /*  the max number driver will try to roaming */
 #endif
--- a/drivers/staging/rtl8192du/include/rtw_eeprom.h
+++ b/drivers/staging/rtl8192du/include/rtw_eeprom.h
@@ -98,8 +98,7 @@ enum RT_CUSTOMER_ID {
 	RT_CID_819x_CAMEO_NETGEAR = 36,
 };
 
-struct eeprom_priv
-{
+struct eeprom_priv {
 	u8		bautoload_fail_flag;
 	u8		mac_addr[6];	/* PermanentAddress */
 	u16		channel_plan;
@@ -107,18 +106,11 @@ struct eeprom_priv
 	u8		efuse_eeprom_data[EEPROM_MAX_SIZE];
 };
 
+void eeprom_write16(struct rtw_adapter *padapter, u16 reg, u16 data);
+u16 eeprom_read16(struct rtw_adapter *padapter, u16 reg);
+void read_eeprom_content(struct rtw_adapter *padapter);
+void eeprom_read_sz(struct rtw_adapter *padapter, u16 reg,u8 *data, u32 sz);
 
-extern void eeprom_write16(struct rtw_adapter *padapter, u16 reg, u16 data);
-extern u16 eeprom_read16(struct rtw_adapter *padapter, u16 reg);
-extern void read_eeprom_content(struct rtw_adapter *padapter);
-extern void eeprom_read_sz(struct rtw_adapter * padapter, u16 reg,u8* data, u32 sz);
-
-extern void read_eeprom_content_by_attrib(struct rtw_adapter *	padapter	);
-
-#ifdef CONFIG_ADAPTOR_INFO_CACHING_FILE
-extern int isAdaptorInfoFileValid(void);
-extern int storeAdaptorInfoFile(char *path, struct eeprom_priv * eeprom_priv);
-extern int retriveAdaptorInfoFile(char *path, struct eeprom_priv * eeprom_priv);
-#endif /* CONFIG_ADAPTOR_INFO_CACHING_FILE */
+void read_eeprom_content_by_attrib(struct rtw_adapter *padapter);
 
 #endif  /* __RTL871X_EEPROM_H__ */
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -197,12 +197,6 @@ module_param(rtw_hwpwrp_detect, int, 064
 
 module_param(rtw_hw_wps_pbc, int, 0644);
 
-#ifdef CONFIG_ADAPTOR_INFO_CACHING_FILE
-char *rtw_adaptor_info_caching_file_path = "/data/misc/wifi/rtw_cache";
-module_param(rtw_adaptor_info_caching_file_path, charp, 0644);
-MODULE_PARM_DESC(rtw_adaptor_info_caching_file_path, "The path of adapter info cache file");
-#endif /* CONFIG_ADAPTOR_INFO_CACHING_FILE */
-
 #ifdef CONFIG_LAYER2_ROAMING
 static uint rtw_max_roaming_times = 2;
 module_param(rtw_max_roaming_times, uint, 0644);
@@ -720,11 +714,6 @@ static uint loadparam(struct rtw_adapter
 
 	registry_par->hw_wps_pbc = (u8)rtw_hw_wps_pbc;
 
-#ifdef CONFIG_ADAPTOR_INFO_CACHING_FILE
-	snprintf(registry_par->adaptor_info_caching_file_path, PATH_LENGTH_MAX, "%s", rtw_adaptor_info_caching_file_path);
-	registry_par->adaptor_info_caching_file_path[PATH_LENGTH_MAX-1]= 0;
-#endif
-
 #ifdef CONFIG_LAYER2_ROAMING
 	registry_par->max_roaming_times = (u8)rtw_max_roaming_times;
 #ifdef CONFIG_INTEL_WIDI
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -281,14 +281,14 @@ inline void rtw_unlock_suspend(void)
 	#endif
 }
 
-/*
-* Open a file with the specific @param path, @param flag, @param mode
-* @param fpp the pointer of struct file pointer to get struct file pointer while file opening is success
-* @param path the path of the file to open
-* @param flag file operation flags, please refer to linux document
-* @param mode please refer to linux document
-* @return Linux specific error code
-*/
+/* Open a file with the specific @param path, @param flag, @param mode
+ * @param fpp the pointer of struct file pointer to get struct file pointer
+ *   while file opening is success
+ * @param path the path of the file to open
+ * @param flag file operation flags, please refer to linux document
+ * @param mode please refer to linux document
+ * @return Linux specific error code
+ */
 static int openFile(struct file **fpp, char *path, int flag, int mode)
 {
 	struct file *fp;
