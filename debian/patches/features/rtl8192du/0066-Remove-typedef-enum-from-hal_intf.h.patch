From 8f252ef8c6c7839ec479a53ee1779d2dff86b8a4 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Fri, 26 Apr 2013 20:45:06 -0500
Subject: [PATCH 066/210] Remove "typedef enum" from hal_intf.h

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_pwrctrl.c    |  2 +-
 hal/hal_intf.c        |  6 +++---
 hal/usb_halinit.c     | 17 +++--------------
 include/hal_intf.h    | 32 ++++++++++++++++----------------
 include/rtw_pwrctrl.h |  2 +-
 5 files changed, 24 insertions(+), 35 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
+++ b/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
@@ -1255,7 +1255,7 @@ void rtw_unregister_early_suspend(struct
 }
 #endif //CONFIG_ANDROID_POWER
 
-u8 rtw_interface_ps_func(_adapter *padapter,HAL_INTF_PS_FUNC efunc_id,u8* val)
+u8 rtw_interface_ps_func(_adapter *padapter, enum HAL_INTF_PS_FUNC efunc_id,u8* val)
 {
 	u8 bResult = true;
 
--- a/drivers/staging/rtl8192du/hal/hal_intf.c
+++ b/drivers/staging/rtl8192du/hal/hal_intf.c
@@ -209,14 +209,14 @@ void rtw_hal_get_hwreg(_adapter *padapte
 		padapter->HalFunc.GetHwRegHandler(padapter, variable, val);
 }
 
-u8 rtw_hal_set_def_var(_adapter *padapter, HAL_DEF_VARIABLE eVariable, void * pValue)
+u8 rtw_hal_set_def_var(_adapter *padapter, enum HAL_DEF_VARIABLE eVariable, void * pValue)
 {
 	if(padapter->HalFunc.SetHalDefVarHandler)
 		return padapter->HalFunc.SetHalDefVarHandler(padapter,eVariable,pValue);
 	return _FAIL;
 }
 
-u8 rtw_hal_get_def_var(_adapter *padapter, HAL_DEF_VARIABLE eVariable, void * pValue)
+u8 rtw_hal_get_def_var(_adapter *padapter, enum HAL_DEF_VARIABLE eVariable, void * pValue)
 {
 	if(padapter->HalFunc.GetHalDefVarHandler)
 		return padapter->HalFunc.GetHalDefVarHandler(padapter,eVariable,pValue);
@@ -260,7 +260,7 @@ u32	rtw_hal_inirp_deinit(_adapter *padap
 
 }
 
-u8 rtw_hal_intf_ps_func(_adapter *padapter,HAL_INTF_PS_FUNC efunc_id, u8* val)
+u8 rtw_hal_intf_ps_func(_adapter *padapter, enum HAL_INTF_PS_FUNC efunc_id, u8* val)
 {
 	if(padapter->HalFunc.interface_ps_func)
 		return padapter->HalFunc.interface_ps_func(padapter,efunc_id,val);
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -5394,18 +5394,7 @@ _func_exit_;
 //	Description:
 //		Query setting of specified variable.
 //
-u8
-GetHalDefVar8192DUsb(
-	PADAPTER				Adapter,
-	HAL_DEF_VARIABLE		eVariable,
-	void *					pValue
-	);
-u8
-GetHalDefVar8192DUsb(
-	PADAPTER				Adapter,
-	HAL_DEF_VARIABLE		eVariable,
-	void *					pValue
-	)
+u8 GetHalDefVar8192DUsb(PADAPTER Adapter, enum HAL_DEF_VARIABLE eVariable, void  *pValue)
 {
 	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
 	u8			bResult = true;
@@ -5440,13 +5429,13 @@ GetHalDefVar8192DUsb(
 u8
 SetHalDefVar8192DUsb(
 	PADAPTER				Adapter,
-	HAL_DEF_VARIABLE		eVariable,
+	enum HAL_DEF_VARIABLE		eVariable,
 	void *pValue
 	);
 u8
 SetHalDefVar8192DUsb(
 	PADAPTER				Adapter,
-	HAL_DEF_VARIABLE		eVariable,
+	enum HAL_DEF_VARIABLE		eVariable,
 	void *pValue
 	)
 {
--- a/drivers/staging/rtl8192du/include/hal_intf.h
+++ b/drivers/staging/rtl8192du/include/hal_intf.h
@@ -45,7 +45,7 @@ enum _CHIP_TYPE {
 };
 
 
-typedef enum _HW_VARIABLES{
+enum HW_VARIABLES {
 	HW_VAR_MEDIA_STATUS,
 	HW_VAR_MEDIA_STATUS1,
 	HW_VAR_SET_OPMODE,
@@ -114,9 +114,9 @@ typedef enum _HW_VARIABLES{
 	HW_VAR_MBSSID_CAM_WRITE,
 	HW_VAR_MBSSID_CAM_CLEAR,
 	HW_VAR_RCR_MBSSID_EN,
-}HW_VARIABLES;
+};
 
-typedef enum _HAL_DEF_VARIABLE{
+enum HAL_DEF_VARIABLE {
 	HAL_DEF_UNDERCORATEDSMOOTHEDPWDB,
 	HAL_DEF_IS_SUPPORT_ANT_DIV,
 	HAL_DEF_CURRENT_ANTENNA,
@@ -126,12 +126,12 @@ typedef enum _HAL_DEF_VARIABLE{
 	HAL_DEF_DBG_DUMP_RXPKT,//for dbg
 	HAL_DEF_DBG_DM_FUNC,//for dbg
 
-}HAL_DEF_VARIABLE;
+};
 
-typedef enum _HAL_INTF_PS_FUNC{
+enum HAL_INTF_PS_FUNC {
 	HAL_USB_SELECT_SUSPEND,
 	HAL_MAX_ID,
-}HAL_INTF_PS_FUNC;
+};
 
 typedef s32 (*c2h_id_filter)(u8 id);
 
@@ -175,8 +175,8 @@ struct hal_ops {
 	void	(*SetHwRegHandler)(PADAPTER Adapter, u8	variable,u8* val);
 	void	(*GetHwRegHandler)(PADAPTER Adapter, u8	variable,u8* val);
 
-	u8	(*GetHalDefVarHandler)(PADAPTER Adapter, HAL_DEF_VARIABLE eVariable, void * pValue);
-	u8	(*SetHalDefVarHandler)(PADAPTER Adapter, HAL_DEF_VARIABLE eVariable, void * pValue);
+	u8	(*GetHalDefVarHandler)(PADAPTER Adapter, enum HAL_DEF_VARIABLE eVariable, void * pValue);
+	u8	(*SetHalDefVarHandler)(PADAPTER Adapter, enum HAL_DEF_VARIABLE eVariable, void * pValue);
 
 	void	(*UpdateRAMaskHandler)(PADAPTER Adapter, u32 mac_id);
 	void	(*SetBeaconRelatedRegistersHandler)(PADAPTER Adapter);
@@ -187,7 +187,7 @@ struct hal_ops {
 	u8	(*AntDivBeforeLinkHandler)(PADAPTER Adapter);
 	void	(*AntDivCompareHandler)(PADAPTER Adapter, WLAN_BSSID_EX *dst, WLAN_BSSID_EX *src);
 #endif
-	u8	(*interface_ps_func)(PADAPTER Adapter,HAL_INTF_PS_FUNC efunc_id, u8* val);
+	u8	(*interface_ps_func)(PADAPTER Adapter, enum HAL_INTF_PS_FUNC efunc_id, u8* val);
 
 	s32	(*hal_xmit)(PADAPTER Adapter, struct xmit_frame *pxmitframe);
 	s32	(*mgnt_xmit)(PADAPTER Adapter, struct xmit_frame *pmgntframe);
@@ -242,7 +242,7 @@ typedef	enum _RT_EEPROM_TYPE{
 #define RF_CHANGE_BY_HW		BIT30
 #define RF_CHANGE_BY_SW		BIT31
 
-typedef enum _HARDWARE_TYPE{
+enum HARDWARE_TYPE {
 	HARDWARE_TYPE_RTL8180,
 	HARDWARE_TYPE_RTL8185,
 	HARDWARE_TYPE_RTL8187,
@@ -263,7 +263,7 @@ typedef enum _HARDWARE_TYPE{
 	HARDWARE_TYPE_RTL8188EU,
 	HARDWARE_TYPE_RTL8188ES,
 	HARDWARE_TYPE_MAX,
-}HARDWARE_TYPE;
+};
 
 //
 // RTL8192D Series
@@ -277,7 +277,7 @@ typedef struct eeprom_priv EEPROM_EFUSE_
 #define GET_EEPROM_EFUSE_PRIV(priv)	(&priv->eeprompriv)
 
 #ifdef CONFIG_WOWLAN
-typedef enum _wowlan_subcode{
+enum wowlan_subcode {
 	WOWLAN_PATTERN_MATCH = 1,
 	WOWLAN_MAGIC_PACKET  = 2,
 	WOWLAN_UNICAST       = 3,
@@ -289,7 +289,7 @@ typedef enum _wowlan_subcode{
 	WOWLAN_DEBUG_RELOAD_FW	= 9,
 	WOWLAN_DEBUG_1		=10,
 	WOWLAN_DEBUG_2		=11
-}wowlan_subcode;
+};
 
 struct wowlan_ioctl_param{
 	unsigned int subcode;
@@ -328,8 +328,8 @@ void rtw_hal_chip_configure(_adapter *pa
 void rtw_hal_read_chip_info(_adapter *padapter);
 void rtw_hal_read_chip_version(_adapter *padapter);
 
-u8 rtw_hal_set_def_var(_adapter *padapter, HAL_DEF_VARIABLE eVariable, void * pValue);
-u8 rtw_hal_get_def_var(_adapter *padapter, HAL_DEF_VARIABLE eVariable, void * pValue);
+u8 rtw_hal_set_def_var(_adapter *padapter, enum HAL_DEF_VARIABLE eVariable, void * pValue);
+u8 rtw_hal_get_def_var(_adapter *padapter, enum HAL_DEF_VARIABLE eVariable, void * pValue);
 
 void rtw_hal_enable_interrupt(_adapter *padapter);
 void rtw_hal_disable_interrupt(_adapter *padapter);
@@ -337,7 +337,7 @@ void rtw_hal_disable_interrupt(_adapter
 u32 rtw_hal_inirp_init(_adapter *padapter);
 u32 rtw_hal_inirp_deinit(_adapter *padapter);
 
-u8 rtw_hal_intf_ps_func(_adapter *padapter,HAL_INTF_PS_FUNC efunc_id, u8* val);
+u8 rtw_hal_intf_ps_func(_adapter *padapter, enum HAL_INTF_PS_FUNC efunc_id, u8* val);
 
 s32 rtw_hal_xmit(_adapter *padapter, struct xmit_frame *pxmitframe);
 s32 rtw_hal_mgnt_xmit(_adapter *padapter, struct xmit_frame *pmgntframe);
--- a/drivers/staging/rtl8192du/include/rtw_pwrctrl.h
+++ b/drivers/staging/rtl8192du/include/rtw_pwrctrl.h
@@ -337,7 +337,7 @@ void rtw_unregister_early_suspend(struct
 #define rtw_unregister_early_suspend(pwrpriv) do {} while (0)
 #endif /* CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER */
 
-u8 rtw_interface_ps_func(_adapter *padapter,HAL_INTF_PS_FUNC efunc_id,u8* val);
+u8 rtw_interface_ps_func(_adapter *padapter, enum HAL_INTF_PS_FUNC efunc_id,u8* val);
 void rtw_set_ips_deny(_adapter *padapter, u32 ms);
 int _rtw_pwr_wakeup(_adapter *padapter, u32 ips_deffer_ms, const char *caller);
 #define rtw_pwr_wakeup(adapter) _rtw_pwr_wakeup(adapter, RTW_PWR_STATE_CHK_INTERVAL, __FUNCTION__)
