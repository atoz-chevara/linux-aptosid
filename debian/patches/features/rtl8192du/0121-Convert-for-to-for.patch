From 7a2fb706b6ef871f36f8a07e0e917b73fb1692fd Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 4 May 2013 18:36:01 -0500
Subject: [PATCH 121/210] Convert "for(" to "for ("

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ioctl_set.c    |   2 +-
 core/rtw_mlme.c         |   8 +--
 core/rtw_mlme_ext.c     |  28 ++++----
 core/rtw_p2p.c          |  14 ++--
 core/rtw_pwrctrl.c      |   6 +-
 core/rtw_recv.c         |  10 +--
 core/rtw_security.c     |  16 ++---
 core/rtw_sta_mgt.c      |  14 ++--
 core/rtw_tdls.c         |  20 +++---
 core/rtw_wlan_util.c    |  12 ++--
 core/rtw_xmit.c         |  22 +++----
 hal/rtl8192d_cmd.c      |  16 ++---
 hal/rtl8192d_dm.c       |  30 ++++-----
 hal/rtl8192d_hal_init.c |  64 +++++++++---------
 hal/rtl8192d_mp.c       |  24 +++----
 hal/rtl8192d_phycfg.c   | 170 ++++++++++++++++++++++++------------------------
 hal/rtl8192d_rf6052.c   |  30 ++++-----
 hal/rtl8192d_rxdesc.c   |   4 +-
 hal/rtl8192du_recv.c    |   4 +-
 hal/rtl8192du_xmit.c    |   2 +-
 hal/usb_halinit.c       |  46 ++++++-------
 include/rtw_debug.h     |   2 +-
 os_dep/ioctl_cfg80211.c |   8 +--
 os_dep/ioctl_linux.c    |  78 +++++++++++-----------
 os_dep/mlme_linux.c     |   2 +-
 os_dep/os_intfs.c       |   6 +-
 os_dep/osdep_service.c  |   2 +-
 os_dep/rtw_android.c    |   4 +-
 os_dep/usb_intf.c       |   6 +-
 os_dep/xmit_linux.c     |   4 +-
 30 files changed, 327 insertions(+), 327 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
+++ b/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
@@ -50,7 +50,7 @@ _func_enter_;
 		goto exit;
 	}
 
-	for(i = 0; i < ssid->SsidLength; i++)
+	for (i = 0; i < ssid->SsidLength; i++)
 	{
 		//wifi, printable ascii code must be supported
 		if (!( (ssid->Ssid[i] >= 0x20) && (ssid->Ssid[i] <= 0x7e) )){
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -81,7 +81,7 @@ _func_enter_;
 
 	pnetwork = (struct wlan_network *)pbuf;
 
-	for(i = 0; i < MAX_BSS_CNT; i++)
+	for (i = 0; i < MAX_BSS_CNT; i++)
 	{
 		INIT_LIST_HEAD(&(pnetwork->list));
 
@@ -1490,7 +1490,7 @@ static struct sta_info *rtw_joinbss_upda
 		//for A-MPDU Rx reordering buffer control for bmc_sta & sta_info
 		//if A-MPDU Rx is enabled, reseting  rx_ordering_ctrl wstart_b(indicate_seq) to default value=0xffff
 		//todo: check if AP can send A-MPDU packets
-		for(i=0; i < 16 ; i++)
+		for (i=0; i < 16 ; i++)
 		{
 			//preorder_ctrl = &precvpriv->recvreorder_ctrl[i];
 			preorder_ctrl = &psta->recvreorder_ctrl[i];
@@ -1508,7 +1508,7 @@ static struct sta_info *rtw_joinbss_upda
 		bmc_sta = rtw_get_bcmc_stainfo(padapter);
 		if (bmc_sta)
 		{
-			for(i=0; i < 16 ; i++)
+			for (i=0; i < 16 ; i++)
 			{
 				//preorder_ctrl = &precvpriv->recvreorder_ctrl[i];
 				preorder_ctrl = &bmc_sta->recvreorder_ctrl[i];
@@ -2661,7 +2661,7 @@ int rtw_restruct_wmm_ie(struct rtw_adapt
 
 			//Append WMM IE to the last index of out_ie
 			/*
-			for(j=i; j< i+(in_ie[i+1]+2); j++)
+			for (j=i; j< i+(in_ie[i+1]+2); j++)
 			{
 				out_ie[ielength] = in_ie[j];
 				ielength++;
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -260,7 +260,7 @@ static struct rt_channel_plan_map RTW_CH
 int rtw_ch_set_search_ch(struct rt_channel_info *ch_set, const u32 ch)
 {
 	int i;
-	for(i=0;ch_set[i].ChannelNum!=0;i++){
+	for (i=0;ch_set[i].ChannelNum!=0;i++){
 		if (ch == ch_set[i].ChannelNum)
 			break;
 	}
@@ -445,7 +445,7 @@ static u8 init_channel_set(struct rtw_ad
 
 	if (b2_4GBand)
 	{
-		for(index=0;index<RTW_ChannelPlan2G[Index2G].Len;index++)
+		for (index=0;index<RTW_ChannelPlan2G[Index2G].Len;index++)
 		{
 			channel_set[chanset_size].ChannelNum = RTW_ChannelPlan2G[Index2G].Channel[index];
 
@@ -476,7 +476,7 @@ static u8 init_channel_set(struct rtw_ad
 
 	if (b5GBand)
 	{
-		for(index=0;index<RTW_ChannelPlan5G[Index5G].Len;index++)
+		for (index=0;index<RTW_ChannelPlan5G[Index5G].Len;index++)
 		{
 #ifdef CONFIG_DFS
 			channel_set[chanset_size].ChannelNum = RTW_ChannelPlan5G[Index5G].Channel[index];
@@ -2513,7 +2513,7 @@ static void get_channel_cnt_24g_5gl_5gh(
 	*p5gl_cnt = 0;
 	*p5gh_cnt = 0;
 
-	for( i = 0; i < pmlmeext->max_chan_nums; i++ )
+	for ( i = 0; i < pmlmeext->max_chan_nums; i++ )
 	{
 		if ( pmlmeext->channel_set[ i ].ChannelNum <= 14 )
 		{
@@ -4417,7 +4417,7 @@ u8 is_matched_in_profilelist( u8* peerma
 	DBG_8192D( "[%s] peermac = %.2X %.2X %.2X %.2X %.2X %.2X\n", __func__,
 		    peermacaddr[0], peermacaddr[1],peermacaddr[2],peermacaddr[3],peermacaddr[4],peermacaddr[5]);
 
-	for( i = 0; i < P2P_MAX_PERSISTENT_GROUP_NUM; i++, profileinfo++ )
+	for ( i = 0; i < P2P_MAX_PERSISTENT_GROUP_NUM; i++, profileinfo++ )
 	{
 	       DBG_8192D( "[%s] profileinfo_mac = %.2X %.2X %.2X %.2X %.2X %.2X\n", __func__,
 			    profileinfo->peermac[0], profileinfo->peermac[1],profileinfo->peermac[2],profileinfo->peermac[3],profileinfo->peermac[4],profileinfo->peermac[5]);
@@ -5785,7 +5785,7 @@ unsigned int OnAction(struct rtw_adapter
 
 	category = frame_body[0];
 
-	for(i = 0; i < sizeof(OnAction_tbl)/sizeof(struct action_handler); i++)
+	for (i = 0; i < sizeof(OnAction_tbl)/sizeof(struct action_handler); i++)
 	{
 		ptable = &OnAction_tbl[i];
 
@@ -8238,7 +8238,7 @@ static void issue_action_BSSCoexistPacke
 		spin_unlock_bh(&(pmlmepriv->scanned_queue.lock));
 
 
-		for(i= 0;i<8;i++)
+		for (i= 0;i<8;i++)
 		{
 			if (ICS[i][0] == 1)
 			{
@@ -8248,7 +8248,7 @@ static void issue_action_BSSCoexistPacke
 				//SET_BSS_INTOLERANT_ELE_REG_CLASS(InfoContent,i);
 				k++;
 
-				for(j=1;j<=14;j++)
+				for (j=1;j<=14;j++)
 				{
 					if (ICS[i][j]==1)
 					{
@@ -8298,7 +8298,7 @@ unsigned int send_delba(struct rtw_adapt
 
 	if (initiator==0) // recipient
 	{
-		for(tid = 0;tid<MAXTID;tid++)
+		for (tid = 0;tid<MAXTID;tid++)
 		{
 			if (psta->recvreorder_ctrl[tid].enable == true)
 			{
@@ -8316,7 +8316,7 @@ unsigned int send_delba(struct rtw_adapt
 	else if (initiator == 1)// originator
 	{
 		//DBG_8192D("tx agg_enable_bitmap(0x%08x)\n", psta->htpriv.agg_enable_bitmap);
-		for(tid = 0;tid<MAXTID;tid++)
+		for (tid = 0;tid<MAXTID;tid++)
 		{
 			if (psta->htpriv.agg_enable_bitmap & BIT(tid))
 			{
@@ -8383,7 +8383,7 @@ bool IsLegal5GChannel(
 		60,62,64,100,102,104,106,108,110,112,114,116,118,120,122,
 		124,126,128,130,132,134,136,138,140,149,151,153,155,157,159,
 		161,163,165};
-	for(i=0;i<sizeof(Channel_5G);i++)
+	for (i=0;i<sizeof(Channel_5G);i++)
 		if (channel == Channel_5G[i])
 			return true;
 	return false;
@@ -8529,7 +8529,7 @@ void site_survey(struct rtw_adapter *pad
 			#endif //CONFIG_P2P
 			{
 				int i;
-				for(i=0;i<RTW_SSID_SCAN_AMOUNT;i++){
+				for (i=0;i<RTW_SSID_SCAN_AMOUNT;i++){
 					if (pmlmeext->sitesurvey_res.ssid[i].SsidLength) {
 						//todo: to issue two probe req???
 						issue_probereq(padapter, &(pmlmeext->sitesurvey_res.ssid[i]), NULL);
@@ -10745,7 +10745,7 @@ u8 sitesurvey_cmd_hdl(struct rtw_adapter
 		pmlmeext->sitesurvey_res.bss_cnt = 0;
 		pmlmeext->sitesurvey_res.channel_idx = 0;
 
-		for(i=0;i<RTW_SSID_SCAN_AMOUNT;i++){
+		for (i=0;i<RTW_SSID_SCAN_AMOUNT;i++){
 			if (pparm->ssid[i].SsidLength) {
 				memcpy(pmlmeext->sitesurvey_res.ssid[i].Ssid, pparm->ssid[i].Ssid, IW_ESSID_MAX_SIZE);
 				pmlmeext->sitesurvey_res.ssid[i].SsidLength= pparm->ssid[i].SsidLength;
@@ -12351,7 +12351,7 @@ u8 tdls_hdl(struct rtw_adapter *padapter
 					ptdlsinfo->ch_sensing=0;
 					ptdlsinfo->cur_channel=1;
 					min=ptdlsinfo->collect_pkt_num[0];
-					for(i=1; i<MAX_CHANNEL_NUM-1; i++){
+					for (i=1; i<MAX_CHANNEL_NUM-1; i++){
 						if (min > ptdlsinfo->collect_pkt_num[i]){
 							ptdlsinfo->cur_channel=i+1;
 							min=ptdlsinfo->collect_pkt_num[i];
--- a/drivers/staging/rtl8192du/core/rtw_p2p.c
+++ b/drivers/staging/rtl8192du/core/rtw_p2p.c
@@ -29,7 +29,7 @@ int rtw_p2p_is_channel_list_ok( u8 desir
 {
 	int found = 0, i = 0;
 
-	for( i = 0; i < ch_cnt; i++ )
+	for ( i = 0; i < ch_cnt; i++ )
 	{
 		if ( ch_list[ i ] == desired_ch )
 		{
@@ -2265,7 +2265,7 @@ u32 process_probe_req_p2p_ie(struct wifi
 	{
 		int i, g_rate =0;
 
-		for( i = 0; i < rate_cnt; i++ )
+		for ( i = 0; i < rate_cnt; i++ )
 		{
 			if ( ( ( *( p + 2 + i ) & 0xff ) != 0x02 ) &&
 				( ( *( p + 2 + i ) & 0xff ) != 0x04 ) &&
@@ -2612,7 +2612,7 @@ u8 rtw_p2p_get_peer_ch_list(struct wifid
 		ch_content += 1;
 		ch_cnt -= 1;
 		temp = *ch_content;
-		for( i = 0 ; i < temp ; i++, j++ )
+		for ( i = 0 ; i < temp ; i++, j++ )
 		{
 			peer_ch_list[j] = *( ch_content + 1 + i );
 		}
@@ -2628,7 +2628,7 @@ u8 rtw_p2p_check_peer_oper_ch(struct mlm
 {
 	u8 i = 0;
 
-	for( i = 0; i < pmlmeext->max_chan_nums; i++ )
+	for ( i = 0; i < pmlmeext->max_chan_nums; i++ )
 	{
 		if ( pmlmeext->channel_set[ i ].ChannelNum == ch )
 		{
@@ -2644,9 +2644,9 @@ u8 rtw_p2p_ch_inclusion(struct mlme_ext_
 	int	i = 0, j = 0, temp = 0;
 	u8 ch_no = 0;
 
-	for( i = 0; i < peer_ch_num; i++ )
+	for ( i = 0; i < peer_ch_num; i++ )
 	{
-		for( j = temp; j < pmlmeext->max_chan_nums; j++ )
+		for ( j = temp; j < pmlmeext->max_chan_nums; j++ )
 		{
 			if ( *( peer_ch_list + i ) == pmlmeext->channel_set[ j ].ChannelNum )
 			{
@@ -3596,7 +3596,7 @@ static void rtw_cfg80211_adjust_p2pie_ch
 			{
 				num_of_ch = *(pattr_temp+1);
 
-				for(i=0; i<num_of_ch; i++)
+				for (i=0; i<num_of_ch; i++)
 					*(pattr_temp+2+i) = pbuddy_mlmeext->cur_channel;//forcing to the same channel
 
 				pattr_temp += (2+num_of_ch);
--- a/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
+++ b/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
@@ -77,7 +77,7 @@ int ips_leave(struct rtw_adapter * padap
 		{
 			DBG_8192D("==>%s,channel(%d),processing(%x)\n",__func__,padapter->mlmeextpriv.cur_channel,pwrpriv->bips_processing);
 			set_channel_bwmode(padapter, padapter->mlmeextpriv.cur_channel, HAL_PRIME_CHNL_OFFSET_DONT_CARE, HT_CHANNEL_WIDTH_20);
-			for(keyid=0;keyid<4;keyid++){
+			for (keyid=0;keyid<4;keyid++){
 				if (pmlmepriv->key_mask & BIT(keyid)){
 					if (keyid == psecuritypriv->dot11PrivacyKeyIndex)
 						result=rtw_set_key(padapter,psecuritypriv, keyid, 1);
@@ -425,7 +425,7 @@ _func_enter_;
 #ifdef CONFIG_TDLS
 			spin_lock_bh(&pstapriv->sta_hash_lock);
 
-			for(i=0; i< NUM_STA; i++) {
+			for (i=0; i< NUM_STA; i++) {
 				phead = &(pstapriv->sta_hash[i]);
 				plist = get_next(phead);
 
@@ -478,7 +478,7 @@ _func_enter_;
 #ifdef CONFIG_TDLS
 			spin_lock_bh(&pstapriv->sta_hash_lock);
 
-			for(i=0; i< NUM_STA; i++)
+			for (i=0; i< NUM_STA; i++)
 			{
 				phead = &(pstapriv->sta_hash[i]);
 				plist = get_next(phead);
--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -45,7 +45,7 @@ _func_enter_;
 
 	_rtw_spinlock_init(&psta_recvpriv->lock);
 
-	//for(i=0; i<MAX_RX_NUMBLKS; i++)
+	//for (i=0; i<MAX_RX_NUMBLKS; i++)
 	//	_rtw_init_queue(&psta_recvpriv->blk_strms[i]);
 
 	_rtw_init_queue(&psta_recvpriv->defrag_q);
@@ -94,7 +94,7 @@ _func_enter_;
 	precvframe = (union recv_frame*) precvpriv->precv_frame_buf;
 
 
-	for(i=0; i < NR_RECVFRAME ; i++)
+	for (i=0; i < NR_RECVFRAME ; i++)
 	{
 		INIT_LIST_HEAD(&(precvframe->u.list));
 
@@ -489,7 +489,7 @@ _func_enter_;
 
 			bmic_err=false;
 
-			for(i=0;i<8;i++){
+			for (i=0;i<8;i++){
 				if (miccode[i] != *(pframemic+i)){
 					RT_TRACE(_module_rtl871x_recv_c_,_drv_err_,("recvframe_chkmic:miccode[%d](%02x) != *(pframemic+%d)(%02x) ",i,miccode[i],i,*(pframemic+i)));
 					bmic_err=true;
@@ -507,7 +507,7 @@ _func_enter_;
 				{
 					uint i;
 					RT_TRACE(_module_rtl871x_recv_c_,_drv_err_,("\n ======demp packet (len=%d)======\n",precvframe->u.hdr.len));
-					for(i=0;i<precvframe->u.hdr.len;i=i+8){
+					for (i=0;i<precvframe->u.hdr.len;i=i+8){
 						RT_TRACE(_module_rtl871x_recv_c_,_drv_err_,("0x%02x:0x%02x:0x%02x:0x%02x:0x%02x:0x%02x:0x%02x:0x%02x",
 							*(precvframe->u.hdr.rx_data+i),*(precvframe->u.hdr.rx_data+i+1),
 							*(precvframe->u.hdr.rx_data+i+2),*(precvframe->u.hdr.rx_data+i+3),
@@ -2308,7 +2308,7 @@ int amsdu_to_msdu(struct rtw_adapter *pa
 		}
 	}
 
-	for(i=0; i<nr_subframes; i++){
+	for (i=0; i<nr_subframes; i++){
 		sub_skb = subframes[i];
 		/* convert hdr + possible LLC headers into Ethernet header */
 #ifdef ENDIAN_FREE
--- a/drivers/staging/rtl8192du/core/rtw_security.c
+++ b/drivers/staging/rtl8192du/core/rtw_security.c
@@ -193,7 +193,7 @@ _func_enter_;
 	{
 		keylength=psecuritypriv->dot11DefKeylen[psecuritypriv->dot11PrivacyKeyIndex];
 
-		for(curfragnum=0;curfragnum<pattrib->nr_frags;curfragnum++)
+		for (curfragnum=0;curfragnum<pattrib->nr_frags;curfragnum++)
 		{
 			iv=pframe+pattrib->hdrlen;
 			memcpy(&wepkey[0], iv, 3);
@@ -292,7 +292,7 @@ static u32 secmicgetuint32( u8 * p )
 	s32 i;
 	u32 res = 0;
 _func_enter_;
-	for( i=0; i<4; i++ )
+	for ( i=0; i<4; i++ )
 	{
 		res |= ((u32)(*p++)) << (8*i);
 	}
@@ -305,7 +305,7 @@ static void secmicputuint32( u8 * p, u32
 {
 	long i;
 _func_enter_;
-	for( i=0; i<4; i++ )
+	for ( i=0; i<4; i++ )
 	{
 		*p++ = (u8) (val & 0xff);
 		val >>= 8;
@@ -697,7 +697,7 @@ _func_enter_;
 
 			prwskeylen=16;
 
-			for(curfragnum=0;curfragnum<pattrib->nr_frags;curfragnum++){
+			for (curfragnum=0;curfragnum<pattrib->nr_frags;curfragnum++){
 				iv=pframe+pattrib->hdrlen;
 				payload=pframe+pattrib->iv_len+pattrib->hdrlen;
 
@@ -1094,7 +1094,7 @@ static void aes128k128d(u8 *key, u8 *dat
     u8 intermediateb[16];
     u8 round_key[16];
 _func_enter_;
-    for(i=0; i<16; i++) round_key[i] = key[i];
+    for (i=0; i<16; i++) round_key[i] = key[i];
 
     for (round = 0; round < 11; round++)
     {
@@ -1561,7 +1561,7 @@ _func_enter_;
 
 			prwskeylen=16;
 
-			for(curfragnum=0;curfragnum<pattrib->nr_frags;curfragnum++){
+			for (curfragnum=0;curfragnum<pattrib->nr_frags;curfragnum++){
 
 				if ((curfragnum+1)==pattrib->nr_frags){	//4 the last fragment
 					length=pattrib->last_txcmdsz-pattrib->hdrlen-pattrib->iv_len- pattrib->icv_len;
@@ -1846,7 +1846,7 @@ _func_enter_;
     for (j=0; j<8;j++) message[payload_index++] = chain_buffer[j];
 
 	//compare the mic
-	for(i=0;i<8;i++){
+	for (i=0;i<8;i++){
 		if (pframe[hdrlen+8+plen-8+i] != message[hdrlen+8+plen-8+i])
 		{
 			RT_TRACE(_module_rtl871x_security_c_,_drv_err_,("aes_decipher:mic check error mic[%d]: pframe(%x) != message(%x) \n",
@@ -1860,7 +1860,7 @@ _func_enter_;
 	if (res == _FAIL)
 	{
 		int gg=0;
-		for(gg=0; gg < 32; gg++)
+		for (gg=0; gg < 32; gg++)
 			DBG_8192D(" [%d]=%02x ", gg, pframe[gg]);
 		DBG_8192D("error packet header \n");
 	}
--- a/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
+++ b/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
@@ -102,7 +102,7 @@ _func_enter_;
 	psta = (struct sta_info *)(pstapriv->pstainfo_buf);
 
 
-	for(i = 0; i < NUM_STA; i++) {
+	for (i = 0; i < NUM_STA; i++) {
 		_rtw_init_stainfo(psta);
 
 		INIT_LIST_HEAD(&(pstapriv->sta_hash[i]));
@@ -264,7 +264,7 @@ _func_enter_;
 
 		/*	delete all reordering_ctrl_timer		*/
 		spin_lock_bh(&pstapriv->sta_hash_lock);
-		for(index = 0; index < NUM_STA; index++)
+		for (index = 0; index < NUM_STA; index++)
 		{
 			phead = &(pstapriv->sta_hash[index]);
 			plist = get_next(phead);
@@ -275,7 +275,7 @@ _func_enter_;
 				psta = LIST_CONTAINOR(plist, struct sta_info ,hash_list);
 				plist = get_next(plist);
 
-				for(i=0; i < 16 ; i++)
+				for (i=0; i < 16 ; i++)
 				{
 					preorder_ctrl = &psta->recvreorder_ctrl[i];
 					_cancel_timer_ex(&preorder_ctrl->reordering_ctrl_timer);
@@ -358,7 +358,7 @@ _func_enter_;
 // In this case, this packet will be dropped by recv_decache function if we use the 0x00 as the default value for tid_rxseq variable.
 // So, we initialize the tid_rxseq variable as the 0xffff.
 
-		for( i = 0; i < 16; i++ )
+		for ( i = 0; i < 16; i++ )
                      memcpy( &psta->sta_recvpriv.rxcache.tid_rxseq[ i ], &wRxSeqInitialValue, 2 );
 
 		RT_TRACE(_module_rtl871x_sta_mgt_c_,_drv_info_,("alloc number_%d stainfo  with hwaddr = %x %x %x %x %x %x  \n",
@@ -377,7 +377,7 @@ _func_enter_;
 #endif //CONFIG_TDLS
 
 		//for A-MPDU Rx reordering buffer control
-		for(i=0; i < 16 ; i++)
+		for (i=0; i < 16 ; i++)
 		{
 			preorder_ctrl = &psta->recvreorder_ctrl[i];
 
@@ -483,7 +483,7 @@ _func_enter_;
 #endif //CONFIG_TDLS
 
 	//for A-MPDU Rx reordering buffer control, cancel reordering_ctrl_timer
-	for(i=0; i < 16 ; i++)
+	for (i=0; i < 16 ; i++)
 	{
 		struct list_head *phead, *plist;
 		union recv_frame *prframe;
@@ -587,7 +587,7 @@ _func_enter_;
 
 	spin_lock_bh(&pstapriv->sta_hash_lock);
 
-	for(index=0; index< NUM_STA; index++)
+	for (index=0; index< NUM_STA; index++)
 	{
 		phead = &(pstapriv->sta_hash[index]);
 		plist = get_next(phead);
--- a/drivers/staging/rtl8192du/core/rtw_tdls.c
+++ b/drivers/staging/rtl8192du/core/rtw_tdls.c
@@ -1149,7 +1149,7 @@ int On_TDLS_Setup_Req(_adapter *adapter,
 		ptdls_sta->stat_code = 0;
 
 		//parsing information element
-		for(j=FIXED_IE; j<parsing_length;){
+		for (j=FIXED_IE; j<parsing_length;){
 
 			pIE = (PNDIS_802_11_VARIABLE_IEs)(ptr+ j);
 
@@ -1177,7 +1177,7 @@ int On_TDLS_Setup_Req(_adapter *adapter,
 						//check whether initiator STA has CCMP pairwise_cipher.
 						ppairwise_cipher=prsnie+10;
 						memcpy(&pairwise_count, (u16*)(ppairwise_cipher-2), 1);
-						for(k=0;k<pairwise_count;k++){
+						for (k=0;k<pairwise_count;k++){
 							if (_rtw_memcmp( ppairwise_cipher+4*k, RSN_CIPHER_SUITE_CCMP, 4)==true)
 								ccmp_have=1;
 						}
@@ -1338,7 +1338,7 @@ int On_TDLS_Setup_Rsp(_adapter *adapter,
 	stat_code = 0;
 
 	//parsing information element
-	for(j=FIXED_IE; j<parsing_length;)
+	for (j=FIXED_IE; j<parsing_length;)
 	{
 		pIE = (PNDIS_802_11_VARIABLE_IEs)(ptr+ j);
 
@@ -1364,7 +1364,7 @@ int On_TDLS_Setup_Rsp(_adapter *adapter,
 				//check whether responder STA has CCMP pairwise_cipher.
 				ppairwise_cipher=prsnie+10;
 				memcpy(&pairwise_count, (u16*)(ppairwise_cipher-2), 2);
-				for(k=0;k<pairwise_count;k++){
+				for (k=0;k<pairwise_count;k++){
 					if (_rtw_memcmp( ppairwise_cipher+4*k, RSN_CIPHER_SUITE_CCMP, 4)==true)
 						verify_ccmp=1;
 				}
@@ -1501,7 +1501,7 @@ int On_TDLS_Setup_Cfm(_adapter *adapter,
 
 	if (prx_pkt_attrib->encrypt){
 		//parsing information element
-		for(j=FIXED_IE; j<parsing_length;){
+		for (j=FIXED_IE; j<parsing_length;){
 
 			pIE = (PNDIS_802_11_VARIABLE_IEs)(ptr+ j);
 
@@ -1582,7 +1582,7 @@ int On_TDLS_Dis_Req(_adapter *adapter, u
 			-FIXED_IE;
 
 	//parsing information element
-	for(j=FIXED_IE; j<parsing_length;){
+	for (j=FIXED_IE; j<parsing_length;){
 
 		pIE = (PNDIS_802_11_VARIABLE_IEs)(ptr+ j);
 
@@ -1779,7 +1779,7 @@ int On_TDLS_Ch_Switch_Req(_adapter *adap
 	ptdls_sta->off_ch = *(ptr+2);
 
 	//parsing information element
-	for(j=FIXED_IE; j<parsing_length;){
+	for (j=FIXED_IE; j<parsing_length;){
 
 		pIE = (PNDIS_802_11_VARIABLE_IEs)(ptr+ j);
 
@@ -1874,7 +1874,7 @@ int On_TDLS_Ch_Switch_Rsp(_adapter *adap
 	}
 
 	//parsing information element
-	for(j=FIXED_IE; j<parsing_length;){
+	for (j=FIXED_IE; j<parsing_length;){
 
 		pIE = (PNDIS_802_11_VARIABLE_IEs)(ptr+ j);
 
@@ -2024,7 +2024,7 @@ void rtw_build_tdls_setup_req_ies(_adapt
 
 	//SNonce
 	if (pattrib->encrypt){
-		for(i=0;i<8;i++){
+		for (i=0;i<8;i++){
 			time=rtw_get_current_time();
 			memcpy(&ptdls_sta->SNonce[4*i], (u8 *)&time, 4);
 		}
@@ -2152,7 +2152,7 @@ void rtw_build_tdls_setup_rsp_ies(_adapt
 	}
 
 	if (pattrib->encrypt){
-		for(k=0;k<8;k++){
+		for (k=0;k<8;k++){
 			time=rtw_get_current_time();
 			memcpy(&ptdls_sta->ANonce[4*k], (u8*)&time, 4);
 		}
--- a/drivers/staging/rtl8192du/core/rtw_wlan_util.c
+++ b/drivers/staging/rtl8192du/core/rtw_wlan_util.c
@@ -77,7 +77,7 @@ int cckrates_included(unsigned char *rat
 {
 	int	i;
 
-	for(i = 0; i < ratelen; i++)
+	for (i = 0; i < ratelen; i++)
 	{
 		if  (  (((rate[i]) & 0x7f) == 2)	|| (((rate[i]) & 0x7f) == 4) ||
 			   (((rate[i]) & 0x7f) == 11)  || (((rate[i]) & 0x7f) == 22) )
@@ -92,7 +92,7 @@ int cckratesonly_included(unsigned char
 {
 	int	i;
 
-	for(i = 0; i < ratelen; i++)
+	for (i = 0; i < ratelen; i++)
 	{
 		if  ( (((rate[i]) & 0x7f) != 2) && (((rate[i]) & 0x7f) != 4) &&
 			   (((rate[i]) & 0x7f) != 11)  && (((rate[i]) & 0x7f) != 22) )
@@ -247,7 +247,7 @@ int is_basicrate(struct rtw_adapter *pad
 	unsigned char val;
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 
-	for(i = 0; i < NUMRATES; i++)
+	for (i = 0; i < NUMRATES; i++)
 	{
 		val = pmlmeext->basicrate[i];
 
@@ -318,7 +318,7 @@ void UpdateBrateTbl(
 	u8	rate;
 
 	// 1M, 2M, 5.5M, 11M, 6M, 12M, 24M are mandatory.
-	for(i=0;i<NDIS_802_11_LENGTH_RATES_EX;i++)
+	for (i=0;i<NDIS_802_11_LENGTH_RATES_EX;i++)
 	{
 		rate = mBratesOS[i] & 0x7f;
 		switch(rate)
@@ -342,7 +342,7 @@ void UpdateBrateTblForSoftAP(u8 *bssrate
 	u8	i;
 	u8	rate;
 
-	for(i=0;i<bssratelen;i++)
+	for (i=0;i<bssratelen;i++)
 	{
 		rate = bssrateset[i] & 0x7f;
 		switch(rate)
@@ -1521,7 +1521,7 @@ unsigned char get_highest_rate_idx(u32 m
 	int i;
 	unsigned char rate_idx=0;
 
-	for(i=27; i>=0; i--)
+	for (i=27; i>=0; i--)
 	{
 		if (mask & BIT(i))
 		{
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -53,7 +53,7 @@ _func_enter_;
 
 	_rtw_spinlock_init(&psta_xmitpriv->lock);
 
-	//for(i = 0 ; i < MAX_NUMBLKS; i++)
+	//for (i = 0 ; i < MAX_NUMBLKS; i++)
 	//	_init_txservq(&(psta_xmitpriv->blk_q[i]));
 
 	_init_txservq(&psta_xmitpriv->be_q);
@@ -89,7 +89,7 @@ _func_enter_;
 
 	pxmitpriv->adapter = padapter;
 
-	//for(i = 0 ; i < MAX_NUMBLKS; i++)
+	//for (i = 0 ; i < MAX_NUMBLKS; i++)
 	//	_rtw_init_queue(&pxmitpriv->blk_strms[i]);
 
 	_rtw_init_queue(&pxmitpriv->be_pending);
@@ -317,14 +317,14 @@ void _rtw_free_xmit_priv (struct xmit_pr
 	if (pxmitpriv->pxmit_frame_buf==NULL)
 		goto out;
 
-	for(i=0; i<NR_XMITFRAME; i++)
+	for (i=0; i<NR_XMITFRAME; i++)
 	{
 		rtw_os_xmit_complete(padapter, pxmitframe);
 
 		pxmitframe++;
 	}
 
-	for(i=0; i<NR_XMITBUFF; i++)
+	for (i=0; i<NR_XMITBUFF; i++)
 	{
 		rtw_os_xmit_resource_free(padapter, pxmitbuf,(MAX_XMITBUF_SZ + XMITBUF_ALIGN_SZ));
 		pxmitbuf++;
@@ -343,7 +343,7 @@ void _rtw_free_xmit_priv (struct xmit_pr
 	_rtw_spinlock_free(&pxmitpriv->free_xmit_extbuf_queue.lock);
 
 	pxmitbuf = (struct xmit_buf *)pxmitpriv->pxmit_extbuf;
-	for(i=0; i<NR_XMIT_EXTBUFF; i++)
+	for (i=0; i<NR_XMIT_EXTBUFF; i++)
 	{
 		rtw_os_xmit_resource_free(padapter, pxmitbuf,(MAX_XMIT_EXTBUF_SZ + XMITBUF_ALIGN_SZ));
 
@@ -913,7 +913,7 @@ _func_enter_;
 
 			payload=pframe;
 
-			for(curfragnum=0;curfragnum<pattrib->nr_frags;curfragnum++){
+			for (curfragnum=0;curfragnum<pattrib->nr_frags;curfragnum++){
 				payload=(u8 *)RND4((SIZE_PTR)(payload));
 				RT_TRACE(_module_rtl871x_xmit_c_,_drv_err_,("===curfragnum=%d, pframe= 0x%.2x, 0x%.2x, 0x%.2x, 0x%.2x, 0x%.2x, 0x%.2x, 0x%.2x, 0x%.2x,!!!\n",
 					curfragnum,*payload, *(payload+1),*(payload+2),*(payload+3),*(payload+4),*(payload+5),*(payload+6),*(payload+7)));
@@ -945,7 +945,7 @@ _func_enter_;
 
 			RT_TRACE(_module_rtl871x_xmit_c_,_drv_info_,("\n ========last pkt========\n"));
 			payload=payload-pattrib->last_txcmdsz+8;
-			for(curfragnum=0;curfragnum<pattrib->last_txcmdsz;curfragnum=curfragnum+8)
+			for (curfragnum=0;curfragnum<pattrib->last_txcmdsz;curfragnum=curfragnum+8)
 					RT_TRACE(_module_rtl871x_xmit_c_,_drv_info_,(" %.2x,  %.2x,  %.2x,  %.2x,  %.2x,  %.2x,  %.2x,  %.2x ",
 					*(payload+curfragnum), *(payload+curfragnum+1), *(payload+curfragnum+2),*(payload+curfragnum+3),
 					*(payload+curfragnum+4),*(payload+curfragnum+5),*(payload+curfragnum+6),*(payload+curfragnum+7)));
@@ -2231,9 +2231,9 @@ _func_enter_;
 		acirp_cnt[2] = pxmitpriv->beq_cnt;
 		acirp_cnt[3] = pxmitpriv->bkq_cnt;
 
-		for(i=0; i<4; i++)
+		for (i=0; i<4; i++)
 		{
-			for(j=i+1; j<4; j++)
+			for (j=i+1; j<4; j++)
 			{
 				if (acirp_cnt[j]<acirp_cnt[i])
 				{
@@ -2251,7 +2251,7 @@ _func_enter_;
 
 	spin_lock_bh(&pxmitpriv->lock);
 
-	for(i = 0; i < entry; i++)
+	for (i = 0; i < entry; i++)
 	{
 		phwxmit = phwxmit_i + inx[i];
 
@@ -2450,7 +2450,7 @@ void rtw_init_hwxmits(struct hw_xmit *ph
 {
 	int i;
 _func_enter_;
-	for(i = 0; i < entry; i++, phwxmit++)
+	for (i = 0; i < entry; i++, phwxmit++)
 	{
 		//_rtw_spinlock_init(&phwxmit->xmit_lock);
 		//INIT_LIST_HEAD(&phwxmit->pending);
--- a/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
@@ -182,7 +182,7 @@ _func_enter_;
 				memcpy((u8 *)(BoxContent)+1, pCmdBuffer+BufIndex, 1);
 				//PlatformEFIOWrite4Byte(Adapter, BOXReg, *((pu4Byte)BoxContent));
 				//For Endian Free.
-				for(idx= 0; idx < 4; idx++)
+				for (idx= 0; idx < 4; idx++)
 				{
 					rtw_write8(padapter, BOXReg+idx, BoxContent[idx]);
 				}
@@ -193,7 +193,7 @@ _func_enter_;
 				BoxContent[0] &= ~(BIT7);
 				memcpy((u8 *)(BoxContent)+1, pCmdBuffer+BufIndex, 2);
 				//PlatformEFIOWrite4Byte(Adapter, BOXReg, *((pu4Byte)BoxContent));
-				for(idx=0; idx < 4; idx++)
+				for (idx=0; idx < 4; idx++)
 				{
 					rtw_write8(padapter, BOXReg+idx, BoxContent[idx]);
 				}
@@ -204,7 +204,7 @@ _func_enter_;
 				BoxContent[0] &= ~(BIT7);
 				memcpy((u8 *)(BoxContent)+1, pCmdBuffer+BufIndex, 3);
 				//PlatformEFIOWrite4Byte(Adapter, BOXReg, *((pu4Byte)BoxContent));
-				for(idx = 0; idx < 4 ; idx++)
+				for (idx = 0; idx < 4 ; idx++)
 				{
 					rtw_write8(padapter, BOXReg+idx, BoxContent[idx]);
 				}
@@ -217,11 +217,11 @@ _func_enter_;
 				memcpy((u8 *)(BoxContent)+1, pCmdBuffer+BufIndex+2, 2);
 				//PlatformEFIOWrite2Byte(Adapter, BOXExtReg, *((pu2Byte)BoxExtContent));
 				//PlatformEFIOWrite4Byte(Adapter, BOXReg, *((pu4Byte)BoxContent));
-				for(idx = 0 ; idx < 2 ; idx ++)
+				for (idx = 0 ; idx < 2 ; idx ++)
 				{
 					rtw_write8(padapter, BOXExtReg+idx, BoxExtContent[idx]);
 				}
-				for(idx = 0 ; idx < 4 ; idx ++)
+				for (idx = 0 ; idx < 4 ; idx ++)
 				{
 					rtw_write8(padapter, BOXReg+idx, BoxContent[idx]);
 				}
@@ -234,11 +234,11 @@ _func_enter_;
 				memcpy((u8 *)(BoxContent)+1, pCmdBuffer+BufIndex+2, 3);
 				//PlatformEFIOWrite2Byte(Adapter, BOXExtReg, *((pu2Byte)BoxExtContent));
 				//PlatformEFIOWrite4Byte(Adapter, BOXReg, *((pu4Byte)BoxContent));
-				for(idx = 0 ; idx < 2 ; idx ++)
+				for (idx = 0 ; idx < 2 ; idx ++)
 				{
 					rtw_write8(padapter, BOXExtReg+idx, BoxExtContent[idx]);
 				}
-				for(idx = 0 ; idx < 4 ; idx ++)
+				for (idx = 0 ; idx < 4 ; idx ++)
 				{
 					rtw_write8(padapter, BOXReg+idx, BoxContent[idx]);
 				}
@@ -928,7 +928,7 @@ _func_enter_;
 			}
 
 			// hw only support 2 set of NoA
-			for( i=0 ; i<pwdinfo->noa_num ; i++)
+			for ( i=0 ; i<pwdinfo->noa_num ; i++)
 			{
 				// To control the register setting for which NOA
 				rtw_write8(padapter, 0x5CF, (i << 4));
--- a/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
@@ -1354,7 +1354,7 @@ static void PWDB_Monitor(
 
 		spin_lock_bh(&pstapriv->sta_hash_lock);
 
-		for(i=0; i< NUM_STA; i++)
+		for (i=0; i< NUM_STA; i++)
 		{
 			phead = &(pstapriv->sta_hash[i]);
 			plist = get_next(phead);
@@ -1388,7 +1388,7 @@ static void PWDB_Monitor(
 		if (pHalData->fw_ractrl == true)
 		{
 			// Report every sta's RSSI to FW
-			for(i=0; i< sta_cnt; i++)
+			for (i=0; i< sta_cnt; i++)
 			{
 				FillH2CCmd92D(Adapter, H2C_RSSI_REPORT, 3, (u8 *)(&PWDB_rssi[i]));
 			}
@@ -1630,7 +1630,7 @@ dm_RXGainTrackingCallback_ThermalMeter_9
 
 	//DBG_8192D("===>dm_RXGainTrackingCallback_ThermalMeter_92D interface %d  Rx Gain %x\n", pHalData->interfaceIndex, u4tmp);
 
-	for(eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++){
+	for (eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++){
 		PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_RXRF_A3, bRFRegOffsetMask, (pdmpriv->RegRF3C[eRFPath]&(~(0xF000)))|u4tmp);
 	}
 
@@ -1721,7 +1721,7 @@ dm_TXPowerTrackingCallback_ThermalMeter_
 		{
 			//Query OFDM path A default setting
 			ele_D = PHY_QueryBBReg(Adapter, rOFDM0_XATxIQImbalance, bMaskDWord)&bMaskOFDM_D;
-			for(i=0; i<OFDM_TABLE_SIZE_92D; i++)	//find the index
+			for (i=0; i<OFDM_TABLE_SIZE_92D; i++)	//find the index
 			{
 				if (ele_D == (OFDMSwingTable[i]&bMaskOFDM_D))
 				{
@@ -1736,7 +1736,7 @@ dm_TXPowerTrackingCallback_ThermalMeter_
 			if (is2T)
 			{
 				ele_D = PHY_QueryBBReg(Adapter, rOFDM0_XBTxIQImbalance, bMaskDWord)&bMaskOFDM_D;
-				for(i=0; i<OFDM_TABLE_SIZE_92D; i++)	//find the index
+				for (i=0; i<OFDM_TABLE_SIZE_92D; i++)	//find the index
 				{
 					if (ele_D == (OFDMSwingTable[i]&bMaskOFDM_D))
 					{
@@ -1753,7 +1753,7 @@ dm_TXPowerTrackingCallback_ThermalMeter_
 				//Query CCK default setting From 0xa24
 				TempCCk = pdmpriv->RegA24;
 
-				for(i=0 ; i<CCK_TABLE_SIZE ; i++)
+				for (i=0 ; i<CCK_TABLE_SIZE ; i++)
 				{
 					if (pdmpriv->bCCKinCH14)
 					{
@@ -1790,7 +1790,7 @@ dm_TXPowerTrackingCallback_ThermalMeter_
 				pdmpriv->ThermalValue_IQK = ThermalValue;
 				pdmpriv->ThermalValue_RxGain = pHalData->EEPROMThermalMeter;
 
-				for(i = 0; i < rf; i++)
+				for (i = 0; i < rf; i++)
 					pdmpriv->OFDM_index[i] = OFDM_index_old[i];
 				pdmpriv->CCK_index = CCK_index_old;
 			}
@@ -1807,7 +1807,7 @@ dm_TXPowerTrackingCallback_ThermalMeter_
 				if (pdmpriv->ThermalValue_AVG_index == AVG_THERMAL_NUM)
 					pdmpriv->ThermalValue_AVG_index = 0;
 
-				for(i = 0; i < AVG_THERMAL_NUM; i++)
+				for (i = 0; i < AVG_THERMAL_NUM; i++)
 				{
 					if (pdmpriv->ThermalValue_AVG[i])
 					{
@@ -1865,20 +1865,20 @@ dm_TXPowerTrackingCallback_ThermalMeter_
 
 					if (ThermalValue > pHalData->EEPROMThermalMeter)
 					{
-						for(i = 0; i < rf; i++)
+						for (i = 0; i < rf; i++)
 							OFDM_index[i] = pdmpriv->OFDM_index[i] -delta;
 						CCK_index = pdmpriv->CCK_index -delta;
 					}
 					else
 					{
-						for(i = 0; i < rf; i++)
+						for (i = 0; i < rf; i++)
 							OFDM_index[i] = pdmpriv->OFDM_index[i] + index;
 						CCK_index = pdmpriv->CCK_index + index;
 					}
 				}
 				else if (pHalData->CurrentBandType92D == BAND_ON_5G)
 				{
-					for(i = 0; i < rf; i++)
+					for (i = 0; i < rf; i++)
 					{
 						if (pHalData->MacPhyMode92D == DUALMAC_DUALPHY &&
 							pHalData->interfaceIndex == 1)		//MAC 1 5G
@@ -1951,7 +1951,7 @@ dm_TXPowerTrackingCallback_ThermalMeter_
 						pdmpriv->OFDM_index[0], pdmpriv->CCK_index);
 				}*/
 
-				for(i = 0; i < rf; i++)
+				for (i = 0; i < rf; i++)
 				{
 					if (OFDM_index[i] > OFDM_TABLE_SIZE_92D-1)
 					{
@@ -2457,7 +2457,7 @@ rtl8192d_InitHalDm(
 	pdmpriv->DMFlag_tmp = pdmpriv->DMFlag;
 
 	// Save REG_INIDATA_RATE_SEL value for TXDESC.
-	for(i = 0 ; i<32 ; i++)
+	for (i = 0 ; i<32 ; i++)
 	{
 		pdmpriv->INIDATA_RATE[i] = rtw_read8(Adapter, REG_INIDATA_RATE_SEL+i) & 0x3f;
 	}
@@ -2691,7 +2691,7 @@ _record_initrate:
 			if (Adapter->tdlsinfo.setup_state == TDLS_LINKED_STATE)
 			{
 				u8 i=1;
-				for(; i < (Adapter->tdlsinfo.macid_index) ; i++)
+				for (; i < (Adapter->tdlsinfo.macid_index) ; i++)
 				{
 					pdmpriv->INIDATA_RATE[i] = rtw_read8(Adapter, (REG_INIDATA_RATE_SEL+i)) & 0x3f;
 				}
@@ -2702,7 +2702,7 @@ _record_initrate:
 		else
 		{
 			u8	i;
-			for(i=1 ; i < (Adapter->stapriv.asoc_sta_count + 1); i++)
+			for (i=1 ; i < (Adapter->stapriv.asoc_sta_count + 1); i++)
 			{
 				pdmpriv->INIDATA_RATE[i] = rtw_read8(Adapter, (REG_INIDATA_RATE_SEL+i)) & 0x3f;
 			}
--- a/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
@@ -119,7 +119,7 @@ _BlockWrite_92d(
 
 	blockCount = size / blockSize;
 	remain8 = size % blockSize;
-	for(i = 0 ; i < blockCount ; i++){
+	for (i = 0 ; i < blockCount ; i++){
 		offset = i * blockSize;
 		ret = rtw_writeN(Adapter, (FW_8192D_START_ADDRESS + offset), 64,(bufferPtr + offset));
 
@@ -134,7 +134,7 @@ _BlockWrite_92d(
 		blockCount8=remain8/blockSize8;
 		remain4=remain8%blockSize8;
 		//RT_TRACE(COMP_INIT,DBG_LOUD,("remain4 size %x blockcount %x blockCount8 %x\n",remain4,blockCount,blockCount8));
-		for(i = 0 ; i < blockCount8 ; i++){
+		for (i = 0 ; i < blockCount8 ; i++){
 			ret = rtw_writeN(Adapter, (FW_8192D_START_ADDRESS + offset+i*blockSize8), 8,(bufferPtr + offset+i*blockSize8));
 
 			if (ret == _FAIL)
@@ -146,7 +146,7 @@ _BlockWrite_92d(
 			blockCount4=remain4/blocksize4;
 			remainSize=remain8%blocksize4;
 
-			for(i = 0 ; i < blockCount4 ; i++){
+			for (i = 0 ; i < blockCount4 ; i++){
 				ret = rtw_write32(Adapter, (FW_8192D_START_ADDRESS + offset+i*blocksize4), cpu_to_le32(*(pu4BytePtr+ offset/4+i)));
 
 				if (ret == _FAIL)
@@ -155,7 +155,7 @@ _BlockWrite_92d(
 
 			if (remainSize){
 				offset=blockCount * blockSize+blockCount8*blockSize8+blockCount4*blocksize4;
-				for(i = 0 ; i < remainSize ; i++){
+				for (i = 0 ; i < remainSize ; i++){
 					ret = rtw_write8(Adapter, (FW_8192D_START_ADDRESS + offset + i), *(bufferPtr +offset+ i));
 
 					if (ret == _FAIL)
@@ -204,7 +204,7 @@ _WriteFW(
 	pageNums = size / MAX_PAGE_SIZE ;
 	remainSize = size % MAX_PAGE_SIZE;
 
-	for(page = 0; page < pageNums;  page++){
+	for (page = 0; page < pageNums;  page++){
 		offset = page *MAX_PAGE_SIZE;
 		ret = _PageWrite(Adapter,page, (bufferPtr+offset),MAX_PAGE_SIZE);
 
@@ -515,7 +515,7 @@ int FirmwareDownload92D(
 	else if (bFwDownloadInProcess)
 	{
 		RELEASE_GLOBAL_MUTEX(GlobalMutexForFwDownload);
-		for(count=0;count<5000;count++)
+		for (count=0;count<5000;count++)
 		{
 			rtw_udelay_os(500);
 			ACQUIRE_GLOBAL_MUTEX(GlobalMutexForFwDownload);
@@ -782,8 +782,8 @@ hal_ReadPowerValueFromPROM92D(
 	memset(pwrInfo, 0, sizeof(struct tx_power_info));
 
 	if (AutoLoadFail){
-		for(group = 0 ; group < CHANNEL_GROUP_MAX ; group++){
-			for(rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
+		for (group = 0 ; group < CHANNEL_GROUP_MAX ; group++){
+			for (rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
 				if (group< CHANNEL_GROUP_MAX_2G)
 				{
 					pwrInfo->CCKIndex[rfPath][group]		= EEPROM_Default_TxPowerLevel_2G;
@@ -801,7 +801,7 @@ hal_ReadPowerValueFromPROM92D(
 			}
 		}
 
-		for(i = 0; i < 3; i++)
+		for (i = 0; i < 3; i++)
 		{
 			pwrInfo->TSSI_A_5G[i] = EEPROM_Default_TSSI;
 			pwrInfo->TSSI_B_5G[i] = EEPROM_Default_TSSI;
@@ -812,8 +812,8 @@ hal_ReadPowerValueFromPROM92D(
 
 	//Maybe autoload OK,buf the tx power index vlaue is not filled.
 	//If we find it,we set it default value.
-	for(rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
-		for(group = 0 ; group < CHANNEL_GROUP_MAX_2G; group++){
+	for (rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
+		for (group = 0 ; group < CHANNEL_GROUP_MAX_2G; group++){
 			eeAddr = EEPROM_CCK_TX_PWR_INX_2G + (rfPath * 3) + group;
 			pwrInfo->CCKIndex[rfPath][group] =
 				(PROMContent[eeAddr] == 0xFF)?(eeAddr>0x7B?EEPROM_Default_TxPowerLevel_5G:EEPROM_Default_TxPowerLevel_2G):PROMContent[eeAddr];
@@ -821,8 +821,8 @@ hal_ReadPowerValueFromPROM92D(
 				pHalData->bNOPG = true;
 		}
 	}
-	for(rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
-		for(group = 0 ; group < CHANNEL_GROUP_MAX ; group++){
+	for (rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
+		for (group = 0 ; group < CHANNEL_GROUP_MAX ; group++){
 			offset1 = group / 3;
 			offset2 = group % 3;
 			eeAddr = EEPROM_HT40_1S_TX_PWR_INX_2G+ (rfPath * 3) + offset2 + offset1*21;
@@ -832,8 +832,8 @@ hal_ReadPowerValueFromPROM92D(
 	}
 
 	//These just for 92D efuse offset.
-	for(group = 0 ; group < CHANNEL_GROUP_MAX ; group++){
-		for(rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
+	for (group = 0 ; group < CHANNEL_GROUP_MAX ; group++){
+		for (rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
 			offset1 = group / 3;
 			offset2 = group % 3;
 
@@ -895,7 +895,7 @@ hal_ReadPowerValueFromPROM92D(
 	}
 	else
 	{
-		for(i = 0; i < 3; i++)
+		for (i = 0; i < 3; i++)
 		{
 			pwrInfo->TSSI_A_5G[i] = EEPROM_Default_TSSI;
 			pwrInfo->TSSI_B_5G[i] = EEPROM_Default_TSSI;
@@ -994,7 +994,7 @@ rtl8192d_ReadTxPowerInfo(
 	if (pHalData->EEPROMRegulatory >3)
 		pHalData->EEPROMRegulatory = 0;
 
-	for(i = 0; i < 2; i++)
+	for (i = 0; i < 2; i++)
 	{
 		switch(tempval[i])
 		{
@@ -1035,8 +1035,8 @@ rtl8192d_ReadTxPowerInfo(
 	//RTPRINT(FINIT, INIT_TxPower, ("CrystalCap = 0x%x\n", pHalData->CrystalCap));
 	//RTPRINT(FINIT, INIT_TxPower, ("Delta_IQK = 0x%x Delta_LCK = 0x%x\n", pHalData->Delta_IQK, pHalData->Delta_LCK));
 
-	for(rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
-		for(ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
+	for (rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
+		for (ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
 			group = Hal_GetChnlGroupfromArray((u8)ch);
 
 			if (ch < CHANNEL_MAX_NUMBER_2G)
@@ -1057,8 +1057,8 @@ rtl8192d_ReadTxPowerInfo(
 
 #if DBG
 
-	for(rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
-		for(ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
+	for (rfPath = 0 ; rfPath < RF_PATH_MAX ; rfPath++){
+		for (ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
 			if (ch < CHANNEL_MAX_NUMBER_2G)
 			{
 				DBG_8192D("RF(%d)-Ch(%d) [CCK / HT40_1S / HT40_2S] = [0x%x / 0x%x / 0x%x]\n",
@@ -1077,19 +1077,19 @@ rtl8192d_ReadTxPowerInfo(
 		}
 	}
 
-	for(ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
+	for (ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
 		DBG_8192D("RF-A Ht20 to HT40 Diff[%d] = 0x%x\n", ch, pHalData->TxPwrHt20Diff[RF_PATH_A][ch]);
 	}
 
-	for(ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
+	for (ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
 		DBG_8192D("RF-A Legacy to Ht40 Diff[%d] = 0x%x\n", ch, pHalData->TxPwrLegacyHtDiff[RF_PATH_A][ch]);
 	}
 
-	for(ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
+	for (ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
 		DBG_8192D("RF-B Ht20 to HT40 Diff[%d] = 0x%x\n", ch, pHalData->TxPwrHt20Diff[RF_PATH_B][ch]);
 	}
 
-	for(ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
+	for (ch = 0 ; ch < CHANNEL_MAX_NUMBER ; ch++){
 		DBG_8192D("RF-B Legacy to HT40 Diff[%d] = 0x%x\n", ch, pHalData->TxPwrLegacyHtDiff[RF_PATH_B][ch]);
 	}
 
@@ -1244,7 +1244,7 @@ PHY_SetPowerOnFor8192D(
 		value8 = rtw_read8(Adapter, REG_POWER_OFF_IN_PROCESS);
 		RELEASE_GLOBAL_MUTEX(GlobalMutexForPowerOnAndPowerOff);
 
-		for(i=0;i<200;i++)
+		for (i=0;i<200;i++)
 		{
 			if ((value8&BIT7) == 0)
 			{
@@ -1434,7 +1434,7 @@ ReadEFuse_RTL8192D(
 			// Get word enable value from PG header
 			//RTPRINT(FEEPROM, EFUSE_READ_ALL, ("Offset-%d Worden=%x\n", offset, wren));
 
-			for(i=0; i<EFUSE_MAX_WORD_UNIT; i++)
+			for (i=0; i<EFUSE_MAX_WORD_UNIT; i++)
 			{
 				// Check word enable condition in the section
 				if (!(wren & 0x01))
@@ -1481,9 +1481,9 @@ ReadEFuse_RTL8192D(
 	//
 	// 3. Collect 16 sections and 4 word unit into Efuse map.
 	//
-	for(i=0; i<EFUSE_MAX_SECTION; i++)
+	for (i=0; i<EFUSE_MAX_SECTION; i++)
 	{
-		for(j=0; j<EFUSE_MAX_WORD_UNIT; j++)
+		for (j=0; j<EFUSE_MAX_WORD_UNIT; j++)
 		{
 			efuseTbl[(i*8)+(j*2)]=(eFuseWord[i][j] & 0xff);
 			efuseTbl[(i*8)+((j*2)+1)]=((eFuseWord[i][j] >> 8) & 0xff);
@@ -1493,7 +1493,7 @@ ReadEFuse_RTL8192D(
 	//
 	// 4. Copy from Efuse map to output pointer memory!!!
 	//
-	for(i=0; i<_size_byte; i++)
+	for (i=0; i<_size_byte; i++)
 	{
 		pbuf[i] = efuseTbl[_offset+i];
 	}
@@ -1782,7 +1782,7 @@ rtl8192d_Efuse_PgPacketRead(	struct rtw_
 				bDataEmpty = true ;
 
 				if (hoffset==offset){
-					for(tmpidx = 0;tmpidx< word_cnts*2 ;tmpidx++){
+					for (tmpidx = 0;tmpidx< word_cnts*2 ;tmpidx++){
 						if (efuse_OneByteRead(pAdapter, efuse_addr+1+tmpidx ,&efuse_data, bPseudoTest) ){
 							tmpdata[tmpidx] = efuse_data;
 							if (efuse_data!=0xff){
@@ -1947,7 +1947,7 @@ rtl8192d_Efuse_PgPacketWrite(struct rtw_
 					//RTPRINT(FEEPROM, EFUSE_PG, ("efuse_PgPacketWrite section offset the same\n"));
 
 					//************  so-2 *******************
-					for(tmpindex=0 ; tmpindex<(tmp_word_cnts*2) ; tmpindex++)
+					for (tmpindex=0 ; tmpindex<(tmp_word_cnts*2) ; tmpindex++)
 					{
 						if (efuse_OneByteRead(pAdapter, (efuse_addr+1+tmpindex) ,&efuse_data, bPseudoTest)&&(efuse_data != 0xFF)){
 							bDataEmpty = false;
--- a/drivers/staging/rtl8192du/hal/rtl8192d_mp.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_mp.c
@@ -36,7 +36,7 @@ void Hal_MptSet8256CCKTxPower( PADAPTER
 	u8				TxAGC[2]={0, 0};
 	u32			 tmpval=0;
 	u8				rf;
-	for(rf=0; rf<2; rf++)
+	for (rf=0; rf<2; rf++)
 		TxAGC[rf] = pTxPower[rf];
 
 	// rf-A cck tx power
@@ -496,7 +496,7 @@ void Hal_SetTxPower (PADAPTER pAdapter)
     TxPowerLevel_HTOFDM[RF_PATH_A] = pAdapter->mppriv.txpoweridx;
 	TxPowerLevel_HTOFDM[RF_PATH_B] = pAdapter->mppriv.txpoweridx_b;
 
-	for(rf=0; rf<2; rf++)
+	for (rf=0; rf<2; rf++)
 	{
 		if (IS_HARDWARE_TYPE_8192D(pAdapter))
 		{
@@ -985,7 +985,7 @@ static u8 GetRightChnlPlace(u8 chnl)
 
 	if (chnl > 14)
 	{
-		for(place = 14; place<sizeof(channel_5G); place++)
+		for (place = 14; place<sizeof(channel_5G); place++)
 		{
 			if (channel_5G[place] == chnl)
 			{
@@ -1022,12 +1022,12 @@ void
 	{
 		u4tmp = CurveIndex[GetRightChnlPlace(channel)-1];
 
-		for(i = 0; i < RF_CHNL_NUM_5G; i++) {
+		for (i = 0; i < RF_CHNL_NUM_5G; i++) {
 			if (channel == RF_CHNL_5G[i] && channel <= 140)
 				index = 0;
 		}
 
-		for(i = 0; i < RF_CHNL_NUM_5G_40M; i++) {
+		for (i = 0; i < RF_CHNL_NUM_5G_40M; i++) {
 			if (channel == RF_CHNL_5G_40M[i] && channel <= 140)
 				index = 1;
 		}
@@ -1060,7 +1060,7 @@ void
 				phy_EnableRFENV(Adapter, path, MaskforPhySet, &u4RegValue);
 		}
 
-		for(i = 0; i < RF_REG_NUM_for_C_CUT_5G; i++)
+		for (i = 0; i < RF_REG_NUM_for_C_CUT_5G; i++)
 		{
 #if 1
 			if (i == 0 && (pHalData->MacPhyMode92D == DUALMAC_DUALPHY))
@@ -1127,7 +1127,7 @@ void
 		else
 			index = 2;
 
-		for(eRFPath = RF_PATH_A; eRFPath < pHalData->NumTotalRFPath; eRFPath++)
+		for (eRFPath = RF_PATH_A; eRFPath < pHalData->NumTotalRFPath; eRFPath++)
 		{
 			if (pHalData->MacPhyMode92D == DUALMAC_DUALPHY &&
 				pHalData->interfaceIndex == 1)		//MAC 1 5G
@@ -1137,7 +1137,7 @@ void
 
 			if (bInteralPA)
 			{
-				for(i = 0; i < RF_REG_NUM_for_C_CUT_5G_internalPA; i++)
+				for (i = 0; i < RF_REG_NUM_for_C_CUT_5G_internalPA; i++)
 				{
 					if (RF_REG_for_C_CUT_5G_internalPA[i] == 0x03 &&
 						channel >=36 && channel <=64)
@@ -1192,7 +1192,7 @@ void
 		}
 
 
-		for(i = 0; i < RF_REG_NUM_for_C_CUT_2G; i++)
+		for (i = 0; i < RF_REG_NUM_for_C_CUT_2G; i++)
 		{
 #if 1
 #if SWLCK == 1
@@ -1267,7 +1267,7 @@ void Hal_mpt_SwitchRfSetting(PADAPTER pA
     }
 
 
-    for(eRFPath = 0; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
+    for (eRFPath = 0; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
     {
         if (pHalData->MacPhyMode92D == DUALMAC_DUALPHY &&
             pHalData->interfaceIndex == 1)      //MAC 1 5G
@@ -1306,7 +1306,7 @@ void MPT_CCKTxPowerAdjust(PADAPTER Adapt
 	{
 		// Readback the current bb cck swing value and compare with the table to
 		// get the current swing index
-		for(i=0 ; i<CCK_TABLE_SIZE ; i++)
+		for (i=0 ; i<CCK_TABLE_SIZE ; i++)
 		{
 			if ( ((CurrCCKSwingVal&0xff) == (u4Byte)CCKSwingTable_Ch1_Ch13[i][0]) &&
 				( ((CurrCCKSwingVal&0xff00)>>8) == (u4Byte)CCKSwingTable_Ch1_Ch13[i][1]) )
@@ -1338,7 +1338,7 @@ void MPT_CCKTxPowerAdjust(PADAPTER Adapt
 	}
 	else
 	{
-		for(i=0 ; i<CCK_TABLE_SIZE ; i++)
+		for (i=0 ; i<CCK_TABLE_SIZE ; i++)
 		{
 			if ( ((CurrCCKSwingVal&0xff) == (u4Byte)CCKSwingTable_Ch14[i][0]) &&
 				( ((CurrCCKSwingVal&0xff00)>>8) == (u4Byte)CCKSwingTable_Ch14[i][1]) )
--- a/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
@@ -120,7 +120,7 @@ static u8 GetRightChnlPlace(u8 chnl)
 
 	if (chnl > 14)
 	{
-		for(place = 14; place<sizeof(channel_5G); place++)
+		for (place = 14; place<sizeof(channel_5G); place++)
 		{
 			if (channel_5G[place] == chnl)
 			{
@@ -148,7 +148,7 @@ u8 rtl8192d_GetRightChnlPlaceforIQK(u8 c
 
 	if (chnl > 14)
 	{
-		for(place = 14; place<sizeof(channel_all); place++)
+		for (place = 14; place<sizeof(channel_all); place++)
 		{
 			if (channel_all[place] == chnl)
 			{
@@ -182,7 +182,7 @@ phy_CalculateBitShift(
 {
 	u32 i;
 
-	for(i=0; i<=31; i++)
+	for (i=0; i<=31; i++)
 	{
 		if ( ((BitMask>>i) &  0x1 ) == 1)
 			break;
@@ -428,7 +428,7 @@ phy_RFSerialRead(
 
 	PHY_SetBBReg(Adapter, pPhyReg->rfHSSIPara2|MaskforPhySet, bMaskDWord, tmplong2);
 	//rtw_udelay_os(1000);
-	for(i=0;i<2;i++)
+	for (i=0;i<2;i++)
 		rtw_udelay_os(MAX_STALL_TIME);
 	PHY_SetBBReg(Adapter, rFPGA0_XA_HSSIParameter2|MaskforPhySet, bMaskDWord, tmplong|bLSSIReadEdge);
 	rtw_udelay_os(10);
@@ -720,7 +720,7 @@ phy_ConfigMACWithHeaderFile(
 	ptrArray = (u32 *)Rtl8192D_MAC_Array;
 	//RT_TRACE(COMP_INIT, DBG_LOUD, (" ===> phy_ConfigMACWithHeaderFile() Img:Rtl819XMAC_Array\n"));
 
-	for(i = 0 ;i < ArrayLength;i=i+2){ // Add by tynli for 2 column
+	for (i = 0 ;i < ArrayLength;i=i+2){ // Add by tynli for 2 column
 		rtw_write8(Adapter, ptrArray[i], (u8)ptrArray[i+1]);
 	}
 
@@ -967,7 +967,7 @@ phy_ConfigBBWithHeaderFile(
 
 	if (ConfigType == BaseBand_Config_PHY_REG)
 	{
-		for(i=0;i<PHY_REGArrayLen;i=i+2)
+		for (i=0;i<PHY_REGArrayLen;i=i+2)
 		{
 			if (Rtl819XPHY_REGArray_Table[i] == 0xfe || Rtl819XPHY_REGArray_Table[i] == 0xffe){
 				#ifdef CONFIG_LONG_DELAY_ISSUE
@@ -1001,7 +1001,7 @@ phy_ConfigBBWithHeaderFile(
 		//especial for 5G, vivi, 20100528
 		if (pHalData->interfaceIndex == 0)
 		{
-			for(i=0;i<AGCTAB_ArrayLen;i=i+2)
+			for (i=0;i<AGCTAB_ArrayLen;i=i+2)
 			{
 				PHY_SetBBReg(Adapter, Rtl819XAGCTAB_Array_Table[i], bMaskDWord, Rtl819XAGCTAB_Array_Table[i+1]);
 
@@ -1016,7 +1016,7 @@ phy_ConfigBBWithHeaderFile(
 		{
 			if (pHalData->CurrentBandType92D == BAND_ON_2_4G)
 			{
-				for(i=0;i<AGCTAB_ArrayLen;i=i+2)
+				for (i=0;i<AGCTAB_ArrayLen;i=i+2)
 				{
 					PHY_SetBBReg(Adapter, Rtl819XAGCTAB_Array_Table[i], bMaskDWord, Rtl819XAGCTAB_Array_Table[i+1]);
 
@@ -1029,7 +1029,7 @@ phy_ConfigBBWithHeaderFile(
 			}
 			else
 			{
-				for(i=0;i<AGCTAB_5GArrayLen;i=i+2)
+				for (i=0;i<AGCTAB_5GArrayLen;i=i+2)
 				{
 					PHY_SetBBReg(Adapter, Rtl819XAGCTAB_5GArray_Table[i], bMaskDWord, Rtl819XAGCTAB_5GArray_Table[i+1]);
 
@@ -1218,7 +1218,7 @@ phy_ConfigBBWithPgHeaderFile(
 
 	if (ConfigType == BaseBand_Config_PHY_REG)
 	{
-		for(i=0;i<PHY_REGArrayPGLen;i=i+3)
+		for (i=0;i<PHY_REGArrayPGLen;i=i+3)
 		{
 			//if (Rtl819XPHY_REGArray_Table_PG[i] == 0xfe) {
 			//	#ifdef CONFIG_LONG_DELAY_ISSUE
@@ -1346,7 +1346,7 @@ phy_ConfigBBWithMpHeaderFile(
 
 	if (ConfigType == BaseBand_Config_PHY_REG)
 	{
-		for(i=0;i<PHY_REGArrayMPLen;i=i+2)
+		for (i=0;i<PHY_REGArrayMPLen;i=i+2)
 		{
 			if (Rtl8192CPHY_REGArray_Table_MP[i] == 0xfe) {
 				#ifdef CONFIG_LONG_DELAY_ISSUE
@@ -1725,7 +1725,7 @@ rtl8192d_PHY_ConfigRFWithHeaderFile(
 
 	switch(eRFPath){
 		case RF_PATH_A:
-			for(i = 0;i<RadioA_ArrayLen; i=i+2)
+			for (i = 0;i<RadioA_ArrayLen; i=i+2)
 			{
 				if (Rtl819XRadioA_Array_Table[i] == 0xfe)
 				{
@@ -1738,13 +1738,13 @@ rtl8192d_PHY_ConfigRFWithHeaderFile(
 				else if (Rtl819XRadioA_Array_Table[i] == 0xfd)
 				{
 					//rtw_mdelay_os(5);
-					for(j=0;j<100;j++)
+					for (j=0;j<100;j++)
 						rtw_udelay_os(MAX_STALL_TIME);
 				}
 				else if (Rtl819XRadioA_Array_Table[i] == 0xfc)
 				{
 					//rtw_mdelay_os(1);
-					for(j=0;j<20;j++)
+					for (j=0;j<20;j++)
 						rtw_udelay_os(MAX_STALL_TIME);
 				}
 				else if (Rtl819XRadioA_Array_Table[i] == 0xfb)
@@ -1768,7 +1768,7 @@ rtl8192d_PHY_ConfigRFWithHeaderFile(
 			}
 			break;
 		case RF_PATH_B:
-			for(i = 0;i<RadioB_ArrayLen; i=i+2)
+			for (i = 0;i<RadioB_ArrayLen; i=i+2)
 			{
 				if (Rtl819XRadioB_Array_Table[i] == 0xfe)
 				{ // Deay specific ms. Only RF configuration require delay.
@@ -1781,13 +1781,13 @@ rtl8192d_PHY_ConfigRFWithHeaderFile(
 				else if (Rtl819XRadioB_Array_Table[i] == 0xfd)
 				{
 					//rtw_mdelay_os(5);
-					for(j=0;j<100;j++)
+					for (j=0;j<100;j++)
 						rtw_udelay_os(MAX_STALL_TIME);
 				}
 				else if (Rtl819XRadioB_Array_Table[i] == 0xfc)
 				{
 					//rtw_mdelay_os(1);
-					for(j=0;j<20;j++)
+					for (j=0;j<20;j++)
 						rtw_udelay_os(MAX_STALL_TIME);
 				}
 				else if (Rtl819XRadioB_Array_Table[i] == 0xfb)
@@ -1857,7 +1857,7 @@ rtl8192d_PHY_CheckBBAndRFOK(
 	WriteAddr[HW90_BLOCK_PHY1] = 0x800;
 	WriteAddr[HW90_BLOCK_RF] = 0x3;
 
-	for(i=0 ; i < CheckTimes ; i++)
+	for (i=0 ; i < CheckTimes ; i++)
 	{
 
 		//
@@ -2208,7 +2208,7 @@ PHY_UpdateTxPowerDbm8192D(
 
 	//RT_TRACE(COMP_TXAGC, DBG_LOUD, ("PHY_UpdateTxPowerDbm8192S(): %ld dBm , CckTxPwrIdx = %d, OfdmTxPwrIdx = %d\n", powerInDbm, CckTxPwrIdx, OfdmTxPwrIdx));
 
-	for(idx = 0; idx < CHANNEL_MAX_NUMBER; idx++)
+	for (idx = 0; idx < CHANNEL_MAX_NUMBER; idx++)
 	{
 		for (rf_path = 0; rf_path < 2; rf_path++)
 		{
@@ -2650,7 +2650,7 @@ PHY_SwitchWirelessBand(
 	}
 
 
-	for(i=0;i<20;i++)
+	for (i=0;i<20;i++)
 			rtw_udelay_os(MAX_STALL_TIME);
 
 	//DBG_8192D("PHY_SwitchWirelessBand():Switch Band OK.\n");
@@ -2775,13 +2775,13 @@ PHY_RestoreRFENV(
 	{
 		u4tmp = CurveIndex[GetRightChnlPlace(channel)-1];
 
-		for(i = 0; i < RF_CHNL_NUM_5G; i++)
+		for (i = 0; i < RF_CHNL_NUM_5G; i++)
 		{
 			if (channel == RF_CHNL_5G[i] && channel <= 140)
 				index = 0;
 		}
 
-		for(i = 0; i < RF_CHNL_NUM_5G_40M; i++)
+		for (i = 0; i < RF_CHNL_NUM_5G_40M; i++)
 		{
 			if (channel == RF_CHNL_5G_40M[i] && channel <= 140)
 				index = 1;
@@ -2815,7 +2815,7 @@ PHY_RestoreRFENV(
 				PHY_EnableRFENV(Adapter, path, MaskforPhySet, &u4RegValue);
 		}
 
-		for(i = 0; i < RF_REG_NUM_for_C_CUT_5G; i++)
+		for (i = 0; i < RF_REG_NUM_for_C_CUT_5G; i++)
 		{
 #if 1
 			if (i == 0 && (pHalData->MacPhyMode92D == DUALMAC_DUALPHY))
@@ -2880,7 +2880,7 @@ PHY_RestoreRFENV(
 		else
 			index = 2;
 
-		for(eRFPath = RF_PATH_A; eRFPath < pHalData->NumTotalRFPath; eRFPath++)
+		for (eRFPath = RF_PATH_A; eRFPath < pHalData->NumTotalRFPath; eRFPath++)
 		{
 			if (pHalData->MacPhyMode92D == DUALMAC_DUALPHY &&
 				pHalData->interfaceIndex == 1)		//MAC 1 5G
@@ -2890,7 +2890,7 @@ PHY_RestoreRFENV(
 
 			if (bInteralPA)
 			{
-				for(i = 0; i < RF_REG_NUM_for_C_CUT_5G_internalPA; i++)
+				for (i = 0; i < RF_REG_NUM_for_C_CUT_5G_internalPA; i++)
 				{
 					if (RF_REG_for_C_CUT_5G_internalPA[i] == 0x03 &&
 						channel >=36 && channel <=64)
@@ -2944,7 +2944,7 @@ PHY_RestoreRFENV(
 		}
 
 
-		for(i = 0; i < RF_REG_NUM_for_C_CUT_2G; i++)
+		for (i = 0; i < RF_REG_NUM_for_C_CUT_2G; i++)
 		{
 #if 1
 #if SWLCK == 1
@@ -3128,7 +3128,7 @@ static  void
 		group = channel<=64?1:2; //leave 0 for channel1-14.
 		IMR_NUM = MAX_RF_IMR_INDEX_NORMAL;
 
-		for(i=0; i<IMR_NUM; i++){
+		for (i=0; i<IMR_NUM; i++){
 			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_REG_FOR_5G_SWCHNL_NORMAL[i], RFMask,RF_IMR_Param_Normal[0][group][i]);
 		}
 		PHY_SetBBReg(Adapter, rFPGA0_AnalogParameter4, 0x00f00000,0);
@@ -3144,7 +3144,7 @@ static  void
 			PHY_SetBBReg(Adapter, rFPGA0_AnalogParameter4, 0x00f00000,	0xf);
 
 			IMR_NUM = MAX_RF_IMR_INDEX_NORMAL;
-			for(i=0; i<IMR_NUM; i++){
+			for (i=0; i<IMR_NUM; i++){
 				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_REG_FOR_5G_SWCHNL_NORMAL[i], bRFRegOffsetMask,RF_IMR_Param_Normal[0][0][i]);
 			}
 			PHY_SetBBReg(Adapter, rFPGA0_AnalogParameter4, 0x00f00000,0);
@@ -3287,7 +3287,7 @@ static void _PHY_SwChnl8192D(struct rtw_
 		//s2. RF dependent command - CmdID_RF_WriteReg, param1=RF_CHNLBW, param2=channel
 		param1 = RF_CHNLBW;
 		param2 = channel;
-		for(eRFPath = 0; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
+		for (eRFPath = 0; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
 		{
 #if 1
 			//pHalData->RfRegChnlVal[eRFPath] = PHY_QueryRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, bRFRegOffsetMask);
@@ -3791,7 +3791,7 @@ phy_PathA_IQK_5G_Normal(
 	PHY_SetBBReg(pAdapter, rFPGA0_XAB_RFInterfaceSW, bMaskDWord, 0x07000f60);
 	PHY_SetBBReg(pAdapter, rFPGA0_XA_RFInterfaceOE, bMaskDWord, 0x66e60e30);
 
-	for(i = 0 ; i < retryCount ; i++)
+	for (i = 0 ; i < retryCount ; i++)
 	{
 
 		//One shot, path A LOK & IQK
@@ -3962,7 +3962,7 @@ phy_PathB_IQK_5G_Normal(
 	PHY_SetBBReg(pAdapter, rFPGA0_XAB_RFInterfaceSW, bMaskDWord, 0x0f600700);
 	PHY_SetBBReg(pAdapter, rFPGA0_XB_RFInterfaceOE, bMaskDWord, 0x061f0d30);
 
-	for(i = 0 ; i < retryCount ; i++)
+	for (i = 0 ; i < retryCount ; i++)
 	{
 		//One shot, path B LOK & IQK
 		PHY_SetBBReg(pAdapter, rIQK_AGC_Pts, bMaskDWord, 0xfa000000);
@@ -4302,7 +4302,7 @@ phy_SaveADDARegisters(
 	//	return;
 
 	//RTPRINT(FINIT, INIT_IQK, ("Save ADDA parameters.\n"));
-	for( i = 0 ; i < RegisterNum ; i++){
+	for ( i = 0 ; i < RegisterNum ; i++){
 		ADDABackup[i] = PHY_QueryBBReg(pAdapter, ADDAReg[i], bMaskDWord);
 	}
 }
@@ -4317,7 +4317,7 @@ phy_SaveMACRegisters(
 	u32	i;
 
 	//RTPRINT(FINIT, INIT_IQK, ("Save MAC parameters.\n"));
-	for( i = 0 ; i < (IQK_MAC_REG_NUM - 1); i++){
+	for ( i = 0 ; i < (IQK_MAC_REG_NUM - 1); i++){
 		MACBackup[i] = rtw_read8(pAdapter, MACReg[i]);
 	}
 	MACBackup[i] = rtw_read32(pAdapter, MACReg[i]);
@@ -4335,7 +4335,7 @@ phy_ReloadADDARegisters(
 	u32	i;
 
 	//RTPRINT(FINIT, INIT_IQK, ("Reload ADDA power saving parameters !\n"));
-	for(i = 0 ; i < RegiesterNum ; i++){
+	for (i = 0 ; i < RegiesterNum ; i++){
 		//path-A/B BB to initial gain
 		if (ADDAReg[i] == rOFDM0_XAAGCCore1 || ADDAReg[i] == rOFDM0_XBAGCCore1)
 			PHY_SetBBReg(pAdapter, ADDAReg[i], bMaskDWord, 0x50);
@@ -4353,7 +4353,7 @@ phy_ReloadMACRegisters(
 	u32	i;
 
 	//RTPRINT(FINIT, INIT_IQK, ("Reload MAC parameters !\n"));
-	for(i = 0 ; i < (IQK_MAC_REG_NUM - 1); i++){
+	for (i = 0 ; i < (IQK_MAC_REG_NUM - 1); i++){
 		rtw_write8(pAdapter, MACReg[i], (u8)MACBackup[i]);
 	}
 	rtw_write32(pAdapter, MACReg[i], MACBackup[i]);
@@ -4379,7 +4379,7 @@ phy_PathADDAOn(
 	if (isPathAOn)     // Neil Chen
 		pathOn = pHalData->interfaceIndex == 0? 0x04db25a4 : 0x0b1b25a4;
 
-	for( i = 0 ; i < IQK_ADDA_REG_NUM ; i++){
+	for ( i = 0 ; i < IQK_ADDA_REG_NUM ; i++){
 		PHY_SetBBReg(pAdapter, ADDAReg[i], bMaskDWord, pathOn);
 	}
 }
@@ -4397,7 +4397,7 @@ phy_MACSettingCalibration(
 
 	rtw_write8(pAdapter, MACReg[i], 0x3F);
 
-	for(i = 1 ; i < (IQK_MAC_REG_NUM - 1); i++){
+	for (i = 1 ; i < (IQK_MAC_REG_NUM - 1); i++){
 		rtw_write8(pAdapter, MACReg[i], (u8)(MACBackup[i]&(~BIT3)));
 	}
 	rtw_write8(pAdapter, MACReg[i], (u8)(MACBackup[i]&(~BIT5)));
@@ -4453,7 +4453,7 @@ phy_SimularityCompare_92D(
 	SimularityBitMap = 0;
 
 	//check Tx
-	for( i = 0; i < bound; i++ )
+	for ( i = 0; i < bound; i++ )
 	{
 		diff = (result[c1][i] > result[c2][i]) ? (result[c1][i] - result[c2][i]) : (result[c2][i] - result[c1][i]);
 		if (diff > MAX_TOLERANCE_92D)
@@ -4474,17 +4474,17 @@ phy_SimularityCompare_92D(
 
 	if ( SimularityBitMap == 0)
 	{
-		for( i = 0; i < (bound/4); i++ )
+		for ( i = 0; i < (bound/4); i++ )
 		{
 			if (final_candidate[i] != 0xFF)
 			{
-				for( j = i*4; j < (i+1)*4-2; j++)
+				for ( j = i*4; j < (i+1)*4-2; j++)
 					result[3][j] = result[final_candidate[i]][j];
 				bResult = false;
 			}
 		}
 
-		for( i = 0; i < bound; i++ )
+		for ( i = 0; i < bound; i++ )
 		{
 			u4temp += (result[c1][i]+	result[c2][i]);
 		}
@@ -4496,23 +4496,23 @@ phy_SimularityCompare_92D(
 
 	if (!(SimularityBitMap & 0x0F))			//path A OK
 	{
-		for(i = 0; i < 4; i++)
+		for (i = 0; i < 4; i++)
 			result[3][i] = result[c1][i];
 	}
 	else if (!(SimularityBitMap & 0x03))		//path A, Tx OK
 	{
-		for(i = 0; i < 2; i++)
+		for (i = 0; i < 2; i++)
 			result[3][i] = result[c1][i];
 	}
 
 	if (!(SimularityBitMap & 0xF0) && is2T)		//path B OK
 	{
-		for(i = 4; i < 8; i++)
+		for (i = 4; i < 8; i++)
 			result[3][i] = result[c1][i];
 	}
 	else if (!(SimularityBitMap & 0x30))		//path B, Tx OK
 	{
-		for(i = 4; i < 6; i++)
+		for (i = 4; i < 6; i++)
 			result[3][i] = result[c1][i];
 	}
 
@@ -4665,7 +4665,7 @@ phy_IQCalibrate(
 	PHY_SetBBReg(pAdapter, rTx_IQK, bMaskDWord, 0x01007c00);
 	PHY_SetBBReg(pAdapter, rRx_IQK, bMaskDWord, 0x01004800);
 
-	for(i = 0 ; i < retryCount ; i++){
+	for (i = 0 ; i < retryCount ; i++){
 		PathAOK = phy_PathA_IQK(pAdapter, is2T);
 		if (PathAOK == 0x03){
 			//RTPRINT(FINIT, INIT_IQK, ("Path A IQK Success!!\n"));
@@ -4694,7 +4694,7 @@ phy_IQCalibrate(
 		// Turn Path B ADDA on
 		phy_PathADDAOn(pAdapter, ADDA_REG, false, is2T);
 
-		for(i = 0 ; i < retryCount ; i++){
+		for (i = 0 ; i < retryCount ; i++){
 			PathBOK = phy_PathB_IQK(pAdapter);
 			if (PathBOK == 0x03){
 				//RTPRINT(FINIT, INIT_IQK, ("Path B IQK Success!!\n"));
@@ -5377,7 +5377,7 @@ phy_LCCalibrate92D(
 
 	PHY_SetBBReg(pAdapter, rFPGA0_AnalogParameter4, 0xF00000, 0x0F);
 
-	for(index = 0; index <path; index ++)
+	for (index = 0; index <path; index ++)
 	{
 		//1. Read original RF mode
 		RF_mode[index] = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_AC, bRFRegOffsetMask);
@@ -5394,7 +5394,7 @@ phy_LCCalibrate92D(
 	}
 
 #if SWLCK == 1
-	for(index = 0; index <path; index ++)
+	for (index = 0; index <path; index ++)
 	{
 		while(!(PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G6, BIT11)) &&
 			timecount <= timeout)
@@ -5418,7 +5418,7 @@ phy_LCCalibrate92D(
 #endif
 
 	//Restore original situation
-	for(index = 0; index <path; index ++)
+	for (index = 0; index <path; index ++)
 	{
 		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask, tmpu4Byte[index]);
 		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_AC, bRFRegOffsetMask, RF_mode[index]);
@@ -5480,7 +5480,7 @@ phy_CalcCurvIndex(
 	u32	j, base_index = 0, search_bound=128;
 	bool	bBase = false;
 
-	for(i=start; i<chnl_num; i++)
+	for (i=start; i<chnl_num; i++)
 	{
 		if (is5G)
 		{
@@ -5504,7 +5504,7 @@ phy_CalcCurvIndex(
 #if 1
 		bBase = false;
 
-		for(j = start_base; j < end_base; j++)
+		for (j = start_base; j < end_base; j++)
 		{
 			if (channel == Base_chnl[j])
 			{
@@ -5536,7 +5536,7 @@ phy_CalcCurvIndex(
 
 		CurveIndex[i] = 0;
 #if 1
-		for(j=base_index; j<base_index+search_bound; j++)
+		for (j=base_index; j<base_index+search_bound; j++)
 		{
 			u4tmp = get_abs(TargetChnl[channel-1], CurveCountVal[j]);
 
@@ -5581,7 +5581,7 @@ phy_LCCalibrate92DSW(
 
 	PHY_SetBBReg(pAdapter, rFPGA0_AnalogParameter4, 0xF00000, 0x0F);
 
-	for(index = 0; index <path; index ++)
+	for (index = 0; index <path; index ++)
 	{
 		//RTPRINT(FINIT, INIT_IQK,("PHY_LCK enter for loop for index %d \n", index));
 
@@ -5609,7 +5609,7 @@ phy_LCCalibrate92DSW(
 		}
 	}
 
-	for(index = 0; index <path; index ++)
+	for (index = 0; index <path; index ++)
 	{
 		u4tmp = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G6, bRFRegOffsetMask);
 
@@ -5640,7 +5640,7 @@ phy_LCCalibrate92DSW(
 	}
 	PHY_SetBBReg(pAdapter, rFPGA0_AnalogParameter4, 0xF00000, 0x00);
 
-	for(index = 0; index <path; index ++)
+	for (index = 0; index <path; index ++)
 	{
 		u4tmp = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask);
 
@@ -5661,7 +5661,7 @@ phy_LCCalibrate92DSW(
 			//RTPRINT(FINIT, INIT_IQK,("cosa, set RF 0x18[15] = 0\n"));
 
 			//save Curve-counting number
-			for(i=0; i<CV_CURVE_CNT; i++)
+			for (i=0; i<CV_CURVE_CNT; i++)
 			{
 				u32	readVal=0, readVal2=0;
 				PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_TRSW, 0x7f, i);
@@ -5689,7 +5689,7 @@ phy_LCCalibrate92DSW(
 	}
 
 	//Restore original situation
-	for(index = 0; index <path; index ++)
+	for (index = 0; index <path; index ++)
 	{
 #if (TESTFLAG == 0)
 		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask, tmpu4Byte[index]);
@@ -5850,16 +5850,16 @@ phy_APCalibrate(
 #endif
 
 	//settings adjust for normal chip
-	for(index = 0; index < PATH_NUM; index ++)
+	for (index = 0; index < PATH_NUM; index ++)
 	{
 		APK_offset[index] = APK_normal_offset[index];
 		APK_value[index] = APK_normal_value[index];
 		AFE_on_off[index] = 0x6fdb25a4;
 	}
 
-	for(index = 0; index < APK_BB_REG_NUM; index ++)
+	for (index = 0; index < APK_BB_REG_NUM; index ++)
 	{
-		for(path = 0; path < pathbound; path++)
+		for (path = 0; path < pathbound; path++)
 		{
 			APK_RF_init_value[path][index] = APK_normal_RF_init_value[path][index];
 			APK_RF_value_0[path][index] = APK_normal_RF_value_0[path][index];
@@ -5870,7 +5870,7 @@ phy_APCalibrate(
 	apkbound = 6;
 
 	//save BB default value
-	for(index = 0; index < APK_BB_REG_NUM ; index++)
+	for (index = 0; index < APK_BB_REG_NUM ; index++)
 	{
 		if (index == 0)		//skip
 			continue;
@@ -5883,7 +5883,7 @@ phy_APCalibrate(
 	//save AFE default value
 	phy_SaveADDARegisters(pAdapter, AFE_REG, AFE_backup, IQK_ADDA_REG_NUM);
 
-	for(path = 0; path < pathbound; path++)
+	for (path = 0; path < pathbound; path++)
 	{
 
 
@@ -5893,7 +5893,7 @@ phy_APCalibrate(
 			//load APK setting
 			//path-A
 			offset = rPdp_AntA;
-			for(index = 0; index < 11; index ++)
+			for (index = 0; index < 11; index ++)
 			{
 				PHY_SetBBReg(pAdapter, offset, bMaskDWord, APK_normal_setting_value_1[index]);
 				//RTPRINT(FINIT, INIT_IQK, ("PHY_APCalibrate() offset 0x%x value 0x%x\n", offset, PHY_QueryBBReg(pAdapter, offset, bMaskDWord)));
@@ -5904,7 +5904,7 @@ phy_APCalibrate(
 			PHY_SetBBReg(pAdapter, rConfig_Pmpd_AntB, bMaskDWord, 0x12680000);
 
 			offset = rConfig_AntA;
-			for(; index < 13; index ++)
+			for (; index < 13; index ++)
 			{
 				PHY_SetBBReg(pAdapter, offset, bMaskDWord, APK_normal_setting_value_1[index]);
 				//RTPRINT(FINIT, INIT_IQK, ("PHY_APCalibrate() offset 0x%x value 0x%x\n", offset, PHY_QueryBBReg(pAdapter, offset, bMaskDWord)));
@@ -5917,7 +5917,7 @@ phy_APCalibrate(
 
 			//path A
 			offset = rPdp_AntA;
-			for(index = 0; index < 16; index++)
+			for (index = 0; index < 16; index++)
 			{
 				PHY_SetBBReg(pAdapter, offset, bMaskDWord, APK_normal_setting_value_2[index]);
 				//RTPRINT(FINIT, INIT_IQK, ("PHY_APCalibrate() offset 0x%x value 0x%x\n", offset, PHY_QueryBBReg(pAdapter, offset, bMaskDWord)));
@@ -5932,7 +5932,7 @@ phy_APCalibrate(
 			//load APK setting
 			//path-B
 			offset = rPdp_AntB;
-			for(index = 0; index < 10; index ++)
+			for (index = 0; index < 10; index ++)
 			{
 				PHY_SetBBReg(pAdapter, offset, bMaskDWord, APK_normal_setting_value_1[index]);
 				//RTPRINT(FINIT, INIT_IQK, ("PHY_APCalibrate() offset 0x%x value 0x%x\n", offset, PHY_QueryBBReg(pAdapter, offset, bMaskDWord)));
@@ -5945,7 +5945,7 @@ phy_APCalibrate(
 
 			offset = rConfig_AntA;
 			index = 11;
-			for(; index < 13; index ++) //offset 0xb68, 0xb6c
+			for (; index < 13; index ++) //offset 0xb68, 0xb6c
 			{
 				PHY_SetBBReg(pAdapter, offset, bMaskDWord, APK_normal_setting_value_1[index]);
 				//RTPRINT(FINIT, INIT_IQK, ("PHY_APCalibrate() offset 0x%x value 0x%x\n", offset, PHY_QueryBBReg(pAdapter, offset, bMaskDWord)));
@@ -5958,7 +5958,7 @@ phy_APCalibrate(
 
 			//path B
 			offset = 0xb60;
-			for(index = 0; index < 16; index++)
+			for (index = 0; index < 16; index++)
 			{
 				PHY_SetBBReg(pAdapter, offset, bMaskDWord, APK_normal_setting_value_2[index]);
 				//RTPRINT(FINIT, INIT_IQK, ("PHY_APCalibrate() offset 0x%x value 0x%x\n", offset, PHY_QueryBBReg(pAdapter, offset, bMaskDWord)));
@@ -5972,14 +5972,14 @@ phy_APCalibrate(
 		regD[path] = PHY_QueryRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_TXBIAS_A, bRFRegOffsetMask);
 
 		//Path A AFE all on, path B AFE All off or vise versa
-		for(index = 0; index < IQK_ADDA_REG_NUM ; index++)
+		for (index = 0; index < IQK_ADDA_REG_NUM ; index++)
 			PHY_SetBBReg(pAdapter, AFE_REG[index], bMaskDWord, AFE_on_off[path]);
 		//RTPRINT(FINIT, INIT_IQK, ("PHY_APCalibrate() offset 0xe70 %x\n", PHY_QueryBBReg(pAdapter, rRx_Wait_CCA, bMaskDWord)));
 
 		//BB to AP mode
 		if (path == 0)
 		{
-			for(index = 0; index < APK_BB_REG_NUM ; index++)
+			for (index = 0; index < APK_BB_REG_NUM ; index++)
 			{
 
 				if (index == 0)		//skip
@@ -6025,7 +6025,7 @@ phy_APCalibrate(
 			delta_offset = 12;
 
 		//AP calibration
-		for(index = 0; index < APK_BB_REG_NUM; index++)
+		for (index = 0; index < APK_BB_REG_NUM; index++)
 		{
 			if (index != 1)	//only DO PA11+PAD01001, AP RF setting
 				continue;
@@ -6097,7 +6097,7 @@ phy_APCalibrate(
 	phy_ReloadMACRegisters(pAdapter, MAC_REG, MAC_backup);
 
 	//reload BB default value
-	for(index = 0; index < APK_BB_REG_NUM ; index++)
+	for (index = 0; index < APK_BB_REG_NUM ; index++)
 	{
 
 		if (index == 0)		//skip
@@ -6109,7 +6109,7 @@ phy_APCalibrate(
 	phy_ReloadADDARegisters(pAdapter, AFE_REG, AFE_backup, IQK_ADDA_REG_NUM);
 
 	//reload RF path default value
-	for(path = 0; path < pathbound; path++)
+	for (path = 0; path < pathbound; path++)
 	{
 		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_TXBIAS_A, bRFRegOffsetMask, regD[path]);
 		if (path == RF_PATH_B)
@@ -6126,7 +6126,7 @@ phy_APCalibrate(
 
 	//RTPRINT(FINIT, INIT_IQK, ("\n"));
 
-	for(path = 0; path < pathbound; path++)
+	for (path = 0; path < pathbound; path++)
 	{
 		PHY_SetRFReg(pAdapter, (enum RF_RADIO_PATH_E)path, RF_BS_PA_APSET_G1_G4, bRFRegOffsetMask,
 		((APK_result[path][1] << 15) | (APK_result[path][1] << 10) | (APK_result[path][1] << 5) | APK_result[path][1]));
@@ -6207,7 +6207,7 @@ rtl8192d_PHY_IQCalibrate(
 
 	//RTPRINT(FINIT, INIT_IQK, ("IQK:Start!!!interface %d channel %d\n", pHalData->interfaceIndex, pHalData->CurrentChannel));
 
-	for(i = 0; i < 8; i++)
+	for (i = 0; i < 8; i++)
 	{
 		result[0][i] = 0;
 		result[1][i] = 0;
@@ -6262,7 +6262,7 @@ rtl8192d_PHY_IQCalibrate(
 				final_candidate = 1;
 			else
 			{
-				for(i = 0; i < 8; i++)
+				for (i = 0; i < 8; i++)
 					RegTmp += result[3][i];
 
 				if (RegTmp != 0)
@@ -6331,7 +6331,7 @@ rtl8192d_PHY_IQCalibrate(
 	{
 		Indexforchannel = rtl8192d_GetRightChnlPlaceforIQK(pHalData->CurrentChannel);
 
-		for(i = 0; i < IQK_Matrix_REG_NUM; i++)
+		for (i = 0; i < IQK_Matrix_REG_NUM; i++)
 		{
 			pHalData->IQKMatrixRegSetting[Indexforchannel].Value[0][i] =
 				result[final_candidate][i];
@@ -6345,7 +6345,7 @@ rtl8192d_PHY_IQCalibrate(
 			struct rtw_adapter * pbuddy_adapter = pAdapter->pbuddy_adapter;
 			struct hal_data_8192du *pbuddy_HalData = GET_HAL_DATA(pbuddy_adapter);
 
-			for(i = 0; i < IQK_Matrix_REG_NUM; i++)
+			for (i = 0; i < IQK_Matrix_REG_NUM; i++)
 			{
 				pbuddy_HalData->IQKMatrixRegSetting[Indexforchannel].Value[0][i] =
 					result[final_candidate][i];
@@ -6646,7 +6646,7 @@ PHY_UpdateBBRFConfiguration8192D(
 	}
 
 	//Update RF
-	for(eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
+	for (eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
 	{
 		if (pHalData->CurrentBandType92D == BAND_ON_2_4G){
 			//MOD_AG for RF paht_A 0x18 BIT8,BIT16
@@ -6763,13 +6763,13 @@ PHY_UpdateBBRFConfiguration8192D(
 	}
 #endif
 
-	for(eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
+	for (eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
 	{
 		pHalData->RfRegChnlVal[eRFPath] = PHY_QueryRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, bRFRegOffsetMask);
 		pdmpriv->RegRF3C[eRFPath] = PHY_QueryRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_RXRF_A3, bRFRegOffsetMask);
 	}
 
-	//for(i = 0; i < 2; i++)
+	//for (i = 0; i < 2; i++)
 	//	DBG_8192D("PHY_UpdateBBRFConfiguration8192D RF 0x18 = 0x%x interface index %d\n",pHalData->RfRegChnlVal[i],	pHalData->interfaceIndex);
 
 	//RT_TRACE(COMP_INIT,DBG_LOUD,("<==PHY_UpdateBBRFConfiguration8192D()\n"));
@@ -7070,7 +7070,7 @@ void rtl8192d_PHY_ResetIQKResult(struct
 	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8			i;
 
-	for(i = 0; i < IQK_Matrix_Settings_NUM; i++) {
+	for (i = 0; i < IQK_Matrix_Settings_NUM; i++) {
 		pHalData->IQKMatrixRegSetting[i].Value[0][0] = 0x100;
 		pHalData->IQKMatrixRegSetting[i].Value[0][2] = 0x100;
 		pHalData->IQKMatrixRegSetting[i].Value[0][4] = 0x100;
@@ -7125,7 +7125,7 @@ HalChangeCCKStatus8192D(
 		//if (ACTING_AS_AP(Adapter) ||ACTING_AS_AP(ADJUST_TO_ADAPTIVE_ADAPTER(Adapter, FALSE)) || (Adapter->MgntInfo.mIbss))
 		//	StopTxBeacon(Adapter);
 		rtw_write16(Adapter, REG_RL,0x0101);
-		for(i=0;i<30;i++)
+		for (i=0;i<30;i++)
 		{
 			if (rtw_read32(Adapter, 0x200) != rtw_read32(Adapter, 0x204))
 			{
@@ -7145,7 +7145,7 @@ HalChangeCCKStatus8192D(
 			if (ACTING_AS_AP(BuddyAdapter) ||ACTING_AS_AP(ADJUST_TO_ADAPTIVE_ADAPTER(BuddyAdapter, FALSE)) || BuddyAdapter->MgntInfo.mIbss)
 				StopTxBeacon(BuddyAdapter);
 			PlatformEFIOWrite2Byte(BuddyAdapter, REG_RL,0x0101);
-			for(i=0;i<30;i++)
+			for (i=0;i<30;i++)
 			{
 				if (PlatformEFIORead4Byte(BuddyAdapter, 0x200) != PlatformEFIORead4Byte(BuddyAdapter, 0x204))
 				{
--- a/drivers/staging/rtl8192du/hal/rtl8192d_rf6052.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_rf6052.c
@@ -126,7 +126,7 @@ rtl8192d_PHY_RF6052SetBandwidth(
 	switch(Bandwidth)
 	{
 		case HT_CHANNEL_WIDTH_20:
-			for(eRFPath=0;eRFPath<pHalData->NumTotalRFPath;eRFPath++)
+			for (eRFPath=0;eRFPath<pHalData->NumTotalRFPath;eRFPath++)
 			{
 				pHalData->RfRegChnlVal[eRFPath] = ((pHalData->RfRegChnlVal[eRFPath] & 0xfffff3ff) | 0x0400);
 				PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, RF_CHNLBW, BIT10|BIT11, 0x01);
@@ -135,7 +135,7 @@ rtl8192d_PHY_RF6052SetBandwidth(
 			break;
 
 		case HT_CHANNEL_WIDTH_40:
-			for(eRFPath=0;eRFPath<pHalData->NumTotalRFPath;eRFPath++)
+			for (eRFPath=0;eRFPath<pHalData->NumTotalRFPath;eRFPath++)
 			{
 				pHalData->RfRegChnlVal[eRFPath] = ((pHalData->RfRegChnlVal[eRFPath] & 0xfffff3ff));
 				//PHY_SetRFReg(Adapter, eRFPath, RF_CHNLBW, bRFRegOffsetMask, pHalData->RfRegChnlVal[eRFPath]);
@@ -193,7 +193,7 @@ rtl8192d_PHY_RF6052SetCckTxPower(
 
 		if (TurboScanOff)
 		{
-			for(idx1=RF_PATH_A; idx1<=RF_PATH_B; idx1++)
+			for (idx1=RF_PATH_A; idx1<=RF_PATH_B; idx1++)
 			{
 				TxAGC[idx1] =
 					pPowerlevel[idx1] | (pPowerlevel[idx1]<<8) |
@@ -208,7 +208,7 @@ rtl8192d_PHY_RF6052SetCckTxPower(
 // Currently, we cannot fully disable driver dynamic tx power mechanism because it is referenced by BT coexist mechanism.
 // In the future, two mechanism shall be separated from each other and maintained independantly. Thanks for Lanhsin's reminder.
 		{
-			for(idx1=RF_PATH_A; idx1<=RF_PATH_B; idx1++)
+			for (idx1=RF_PATH_A; idx1<=RF_PATH_B; idx1++)
 			{
 				TxAGC[idx1] =
 					pPowerlevel[idx1] | (pPowerlevel[idx1]<<8) |
@@ -228,10 +228,10 @@ rtl8192d_PHY_RF6052SetCckTxPower(
 		}
 	}
 
-	for(idx1=RF_PATH_A; idx1<=RF_PATH_B; idx1++)
+	for (idx1=RF_PATH_A; idx1<=RF_PATH_B; idx1++)
 	{
 		ptr = (u8 *)(&(TxAGC[idx1]));
-		for(idx2=0; idx2<4; idx2++)
+		for (idx2=0; idx2<4; idx2++)
 		{
 			if (*ptr > RF6052_MAX_TX_PWR)
 				*ptr = RF6052_MAX_TX_PWR;
@@ -276,7 +276,7 @@ static void getPowerBase(
 	s8	HT20_pwrdiff=0;
 	u8	i, powerlevel[2];
 
-	for(i=0; i<2; i++)
+	for (i=0; i<2; i++)
 	{
 		powerlevel[i] = pPowerLevel[i];
 		Legacy_pwrdiff = pHalData->TxPwrLegacyHtDiff[i][Channel-1];
@@ -287,7 +287,7 @@ static void getPowerBase(
 		//RTPRINT(FPHY, PHY_TXPWR, (" [OFDM power base index rf(%c) = 0x%x]\n", ((i==0)?'A':'B'), *(OfdmBase+i)));
 	}
 
-	for(i=0; i<2; i++)
+	for (i=0; i<2; i++)
 	{
 		//Check HT20 to HT40 diff
 		if (pHalData->CurrentChannelBW == HT_CHANNEL_WIDTH_20)
@@ -345,7 +345,7 @@ static void getTxPowerWriteValByRegulato
 	//
 	// Index 0 & 1= legacy OFDM, 2-5=HT_MCS rate
 	//
-	for(rf=0; rf<2; rf++)
+	for (rf=0; rf<2; rf++)
 	{
 		switch(pHalData->EEPROMRegulatory)
 		{
@@ -481,10 +481,10 @@ static void writeOFDMPowerReg(
 	u32	writeVal;
 	u16	RegOffset;
 
-	for(rf=0; rf<2; rf++)
+	for (rf=0; rf<2; rf++)
 	{
 		writeVal = pValue[rf];
-		for(i=0; i<4; i++)
+		for (i=0; i<4; i++)
 		{
 			pwr_val[i] = (u8)((writeVal & (0x7f<<(i*8)))>>(i*8));
 			if (pwr_val[i]  > RF6052_MAX_TX_PWR)
@@ -510,7 +510,7 @@ static void writeOFDMPowerReg(
 				RegOffset = 0xc90;
 			if (RegOffset == rTxAGC_B_Mcs15_Mcs12 || RegOffset == rTxAGC_B_Mcs07_Mcs04)
 				RegOffset = 0xc98;
-			for(i=0; i<3; i++)
+			for (i=0; i<3; i++)
 			{
 				if (i!=2)
 					writeVal = (writeVal>8)?(writeVal-8):0;
@@ -556,7 +556,7 @@ rtl8192d_PHY_RF6052SetOFDMTxPower(
 
 	getPowerBase(Adapter, pPowerLevel, Channel, &powerBase0[0], &powerBase1[0]);
 
-	for(index=0; index<6; index++)
+	for (index=0; index<6; index++)
 	{
 		getTxPowerWriteValByRegulatory(Adapter, pPowerLevel, Channel, index,
 			&powerBase0[0], &powerBase1[0], &writeVal[0]);
@@ -697,7 +697,7 @@ phy_RF6052_Config_ParaFile(
 	//3//-----------------------------------------------------------------
 	//3// <2> Initialize RF
 	//3//-----------------------------------------------------------------
-	for(eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
+	for (eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
 	{
 		if (bMac1NeedInitRadioAFirst) //Mac1 use PHY0 write
 		{
@@ -823,7 +823,7 @@ phy_RF6052_Config_ParaFile(
 		rtl8192d_PHY_PowerDownAnotherPHY(Adapter, true);
 	}
 
-	for(eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
+	for (eRFPath = RF_PATH_A; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
 	{
 #if MP_DRIVER == 1
 		PHY_SetRFReg(Adapter, eRFPath, RF_RXRF_A3, bRFRegOffsetMask, 0xff456);
--- a/drivers/staging/rtl8192du/hal/rtl8192d_rxdesc.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_rxdesc.c
@@ -249,7 +249,7 @@ static void query_rx_phy_status(union re
 		//
 		// (1)Get RSSI for HT rate
 		//
-		for(i=0; i<pHalData->NumTotalRFPath; i++)
+		for (i=0; i<pHalData->NumTotalRFPath; i++)
 		{
 			// 2008/01/30 MH we will judge RF RX path now.
 			if (pHalData->bRFPathRxEnable[i])
@@ -333,7 +333,7 @@ static void query_rx_phy_status(union re
 			else
 				max_spatial_stream = 1; //only spatial stream 1 makes sense
 
-			for(i=0; i<max_spatial_stream; i++)
+			for (i=0; i<max_spatial_stream; i++)
 			{
 				// Do not use shift operation like "rx_evmX >>= 1" because the compilor of free build environment
 				// fill most significant bit to "zero" when doing shifting operation which may change a negative
--- a/drivers/staging/rtl8192du/hal/rtl8192du_recv.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_recv.c
@@ -93,7 +93,7 @@ int	rtl8192du_init_recv_priv(struct rtw_
 
 	precvbuf = (struct recv_buf*)precvpriv->precv_buf;
 
-	for(i=0; i < NR_RECVBUFF ; i++)
+	for (i=0; i < NR_RECVBUFF ; i++)
 	{
 		INIT_LIST_HEAD(&precvbuf->list);
 
@@ -132,7 +132,7 @@ int	rtl8192du_init_recv_priv(struct rtw_
 
 		skb_queue_head_init(&precvpriv->free_recv_skb_queue);
 
-		for(i=0; i<NR_PREALLOC_RECV_SKB; i++)
+		for (i=0; i<NR_PREALLOC_RECV_SKB; i++)
 		{
 	#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,18)) // http://www.mail-archive.com/netdev@vger.kernel.org/msg17214.html
 			pskb = dev_alloc_skb(MAX_RECVBUF_SZ + RECVBUFF_ALIGN_SZ);
--- a/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
@@ -122,7 +122,7 @@ void rtl8192du_cal_txdesc_chksum(struct
 		//Clear first
 		ptxdesc->txdw7 &= cpu_to_le32(0xffff0000);
 
-		for(index = 0 ; index < count ; index++){
+		for (index = 0 ; index < count ; index++){
 			checksum = checksum ^ le16_to_cpu(*(usPtr + index));
 		}
 
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -417,7 +417,7 @@ u16 CRC16(u8 data,u16 CRC)
 	int index;
 	unsigned short CRC_Result;
 
-	for(index=0;index<8;index++)
+	for (index=0;index<8;index++)
 	{
 		CRC_BIT15=((CRC&BIT15) ? 1:0);
 		DataBit  =(data&(BIT0<<index) ? 1:0);
@@ -480,7 +480,7 @@ u16 calc_crc(u8 * pdata,int length)
 	u16 CRC=0xffff;
 	int i;
 
-	for(i=0;i<length;i++)
+	for (i=0;i<length;i++)
 	{
 		CRC=CRC16(pdata[i],CRC);
 	}
@@ -573,7 +573,7 @@ static int rtw_wowlan_set_pattern(struct
 		DBG_8192D("+rtw_wowlan_set_pattern   crc=0[%x]  Should calculate the CRC\n", crc);
 		// calculate the CRC the write to the Wakeup CAM
 		crc_idx=0;
-		for(i=0;i<packet_len;i++){
+		for (i=0;i<packet_len;i++){
 			if (pbuf[4+(i/8)]&(0x01<<(i%8)))
 			{
 				packet[crc_idx++]=pbuf[20+i];
@@ -744,7 +744,7 @@ static u8 InitLLTTable(
 		//Last_Entry_Of_TxPktBuf=255;
 	}
 
-	for(i = 0 ; i < (txpktbuf_bndy - 1) ; i++){
+	for (i = 0 ; i < (txpktbuf_bndy - 1) ; i++){
 		status = _LLTWrite(Adapter, i , i + 1);
 		if (_SUCCESS != status){
 			return status;
@@ -760,7 +760,7 @@ static u8 InitLLTTable(
 	// Make the other pages as ring buffer
 	// This ring buffer is used as beacon buffer if we config this MAC as two MAC transfer.
 	// Otherwise used as local loopback buffer.
-	for(i = txpktbuf_bndy ; i < Last_Entry_Of_TxPktBuf ; i++){
+	for (i = txpktbuf_bndy ; i < Last_Entry_Of_TxPktBuf ; i++){
 		status = _LLTWrite(Adapter, i, (i + 1));
 		if (_SUCCESS != status){
 			return status;
@@ -788,7 +788,7 @@ _SetMacID(
 	)
 {
 	u32 i;
-	for(i=0 ; i< MAC_ADDR_LEN ; i++){
+	for (i=0 ; i< MAC_ADDR_LEN ; i++){
 #ifdef  CONFIG_CONCURRENT_MODE
 		if (Adapter->iface_type == IFACE_PORT1)
 			rtw_write32(Adapter, REG_MACID1+i, MacID[i]);
@@ -804,7 +804,7 @@ _SetBSSID(
 	)
 {
 	u32 i;
-	for(i=0 ; i< MAC_ADDR_LEN ; i++){
+	for (i=0 ; i< MAC_ADDR_LEN ; i++){
 #ifdef  CONFIG_CONCURRENT_MODE
 		if (Adapter->iface_type == IFACE_PORT1)
 			rtw_write32(Adapter, REG_BSSID1+i, BSSID[i]);
@@ -1686,7 +1686,7 @@ static void _RfPowerSave(
 		if (pHalData->bSlaveOfDMSP)
 			return;
 #endif
-		for(eRFPath = 0; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
+		for (eRFPath = 0; eRFPath <pHalData->NumTotalRFPath; eRFPath++)
 			PHY_SetRFReg(Adapter, (enum RF_RADIO_PATH_E)eRFPath, 0x4, 0xC00, 0x0);
 	}
 	else if (pwrctrlpriv->rfoff_reason > RF_CHANGE_BY_PS){ // H/W or S/W RF OFF before sleep.
@@ -1818,7 +1818,7 @@ u32 rtl8192du_hal_init(struct rtw_adapte
 	int hal_init_profiling_i;
 	u32 hal_init_stages_timestamp[HAL_INIT_STAGES_NUM]; //used to record the time of each stage's starting point
 
-	for(hal_init_profiling_i=0;hal_init_profiling_i<HAL_INIT_STAGES_NUM;hal_init_profiling_i++)
+	for (hal_init_profiling_i=0;hal_init_profiling_i<HAL_INIT_STAGES_NUM;hal_init_profiling_i++)
 		hal_init_stages_timestamp[hal_init_profiling_i]=0;
 
 	#define HAL_INIT_PROFILE_TAG(stage) hal_init_stages_timestamp[(stage)]=rtw_get_current_time();
@@ -1835,7 +1835,7 @@ HAL_INIT_PROFILE_TAG(HAL_INIT_STAGES_BEG
 	{
 		if (BuddyAdapter->bHaltInProgress)
 		{
-			for(i=0;i<100;i++)
+			for (i=0;i<100;i++)
 			{
 				rtw_usleep_os(1000);
 				if (!BuddyAdapter->bHaltInProgress)
@@ -2047,7 +2047,7 @@ HAL_INIT_PROFILE_TAG(HAL_INIT_STAGES_MIS
 	}
 
 	// Set Data Auto Rate Fallback Reg.
-	for(i = 0 ; i < 4 ; i++){
+	for (i = 0 ; i < 4 ; i++){
 		rtw_write32(padapter, REG_ARFR0+i*4, 0x1f8ffff0);
 	}
 
@@ -2246,7 +2246,7 @@ HAL_INIT_PROFILE_TAG(HAL_INIT_STAGES_LCK
 #if SWLCK == 0
 		{
 			u32 tmpRega, tmpRegb;
-			for(j=0;j<10000;j++)
+			for (j=0;j<10000;j++)
 			{
 				rtw_udelay_os(MAX_STALL_TIME);
 				if (pHalData->rf_type == RF_1T1R)
@@ -2349,7 +2349,7 @@ HAL_INIT_PROFILE_TAG(HAL_INIT_STAGES_END
 	#ifdef DBG_HAL_INIT_PROFILING
 	hal_init_stages_timestamp[HAL_INIT_STAGES_END]=rtw_get_current_time();
 
-	for(hal_init_profiling_i=0;hal_init_profiling_i<HAL_INIT_STAGES_NUM-1;hal_init_profiling_i++) {
+	for (hal_init_profiling_i=0;hal_init_profiling_i<HAL_INIT_STAGES_NUM-1;hal_init_profiling_i++) {
 		DBG_8192D("DBG_HAL_INIT_PROFILING: %35s, %u, %5u, %5u\n"
 			, hal_init_stages_str[hal_init_profiling_i]
 			, hal_init_stages_timestamp[hal_init_profiling_i]
@@ -2994,7 +2994,7 @@ _func_enter_;
 
 	//issue Rx irp to receive data
 	precvbuf = (struct recv_buf *)precvpriv->precv_buf;
-	for(i=0; i<NR_RECVBUFF; i++)
+	for (i=0; i<NR_RECVBUFF; i++)
 	{
 		if (_read_port(pintfhdl, precvpriv->ff_hwaddr, 0, (unsigned char *)precvbuf) == false )
 		{
@@ -3404,7 +3404,7 @@ static void _ReadPROMContent(
 		if ( pEEPROM->EepromOrEfuse == true)
 		{
 			// Read all Content from EEPROM or EFUSE.
-			for(i = 0; i < HWSET_MAX_SIZE; i += 2)
+			for (i = 0; i < HWSET_MAX_SIZE; i += 2)
 			{
 				//todo:
 				//value16 = EF2Byte(ReadEEprom(Adapter, (u16) (i>>1)));
@@ -3619,7 +3619,7 @@ SelectRTSInitialRate(
 		}
 
 		//Todo: for AP mode and IBSS mode.
-		/*for(i = 0; i < ASSOCIATE_ENTRY_NUM; i++)
+		/*for (i = 0; i < ASSOCIATE_ENTRY_NUM; i++)
 		{
 			if (AsocEntry[i].bUsed && AsocEntry[i].bAssociated)
 			{
@@ -3885,7 +3885,7 @@ static void hw_var_set_macaddr(struct rt
 		reg_macid = REG_MACID;
 	}
 
-	for(idx = 0 ; idx < 6; idx++)
+	for (idx = 0 ; idx < 6; idx++)
 	{
 		rtw_write8(Adapter, (reg_macid+idx), val[idx]);
 	}
@@ -3908,7 +3908,7 @@ static void hw_var_set_bssid(struct rtw_
 		reg_bssid = REG_BSSID;
 	}
 
-	for(idx = 0 ; idx < 6; idx++)
+	for (idx = 0 ; idx < 6; idx++)
 	{
 		rtw_write8(Adapter, (reg_bssid+idx), val[idx]);
 	}
@@ -4495,7 +4495,7 @@ _func_enter_;
 #else //CONFIG_CONCURRENT_MODE
 			{
 				u8	idx = 0;
-				for(idx = 0 ; idx < 6; idx++)
+				for (idx = 0 ; idx < 6; idx++)
 				{
 					rtw_write8(Adapter, (REG_BSSID+idx), val[idx]);
 				}
@@ -4841,7 +4841,7 @@ _func_enter_;
 				u32	ulContent=0;
 				u32	ulEncAlgo=CAM_AES;
 
-				for(i=0;i<CAM_CONTENT_COUNT;i++)
+				for (i=0;i<CAM_CONTENT_COUNT;i++)
 				{
 					// filled id in CAM config 2 byte
 					if ( i == 0)
@@ -4977,7 +4977,7 @@ _func_enter_;
 					if (FactorToSet>0xf)
 						FactorToSet = 0xf;
 
-					for(index=0; index<4; index++)
+					for (index=0; index<4; index++)
 					{
 						pTmpByte = (u8 *)(&RegToSet) + index;
 
@@ -5176,7 +5176,7 @@ _func_enter_;
 						/*DBG_8192D("\n\n\n\n rtw_wowlan_ctrl: WOW_CTRL=0x%x \n",rtw_read8(Adapter, REG_WOW_CTRL));
 						DBG_8192D("print WKFMCAM index =%d ",poidparam->data[0]);
 						{	int cmd=0,offset=0;
-							for(offset=0;offset<5;offset++){
+							for (offset=0;offset<5;offset++){
 								cmd=BIT(31)|(poidparam->data[0]+offset);
 								rtw_write32(Adapter, REG_WKFMCAM_CMD, cmd);
 								DBG_8192D("offset[%d]=0x%.8x  ",offset,rtw_read32(Adapter, REG_WKFMCAM_RWD));
@@ -5294,7 +5294,7 @@ _func_enter_;
 				//rtw_write16(Adapter, REG_RL,0x0101);
 				rtw_write16(Adapter, REG_RL, RetryLimit << RETRY_LIMIT_SHORT_SHIFT | RetryLimit << RETRY_LIMIT_LONG_SHIFT);
 
-				for(i=0;i<1000;i++)
+				for (i=0;i<1000;i++)
 				{
 					if (rtw_read32(Adapter, 0x200) != rtw_read32(Adapter, 0x204))
 					{
--- a/drivers/staging/rtl8192du/include/rtw_debug.h
+++ b/drivers/staging/rtl8192du/include/rtw_debug.h
@@ -212,7 +212,7 @@
 				u8	*ptr = (u8 *)_HexData;				\
 				_dbgdump("Rtl871x: ");						\
 				_dbgdump(_TitleString);						\
-				for( __i=0; __i<(int)_HexDataLen; __i++ )				\
+				for ( __i=0; __i<(int)_HexDataLen; __i++ )				\
 				{								\
 					_dbgdump("%02X%s", ptr[__i], (((__i + 1) % 4) == 0)?"  ":" ");	\
 					if (((__i + 1) % 16) == 0)	_dbgdump("\n");			\
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -2170,7 +2170,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 	{
 		int i;
 		DBG_8192C("set wpa_ie(length:%zu):\n", ielen);
-		for(i=0;i<ielen;i=i+8)
+		for (i=0;i<ielen;i=i+8)
 			DBG_8192C("0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x \n",buf[i],buf[i+1],buf[i+2],buf[i+3],buf[i+4],buf[i+5],buf[i+6],buf[i+7]);
 	}
 
@@ -2740,7 +2740,7 @@ static int cfg80211_rtw_set_pmksa(struct
 	blInserted = false;
 
 	//overwrite PMKID
-	for(index=0 ; index<NUM_PMKID_CACHE; index++)
+	for (index=0 ; index<NUM_PMKID_CACHE; index++)
 	{
 		if ( _rtw_memcmp( psecuritypriv->PMKIDList[index].Bssid, pmksa->bssid, ETH_ALEN) ==true )
 		{ // BSSID is matched, the same AP => rewrite with new PMKID.
@@ -2784,7 +2784,7 @@ static int cfg80211_rtw_del_pmksa(struct
 
 	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(netdev));
 
-	for(index=0 ; index<NUM_PMKID_CACHE; index++)
+	for (index=0 ; index<NUM_PMKID_CACHE; index++)
 	{
 		if ( _rtw_memcmp( psecuritypriv->PMKIDList[index].Bssid, pmksa->bssid, ETH_ALEN) ==true )
 		{ // BSSID is matched, the same AP => Remove this PMKID information and reset it.
@@ -3631,7 +3631,7 @@ static int	cfg80211_rtw_change_bss(struc
 	DBG_8192C("ap_isolate=%d\n", params->ap_isolate);
 
 	DBG_8192C("basic_rates_len=%d\n", params->basic_rates_len);
-	for(i=0; i<params->basic_rates_len; i++)
+	for (i=0; i<params->basic_rates_len; i++)
 	{
 		DBG_8192C("basic_rates=%d\n", params->basic_rates[i]);
 
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -898,7 +898,7 @@ static int rtw_set_wpa_ie(struct rtw_ada
 		{
 			int i;
 			DBG_8192D("\n wpa_ie(length:%d):\n", ielen);
-			for(i=0;i<ielen;i=i+8)
+			for (i=0;i<ielen;i=i+8)
 				DBG_8192D("0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x \n",buf[i],buf[i+1],buf[i+2],buf[i+3],buf[i+4],buf[i+5],buf[i+6],buf[i+7]);
 		}
 
@@ -1299,7 +1299,7 @@ static int rtw_wx_set_pmkid(struct net_d
 		blInserted = false;
 
 		//overwrite PMKID
-		for(j=0 ; j<NUM_PMKID_CACHE; j++)
+		for (j=0 ; j<NUM_PMKID_CACHE; j++)
 		{
 			if (_rtw_memcmp(psecuritypriv->PMKIDList[j].Bssid, strIssueBssid, ETH_ALEN) ==true)
 			{ // BSSID is matched, the same AP => rewrite with new PMKID.
@@ -1335,7 +1335,7 @@ static int rtw_wx_set_pmkid(struct net_d
         {
                 DBG_8192D("[rtw_wx_set_pmkid] IW_PMKSA_REMOVE!\n");
                 intReturn = true;
-		for(j=0 ; j<NUM_PMKID_CACHE; j++)
+		for (j=0 ; j<NUM_PMKID_CACHE; j++)
 		{
 			if (_rtw_memcmp(psecuritypriv->PMKIDList[j].Bssid, strIssueBssid, ETH_ALEN) ==true)
 			{ // BSSID is matched, the same AP => Remove this PMKID information and reset it.
@@ -3942,7 +3942,7 @@ static int rtw_p2p_profilefound(struct n
 
 				//	Add this profile information into pwdinfo->profileinfo
 				//	Ex:  1XX:XX:XX:XX:XX:XXYYSSID
-				for(jj = 0, kk = 1; jj < ETH_ALEN; jj++, kk += 3)
+				for (jj = 0, kk = 1; jj < ETH_ALEN; jj++, kk += 3)
 				{
 					pwdinfo->profileinfo[ pwdinfo->profileindex ].peermac[ jj ] = key_2char2num(extra[ kk ], extra[ kk+ 1 ]);
 				}
@@ -4678,7 +4678,7 @@ static int rtw_p2p_connect(struct net_de
 		return -1;
 	}
 
-	for(jj = 0, kk = 0; jj < ETH_ALEN; jj++, kk += 3)
+	for (jj = 0, kk = 0; jj < ETH_ALEN; jj++, kk += 3)
 	{
 		peerMAC[ jj ] = key_2char2num(extra[kk], extra[kk+ 1]);
 	}
@@ -4830,7 +4830,7 @@ static int rtw_p2p_invite_req(struct net
 		pinvite_req_info->token = 3;
 	}
 
-	for(jj = 0, kk = 0; jj < ETH_ALEN; jj++, kk += 3)
+	for (jj = 0, kk = 0; jj < ETH_ALEN; jj++, kk += 3)
 	{
 		pinvite_req_info->peer_macaddr[ jj ] = key_2char2num(extra[kk], extra[kk+ 1]);
 	}
@@ -4932,7 +4932,7 @@ static int rtw_p2p_invite_req(struct net
 #endif // CONFIG_CONCURRENT_MODE
 
 		//	Store the GO's bssid
-		for(jj = 0, kk = 18; jj < ETH_ALEN; jj++, kk += 3)
+		for (jj = 0, kk = 18; jj < ETH_ALEN; jj++, kk += 3)
 		{
 			pinvite_req_info->go_bssid[ jj ] = key_2char2num(extra[kk], extra[kk+ 1]);
 		}
@@ -5093,7 +5093,7 @@ static int rtw_p2p_set_pc(struct net_dev
 		return ret;
 	}
 
-	for(jj = 0, kk = 0; jj < ETH_ALEN; jj++, kk += 3)
+	for (jj = 0, kk = 0; jj < ETH_ALEN; jj++, kk += 3)
 	{
 		peerMAC[ jj ] = key_2char2num(extra[kk], extra[kk+ 1]);
 	}
@@ -5364,7 +5364,7 @@ static int rtw_p2p_prov_disc(struct net_
 		pwdinfo->tx_prov_disc_info.benable = false;
 	}
 
-	for(jj = 0, kk = 0; jj < ETH_ALEN; jj++, kk += 3)
+	for (jj = 0, kk = 0; jj < ETH_ALEN; jj++, kk += 3)
 	{
 		peerMAC[ jj ] = key_2char2num(extra[kk], extra[kk+ 1]);
 	}
@@ -5902,13 +5902,13 @@ void mac_reg_dump(struct rtw_adapter *pa
 {
 	int i,j=1;
 	DBG_8192D("\n======= MAC REG =======\n");
-	for(i=0x0;i<0x300;i+=4)
+	for (i=0x0;i<0x300;i+=4)
 	{
 		if (j%4==1)	DBG_8192D("0x%02x",i);
 		DBG_8192D(" 0x%08x ",rtw_read32(padapter,i));
 		if ((j++)%4 == 0)	DBG_8192D("\n");
 	}
-	for(i=0x400;i<0x800;i+=4)
+	for (i=0x400;i<0x800;i+=4)
 	{
 		if (j%4==1)	DBG_8192D("0x%02x",i);
 		DBG_8192D(" 0x%08x ",rtw_read32(padapter,i));
@@ -5919,7 +5919,7 @@ void bb_reg_dump(struct rtw_adapter *pad
 {
 	int i,j=1;
 	DBG_8192D("\n======= BB REG =======\n");
-	for(i=0x800;i<0x1000;i+=4)
+	for (i=0x800;i<0x1000;i+=4)
 	{
 		if (j%4==1) DBG_8192D("0x%02x",i);
 
@@ -5940,10 +5940,10 @@ void rf_reg_dump(struct rtw_adapter *pad
 	else
 		path_nums = 2;
 
-	for(path=0;path<path_nums;path++)
+	for (path=0;path<path_nums;path++)
 	{
 		DBG_8192D("\nRF_Path(%x)\n",path);
-		for(i=0;i<0x100;i++)
+		for (i=0;i<0x100;i++)
 		{
 			//value = PHY_QueryRFReg(padapter, (RF90_RADIO_PATH_E)path,i, bMaskDWord);
 			value =rtw_hal_read_rfreg(padapter, path, i, 0xffffffff);
@@ -6084,7 +6084,7 @@ static int rtw_dbg_port(struct net_devic
 							break;
 						}
 
-						for(i=0;i<blink_num;i++){
+						for (i=0;i<blink_num;i++){
 							rtw_IOL_append_WB_cmd(xmit_frame, reg, 0x00);
 							rtw_IOL_append_DELAY_MS_cmd(xmit_frame, blink_delay_ms);
 							rtw_IOL_append_WB_cmd(xmit_frame, reg, 0x08);
@@ -6112,7 +6112,7 @@ static int rtw_dbg_port(struct net_devic
 							break;
 						}
 
-						for(i=0;i<write_num;i++){
+						for (i=0;i<write_num;i++){
 							rtw_IOL_append_WB_cmd(xmit_frame, reg, i+start_value);
 						}
 						if (_SUCCESS != rtw_IOL_exec_cmds_sync(padapter, xmit_frame, 5000))
@@ -6144,7 +6144,7 @@ static int rtw_dbg_port(struct net_devic
 							break;
 						}
 
-						for(i=0;i<write_num;i++){
+						for (i=0;i<write_num;i++){
 							rtw_IOL_append_WW_cmd(xmit_frame, reg, i+start_value);
 						}
 						if (_SUCCESS !=rtw_IOL_exec_cmds_sync(padapter, xmit_frame, 5000))
@@ -6176,7 +6176,7 @@ static int rtw_dbg_port(struct net_devic
 							break;
 						}
 
-						for(i=0;i<write_num;i++){
+						for (i=0;i<write_num;i++){
 							rtw_IOL_append_WD_cmd(xmit_frame, reg, i+start_value);
 						}
 						if (_SUCCESS !=rtw_IOL_exec_cmds_sync(padapter, xmit_frame, 5000))
@@ -6239,7 +6239,7 @@ static int rtw_dbg_port(struct net_devic
 						DBG_8192D("ampdu_enable = %d\n", psta->htpriv.ampdu_enable);
 						DBG_8192D("agg_enable_bitmap=%x, candidate_tid_bitmap=%x\n", psta->htpriv.agg_enable_bitmap, psta->htpriv.candidate_tid_bitmap);
 
-						for(i=0;i<16;i++)
+						for (i=0;i<16;i++)
 						{
 							preorder_ctrl = &psta->recvreorder_ctrl[i];
 							if (preorder_ctrl->enable)
@@ -6289,7 +6289,7 @@ static int rtw_dbg_port(struct net_devic
 #endif
 						spin_lock_bh(&pstapriv->sta_hash_lock);
 
-						for(i=0; i< NUM_STA; i++)
+						for (i=0; i< NUM_STA; i++)
 						{
 							phead = &(pstapriv->sta_hash[i]);
 							plist = get_next(phead);
@@ -6321,7 +6321,7 @@ static int rtw_dbg_port(struct net_devic
 
 
 
-									for(j=0;j<16;j++)
+									for (j=0;j<16;j++)
 									{
 										preorder_ctrl = &psta->recvreorder_ctrl[j];
 										if (preorder_ctrl->enable)
@@ -8283,7 +8283,7 @@ static int rtw_mp_efuse_set(struct net_d
 			DBG_8192D("cnts = %d \n" ,cnts);
 			DBG_8192D("target data = %s \n" ,tmp[2]);
 
-			for(jj = 0, kk = 0; jj < cnts; jj++, kk += 2)
+			for (jj = 0, kk = 0; jj < cnts; jj++, kk += 2)
 			{
 				setdata[jj] = key_2char2num(tmp[2][kk], tmp[2][kk+ 1]);
 			}
@@ -8315,7 +8315,7 @@ static int rtw_mp_efuse_set(struct net_d
 			DBG_8192D(" cnts = %d \n" ,cnts);
 			DBG_8192D("target data = %s \n" ,tmp[2]);
 
-			for(jj = 0, kk = 0; jj < cnts; jj++, kk += 2)
+			for (jj = 0, kk = 0; jj < cnts; jj++, kk += 2)
 			{
 					setrawdata[jj] = key_2char2num(tmp[2][kk], tmp[2][kk+ 1]);
 			}
@@ -8341,7 +8341,7 @@ static int rtw_mp_efuse_set(struct net_d
 
 				DBG_8192D("target data = %s \n" ,tmp[1]);
 
-				for(jj = 0, kk = 0; jj < cnts; jj++, kk += 2)
+				for (jj = 0, kk = 0; jj < cnts; jj++, kk += 2)
 				{
 					setdata[jj] = key_2char2num(tmp[1][kk], tmp[1][kk+ 1]);
 				}
@@ -8371,7 +8371,7 @@ static int rtw_mp_efuse_set(struct net_d
 				return -EFAULT;
 			DBG_8192D("target data = %s \n" ,tmp[1]);
 
-			for(jj = 0, kk = 0; jj < cnts; jj++, kk += 2)
+			for (jj = 0, kk = 0; jj < cnts; jj++, kk += 2)
 				{
 				setdata[jj] = key_2char2num(tmp[1][kk], tmp[1][kk+ 1]);
 			}
@@ -8530,7 +8530,7 @@ static int rtw_mp_read_reg(struct net_de
 			// 2 bytes
 			//*(u16*)data = rtw_read16(padapter, addr);
 			sprintf(data, "%04d\n", rtw_read16(padapter, addr));
-			for(i=0 ; i <= strlen(data) ; i++)
+			for (i=0 ; i <= strlen(data) ; i++)
 				{
 					  if (i%2==0)
 					  {
@@ -8566,7 +8566,7 @@ static int rtw_mp_read_reg(struct net_de
 			//*data = rtw_read32(padapter, addr);
 			sprintf(data, "%08x", rtw_read32(padapter, addr));
 				//add read data format blank
-				for(i=0 ; i <= strlen(data) ; i++)
+				for (i=0 ; i <= strlen(data) ; i++)
 				{
 					  if (i%2==0)
 					  {
@@ -8676,7 +8676,7 @@ static int rtw_mp_read_rf(struct net_dev
 	//*data = read_rfreg(padapter, path, addr);
 	sprintf(data, "%08x", read_rfreg(padapter, path, addr));
 				//add read data format blank
-				for(i=0 ; i <= strlen(data) ; i++)
+				for (i=0 ; i <= strlen(data) ; i++)
 				{
 					  if (i%2==0)
 					  {
@@ -9268,7 +9268,7 @@ static int rtw_mp_dump(struct net_device
 				DBG_8192D(" 0x%08x ",rtw_read32(padapter,i));
 				if ((j++)%4 == 0)	DBG_8192D("\n");
 			}
-			for(i=0x400;i<0x800;i+=4)
+			for (i=0x400;i<0x800;i+=4)
 			{
 				if (j%4==1)	DBG_8192D("0x%02x",i);
 				DBG_8192D(" 0x%08x ",rtw_read32(padapter,i));
@@ -9284,7 +9284,7 @@ static int rtw_mp_dump(struct net_device
 			else
 				path_nums = 2;
 
-			for(path=0;path<path_nums;path++) {
+			for (path=0;path<path_nums;path++) {
 				for (i = 0; i < 0x50; i++) {
 					value =rtw_hal_read_rfreg(padapter, path, i, 0xffffffff);
 					if (j%4==1)
@@ -9591,7 +9591,7 @@ static int rtw_tdls_enable(struct net_de
 			return ret;
 
 		spin_lock_bh(&pstapriv->sta_hash_lock);
-		for(index=0; index< NUM_STA; index++)
+		for (index=0; index< NUM_STA; index++)
 		{
 			phead = &(pstapriv->sta_hash[index]);
 			plist = get_next(phead);
@@ -9610,7 +9610,7 @@ static int rtw_tdls_enable(struct net_de
 		}
 		spin_unlock_bh(&pstapriv->sta_hash_lock);
 
-		for(index=0; index< NUM_STA; index++)
+		for (index=0; index< NUM_STA; index++)
 		{
 			if (!_rtw_memcmp(tdls_sta[index], empty_hwaddr, ETH_ALEN))
 			{
@@ -9646,7 +9646,7 @@ static int rtw_tdls_setup(struct net_dev
 
 	DBG_8192D("[%s] %s %d\n", __func__, extra, wrqu->data.length -1 );
 
-	for(i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
+	for (i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
 		mac_addr[i]=key_2char2num(*(extra+j), *(extra+j+1));
 	}
 
@@ -9689,7 +9689,7 @@ static int rtw_tdls_teardown(struct net_
 
 	DBG_8192D("[%s] %s %d\n", __func__, extra, wrqu->data.length -1 );
 
-	for(i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
+	for (i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
 		mac_addr[i]=key_2char2num(*(extra+j), *(extra+j+1));
 	}
 
@@ -9742,7 +9742,7 @@ static int rtw_tdls_ch_switch(struct net
 
 	DBG_8192S("[%s] %s %d\n", __func__, extra, wrqu->data.length -1 );
 
-	for(i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
+	for (i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
 		mac_addr[i]=key_2char2num(*(extra+j), *(extra+j+1));
 	}
 
@@ -9774,7 +9774,7 @@ static int rtw_tdls_pson(struct net_devi
 
 	DBG_8192D("[%s] %s %d\n", __func__, extra, wrqu->data.length -1 );
 
-	for(i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
+	for (i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
 		mac_addr[i]=key_2char2num(*(extra+j), *(extra+j+1));
 	}
 
@@ -9803,7 +9803,7 @@ static int rtw_tdls_psoff(struct net_dev
 
 	DBG_8192D("[%s] %s %d\n", __func__, extra, wrqu->data.length -1 );
 
-	for(i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
+	for (i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
 		mac_addr[i]=key_2char2num(*(extra+j), *(extra+j+1));
 	}
 
@@ -9835,7 +9835,7 @@ static int rtw_tdls_setip(struct net_dev
 
 	while(i < 4)
 	{
-		for(j=0; j < 4; j++)
+		for (j=0; j < 4; j++)
 		{
 			if (*(extra + j + tag) == '.' || *(extra + j + tag) == '\0')
 			{
@@ -10006,7 +10006,7 @@ static int rtw_tdls_ch_switch_off(struct
 
 	DBG_8192D("[%s] %s %d\n", __func__, extra, wrqu->data.length -1 );
 
-	for(i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
+	for (i=0, j=0 ; i < ETH_ALEN; i++, j+=3){
 		mac_addr[i]=key_2char2num(*(extra+j), *(extra+j+1));
 	}
 
--- a/drivers/staging/rtl8192du/os_dep/mlme_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/mlme_linux.c
@@ -204,7 +204,7 @@ _func_enter_;
 		len = sec_ie[1]+2;
 		len =  (len < IW_CUSTOM_MAX) ? len:IW_CUSTOM_MAX;
 
-		for(i=0;i<len;i++){
+		for (i=0;i<len;i++){
 			p+=sprintf(p,"%02x",sec_ie[i]);
 		}
 
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -1791,7 +1791,7 @@ void rtw_drv_stop_vir_ifaces(struct dvob
 	int i;
 	/* struct dvobj_priv *dvobj = primary_padapter->dvobj; */
 
-	for(i = 2;i<dvobj->iface_nums;i++)
+	for (i = 2;i<dvobj->iface_nums;i++)
 	{
 		rtw_drv_stop_vir_if (dvobj->padapters[i]);
 	}
@@ -1802,7 +1802,7 @@ void rtw_drv_free_vir_ifaces(struct dvob
 	int i;
 	/* struct dvobj_priv *dvobj = primary_padapter->dvobj; */
 
-	for(i = 2;i<dvobj->iface_nums;i++)
+	for (i = 2;i<dvobj->iface_nums;i++)
 	{
 		rtw_drv_free_vir_if (dvobj->padapters[i]);
 	}
@@ -1819,7 +1819,7 @@ void rtw_drv_del_vir_ifaces(struct rtw_a
 	int i;
 	struct dvobj_priv *dvobj = primary_padapter->dvobj;
 
-	for(i = 2;i<dvobj->iface_nums;i++)
+	for (i = 2;i<dvobj->iface_nums;i++)
 	{
 		rtw_drv_del_vir_if (dvobj->padapters[i]);
 	}
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -50,7 +50,7 @@ u32 rtw_atoi(u8* s)
 
 	int num=0,flag=0;
 	int i;
-	for(i=0;i<=strlen(s);i++)
+	for (i=0;i<=strlen(s);i++)
 	{
 	  if (s[i] >= '0' && s[i] <= '9')
 		 num = num * 10 + s[i] -'0';
--- a/drivers/staging/rtl8192du/os_dep/rtw_android.c
+++ b/drivers/staging/rtl8192du/os_dep/rtw_android.c
@@ -227,7 +227,7 @@ exit_proc:
 int rtw_android_cmdstr_to_num(char *cmdstr)
 {
 	int cmd_num;
-	for(cmd_num=0 ; cmd_num<ANDROID_WIFI_CMD_MAX; cmd_num++)
+	for (cmd_num=0 ; cmd_num<ANDROID_WIFI_CMD_MAX; cmd_num++)
 		if (0 == strnicmp(cmdstr , android_wifi_cmd_str[cmd_num], strlen(android_wifi_cmd_str[cmd_num])) )
 			break;
 
@@ -312,7 +312,7 @@ static int get_int_from_command( char* p
 {
 	int i = 0;
 
-	for( i = 0; i < strlen( pcmd ); i++ )
+	for ( i = 0; i < strlen( pcmd ); i++ )
 	{
 		if ( pcmd[ i ] == '=' )
 		{
--- a/drivers/staging/rtl8192du/os_dep/usb_intf.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_intf.c
@@ -603,7 +603,7 @@ static void process_spec_devid(const str
 	int i;
 	int num = sizeof(specific_device_id_tbl)/sizeof(struct specific_device_id);
 
-	for(i=0; i<num; i++)
+	for (i=0; i<num; i++)
 	{
 		vid = specific_device_id_tbl[i].idVendor;
 		pid = specific_device_id_tbl[i].idProduct;
@@ -944,7 +944,7 @@ int rtw_resume_process(struct rtw_adapte
 			{
 				int keyid;
 
-				for(keyid=0;keyid<4;keyid++){
+				for (keyid=0;keyid<4;keyid++){
 					if (pwrpriv->wepkeymask & BIT(keyid)) {
 						if (keyid == padapter->securitypriv.dot11PrivacyKeyIndex)
 							rtw_set_key(padapter,&padapter->securitypriv, keyid, 1);
@@ -1319,7 +1319,7 @@ static int rtw_drv_init(struct usb_inter
 		goto free_if1;
 	}
 #ifdef CONFIG_MULTI_VIR_IFACES
-	for(i=0; i<if1->registrypriv.ext_iface_num;i++)
+	for (i=0; i<if1->registrypriv.ext_iface_num;i++)
 	{
 		if (rtw_drv_add_vir_if (if1, "wlan%d", usb_set_intf_ops) == NULL)
 		{
--- a/drivers/staging/rtl8192du/os_dep/xmit_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/xmit_linux.c
@@ -148,7 +148,7 @@ int rtw_os_xmit_resource_alloc(struct rt
 
 #endif // CONFIG_USE_USB_BUFFER_ALLOC_TX
 
-	for(i=0; i<8; i++)
+	for (i=0; i<8; i++)
 	{
 		pxmitbuf->pxmit_urb[i] = usb_alloc_urb(0, GFP_KERNEL);
 		if (pxmitbuf->pxmit_urb[i] == NULL)
@@ -168,7 +168,7 @@ void rtw_os_xmit_resource_free(struct rt
 	struct usb_device	*pusbd = pdvobjpriv->pusbdev;
 
 
-	for(i=0; i<8; i++)
+	for (i=0; i<8; i++)
 	{
 		if (pxmitbuf->pxmit_urb[i])
 		{
