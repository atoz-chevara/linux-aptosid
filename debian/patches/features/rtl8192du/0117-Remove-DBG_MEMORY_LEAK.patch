From b7c4040747d30a8a57d5bc7f4516ece58e0641a6 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 4 May 2013 15:03:20 -0500
Subject: [PATCH 117/390] Remove DBG_MEMORY_LEAK

Although this configuration variable is selected by default, the
testing for memory leaks is better handled by kmemleak.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_debug.c       | 19 -------------------
 include/autoconf.h     |  3 ---
 include/rtw_debug.h    |  6 ------
 os_dep/os_intfs.c      | 13 -------------
 os_dep/osdep_service.c | 35 ++---------------------------------
 5 files changed, 2 insertions(+), 74 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_debug.c
+++ b/drivers/staging/rtl8192du/core/rtw_debug.c
@@ -1036,25 +1036,6 @@ int proc_get_all_sta_info(char *page, ch
 
 #endif
 
-#ifdef DBG_MEMORY_LEAK
-#include <linux/atomic.h>
-extern atomic_t _malloc_cnt;
-extern atomic_t _malloc_size;
-
-int proc_get_malloc_cnt(char *page, char **start,
-			  off_t offset, int count,
-			  int *eof, void *data)
-{
-	int len = 0;
-
-	len += snprintf(page + len, count - len, "_malloc_cnt=%d\n", atomic_read(&_malloc_cnt));
-	len += snprintf(page + len, count - len, "_malloc_size=%d\n", atomic_read(&_malloc_size));
-
-	*eof = 1;
-	return len;
-}
-#endif /* DBG_MEMORY_LEAK */
-
 #ifdef CONFIG_FIND_BEST_CHANNEL
 int proc_get_best_channel(char *page, char **start,
 			  off_t offset, int count,
--- a/drivers/staging/rtl8192du/include/autoconf.h
+++ b/drivers/staging/rtl8192du/include/autoconf.h
@@ -234,6 +234,3 @@
 #define CONFIG_DEBUG_RTL819X
 
 #define CONFIG_PROC_DEBUG 1
-
-#define DBG_MEMORY_LEAK	1
-
--- a/drivers/staging/rtl8192du/include/rtw_debug.h
+++ b/drivers/staging/rtl8192du/include/rtw_debug.h
@@ -356,12 +356,6 @@ extern u32 GlobalDebugLevel;
 
 #endif
 
-#ifdef DBG_MEMORY_LEAK
-	int proc_get_malloc_cnt(char *page, char **start,
-			  off_t offset, int count,
-			  int *eof, void *data);
-#endif
-
 #ifdef CONFIG_FIND_BEST_CHANNEL
 	int proc_get_best_channel(char *page, char **start,
 			  off_t offset, int count,
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -493,15 +493,6 @@ void rtw_proc_init_one(struct net_device
 	}
 #endif
 
-#ifdef DBG_MEMORY_LEAK
-	entry = create_proc_read_entry("_malloc_cnt", S_IFREG | S_IRUGO,
-				   dir_dev, proc_get_malloc_cnt, dev);
-	if (!entry) {
-		DBG_8192D("Unable to create_proc_read_entry!\n");
-		return;
-	}
-#endif
-
 #ifdef CONFIG_FIND_BEST_CHANNEL
 	entry = create_proc_read_entry("best_channel", S_IFREG | S_IRUGO,
 				   dir_dev, proc_get_best_channel, dev);
@@ -618,10 +609,6 @@ void rtw_proc_remove_one(struct net_devi
 		remove_proc_entry("all_sta_info", dir_dev);
 #endif
 
-#ifdef DBG_MEMORY_LEAK
-		remove_proc_entry("_malloc_cnt", dir_dev);
-#endif
-
 #ifdef CONFIG_FIND_BEST_CHANNEL
 		remove_proc_entry("best_channel", dir_dev);
 #endif
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -29,13 +29,6 @@
 
 #define RT_TAG	'1178'
 
-#ifdef DBG_MEMORY_LEAK
-#include <asm/atomic.h>
-atomic_t _malloc_cnt = ATOMIC_INIT(0);
-atomic_t _malloc_size = ATOMIC_INIT(0);
-#endif /* DBG_MEMORY_LEAK */
-
-
 /*
 * Translate the OS dependent @param error_code to OS independent RTW_STATUS_CODE
 * @return: one of RTW_STATUS_CODE
@@ -77,15 +70,8 @@ u32 rtw_atoi(u8* s)
 inline u8* _rtw_vmalloc(u32 sz)
 {
 	u8	*pbuf;
-	pbuf = vmalloc(sz);
-
-#ifdef DBG_MEMORY_LEAK
-	if ( pbuf != NULL) {
-		atomic_inc(&_malloc_cnt);
-		atomic_add(sz, &_malloc_size);
-	}
-#endif /* DBG_MEMORY_LEAK */
 
+	pbuf = vmalloc(sz);
 	return pbuf;
 }
 
@@ -101,11 +87,6 @@ inline u8* _rtw_zvmalloc(u32 sz)
 inline void _rtw_vmfree(u8 *pbuf, u32 sz)
 {
 	vfree(pbuf);
-
-#ifdef DBG_MEMORY_LEAK
-	atomic_dec(&_malloc_cnt);
-	atomic_sub(sz, &_malloc_size);
-#endif /* DBG_MEMORY_LEAK */
 }
 
 u8* _rtw_malloc(u32 sz)
@@ -114,14 +95,6 @@ u8* _rtw_malloc(u32 sz)
 	u8	*pbuf=NULL;
 
 	pbuf = kmalloc(sz,in_interrupt() ? GFP_ATOMIC : GFP_KERNEL);
-
-#ifdef DBG_MEMORY_LEAK
-	if ( pbuf != NULL) {
-		atomic_inc(&_malloc_cnt);
-		atomic_add(sz, &_malloc_size);
-	}
-#endif /* DBG_MEMORY_LEAK */
-
 	return pbuf;
 }
 
@@ -137,11 +110,7 @@ u8* _rtw_zmalloc(u32 sz)
 
 void	_rtw_mfree(u8 *pbuf, u32 sz)
 {
-		kfree(pbuf);
-#ifdef DBG_MEMORY_LEAK
-	atomic_dec(&_malloc_cnt);
-	atomic_sub(sz, &_malloc_size);
-#endif /* DBG_MEMORY_LEAK */
+	kfree(pbuf);
 }
 
 int	_rtw_memcmp(void *dst, void *src, u32 sz)
