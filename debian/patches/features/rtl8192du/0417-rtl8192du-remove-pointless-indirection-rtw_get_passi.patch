From e2ef04e8897d12ad67bf7a1501cd6585a5bc5733 Mon Sep 17 00:00:00 2001
From: Stefan Lippers-Hollmann <s.l-h@gmx.de>
Date: Sat, 22 Mar 2014 03:03:15 +0100
Subject: [PATCH 417/456] rtl8192du: remove pointless indirection
 rtw_get_passing_time_ms() --> rtw_systime_to_ms

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 core/rtw_mlme.c         |  5 ++---
 core/rtw_mlme_ext.c     | 26 +++++++++++++-------------
 core/rtw_pwrctrl.c      |  6 +++---
 core/rtw_xmit.c         |  2 +-
 hal/rtl8192d_hal_init.c |  4 ++--
 hal/usb_halinit.c       |  4 ++--
 include/osdep_service.h |  1 -
 os_dep/ioctl_cfg80211.c |  2 +-
 os_dep/os_intfs.c       |  4 ++--
 os_dep/osdep_service.c  |  6 ------
 os_dep/usb_intf.c       |  6 +++---
 11 files changed, 29 insertions(+), 37 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -988,7 +988,6 @@ void rtw_surveydone_event_callback(struc
 	}
 
 	indicate_wx_scan_complete_event(adapter);
-	/* DBG_8192D("scan complete in %dms\n",rtw_get_passing_time_ms(pmlmepriv->scan_start_time)); */
 
 	spin_unlock_bh(&pmlmepriv->lock);
 
@@ -1167,7 +1166,7 @@ void rtw_scan_abort(struct rtw_adapter *
 	start = rtw_get_current_time();
 	pmlmeext->scan_abort = true;
 	while (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY) &&
-	       rtw_get_passing_time_ms(start) <= 200) {
+		rtw_systime_to_ms(jiffies - start) <= 200) {
 		if (adapter->bDriverStopped || adapter->bSurpriseRemoved)
 			break;
 
@@ -1977,7 +1976,7 @@ static int rtw_check_join_candidate(stru
 		goto exit;
 
 	if (rtw_to_roaming(adapter) > 0) {
-		if (rtw_get_passing_time_ms((u32) competitor->last_scanned) >=
+		if (rtw_systime_to_ms(jiffies - (u32)competitor->last_scanned) >=
 		    RTW_SCAN_RESULT_EXPIRE ||
 		    is_same_ess(&competitor->network,
 				   &pmlmepriv->cur_network.network) == false)
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -4692,13 +4692,13 @@ int issue_probereq_p2p_ex(struct rtw_ada
 				  FUNC_ADPT_ARG(adapter), da,
 				  rtw_get_oper_ch(adapter),
 				  ret == _SUCCESS ? ", acked" : "", i, try_cnt,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 		else
 			DBG_8192D(FUNC_ADPT_FMT ", ch:%u%s, %d/%d in %u ms\n",
 				  FUNC_ADPT_ARG(adapter),
 				  rtw_get_oper_ch(adapter),
 				  ret == _SUCCESS ? ", acked" : "", i, try_cnt,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 	}
 exit:
 	return ret;
@@ -6318,13 +6318,13 @@ int issue_probereq_ex(struct rtw_adapter
 				  FUNC_ADPT_ARG(adapt), da,
 				  rtw_get_oper_ch(adapt),
 				  ret == _SUCCESS ? ", acked" : "", i, try_cnt,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 		else
 			DBG_8192D(FUNC_ADPT_FMT ", ch:%u%s, %d/%d in %u ms\n",
 				  FUNC_ADPT_ARG(adapt),
 				  rtw_get_oper_ch(adapt),
 				  ret == _SUCCESS ? ", acked" : "", i, try_cnt,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 	}
 exit:
 	return ret;
@@ -7241,13 +7241,13 @@ int issue_nulldata(struct rtw_adapter *a
 				  FUNC_ADPT_ARG(adapt), da,
 				  rtw_get_oper_ch(adapt),
 				  ret == _SUCCESS ? ", acked" : "", i, try_cnt,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 		else
 			DBG_8192D(FUNC_ADPT_FMT ", ch:%u%s, %d/%d in %u ms\n",
 				  FUNC_ADPT_ARG(adapt),
 				  rtw_get_oper_ch(adapt),
 				  ret == _SUCCESS ? ", acked" : "", i, try_cnt,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 	}
 exit:
 	return ret;
@@ -7374,13 +7374,13 @@ int issue_qos_nulldata(struct rtw_adapte
 				  FUNC_ADPT_ARG(adapt), da,
 				  rtw_get_oper_ch(adapt),
 				  ret == _SUCCESS ? ", acked" : "", i, try_cnt,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 		else
 			DBG_8192D(FUNC_ADPT_FMT ", ch:%u%s, %d/%d in %u ms\n",
 				  FUNC_ADPT_ARG(adapt),
 				  rtw_get_oper_ch(adapt),
 				  ret == _SUCCESS ? ", acked" : "", i, try_cnt,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 	}
 exit:
 	return ret;
@@ -7498,13 +7498,13 @@ int issue_deauth_ex(struct rtw_adapter *
 				  FUNC_ADPT_ARG(adapt), da,
 				  rtw_get_oper_ch(adapt),
 				  ret == _SUCCESS ? ", acked" : "", i, try_cnt,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 		else
 			DBG_8192D(FUNC_ADPT_FMT ", ch:%u%s, %d/%d in %u ms\n",
 				  FUNC_ADPT_ARG(adapt),
 				  rtw_get_oper_ch(adapt),
 				  ret == _SUCCESS ? ", acked" : "", i, try_cnt,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 	}
 exit:
 	return ret;
@@ -7949,15 +7949,15 @@ unsigned int send_beacon(struct rtw_adap
 		return _FAIL;
 	if (false == bxmitok) {
 		DBG_8192D("%s fail! %u ms\n", __func__,
-			  rtw_get_passing_time_ms(start));
+			  rtw_systime_to_ms(jiffies - start));
 		return _FAIL;
 	} else {
-		u32 passing_time = rtw_get_passing_time_ms(start);
+		u32 passing_time = rtw_systime_to_ms(jiffies - start);
 
 		if (passing_time > 100 || issue > 3)
 			DBG_8192D("%s success, issue:%d, poll:%d, %u ms\n",
 				  __func__, issue, poll,
-				  rtw_get_passing_time_ms(start));
+				  rtw_systime_to_ms(jiffies - start));
 		return _SUCCESS;
 	}
 }
--- a/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
+++ b/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
@@ -400,7 +400,7 @@ void rtw_lps_leave(struct rtw_adapter *p
 					if (bAwake || padapter->bSurpriseRemoved)
 						break;
 
-					if (rtw_get_passing_time_ms(start_time) > LPS_LEAVE_TIMEOUT_MS) {
+					if (rtw_systime_to_ms(jiffies - start_time) > LPS_LEAVE_TIMEOUT_MS) {
 						DBG_8192D
 						    ("Wait for FW LPS leave more than %u ms!!!\n",
 						     LPS_LEAVE_TIMEOUT_MS);
@@ -514,7 +514,7 @@ int _rtw_pwr_wakeup(struct rtw_adapter *
 	if (pwrpriv->ps_processing) {
 		DBG_8192D("%s wait ps_processing...\n", __func__);
 		while (pwrpriv->ps_processing &&
-		       rtw_get_passing_time_ms(start) <= 3000)
+		       rtw_systime_to_ms(jiffies - start) <= 3000)
 			msleep(10);
 		if (pwrpriv->ps_processing)
 			DBG_8192D("%s wait ps_processing timeout\n", __func__);
@@ -525,7 +525,7 @@ int _rtw_pwr_wakeup(struct rtw_adapter *
 	if (pwrpriv->bInternalAutoSuspend == false && pwrpriv->bInSuspend) {
 		DBG_8192D("%s wait bInSuspend...\n", __func__);
 		while (pwrpriv->bInSuspend &&
-		       ((rtw_get_passing_time_ms(start) <= 3000)))
+		       ((rtw_systime_to_ms(jiffies - start) <= 3000)))
 			msleep(10);
 		if (pwrpriv->bInSuspend)
 			DBG_8192D("%s wait bInSuspend timeout\n", __func__);
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -2140,7 +2140,7 @@ static int rtw_ack_tx_polling(struct xmi
 		}
 
 		msleep(10);
-	} while (rtw_get_passing_time_ms(pack_tx_ops->submit_time) < timeout_ms);
+	} while (rtw_systime_to_ms(jiffies - pack_tx_ops->submit_time) < timeout_ms);
 
 	if (pack_tx_ops->status == RTW_SCTX_SUBMITTED) {
 		pack_tx_ops->status = RTW_SCTX_DONE_TIMEOUT;
--- a/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
@@ -422,13 +422,13 @@ int FirmwareDownload92D(struct rtw_adapt
 			rtStatus = _WriteFW(adapter, pFirmwareBuf, FirmwareLen);
 
 			if (rtStatus == _SUCCESS ||
-			    (rtw_get_passing_time_ms(fwdl_start_time) > 500 &&
+			    (rtw_systime_to_ms(jiffies - fwdl_start_time) > 500 &&
 			    writeFW_retry++ >= 3))
 				break;
 
 			DBG_8192D("%s writeFW_retry:%u, time after fwdl_start_time:%ums\n",
 				  __func__, writeFW_retry,
-				  rtw_get_passing_time_ms(fwdl_start_time));
+				  rtw_systime_to_ms(jiffies - fwdl_start_time));
 		}
 		_FWDownloadEnable(adapter, false);
 		if (_SUCCESS != rtStatus) {
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -1837,7 +1837,7 @@ static u32 rtl8192du_hal_init(struct rtw
 exit:
 	padapter->init_adpt_in_progress = false;
 
-	DBG_8192D("%s in %dms\n", __func__, rtw_get_passing_time_ms(init_start_time));
+	DBG_8192D("%s in %dms\n", __func__, rtw_systime_to_ms(jiffies - init_start_time));
 
 #ifdef CONFIG_WAKE_ON_WLAN
 	if (padapter->pwrctrlpriv.wowlan_mode == true)
@@ -2830,7 +2830,7 @@ static int _ReadadapterInfo8192DU(struct
 	_InitOtherVariable(adapter);
 
 	/* For 92DU Phy and Mac mode set , will initialize by EFUSE/EPPROM     zhiyuan 2010/03/25 */
-	DBG_8192D("<==== %s in %d ms\n", __func__, rtw_get_passing_time_ms(start));
+	DBG_8192D("<==== %s in %d ms\n", __func__, rtw_systime_to_ms(jiffies - start));
 
 	return _SUCCESS;
 }
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -199,7 +199,6 @@ u32	rtw_end_of_queue_search(struct list_
 u32	rtw_get_current_time(void);
 u32	rtw_systime_to_ms(u32 systime);
 u32	rtw_ms_to_systime(u32 ms);
-s32	rtw_get_passing_time_ms(u32 start);
 
 void	rtw_sleep_schedulable(int ms);
 
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -3641,7 +3641,7 @@ dump:
 
 	if (tx_ret != _SUCCESS || dump_cnt > 1) {
 		DBG_8192D(FUNC_ADPT_FMT" %s (%d/%d) in %d ms\n", FUNC_ADPT_ARG(padapter),
-			tx_ret==_SUCCESS?"OK":"FAIL", dump_cnt, dump_limit, rtw_get_passing_time_ms(start));
+			tx_ret==_SUCCESS?"OK":"FAIL", dump_cnt, dump_limit, rtw_systime_to_ms(jiffies - start));
 	}
 
 	switch (type) {
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -1157,7 +1157,7 @@ int rtw_ips_pwr_up(struct rtw_adapter *p
 
 	rtw_led_control(padapter, LED_CTL_NO_LINK);
 
-	DBG_8192D("<===  rtw_ips_pwr_up.............. in %dms\n", rtw_get_passing_time_ms(start_time));
+	DBG_8192D("<===  rtw_ips_pwr_up.............. in %dms\n", rtw_systime_to_ms(jiffies - start_time));
 	return result;
 }
 
@@ -1173,7 +1173,7 @@ void rtw_ips_pwr_down(struct rtw_adapter
 
 	rtw_ips_dev_unload(padapter);
 	padapter->bCardDisableWOHSM = false;
-	DBG_8192D("<=== rtw_ips_pwr_down..................... in %dms\n", rtw_get_passing_time_ms(start_time));
+	DBG_8192D("<=== rtw_ips_pwr_down..................... in %dms\n", rtw_systime_to_ms(jiffies - start_time));
 }
 
 void rtw_ips_dev_unload(struct rtw_adapter *padapter)
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -167,12 +167,6 @@ inline u32 rtw_ms_to_systime(u32 ms)
 	return ms * HZ / 1000;
 }
 
-/*  the input parameter start use the same unit as returned by rtw_get_current_time */
-inline s32 rtw_get_passing_time_ms(u32 start)
-{
-	return rtw_systime_to_ms(jiffies-start);
-}
-
 void rtw_sleep_schedulable(int ms)
 {
     u32 delta;
--- a/drivers/staging/rtl8192du/os_dep/usb_intf.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_intf.c
@@ -440,8 +440,8 @@ static int rtw_suspend(struct usb_interf
 		rtw_indicate_disconnect(padapter);
 
 exit:
-	DBG_8192D("<===  %s return %d.............. in %dms\n", __func__
-		, ret, rtw_get_passing_time_ms(start_time));
+	DBG_8192D("<===  %s return %d.............. in %dms\n", __func__,
+		  ret, rtw_systime_to_ms(jiffies - start_time));
 
 	return ret;
 }
@@ -486,7 +486,7 @@ exit:
 	if (pwrpriv)
 		pwrpriv->bInSuspend = false;
 	DBG_8192D("<===  %s return %d.............. in %dms\n", __func__,
-		  ret, rtw_get_passing_time_ms(start_time));
+		  ret, rtw_systime_to_ms(jiffies - start_time));
 	return ret;
 }
 
