From 4d4511296349fd6d620c7fb1142932f99641f9d4 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Thu, 20 Feb 2014 16:38:09 -0600
Subject: [PATCH 237/390] rtl8192du: Remove CONFIG_LAYER2_ROAMING

This variable is always defined.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_mlme.c         | 14 --------------
 include/autoconf.h      |  5 ++---
 include/drv_types.h     |  2 --
 include/rtw_mlme.h      |  9 ---------
 os_dep/ioctl_cfg80211.c |  5 +----
 os_dep/os_intfs.c       |  4 ----
 os_dep/usb_intf.c       |  7 +------
 7 files changed, 4 insertions(+), 42 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -1000,7 +1000,6 @@ void rtw_surveydone_event_callback(struc
 				DBG_8192D
 				    ("try_to_join, but select scanning queue fail, to_roaming:%d\n",
 				     rtw_to_roaming(adapter));
-#ifdef CONFIG_LAYER2_ROAMING
 				if (rtw_to_roaming(adapter) != 0) {
 					if (--pmlmepriv->to_roaming == 0 || _SUCCESS !=
 					    rtw_sitesurvey_cmd(adapter,
@@ -1017,7 +1016,6 @@ void rtw_surveydone_event_callback(struc
 						pmlmepriv->to_join = true;
 					}
 				}
-#endif
 				_clr_fwstate_(pmlmepriv, _FW_UNDER_LINKING);
 			}
 		}
@@ -1808,7 +1806,6 @@ void rtw_stadel_event_callback(struct rt
 	spin_lock_bh(&pmlmepriv->lock);
 
 	if (check_fwstate(pmlmepriv, WIFI_STATION_STATE)) {
-#ifdef CONFIG_LAYER2_ROAMING
 		if (rtw_to_roaming(adapter) > 0)
 			pmlmepriv->to_roaming--;	/* this stadel_event is caused by roaming, decrease to_roaming */
 		else if (rtw_to_roaming(adapter) == 0)
@@ -1818,7 +1815,6 @@ void rtw_stadel_event_callback(struct rt
 		if (*((unsigned short *)(pstadel->rsvd)) !=
 		    WLAN_REASON_EXPIRATION_CHK)
 			rtw_set_roaming(adapter, 0);	/* don't roam */
-#endif
 
 		rtw_free_uc_swdec_pending_queue(adapter);
 
@@ -1903,9 +1899,7 @@ void rtw_cpwm_event_callback(struct rtw_
 void _rtw_join_timeout_handler(struct rtw_adapter *adapter)
 {
 	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
-#ifdef CONFIG_LAYER2_ROAMING
 	int do_join_r;
-#endif /* CONFIG_LAYER2_ROAMING */
 
 	DBG_8192D("%s, fw_state=%x\n", __func__, get_fwstate(pmlmepriv));
 
@@ -1914,7 +1908,6 @@ void _rtw_join_timeout_handler(struct rt
 
 	spin_lock_bh(&pmlmepriv->lock);
 
-#ifdef CONFIG_LAYER2_ROAMING
 	if (rtw_to_roaming(adapter) > 0) {	/* join timeout caused by roaming */
 		while (1) {
 			pmlmepriv->to_roaming--;
@@ -1937,7 +1930,6 @@ void _rtw_join_timeout_handler(struct rt
 		}
 
 	} else
-#endif
 	{
 		rtw_indicate_disconnect(adapter);
 		free_scanqueue(pmlmepriv);	/*  */
@@ -2150,7 +2142,6 @@ static int rtw_check_join_candidate(stru
 	if (rtw_is_desired_network(adapter, competitor) == false)
 		goto exit;
 
-#ifdef CONFIG_LAYER2_ROAMING
 	if (rtw_to_roaming(adapter) > 0) {
 		if (rtw_get_passing_time_ms((u32) competitor->last_scanned) >=
 		    RTW_SCAN_RESULT_EXPIRE ||
@@ -2158,7 +2149,6 @@ static int rtw_check_join_candidate(stru
 				   &pmlmepriv->cur_network.network) == false)
 			goto exit;
 	}
-#endif
 
 	if (*candidate == NULL ||
 	    (*candidate)->network.Rssi < competitor->network.Rssi) {
@@ -2173,9 +2163,7 @@ static int rtw_check_join_candidate(stru
 			  (*candidate)->network.Ssid.Ssid,
 			  (*candidate)->network.MacAddress,
 			  (int)(*candidate)->network.Rssi);
-#ifdef CONFIG_LAYER2_ROAMING
 		DBG_8192D("[to_roaming:%u]\n", rtw_to_roaming(adapter));
-#endif
 	}
 
 exit:
@@ -2905,7 +2893,6 @@ void rtw_issue_addbareq_cmd(struct rtw_a
 	}
 }
 
-#ifdef CONFIG_LAYER2_ROAMING
 inline void rtw_set_roaming(struct rtw_adapter *adapter, u8 to_roaming)
 {
 	if (to_roaming == 0)
@@ -2972,7 +2959,6 @@ void _rtw_roaming(struct rtw_adapter *pa
 		}
 	}
 }
-#endif
 
 #ifdef CONFIG_CONCURRENT_MODE
 int rtw_buddy_adapter_up(struct rtw_adapter *padapter)
--- a/drivers/staging/rtl8192du/include/autoconf.h
+++ b/drivers/staging/rtl8192du/include/autoconf.h
@@ -45,17 +45,16 @@
 #endif
 #define CONFIG_FIND_BEST_CHANNEL	1
 
-/* 	Added by Albert 20110314 */
 #define CONFIG_P2P	1
+
 #ifdef CONFIG_P2P
 	#ifndef CONFIG_WIFI_TEST
 		#define CONFIG_P2P_REMOVE_GROUP_INFO
 	#endif
 #endif
 
-#define CONFIG_LAYER2_ROAMING
-#define CONFIG_LAYER2_ROAMING_RESUME
 /* define CONFIG_IOCTL_CFG80211 */
+
 #define RTW_NOTCH_FILTER 0 /* 0:Disable, 1:Enable,*/
 
 #define CONFIG_BR_EXT	1	/*  Enable NAT2.5 support for STA mode interface with a L2 Bridge */
--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -149,9 +149,7 @@ struct registry_priv {
 
 	u8	hw_wps_pbc;/* 0:disable,1:enable */
 
-#ifdef CONFIG_LAYER2_ROAMING
 	u8	max_roaming_times; /*  the max number driver will try to roaming */
-#endif
 
 	u8  special_rf_path; /* 0: 2T2R ,1: only turn on path A 1T1R, 2: only turn on path B 1T1R */
 	u8	mac_phy_mode; /* 0:by efuse, 1:smsp, 2:dmdp, 3:dmsp. */
--- a/drivers/staging/rtl8192du/include/rtw_mlme.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme.h
@@ -328,9 +328,7 @@ struct mlme_priv {
 	int	fw_state;	/* shall we protect this variable? maybe not necessarily... */
 
 	u8	to_join; /* flag */
-	#ifdef CONFIG_LAYER2_ROAMING
 	u8 to_roaming; /*  roaming trying times */
-	#endif
 
 	u8	*nic_hdl;
 
@@ -642,16 +640,9 @@ void rtw_issue_addbareq_cmd(struct rtw_a
 int rtw_is_same_ibss(struct rtw_adapter *adapter, struct wlan_network *pnetwork);
 int is_same_network(struct wlan_bssid_ex *src, struct wlan_bssid_ex *dst);
 
-#ifdef CONFIG_LAYER2_ROAMING
 void _rtw_roaming(struct rtw_adapter *adapter, struct wlan_network *tgt_network);
 void rtw_roaming(struct rtw_adapter *adapter, struct wlan_network *tgt_network);
 void rtw_set_roaming(struct rtw_adapter *adapter, u8 to_roaming);
 u8 rtw_to_roaming(struct rtw_adapter *adapter);
-#else
-#define _rtw_roaming(adapter, tgt_network) do {} while (0)
-#define rtw_roaming(adapter, tgt_network) do {} while (0)
-#define rtw_set_roaming(adapter, to_roaming) do {} while (0)
-#define rtw_to_roaming(adapter) 0
-#endif
 
 #endif /* __RTL871X_MLME_H_ */
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -425,7 +425,6 @@ void rtw_cfg80211_indicate_connect(struc
 	}
 #endif /* CONFIG_P2P */
 
-	#ifdef CONFIG_LAYER2_ROAMING
 	if (rtw_to_roaming(padapter) > 0) {
 		struct wiphy *wiphy = pwdev->wiphy;
 		struct ieee80211_channel *notify_channel;
@@ -451,9 +450,7 @@ void rtw_cfg80211_indicate_connect(struc
 				pmlmepriv->assoc_rsp_len -
 				sizeof(struct rtw_ieee80211_hdr_3addr) - 6,
 				GFP_ATOMIC);
-	} else
-	#endif
-	{
+	} else {
 		DBG_8192D("pwdev->sme_state(b)=%d\n", pwdev->sme_state);
 		cfg80211_connect_result(padapter->pnetdev, cur_network->network.MacAddress
 			, pmlmepriv->assoc_req+sizeof(struct rtw_ieee80211_hdr_3addr)+2
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -189,11 +189,9 @@ module_param(rtw_hwpwrp_detect, int, 064
 
 module_param(rtw_hw_wps_pbc, int, 0644);
 
-#ifdef CONFIG_LAYER2_ROAMING
 static uint rtw_max_roaming_times = 2;
 module_param(rtw_max_roaming_times, uint, 0644);
 MODULE_PARM_DESC(rtw_max_roaming_times,"The max roaming times to try");
-#endif /* CONFIG_LAYER2_ROAMING */
 
 module_param(rtw_mc2u_disable, int, 0644);
 
@@ -690,9 +688,7 @@ static uint loadparam(struct rtw_adapter
 
 	registry_par->hw_wps_pbc = (u8)rtw_hw_wps_pbc;
 
-#ifdef CONFIG_LAYER2_ROAMING
 	registry_par->max_roaming_times = (u8)rtw_max_roaming_times;
-#endif
 
 	registry_par->mac_phy_mode = rtw_mac_phy_mode;
 	GlobalDebugLevel = debug;
--- a/drivers/staging/rtl8192du/os_dep/usb_intf.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_intf.c
@@ -549,7 +549,6 @@ static int rtw_suspend(struct usb_interf
 		rtw_disassoc_cmd(padapter, 0, false);
 	}
 
-#ifdef CONFIG_LAYER2_ROAMING_RESUME
 	if (check_fwstate(pmlmepriv, WIFI_STATION_STATE) && check_fwstate(pmlmepriv, _FW_LINKED))
 	{
 		DBG_8192D("%s:%d %s(%pM), length:%d assoc_ssid.length:%d\n",__func__, __LINE__,
@@ -558,8 +557,7 @@ static int rtw_suspend(struct usb_interf
 				pmlmepriv->cur_network.network.Ssid.SsidLength,
 				pmlmepriv->assoc_ssid.SsidLength);
 		rtw_set_roaming(padapter, 1);
-		}
-#endif
+	}
 	/* s2-2.  indicate disconnect to os */
 	rtw_indicate_disconnect(padapter);
 	/* s2-3. */
@@ -633,10 +631,7 @@ int rtw_resume_process(struct rtw_adapte
 		rtw_signal_process(padapter->pid[1], SIGUSR2);
 	}
 
-	#ifdef CONFIG_LAYER2_ROAMING_RESUME
 	rtw_roaming(padapter, NULL);
-	#endif
-
 	ret = 0;
 exit:
 	if (pwrpriv)
