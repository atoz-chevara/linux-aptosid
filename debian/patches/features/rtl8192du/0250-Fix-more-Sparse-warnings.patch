From b41d727a974ec04c0091044010dcd9a2cc277091 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Thu, 13 Mar 2014 15:02:57 -0500
Subject: [PATCH 250/390] Fix more Sparse warnings

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_br_ext.c | 8 ++++----
 os_dep/os_intfs.c | 2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_br_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_br_ext.c
@@ -166,7 +166,7 @@ static inline void __nat25_generate_ipx_
 }
 
 static inline void __nat25_generate_ipx_network_addr_with_socket(unsigned char *networkAddr,
-				__be32 *ipxNetAddr, unsigned short *ipxSocketAddr)
+				__be32 *ipxNetAddr, __be16 *ipxSocketAddr)
 {
 	memset(networkAddr, 0, MAX_NETWORK_ADDR_LEN);
 
@@ -765,7 +765,7 @@ int nat25_db_handle(struct rtw_adapter *
 		__be32 *sender;
 
 		if (arp->ar_pro != __constant_htons(ETH_P_IP)) {
-			ERR_8192D("NAT25: arp protocol unknown (%4x)!\n", htons(arp->ar_pro));
+			ERR_8192D("NAT25: arp protocol unknown (%4x)!\n", arp->ar_pro);
 			return -1;
 		}
 
@@ -1218,7 +1218,7 @@ int nat25_db_handle(struct rtw_adapter *
 						hdr->icmp6_cksum = csum_ipv6_magic(&iph->saddr, &iph->daddr,
 										be16_to_cpu(iph->payload_len),
 										IPPROTO_ICMPV6,
-										csum_partial((__u8 *)hdr, iph->payload_len, 0));
+										csum_partial((__u8 *)hdr, be16_to_cpu(iph->payload_len), 0));
 					}
 				}
 			}
@@ -1390,7 +1390,7 @@ void *scdb_findentry(struct rtw_adapter
 	struct nat25_network_db_entry *db;
 	int hash;
 
-	__nat25_generate_ipv4_network_addr(networkAddr, (unsigned int *)ipaddr);
+	__nat25_generate_ipv4_network_addr(networkAddr, (__be32 *)ipaddr);
 	hash = __nat25_network_hash(networkAddr);
 	db = priv->nethash[hash];
 	while (db != NULL) {
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -952,7 +952,7 @@ void rtw_stop_drv_threads (struct rtw_ad
 #endif
 }
 
-u8 rtw_init_default_value(struct rtw_adapter *padapter)
+static u8 rtw_init_default_value(struct rtw_adapter *padapter)
 {
 	u8 ret  = _SUCCESS;
 	struct registry_priv* pregistrypriv = &padapter->registrypriv;
