From 45a5999a61f7e76f08e54c2c181da41a7ef61168 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sun, 28 Apr 2013 13:01:13 -0500
Subject: [PATCH 078/390] Convert typedef for _pkt

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_recv.c         |  2 +-
 core/rtw_xmit.c         |  8 ++++----
 hal/usb_ops_linux.c     | 10 +++++-----
 include/hal_intf.h      |  4 ++--
 include/osdep_service.h |  1 -
 include/recv_osdep.h    | 12 +++---------
 include/rtw_mp.h        | 16 +++-------------
 include/rtw_recv.h      | 15 +++++++--------
 include/rtw_xmit.h      | 29 +++++------------------------
 include/xmit_osdep.h    | 10 +++++-----
 os_dep/recv_linux.c     |  6 +++---
 os_dep/xmit_linux.c     |  8 ++++----
 12 files changed, 42 insertions(+), 79 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -2223,7 +2223,7 @@ int amsdu_to_msdu(_adapter *padapter, un
 	unsigned char *pdata;
 	struct rx_pkt_attrib *pattrib;
 	unsigned char *data_ptr;
-	_pkt *sub_skb,*subframes[MAX_SUBFRAME_COUNT];
+	struct sk_buff *sub_skb,*subframes[MAX_SUBFRAME_COUNT];
 	struct recv_priv *precvpriv = &padapter->recvpriv;
 	_queue *pfree_recv_queue = &(precvpriv->free_recv_queue);
 	int	ret = _SUCCESS;
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -576,7 +576,7 @@ static void set_qos(struct pkt_file *ppk
 	pattrib->subtype = WIFI_QOS_DATA_TYPE;
 }
 
-static s32 update_attrib(_adapter *padapter, _pkt *pkt, struct pkt_attrib *pattrib)
+static s32 update_attrib(_adapter *padapter, struct sk_buff *pkt, struct pkt_attrib *pattrib)
 {
 	uint i;
 	struct pkt_file pktfile;
@@ -1549,7 +1549,7 @@ This sub-routine will perform all the fo
 6. apply sw-encrypt, if necessary.
 
 */
-s32 rtw_xmitframe_coalesce(_adapter *padapter, _pkt *pkt, struct xmit_frame *pxmitframe)
+s32 rtw_xmitframe_coalesce(_adapter *padapter, struct sk_buff *pkt, struct xmit_frame *pxmitframe)
 {
 	struct pkt_file pktfile;
 
@@ -2108,7 +2108,7 @@ s32 rtw_free_xmitframe(struct xmit_priv
 {
 	_queue *pfree_xmit_queue = &pxmitpriv->free_xmit_queue;
 	_adapter *padapter = pxmitpriv->adapter;
-	_pkt *pndis_pkt = NULL;
+	struct sk_buff *pndis_pkt = NULL;
 
 _func_enter_;
 
@@ -2669,7 +2669,7 @@ static void do_queue_select(_adapter	*pa
  *	0	success, hardware will handle this xmit frame(packet)
  *	<0	fail
  */
-s32 rtw_xmit(_adapter *padapter, _pkt **ppkt)
+s32 rtw_xmit(_adapter *padapter, struct sk_buff **ppkt)
 {
 #ifdef CONFIG_AP_MODE
 #endif
--- a/drivers/staging/rtl8192du/hal/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/hal/usb_ops_linux.c
@@ -527,7 +527,7 @@ static s32 pre_recv_entry(union recv_fra
 			//clone/copy to if2
 			u8 shift_sz = 0;
 			u32 alloc_sz, skb_len;
-			_pkt	 *pkt_copy = NULL;
+			struct sk_buff *pkt_copy = NULL;
 			struct rx_pkt_attrib *pattrib = NULL;
 
 			precvframe_if2 = rtw_alloc_recvframe(pfree_recv_queue);
@@ -622,7 +622,7 @@ static int recvbuf2recvframe(_adapter *p
 	int	transfer_len;
 	struct recv_stat	*prxstat;
 	struct phy_stat	*pphy_info = NULL;
-	_pkt				*pkt_copy = NULL;
+	struct sk_buff *pkt_copy = NULL;
 	union recv_frame	*precvframe = NULL;
 	struct rx_pkt_attrib	*pattrib = NULL;
 	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(padapter);
@@ -948,7 +948,7 @@ _func_exit_;
 	return ret;
 }
 #else	// CONFIG_USE_USB_BUFFER_ALLOC_RX
-static int recvbuf2recvframe(_adapter *padapter, _pkt *pskb)
+static int recvbuf2recvframe(_adapter *padapter, struct sk_buff *pskb)
 {
 	u8	*pbuf;
 	u8	shift_sz = 0;
@@ -957,7 +957,7 @@ static int recvbuf2recvframe(_adapter *p
 	int	transfer_len;
 	struct recv_stat	*prxstat;
 	struct phy_stat	*pphy_info = NULL;
-	_pkt				*pkt_copy = NULL;
+	struct sk_buff *pkt_copy = NULL;
 	union recv_frame	*precvframe = NULL;
 	struct rx_pkt_attrib	*pattrib = NULL;
 	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
@@ -1128,7 +1128,7 @@ _exit_recvbuf2recvframe:
 
 void rtl8192du_recv_tasklet(void *priv)
 {
-	_pkt			*pskb;
+	struct sk_buff *pskb;
 	_adapter		*padapter = (_adapter*)priv;
 	struct recv_priv	*precvpriv = &padapter->recvpriv;
 
--- a/drivers/staging/rtl8192du/include/hal_intf.h
+++ b/drivers/staging/rtl8192du/include/hal_intf.h
@@ -198,7 +198,7 @@ struct hal_ops {
 	void	(*write_rfreg)(PADAPTER Adapter, u32 eRFPath, u32 RegAddr, u32 BitMask, u32 Data);
 
 #ifdef CONFIG_HOSTAPD_MLME
-	s32	(*hostap_mgnt_xmit_entry)(PADAPTER Adapter, _pkt *pkt);
+	s32	(*hostap_mgnt_xmit_entry)(PADAPTER Adapter, struct sk_buff *pkt);
 #endif
 	void (*EfusePowerSwitch)(PADAPTER pAdapter, u8 bWrite, u8 PwrState);
 	void (*ReadEFuse)(PADAPTER Adapter, u8 efuseType, u16 _offset, u16 _size_byte, u8 *pbuf, bool bPseudoTest);
@@ -371,7 +371,7 @@ void rtw_hal_antdiv_rssi_compared(_adapt
 #endif
 
 #ifdef CONFIG_HOSTAPD_MLME
-s32 rtw_hal_hostap_mgnt_xmit_entry(_adapter *padapter, _pkt *pkt);
+s32 rtw_hal_hostap_mgnt_xmit_entry(_adapter *padapter, struct sk_buff *pkt);
 #endif
 
 #ifdef DBG_CONFIG_ERROR_DETECT
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -99,7 +99,6 @@
 		spinlock_t	lock;
 	};
 
-	typedef	struct sk_buff	_pkt;
 	typedef unsigned char	_buffer;
 
 	typedef struct	__queue	_queue;
--- a/drivers/staging/rtl8192du/include/recv_osdep.h
+++ b/drivers/staging/rtl8192du/include/recv_osdep.h
@@ -24,28 +24,23 @@
 #include <osdep_service.h>
 #include <drv_types.h>
 
-
 extern int _rtw_init_recv_priv(struct recv_priv *precvpriv, _adapter *padapter);
 extern void _rtw_free_recv_priv (struct recv_priv *precvpriv);
 
-
 extern s32  rtw_recv_entry(union recv_frame *precv_frame);
 extern int rtw_recv_indicatepkt(_adapter *adapter, union recv_frame *precv_frame);
-extern void rtw_recv_returnpacket(_nic_hdl cnxt, _pkt *preturnedpkt);
+extern void rtw_recv_returnpacket(_nic_hdl cnxt, struct sk_buff *preturnedpkt);
 
 extern void rtw_hostapd_mlme_rx(_adapter *padapter, union recv_frame *precv_frame);
-extern void rtw_handle_tkip_mic_err(_adapter *padapter,u8 bgroup);
-
+extern void rtw_handle_tkip_mic_err(_adapter *padapter, u8 bgroup);
 
 int	rtw_init_recv_priv(struct recv_priv *precvpriv, _adapter *padapter);
 void rtw_free_recv_priv (struct recv_priv *precvpriv);
 
-
 int rtw_os_recv_resource_init(struct recv_priv *precvpriv, _adapter *padapter);
 int rtw_os_recv_resource_alloc(_adapter *padapter, union recv_frame *precvframe);
 void rtw_os_recv_resource_free(struct recv_priv *precvpriv);
 
-
 int rtw_os_recvbuf_resource_alloc(_adapter *padapter, struct recv_buf *precvbuf);
 int rtw_os_recvbuf_resource_free(_adapter *padapter, struct recv_buf *precvbuf);
 
@@ -53,5 +48,4 @@ void rtw_os_read_port(_adapter *padapter
 
 void rtw_init_recv_timer(struct recv_reorder_ctrl *preorder_ctrl);
 
-
-#endif //
+#endif
--- a/drivers/staging/rtl8192du/include/rtw_mp.h
+++ b/drivers/staging/rtl8192du/include/rtw_mp.h
@@ -83,26 +83,17 @@
 #define MAX_MP_XMITBUF_SZ	2048
 #define NR_MP_XMITFRAME		8
 
-struct mp_xmit_frame
-{
+struct mp_xmit_frame {
 	_list	list;
-
 	struct pkt_attrib attrib;
-
-	_pkt *pkt;
-
+	struct sk_buff *pkt;
 	int frame_tag;
-
 	_adapter *padapter;
-
 	//insert urb, irp, and irpcnt info below...
 	//max frag_cnt = 8
-
 	u8 *mem_addr;
 	u32 sz[8];
-
 	struct urb *pxmit_urb[8];
-
 	u8 bpending[8];
 	int ac_tag[8];
 	int last[8];
@@ -111,8 +102,7 @@ struct mp_xmit_frame
 	uint mem[(MAX_MP_XMITBUF_SZ >> 2)];
 };
 
-struct mp_wiparam
-{
+struct mp_wiparam {
 	u32 bcompleted;
 	u32 act_type;
 	u32 io_offset;
--- a/drivers/staging/rtl8192du/include/rtw_recv.h
+++ b/drivers/staging/rtl8192du/include/rtw_recv.h
@@ -102,8 +102,7 @@ struct signal_stat {
 	u32	total_val;		//sum of valid elements
 };
 
-struct rx_pkt_attrib
-{
+struct rx_pkt_attrib {
 	u16	pkt_len;
 	u8	physt;
 	u8	drvinfo_sz;
@@ -310,7 +309,7 @@ struct recv_buf {
 	u32 alloc_sz;
 	u8  irp_pending;
 	int  transfer_len;
-	_pkt *pskb;
+	struct sk_buff *pskb;
 	u8	reuse;
 };
 
@@ -337,8 +336,8 @@ struct recv_frame_hdr
 	struct sk_buff	 *pkt;
 	struct sk_buff	 *pkt_newalloc;
 #else // CONFIG_BSD_RX_USE_MBUF
-	_pkt	*pkt;
-	_pkt *pkt_newalloc;
+	struct sk_buff *pkt;
+	struct sk_buff *pkt_newalloc;
 #endif // CONFIG_BSD_RX_USE_MBUF
 
 	_adapter  *adapter;
@@ -553,7 +552,7 @@ static inline union recv_frame *rxmem_to
 
 }
 
-static inline union recv_frame *pkt_to_recvframe(_pkt *pkt)
+static inline union recv_frame *pkt_to_recvframe(struct sk_buff *pkt)
 {
 
 	u8 * buf_star;
@@ -563,7 +562,7 @@ static inline union recv_frame *pkt_to_r
 	return precv_frame;
 }
 
-static inline u8 *pkt_to_recvmem(_pkt *pkt)
+static inline u8 *pkt_to_recvmem(struct sk_buff *pkt)
 {
 	// return the rx_head
 
@@ -573,7 +572,7 @@ static inline u8 *pkt_to_recvmem(_pkt *p
 
 }
 
-static inline u8 *pkt_to_recvdata(_pkt *pkt)
+static inline u8 *pkt_to_recvdata(struct sk_buff *pkt)
 {
 	// return the rx_data
 
--- a/drivers/staging/rtl8192du/include/rtw_xmit.h
+++ b/drivers/staging/rtl8192du/include/rtw_xmit.h
@@ -288,22 +288,14 @@ struct xmit_buf
 #endif
 };
 
-struct xmit_frame
-{
+struct xmit_frame {
 	_list	list;
-
 	struct pkt_attrib attrib;
-
-	_pkt *pkt;
-
+	struct sk_buff *pkt;
 	int	frame_tag;
-
 	_adapter *padapter;
-
 	u8	*buf_addr;
-
 	struct xmit_buf *pxmitbuf;
-
 #ifdef CONFIG_USB_TX_AGGREGATION
 	u8	agg_num;
 #endif
@@ -313,7 +305,6 @@ struct xmit_frame
 #ifdef CONFIG_XMIT_ACK
 	u8 ack_report;
 #endif
-
 };
 
 struct tx_servq {
@@ -324,27 +315,17 @@ struct tx_servq {
 
 
 
-struct sta_xmit_priv
-{
+struct sta_xmit_priv {
 	spinlock_t lock;
 	int	option;
 	int	apsd_setting;	//When bit mask is on, the associated edca queue supports APSD.
-
-
-	//struct tx_servq blk_q[MAX_NUMBLKS];
 	struct tx_servq	be_q;			//priority == 0,3
 	struct tx_servq	bk_q;			//priority == 1,2
 	struct tx_servq	vi_q;			//priority == 4,5
 	struct tx_servq	vo_q;			//priority == 6,7
 	_list	legacy_dz;
 	_list  apsd;
-
 	u16 txseq_tid[16];
-
-	//uint	sta_tx_bytes;
-	//u64	sta_tx_pkts;
-	//uint	sta_tx_fail;
-
 };
 
 
@@ -460,7 +441,7 @@ extern s32 rtw_xmit_classifier(_adapter
 extern thread_return rtw_xmit_thread(thread_context context);
 extern u32 rtw_calculate_wlan_pkt_size_by_attribue(struct pkt_attrib *pattrib);
 #define rtw_wlan_pkt_size(f) rtw_calculate_wlan_pkt_size_by_attribue(&f->attrib)
-extern s32 rtw_xmitframe_coalesce(_adapter *padapter, _pkt *pkt, struct xmit_frame *pxmitframe);
+extern s32 rtw_xmitframe_coalesce(_adapter *padapter, struct sk_buff *pkt, struct xmit_frame *pxmitframe);
 #ifdef CONFIG_TDLS
 s32 rtw_xmit_tdls_coalesce(_adapter *padapter, struct xmit_frame *pxmitframe, u8 action);
 #endif //CONFIG_TDLS
@@ -481,7 +462,7 @@ void rtw_alloc_hwxmits(_adapter *padapte
 void rtw_free_hwxmits(_adapter *padapter);
 
 
-s32 rtw_xmit(_adapter *padapter, _pkt **pkt);
+s32 rtw_xmit(_adapter *padapter, struct sk_buff **pkt);
 
 #if defined(CONFIG_AP_MODE) || defined(CONFIG_TDLS)
 int xmitframe_enqueue_for_sleeping_sta(_adapter *padapter, struct xmit_frame *pxmitframe);
--- a/drivers/staging/rtl8192du/include/xmit_osdep.h
+++ b/drivers/staging/rtl8192du/include/xmit_osdep.h
@@ -25,7 +25,7 @@
 #include <drv_types.h>
 
 struct pkt_file {
-	_pkt *pkt;
+	struct sk_buff *pkt;
 	__kernel_size_t pkt_len;	 //the remainder length of the open_file
 	_buffer *cur_buffer;
 	u8 *buf_start;
@@ -41,21 +41,21 @@ struct sta_xmit_priv;
 struct xmit_frame;
 struct xmit_buf;
 
-extern int rtw_xmit_entry(_pkt *pkt, _nic_hdl pnetdev);
+extern int rtw_xmit_entry(struct sk_buff *pkt, _nic_hdl pnetdev);
 
 void rtw_os_xmit_schedule(_adapter *padapter);
 
 int rtw_os_xmit_resource_alloc(_adapter *padapter, struct xmit_buf *pxmitbuf,u32 alloc_sz);
 void rtw_os_xmit_resource_free(_adapter *padapter, struct xmit_buf *pxmitbuf,u32 free_sz);
 
-extern void rtw_set_tx_chksum_offload(_pkt *pkt, struct pkt_attrib *pattrib);
+extern void rtw_set_tx_chksum_offload(struct sk_buff *pkt, struct pkt_attrib *pattrib);
 
 extern uint rtw_remainder_len(struct pkt_file *pfile);
-extern void _rtw_open_pktfile(_pkt *pkt, struct pkt_file *pfile);
+extern void _rtw_open_pktfile(struct sk_buff *pkt, struct pkt_file *pfile);
 extern uint _rtw_pktfile_read (struct pkt_file *pfile, u8 *rmem, uint rlen);
 extern int rtw_endofpktfile (struct pkt_file *pfile);
 
-extern void rtw_os_pkt_complete(_adapter *padapter, _pkt *pkt);
+extern void rtw_os_pkt_complete(_adapter *padapter, struct sk_buff *pkt);
 extern void rtw_os_xmit_complete(_adapter *padapter, struct xmit_frame *pxframe);
 
 #endif //__XMIT_OSDEP_H_
--- a/drivers/staging/rtl8192du/os_dep/recv_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/recv_linux.c
@@ -189,7 +189,7 @@ void rtw_handle_tkip_mic_err(_adapter *p
 void rtw_hostapd_mlme_rx(_adapter *padapter, union recv_frame *precv_frame)
 {
 #ifdef CONFIG_HOSTAPD_MLME
-	_pkt *skb;
+	struct sk_buff *skb;
 	struct hostapd_priv *phostapdpriv  = padapter->phostapdpriv;
 	struct net_device *pmgnt_netdev = phostapdpriv->pmgnt_netdev;
 
@@ -231,7 +231,7 @@ int rtw_recv_indicatepkt(_adapter *padap
 {
 	struct recv_priv *precvpriv;
 	_queue	*pfree_recv_queue;
-	_pkt *skb;
+	struct sk_buff *skb;
 	struct mlme_priv*pmlmepriv = &padapter->mlmepriv;
 #ifdef CONFIG_TCP_CSUM_OFFLOAD_RX
 	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
@@ -274,7 +274,7 @@ _func_enter_;
 
 	if(check_fwstate(pmlmepriv, WIFI_AP_STATE) == true)
 	{
-		_pkt *pskb2=NULL;
+		struct sk_buff *pskb2=NULL;
 		struct sta_info *psta = NULL;
 		struct sta_priv *pstapriv = &padapter->stapriv;
 		struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
--- a/drivers/staging/rtl8192du/os_dep/xmit_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/xmit_linux.c
@@ -38,7 +38,7 @@ uint rtw_remainder_len(struct pkt_file *
 	return (pfile->buf_len - ((SIZE_PTR)(pfile->cur_addr) - (SIZE_PTR)(pfile->buf_start)));
 }
 
-void _rtw_open_pktfile (_pkt *pktptr, struct pkt_file *pfile)
+void _rtw_open_pktfile (struct sk_buff *pktptr, struct pkt_file *pfile)
 {
 _func_enter_;
 
@@ -85,7 +85,7 @@ _func_exit_;
 	return false;
 }
 
-void rtw_set_tx_chksum_offload(_pkt *pkt, struct pkt_attrib *pattrib)
+void rtw_set_tx_chksum_offload(struct sk_buff *pkt, struct pkt_attrib *pattrib)
 {
 
 #ifdef CONFIG_TCP_CSUM_OFFLOAD_TX
@@ -187,7 +187,7 @@ void rtw_os_xmit_resource_free(_adapter
 #endif	// CONFIG_USE_USB_BUFFER_ALLOC_TX
 }
 
-void rtw_os_pkt_complete(_adapter *padapter, _pkt *pkt)
+void rtw_os_pkt_complete(_adapter *padapter, struct sk_buff *pkt)
 {
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,35))
 	u16	queue;
@@ -292,7 +292,7 @@ int rtw_mlcst2unicst(_adapter *padapter,
 	return true;
 }
 
-int rtw_xmit_entry(_pkt *pkt, _nic_hdl pnetdev)
+int rtw_xmit_entry(struct sk_buff *pkt, _nic_hdl pnetdev)
 {
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(pnetdev);
 	struct xmit_priv *pxmitpriv = &padapter->xmitpriv;
