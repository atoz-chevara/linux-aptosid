From 9b1c1d24f7e948b4d68f31332449b13441b4ddf0 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 15 Mar 2014 20:44:40 -0500
Subject: [PATCH 320/390] Remove unused part of DISABLE_BB_RF

This one was defined as 0.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 hal/rtl8192d_dm.c     |  4 ----
 hal/rtl8192d_phycfg.c | 49 ++++++-------------------------------------------
 hal/usb_halinit.c     | 34 ++++------------------------------
 include/autoconf.h    |  2 --
 4 files changed, 10 insertions(+), 79 deletions(-)

--- a/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
@@ -2036,10 +2036,6 @@ void
 rtl8192d_dm_CheckTXPowerTracking(
 	struct rtw_adapter *		adapter)
 {
-
-#if DISABLE_BB_RF
-	return;
-#endif
 	dm_CheckTXPowerTracking_ThermalMeter(adapter);
 }
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
@@ -152,20 +152,12 @@ static	u32 phy_CalculateBitShift(u32 Bit
 /*  */
 /* To avoid miswrite Reg0x800 for 92D */
 /*  */
-void
-rtl8192d_PHY_SetBBReg1Byte(
-	struct rtw_adapter *	adapter,
-	u32		RegAddr,
-	u32		BitMask,
-	u32		Data
-	)
+void rtl8192d_PHY_SetBBReg1Byte(struct rtw_adapter *adapter, u32 RegAddr,
+				u32 BitMask, u32 Data)
 {
-	u32			OriginalValue, BitShift, offset = 0;
-       u8			value = 0;
+	u32	OriginalValue, BitShift, offset = 0;
+       u8	value = 0;
 
-#if (DISABLE_BB_RF == 1)
-	return;
-#endif
 	/*  BitMask only support bit0~bit7 or bit8~bit15, bit16~bit23, bit24~bit31, should in 1 byte scale; */
 	BitShift = phy_CalculateBitShift(BitMask);
 	offset = BitShift /8;
@@ -201,10 +193,6 @@ rtl8192d_PHY_QueryBBReg(
 {
 	u32	ReturnValue = 0, OriginalValue, BitShift;
 
-#if (DISABLE_BB_RF == 1)
-	return 0;
-#endif
-
 	OriginalValue = rtw_read32(adapter, RegAddr);
 	BitShift = phy_CalculateBitShift(BitMask);
 	ReturnValue = (OriginalValue & BitMask) >> BitShift;
@@ -239,12 +227,8 @@ rtl8192d_PHY_SetBBReg(
 {
 	u32	OriginalValue, BitShift;
 
-#if (DISABLE_BB_RF == 1)
-	return;
-#endif
-
-	if (BitMask!= bMaskDWord)
-	{/* if not "double word" write */
+	if (BitMask!= bMaskDWord) {
+		/* if not "double word" write */
 		OriginalValue = rtw_read32(adapter, RegAddr);
 		BitShift = phy_CalculateBitShift(BitMask);
 		Data = ((OriginalValue & (~BitMask)) | ((Data << BitShift) & BitMask));
@@ -508,10 +492,6 @@ rtl8192d_PHY_QueryRFReg(
 	u32 Original_Value, Readback_Value, BitShift;
 	struct hal_data_8192du *pHalData = GET_HAL_DATA(adapter);
 
-#if (DISABLE_BB_RF == 1)
-	return 0;
-#endif
-
 	if (!pHalData->bPhyValueInitReady)
 		return 0;
 
@@ -557,10 +537,6 @@ rtl8192d_PHY_SetRFReg(
 	struct hal_data_8192du *pHalData = GET_HAL_DATA(adapter);
 	u32			Original_Value, BitShift;
 
-#if (DISABLE_BB_RF == 1)
-	return;
-#endif
-
 	if (!pHalData->bPhyValueInitReady)
 		return;
 
@@ -4816,10 +4792,6 @@ rtl8192d_PHY_IQCalibrate(
 	if (bStartContTx || bSingleTone || bCarrierSuppression)
 		return;
 
-#if DISABLE_BB_RF
-	return;
-#endif
-
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	if (pHalData->bSlaveOfDMSP)
 		return;
@@ -4982,10 +4954,6 @@ rtl8192d_PHY_LCCalibrate(
 	struct mlme_priv	*pmlmeprivBuddyadapter;
 #endif
 
-#if DISABLE_BB_RF
-	return;
-#endif
-
 	/* ignore IQK when continuous Tx */
 	if (bStartContTx || bSingleTone || bCarrierSuppression)
 		return;
@@ -5610,17 +5578,12 @@ void rtl8192d_PHY_SetRFPathSwitch(struct
 {
 	struct hal_data_8192du *pHalData = GET_HAL_DATA(adapter);
 
-#if DISABLE_BB_RF
-	return ;
-#else
-
 	if (IS_92D_SINGLEPHY(pHalData->VersionID)) {
 		phy_SetRFPathSwitch(adapter, main, true);
 	} else {
 		/*  For 88C 1T1R */
 		phy_SetRFPathSwitch(adapter, main, false);
 	}
-#endif
 }
 
 void
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -27,15 +27,9 @@
 #include <usb_hal.h>
 #include <usb_osintf.h>
 
-#if DISABLE_BB_RF
-	#define		HAL_MAC_ENABLE	0
-	#define		HAL_BB_ENABLE		0
-	#define		HAL_RF_ENABLE		0
-#else
-	#define		HAL_MAC_ENABLE	1
-	#define		HAL_BB_ENABLE		1
-	#define		HAL_RF_ENABLE		1
-#endif
+#define HAL_MAC_ENABLE		1
+#define HAL_BB_ENABLE		1
+#define HAL_RF_ENABLE		1
 
 /* endpoint number 1, 2, 3, 4, 5 */
 /*  bult in : 1 */
@@ -1364,21 +1358,12 @@ static void _InitRFType(struct rtw_adapt
 {
 	struct hal_data_8192du	*pHalData = GET_HAL_DATA(adapter);
 
-#if (DISABLE_BB_RF == 1)
-	pHalData->rf_chip	= RF_PSEUDO_11N;
-	pHalData->rf_type	= RF_1T1R;/*  RF_2T2R; */
-#else
-
 	pHalData->rf_chip	= RF_6052;
 
 	if (pHalData->MacPhyMode92D == DUALMAC_DUALPHY)
-	{
 		pHalData->rf_type = RF_1T1R;
-	}
-	else {/*  SMSP OR DMSP */
+	else /*  SMSP OR DMSP */
 		pHalData->rf_type = RF_2T2R;
-	}
-#endif
 }
 
 static void _InitAdhocWorkaroundParams(struct rtw_adapter *adapter)
@@ -1413,9 +1398,6 @@ static void _BBTurnOnBlock(
 	)
 {
 	struct hal_data_8192du		*pHalData	= GET_HAL_DATA(adapter);
-#if (DISABLE_BB_RF)
-	return;
-#endif
 
 	if (pHalData->CurrentBandType92D == BAND_ON_5G)
 		PHY_SetBBReg(adapter, rFPGA0_RFMOD, bCCKEn|bOFDMEn, 0x2);
@@ -1431,10 +1413,6 @@ static void _RfPowerSave(
 	struct pwrctrl_priv		*pwrctrlpriv = &adapter->pwrctrlpriv;
 	u8			eRFPath;
 
-#if (DISABLE_BB_RF)
-	return;
-#endif
-
 	if (pwrctrlpriv->reg_rfoff == true) { /*  User disable RF via registry. */
 		/* RT_TRACE((COMP_INIT|COMP_RF), DBG_LOUD, ("Initializeadapter8192CUsb(): Turn off RF for RegRfOff.\n")); */
 		/* MgntActSet_RF_State(adapter, rf_off, RF_CHANGE_BY_SW, true); */
@@ -2936,11 +2914,7 @@ _ReadRFType(
 {
 	struct hal_data_8192du	*pHalData = GET_HAL_DATA(adapter);
 
-#if DISABLE_BB_RF
-	pHalData->rf_chip = RF_PSEUDO_11N;
-#else
 	pHalData->rf_chip = RF_6052;
-#endif
 }
 
 static int _ReadadapterInfo8192DU(struct rtw_adapter *	adapter)
--- a/drivers/staging/rtl8192du/include/autoconf.h
+++ b/drivers/staging/rtl8192du/include/autoconf.h
@@ -66,8 +66,6 @@
 
 #define RTL8192CU_ASIC_VERIFICATION	0	/*  For ASIC verification. */
 
-#define DISABLE_BB_RF	0
-
 #define RTL8191C_FPGA_NETWORKTYPE_ADHOC 0
 
 #define ANTENNA_SELECTION_STATIC_SETTING 0
