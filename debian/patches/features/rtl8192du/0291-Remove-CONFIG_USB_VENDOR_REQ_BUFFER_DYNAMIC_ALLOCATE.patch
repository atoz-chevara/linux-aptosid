From 4ed9aac2cb576af4d1f82a9df65441c71c49f11e Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 15 Mar 2014 16:37:23 -0500
Subject: [PATCH 291/390] Remove CONFIG_USB_VENDOR_REQ_BUFFER_DYNAMIC_ALLOCATE

There is no difference in code whether this one is defined.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 hal/rtl8192d_phycfg.c  | 123 ++++---------------------------------------------
 hal/usb_halinit.c      |  43 ++++-------------
 hal/usb_ops_linux.c    |  12 -----
 include/autoconf.h     |   2 -
 include/rtl8192d_hal.h |   2 -
 5 files changed, 18 insertions(+), 164 deletions(-)

--- a/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
@@ -2215,17 +2215,12 @@ PHY_RestoreRFENV(
 			}
 			else if (RF_REG_for_C_CUT_5G[i] == RF_SYN_G4)
 			{
-#if SWLCK == 1
 				u4tmp2 = (RF_REG_Param_for_C_CUT_5G[index][i]&0x7FF)|(u4tmp << 11);
 
 				if (channel == 36)
 					u4tmp2 &= ~(BIT7|BIT6);
 
 				PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, bRFRegOffsetMask, u4tmp2);
-#else
-				u4tmp2 = RF_REG_Param_for_C_CUT_5G[index][i];
-				PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, 0xFF8FF, u4tmp2);
-#endif
 			} else {
 				PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_5G[i]|MaskforPhySet, bRFRegOffsetMask, RF_REG_Param_for_C_CUT_5G[index][i]);
 			}
@@ -2314,21 +2309,19 @@ PHY_RestoreRFENV(
 
 		for (i = 0; i < RF_REG_NUM_for_C_CUT_2G; i++)
 		{
-#if SWLCK == 1
 			if (RF_REG_for_C_CUT_2G[i] == RF_SYN_G7)
-				PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_2G[i]|MaskforPhySet, bRFRegOffsetMask, (RF_REG_Param_for_C_CUT_2G[index][i] | BIT17));
+				PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)path,
+					     RF_REG_for_C_CUT_2G[i]|MaskforPhySet,
+					     bRFRegOffsetMask, (RF_REG_Param_for_C_CUT_2G[index][i] | BIT17));
 			else
-#endif
-			PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)path, RF_REG_for_C_CUT_2G[i]|MaskforPhySet, bRFRegOffsetMask, RF_REG_Param_for_C_CUT_2G[index][i]);
+				PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)path,
+					     RF_REG_for_C_CUT_2G[i]|MaskforPhySet,
+					     bRFRegOffsetMask, RF_REG_Param_for_C_CUT_2G[index][i]);
 		}
 
-#if SWLCK == 1
-		/* for SWLCK */
-
-		PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)path, RF_SYN_G4|MaskforPhySet, bRFRegOffsetMask, RF_REG_SYN_G4_for_C_CUT_2G | (u4tmp << 11));
-#endif
-		if (pHalData->MacPhyMode92D == DUALMAC_DUALPHY && pHalData->interfaceIndex == 0)
-		{
+		PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)path, RF_SYN_G4|MaskforPhySet,
+			     bRFRegOffsetMask, RF_REG_SYN_G4_for_C_CUT_2G | (u4tmp << 11));
+		if (pHalData->MacPhyMode92D == DUALMAC_DUALPHY && pHalData->interfaceIndex == 0) {
 			if (bNeedPowerDownRadio) {
 				PHY_RestoreRFENV(adapter, path, MaskforPhySet, &u4RegValue);
 			}
@@ -4449,106 +4442,14 @@ phy_IQCalibrate_5G_Normal(
 	}
 }
 
-#if SWLCK != 1
-static void
-phy_LCCalibrate92D(
-	struct rtw_adapter *	adapter,
-	bool		is2T
-	)
-{
-	u8	tmpReg, index = 0;
-	u32	RF_mode[2], tmpu4Byte[2];
-	u8	path = is2T?2:1;
-#if SWLCK == 1
-	u16	timeout = 800, timecount = 0;
-#endif
-
-	/* Check continuous TX and Packet TX */
-	tmpReg = rtw_read8(adapter, 0xd03);
-
-	if ((tmpReg&0x70) != 0)			/* Deal with contisuous TX case */
-		rtw_write8(adapter, 0xd03, tmpReg&0x8F);	/* disable all continuous TX */
-	else							/*  Deal with Packet TX case */
-		rtw_write8(adapter, REG_TXPAUSE, 0xFF);			/*  block all queues */
-
-	PHY_SetBBReg(adapter, rFPGA0_AnalogParameter4, 0xF00000, 0x0F);
-
-	for (index = 0; index <path; index ++)
-	{
-		/* 1. Read original RF mode */
-		RF_mode[index] = PHY_QueryRFReg(adapter, (enum RF_RADIO_PATH_E)index, RF_AC, bRFRegOffsetMask);
-
-		/* 2. Set RF mode = standby mode */
-		PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)index, RF_AC, 0x70000, 0x01);
-
-		tmpu4Byte[index] = PHY_QueryRFReg(adapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask);
-		PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, 0x700, 0x07);
-
-		/* 4. Set LC calibration begin */
-		PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)index, RF_CHNLBW, 0x08000, 0x01);
-
-	}
-
-#if SWLCK == 1
-	for (index = 0; index <path; index ++)
-	{
-		while (!(PHY_QueryRFReg(adapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G6, BIT11)) &&
-			timecount <= timeout)
-		{
-
-			#ifdef CONFIG_LONG_DELAY_ISSUE
-			rtw_msleep_os(50);
-			#else
-			rtw_mdelay_os(50);
-			#endif
-			timecount += 50;
-		}
-	}
-#else
-	#ifdef CONFIG_LONG_DELAY_ISSUE
-	rtw_msleep_os(100);
-	#else
-	rtw_mdelay_os(100);
-	#endif
-#endif
-
-	/* Restore original situation */
-	for (index = 0; index <path; index ++)
-	{
-		PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)index, RF_SYN_G4, bRFRegOffsetMask, tmpu4Byte[index]);
-		PHY_SetRFReg(adapter, (enum RF_RADIO_PATH_E)index, RF_AC, bRFRegOffsetMask, RF_mode[index]);
-	}
-
-	if ((tmpReg&0x70) != 0)
-	{
-		/* Path-A */
-		rtw_write8(adapter, 0xd03, tmpReg);
-	}
-	else /*  Deal with Packet TX case */
-	{
-		rtw_write8(adapter, REG_TXPAUSE, 0x00);
-	}
-
-	PHY_SetBBReg(adapter, rFPGA0_AnalogParameter4, 0xF00000, 0x00);
-}
-#endif  /* SWLCK != 1, amy, temp remove */
-
-static u32
-get_abs(
-	u32	val1,
-	u32	val2
-	)
+static u32 get_abs(u32	val1, u32 val2)
 {
 	u32 ret = 0;
 
 	if (val1 >= val2)
-	{
 		ret = val1 - val2;
-	}
 	else
-	{
 		ret = val2 - val1;
-	}
 	return ret;
 }
 
@@ -4765,11 +4666,7 @@ phy_LCCalibrate(
 	bool		is2T
 	)
 {
-#if SWLCK == 1
 	phy_LCCalibrate92DSW(adapter, is2T);
-#else
-	phy_LCCalibrate92D(adapter, is2T);
-#endif
 }
 
 /* Analog Pre-distortion calibration */
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -1506,18 +1506,15 @@ static void dump_wakup_reason(struct rtw
 
 static u32 rtl8192du_hal_init(struct rtw_adapter *padapter)
 {
-	u8	val8 = 0, tmpU1b;
-	u16	val16;
-	u32	boundary, i = 0,  status = _SUCCESS;
-#if SWLCK == 0
-	u32	j;
-#endif /* SWLCK == 0 */
 	struct hal_data_8192du  *pHalData = GET_HAL_DATA(padapter);
 	struct pwrctrl_priv		*pwrctrlpriv = &padapter->pwrctrlpriv;
 	struct registry_priv	*pregistrypriv = &padapter->registrypriv;
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	struct rtw_adapter *	Buddyadapter = padapter->pbuddy_adapter;
 #endif
+	u8	val8 = 0, tmpU1b;
+	u16	val16;
+	u32	boundary, i = 0,  status = _SUCCESS;
 	u32 init_start_time = rtw_get_current_time();
 
 	padapter->init_adpt_in_progress = true;
@@ -1896,37 +1893,13 @@ static u32 rtl8192du_hal_init(struct rtw
 		rtl8192d_dm_CheckTXPowerTracking(padapter);
 
 		rtl8192d_PHY_LCCalibrate(padapter);
-		if (pHalData->MacPhyMode92D == DUALMAC_DUALPHY
-		&& ((pHalData->interfaceIndex == 0 && pHalData->BandSet92D == BAND_ON_2_4G)
-			|| (pHalData->interfaceIndex == 1 && pHalData->BandSet92D == BAND_ON_5G)))
+		if (pHalData->MacPhyMode92D == DUALMAC_DUALPHY &&
+		    ((pHalData->interfaceIndex == 0 &&
+		     pHalData->BandSet92D == BAND_ON_2_4G) ||
+		     (pHalData->interfaceIndex == 1 &&
+		     pHalData->BandSet92D == BAND_ON_5G)))
 			RELEASE_GLOBAL_MUTEX(GlobalMutexForMac0_2G_Mac1_5G);
 		/* 5G and 2.4G must wait sometime to let RF LO ready */
-		/* by sherry 2010.06.28 */
-#if SWLCK == 0
-		{
-			u32 tmpRega, tmpRegb;
-			for (j = 0;j<10000;j++)
-			{
-				rtw_udelay_os(MAX_STALL_TIME);
-				if (pHalData->rf_type == RF_1T1R)
-				{
-					tmpRega = PHY_QueryRFReg(padapter, (enum RF_RADIO_PATH_E)RF_PATH_A, 0x2a, bMaskDWord);
-					if ((tmpRega&BIT11) == BIT11)
-						break;
-				}
-				else
-				{
-					tmpRega = PHY_QueryRFReg(padapter, (enum RF_RADIO_PATH_E)RF_PATH_A, 0x2a, bMaskDWord);
-					tmpRegb = PHY_QueryRFReg(padapter, (enum RF_RADIO_PATH_E)RF_PATH_B, 0x2a, bMaskDWord);
-					if (((tmpRega&BIT11) == BIT11)&&((tmpRegb&BIT11) == BIT11))
-						break;
-					/*  temply add for DMSP */
-					if (pHalData->MacPhyMode92D == DUALMAC_SINGLEPHY&&(pHalData->interfaceIndex!= 0))
-						break;
-				}
-			}
-		}
-#endif
 	}
 
 	PHY_InitPABias92D(padapter);
--- a/drivers/staging/rtl8192du/hal/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/hal/usb_ops_linux.c
@@ -36,12 +36,6 @@ static int usbctrl_vendorreq(struct intf
 	u8 *pIo_buf;
 	int vendorreq_times = 0;
 
-	#ifdef CONFIG_USB_VENDOR_REQ_BUFFER_DYNAMIC_ALLOCATE
-	u8 *tmp_buf;
-	#else /*  use stack memory */
-	u8 tmp_buf[MAX_USB_IO_CTL_SIZE];
-	#endif
-
 #ifdef CONFIG_CONCURRENT_MODE
 	if (padapter->adapter_type > PRIMARY_ADAPTER)
 	{
@@ -129,12 +123,6 @@ static int usbctrl_vendorreq(struct intf
 			break;
 
 	}
-
-	/*  release IO memory used by vendorreq */
-	#ifdef CONFIG_USB_VENDOR_REQ_BUFFER_DYNAMIC_ALLOCATE
-	kfree(tmp_buf);
-	#endif
-
 release_mutex:
 	mutex_unlock(&pdvobjpriv->usb_vendor_req_mutex);
 exit:
--- a/drivers/staging/rtl8192du/include/autoconf.h
+++ b/drivers/staging/rtl8192du/include/autoconf.h
@@ -87,8 +87,6 @@
 
 #define RTL8192D_DUAL_MAC_MODE_SWITCH	0
 
-#define SWLCK   1
-
 #define FW_PROCESS_VENDOR_CMD 1
 
 #define DBG 0
--- a/drivers/staging/rtl8192du/include/rtl8192d_hal.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_hal.h
@@ -92,9 +92,7 @@ static u32	RF_REG_Param_for_C_CUT_2G[3][
 			{0x643BC,	0xFC038,	0x07C1A,	0x41289,	0x01840},
 			{0x243BC,	0xFC438,	0x07C1A,	0x4128B,	0x0FC41}};
 
-#if SWLCK == 1
 static u32 RF_REG_SYN_G4_for_C_CUT_2G = 0xD1C31&0x7FF;
-#endif
 
 static u32	RF_REG_Param_for_C_CUT_5G_internalPA[3][RF_REG_NUM_for_C_CUT_5G_internalPA] = {
 			{0x01a00,	0x40443,	0x00eb5,	0x89bec,	0x94a12,	0x94a12,	0x94a12},
