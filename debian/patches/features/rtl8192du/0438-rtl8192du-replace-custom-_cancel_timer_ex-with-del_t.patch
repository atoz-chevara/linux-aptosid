From f614642f42e7ae01f0a2e15739d0c84532d2b6de Mon Sep 17 00:00:00 2001
From: Stefan Lippers-Hollmann <s.l-h@gmx.de>
Date: Sat, 22 Mar 2014 03:03:36 +0100
Subject: [PATCH 438/456] rtl8192du: replace custom _cancel_timer_ex() with
 del_timer_sync()

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 core/rtw_mlme_ext.c     |  38 ++++++-------
 core/rtw_p2p.c          |  12 ++--
 core/rtw_recv.c         |   2 +-
 core/rtw_sta_mgt.c      |   6 +-
 hal/rtl8192du_led.c     | 142 ++++++++++++++++++++++++------------------------
 include/osdep_service.h |   5 --
 os_dep/ioctl_cfg80211.c |  22 ++++----
 os_dep/ioctl_linux.c    |   8 +--
 os_dep/os_intfs.c       |  22 ++++----
 9 files changed, 126 insertions(+), 131 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -509,8 +509,8 @@ void free_mlme_ext_priv(struct mlme_ext_
 		return;
 
 	if (adapt->bDriverStopped == true) {
-		_cancel_timer_ex(&pmlmeext->survey_timer);
-		_cancel_timer_ex(&pmlmeext->link_timer);
+		del_timer_sync(&pmlmeext->survey_timer);
+		del_timer_sync(&pmlmeext->link_timer);
 	}
 }
 
@@ -1763,7 +1763,7 @@ unsigned int OnAssocRsp(struct rtw_adapt
 	if (pmlmeinfo->state & WIFI_FW_ASSOC_SUCCESS)
 		return _SUCCESS;
 
-	_cancel_timer_ex(&pmlmeext->link_timer);
+	del_timer_sync(&pmlmeext->link_timer);
 
 	/* status */
 	status = le16_to_cpu(*(__le16 *)(pframe + WLAN_HDR_A3_LEN + 2));
@@ -1857,7 +1857,7 @@ unsigned int OnDeAuth(struct rtw_adapter
 
 #ifdef CONFIG_P2P
 	if (pwdinfo->rx_invitereq_info.scan_op_ch_only) {
-		_cancel_timer_ex(&pwdinfo->reset_ch_sitesurvey);
+		del_timer_sync(&pwdinfo->reset_ch_sitesurvey);
 		_set_timer(&pwdinfo->reset_ch_sitesurvey, 10);
 	}
 #endif /* CONFIG_P2P */
@@ -1922,7 +1922,7 @@ unsigned int OnDisassoc(struct rtw_adapt
 
 #ifdef CONFIG_P2P
 	if (pwdinfo->rx_invitereq_info.scan_op_ch_only) {
-		_cancel_timer_ex(&pwdinfo->reset_ch_sitesurvey);
+		del_timer_sync(&pwdinfo->reset_ch_sitesurvey);
 		_set_timer(&pwdinfo->reset_ch_sitesurvey, 10);
 	}
 #endif /* CONFIG_P2P */
@@ -4767,7 +4767,7 @@ static unsigned int on_action_public_p2p
 		return _FAIL;
 
 #ifdef CONFIG_P2P
-	_cancel_timer_ex(&pwdinfo->reset_ch_sitesurvey);
+	del_timer_sync(&pwdinfo->reset_ch_sitesurvey);
 	if (wdev_to_priv(adapt->rtw_wdev)->p2p_enabled) {
 		rtw_cfg80211_rx_p2p_action_public(adapt, pframe, len);
 	} else {
@@ -4796,7 +4796,7 @@ static unsigned int on_action_public_p2p
 			    (pwdinfo, P2P_STATE_GONEGO_FAIL)) {
 				/*      Commented by Albert 20110526 */
 				/*      In this case, this means the previous nego fail doesn't be reset yet. */
-				_cancel_timer_ex(&pwdinfo->
+				del_timer_sync(&pwdinfo->
 						 restore_p2p_state_timer);
 				/*      Restore the previous p2p state */
 				rtw_p2p_set_state(pwdinfo,
@@ -4808,7 +4808,7 @@ static unsigned int on_action_public_p2p
 			}
 #ifdef CONFIG_CONCURRENT_MODE
 			if (check_buddy_fwstate(adapt, _FW_LINKED)) {
-				_cancel_timer_ex(&pwdinfo->
+				del_timer_sync(&pwdinfo->
 						 ap_p2p_switch_timer);
 			}
 #endif /*  CONFIG_CONCURRENT_MODE */
@@ -4853,7 +4853,7 @@ static unsigned int on_action_public_p2p
 			    (pwdinfo, P2P_STATE_GONEGO_ING)) {
 				/*      Commented by Albert 20110425 */
 				/*      The restore timer is enabled when issuing the nego request frame of rtw_p2p_connect function. */
-				_cancel_timer_ex(&pwdinfo->
+				del_timer_sync(&pwdinfo->
 						 restore_p2p_state_timer);
 				pwdinfo->nego_req_info.benable = false;
 				result =
@@ -5158,7 +5158,7 @@ static unsigned int on_action_public_p2p
 
 				DBG_8192D("[%s] Got invite response frame!\n",
 					  __func__);
-				_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
+				del_timer_sync(&pwdinfo->restore_p2p_state_timer);
 				p2p_ie = rtw_get_p2p_ie(frame_body + _PUBLIC_ACTION_IE_OFFSET_,
 							len - _PUBLIC_ACTION_IE_OFFSET_,
 							NULL, &p2p_ielen);
@@ -5263,7 +5263,7 @@ static unsigned int on_action_public_p2p
 			/* The restore timer is enabled when issuing the
 			 * provisioing request frame in rtw_p2p_prov_disc
 			 * function. */
-			_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
+			del_timer_sync(&pwdinfo->restore_p2p_state_timer);
 			rtw_p2p_set_state(pwdinfo,
 					  P2P_STATE_RX_PROVISION_DIS_RSP);
 			_set_timer(&pwdinfo->restore_p2p_state_timer,
@@ -7406,7 +7406,7 @@ static int _issue_deauth(struct rtw_adap
 #ifdef CONFIG_P2P
 	if (!(rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) &&
 	    (pwdinfo->rx_invitereq_info.scan_op_ch_only)) {
-		_cancel_timer_ex(&pwdinfo->reset_ch_sitesurvey);
+		del_timer_sync(&pwdinfo->reset_ch_sitesurvey);
 		_set_timer(&pwdinfo->reset_ch_sitesurvey, 10);
 	}
 #endif /* CONFIG_P2P */
@@ -8612,7 +8612,7 @@ void start_clnt_auth(struct rtw_adapter
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 
-	_cancel_timer_ex(&pmlmeext->link_timer);
+	del_timer_sync(&pmlmeext->link_timer);
 
 	pmlmeinfo->state &= (~WIFI_FW_AUTH_NULL);
 	pmlmeinfo->state |= WIFI_FW_AUTH_STATE;
@@ -8641,7 +8641,7 @@ void start_clnt_assoc(struct rtw_adapter
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 
-	_cancel_timer_ex(&pmlmeext->link_timer);
+	del_timer_sync(&pmlmeext->link_timer);
 
 	pmlmeinfo->state &= (~(WIFI_FW_AUTH_NULL | WIFI_FW_AUTH_STATE));
 	pmlmeinfo->state |= (WIFI_FW_AUTH_SUCCESS | WIFI_FW_ASSOC_STATE);
@@ -9439,7 +9439,7 @@ void mlmeext_sta_del_event_callback(stru
 		/* set MSR to no link state -> infra. mode */
 		Set_MSR(adapt, _HW_STATE_STATION_);
 
-		_cancel_timer_ex(&pmlmeext->link_timer);
+		del_timer_sync(&pmlmeext->link_timer);
 	}
 }
 
@@ -9864,7 +9864,7 @@ u8 createbss_hdl(struct rtw_adapter *ada
 				  (u8 *)(&initialgain));
 
 		/* cancel link timer */
-		_cancel_timer_ex(&pmlmeext->link_timer);
+		del_timer_sync(&pmlmeext->link_timer);
 
 		/* clear CAM */
 		flush_all_cam_entry(adapt);
@@ -9909,7 +9909,7 @@ u8 join_cmd_hdl(struct rtw_adapter *adap
 		/* clear CAM */
 		flush_all_cam_entry(adapt);
 
-		_cancel_timer_ex(&pmlmeext->link_timer);
+		del_timer_sync(&pmlmeext->link_timer);
 
 		/* set MSR to nolink -> infra. mode */
 		/* Set_MSR(adapt, _HW_STATE_NOLINK_); */
@@ -10021,7 +10021,7 @@ u8 join_cmd_hdl(struct rtw_adapter *adap
 	rtw_hal_set_hwreg(adapt, HW_VAR_MLME_JOIN, (u8 *)(&join_type));
 
 	/* cancel link timer */
-	_cancel_timer_ex(&pmlmeext->link_timer);
+	del_timer_sync(&pmlmeext->link_timer);
 
 	start_clnt_join(adapt);
 
@@ -10085,7 +10085,7 @@ u8 disconnect_hdl(struct rtw_adapter *ad
 
 	flush_all_cam_entry(adapt);
 
-	_cancel_timer_ex(&pmlmeext->link_timer);
+	del_timer_sync(&pmlmeext->link_timer);
 
 	rtw_free_uc_swdec_pending_queue(adapt);
 
--- a/drivers/staging/rtl8192du/core/rtw_p2p.c
+++ b/drivers/staging/rtl8192du/core/rtw_p2p.c
@@ -2298,15 +2298,15 @@ int rtw_p2p_enable(struct rtw_adapter *p
 
 		/* Disable P2P function */
 		if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) {
-			_cancel_timer_ex(&pwdinfo->find_phase_timer);
-			_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
-			_cancel_timer_ex(&pwdinfo->pre_tx_scan_timer);
-			_cancel_timer_ex(&pwdinfo->reset_ch_sitesurvey);
-			_cancel_timer_ex(&pwdinfo->reset_ch_sitesurvey2);
+			del_timer_sync(&pwdinfo->find_phase_timer);
+			del_timer_sync(&pwdinfo->restore_p2p_state_timer);
+			del_timer_sync(&pwdinfo->pre_tx_scan_timer);
+			del_timer_sync(&pwdinfo->reset_ch_sitesurvey);
+			del_timer_sync(&pwdinfo->reset_ch_sitesurvey2);
 			reset_ch_sitesurvey_timer_process(padapter);
 			reset_ch_sitesurvey_timer_process2(padapter);
 			#ifdef CONFIG_CONCURRENT_MODE
-			_cancel_timer_ex(&pwdinfo->ap_p2p_switch_timer);
+			del_timer_sync(&pwdinfo->ap_p2p_switch_timer);
 			#endif
 			rtw_p2p_set_state(pwdinfo, P2P_STATE_NONE);
 			rtw_p2p_set_role(pwdinfo, P2P_ROLE_DISABLE);
--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -2132,7 +2132,7 @@ static int recv_indicatepkt_reorder(stru
 		_set_timer(&preorder_ctrl->reordering_ctrl_timer,
 			   REORDER_WAIT_TIME);
 	} else {
-		_cancel_timer_ex(&preorder_ctrl->reordering_ctrl_timer);
+		del_timer_sync(&preorder_ctrl->reordering_ctrl_timer);
 	}
 	spin_unlock_bh(&ppending_recvframe_queue->lock);
 	return _SUCCESS;
--- a/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
+++ b/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
@@ -210,7 +210,7 @@ u32	_rtw_free_sta_priv(struct	sta_priv *
 
 				for (i = 0; i < 16; i++) {
 					reorder = &psta->recvreorder_ctrl[i];
-					_cancel_timer_ex(&reorder->reordering_ctrl_timer);
+					del_timer_sync(&reorder->reordering_ctrl_timer);
 				}
 			}
 		}
@@ -373,7 +373,7 @@ u32	rtw_free_stainfo(struct rtw_adapter
 	_rtw_init_sta_xmit_priv(&psta->sta_xmitpriv);
 	_rtw_init_sta_recv_priv(&psta->sta_recvpriv);
 
-	_cancel_timer_ex(&psta->addba_retry_timer);
+	del_timer_sync(&psta->addba_retry_timer);
 
 	/* for A-MPDU Rx reordering buffer control, cancel reorder_ctrl_timer */
 	for (i = 0; i < 16; i++) {
@@ -384,7 +384,7 @@ u32	rtw_free_stainfo(struct rtw_adapter
 
 		reorder = &psta->recvreorder_ctrl[i];
 
-		_cancel_timer_ex(&reorder->reordering_ctrl_timer);
+		del_timer_sync(&reorder->reordering_ctrl_timer);
 
 		ppending_recvframe_queue = &reorder->pending_recvframe_queue;
 
--- a/drivers/staging/rtl8192du/hal/rtl8192du_led.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_led.c
@@ -101,7 +101,7 @@ static void InitLed871x(struct rtw_adapt
 static void DeInitLed871x(struct LED_871X *pled)
 {
 	cancel_work_sync(&(pled->BlinkWorkItem));
-	_cancel_timer_ex(&(pled->blinktimer));
+	del_timer_sync(&(pled->blinktimer));
 	/*  We should reset blink_in_prog if we cancel the LedControlTimer, 2005.03.10, by rcnjko. */
 	ResetLedStatus(pled);
 }
@@ -1259,7 +1259,7 @@ static void SwLedControlMode0(
 
 		if (pled->blink_in_prog)
 		{
-			_cancel_timer_ex(&(pled->blinktimer));
+			del_timer_sync(&(pled->blinktimer));
 			pled->blink_in_prog = false;
 		}
 		SwLedOff(padapter, pled);
@@ -1290,7 +1290,7 @@ static void SwLedControlMode0(
 		if (pled->blink_in_prog)
 		{
 			pled->currledstate = RTW_LED_OFF;
-			_cancel_timer_ex(&(pled->blinktimer));
+			del_timer_sync(&(pled->blinktimer));
 			pled->blink_in_prog = false;
 		}
 		break;
@@ -1328,12 +1328,12 @@ static void SwLedControlMode1(
 				}
 				if (pled->link_blink_in_prog == true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->link_blink_in_prog = false;
 				}
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 
@@ -1356,12 +1356,12 @@ static void SwLedControlMode1(
 				}
 				if (pled->nolink_blink_in_prog == true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->nolink_blink_in_prog = false;
 				}
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				pled->link_blink_in_prog = true;
@@ -1384,17 +1384,17 @@ static void SwLedControlMode1(
 
 				if (pled->nolink_blink_in_prog == true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->nolink_blink_in_prog = false;
 				}
 				if (pled->link_blink_in_prog == true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					 pled->link_blink_in_prog = false;
 				}
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				pled->scan_blink_in_prog = true;
@@ -1418,12 +1418,12 @@ static void SwLedControlMode1(
                             }
                             if (pled->nolink_blink_in_prog == true)
                             {
-                                _cancel_timer_ex(&(pled->blinktimer));
+                                del_timer_sync(&(pled->blinktimer));
                                 pled->nolink_blink_in_prog = false;
                             }
                             if (pled->link_blink_in_prog == true)
                             {
-                                _cancel_timer_ex(&(pled->blinktimer));
+                                del_timer_sync(&(pled->blinktimer));
                                 pled->link_blink_in_prog = false;
                             }
                             pled->blink_in_prog = true;
@@ -1443,22 +1443,22 @@ static void SwLedControlMode1(
 			 {
 				if (pled->nolink_blink_in_prog == true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->nolink_blink_in_prog = false;
 				}
 				if (pled->link_blink_in_prog == true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					 pled->link_blink_in_prog = false;
 				}
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				if (pled->scan_blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->scan_blink_in_prog = false;
 				}
 				pled->wps_blink_in_prog = true;
@@ -1474,27 +1474,27 @@ static void SwLedControlMode1(
 		case LED_CTL_STOP_WPS:
 			if (pled->nolink_blink_in_prog == true)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->nolink_blink_in_prog = false;
 			}
 			if (pled->link_blink_in_prog == true)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				 pled->link_blink_in_prog = false;
 			}
 			if (pled->blink_in_prog ==true)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->blink_in_prog = false;
 			}
 			if (pled->scan_blink_in_prog ==true)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->scan_blink_in_prog = false;
 			}
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 			}
 			else
 			{
@@ -1517,7 +1517,7 @@ static void SwLedControlMode1(
 		case LED_CTL_STOP_WPS_FAIL:
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->wps_blink_in_prog = false;
 			}
 
@@ -1536,27 +1536,27 @@ static void SwLedControlMode1(
 
 			if (pled->nolink_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->nolink_blink_in_prog = false;
 			}
 			if (pled->link_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->link_blink_in_prog = false;
 			}
 			if (pled->blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->blink_in_prog = false;
 			}
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->wps_blink_in_prog = false;
 			}
 			if (pled->scan_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->scan_blink_in_prog = false;
 			}
 
@@ -1593,7 +1593,7 @@ static void SwLedControlMode2(
 
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				pled->scan_blink_in_prog = true;
@@ -1632,12 +1632,12 @@ static void SwLedControlMode2(
 			pled->blinkingledstate = RTW_LED_ON;
 			if (pled->blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->blink_in_prog = false;
 			}
 			if (pled->scan_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->scan_blink_in_prog = false;
 			}
 
@@ -1650,12 +1650,12 @@ static void SwLedControlMode2(
 			{
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				if (pled->scan_blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->scan_blink_in_prog = false;
 				}
 				pled->wps_blink_in_prog = true;
@@ -1710,17 +1710,17 @@ static void SwLedControlMode2(
 			pled->blinkingledstate = RTW_LED_OFF;
 			if (pled->blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->blink_in_prog = false;
 			}
 			if (pled->scan_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->scan_blink_in_prog = false;
 			}
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->wps_blink_in_prog = false;
 			}
 
@@ -1757,7 +1757,7 @@ static void SwLedControlMode3(
 
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				pled->scan_blink_in_prog = true;
@@ -1799,12 +1799,12 @@ static void SwLedControlMode3(
 			pled->blinkingledstate = RTW_LED_ON;
 			if (pled->blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->blink_in_prog = false;
 			}
 			if (pled->scan_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->scan_blink_in_prog = false;
 			}
 
@@ -1817,12 +1817,12 @@ static void SwLedControlMode3(
 			{
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				if (pled->scan_blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->scan_blink_in_prog = false;
 				}
 				pled->wps_blink_in_prog = true;
@@ -1838,7 +1838,7 @@ static void SwLedControlMode3(
 		case LED_CTL_STOP_WPS:
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->wps_blink_in_prog = false;
 			}
 			else
@@ -1863,7 +1863,7 @@ static void SwLedControlMode3(
 		case LED_CTL_STOP_WPS_FAIL:
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->wps_blink_in_prog = false;
 			}
 
@@ -1887,17 +1887,17 @@ static void SwLedControlMode3(
 			pled->blinkingledstate = RTW_LED_OFF;
 			if (pled->blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->blink_in_prog = false;
 			}
 			if (pled->scan_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->scan_blink_in_prog = false;
 			}
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->wps_blink_in_prog = false;
 			}
 
@@ -1929,7 +1929,7 @@ static void SwLedControlMode4(
 			if (pled1->wps_blink_in_prog)
 			{
 				pled1->wps_blink_in_prog = false;
-				_cancel_timer_ex(&(pled1->blinktimer));
+				del_timer_sync(&(pled1->blinktimer));
 
 				pled1->blinkingledstate = RTW_LED_OFF;
 				pled1->currledstate = RTW_LED_OFF;
@@ -1946,12 +1946,12 @@ static void SwLedControlMode4(
 				}
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				if (pled->nolink_blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->nolink_blink_in_prog = false;
 				}
 
@@ -1978,7 +1978,7 @@ static void SwLedControlMode4(
 				if (pled1->wps_blink_in_prog)
 				{
 					pled1->wps_blink_in_prog = false;
-					_cancel_timer_ex(&(pled1->blinktimer));
+					del_timer_sync(&(pled1->blinktimer));
 
 					pled1->blinkingledstate = RTW_LED_OFF;
 					pled1->currledstate = RTW_LED_OFF;
@@ -1996,7 +1996,7 @@ static void SwLedControlMode4(
 				}
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 
@@ -2020,12 +2020,12 @@ static void SwLedControlMode4(
 
 				if (pled->nolink_blink_in_prog == true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->nolink_blink_in_prog = false;
 				}
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				pled->scan_blink_in_prog = true;
@@ -2049,7 +2049,7 @@ static void SwLedControlMode4(
 				}
 				if (pled->nolink_blink_in_prog == true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->nolink_blink_in_prog = false;
 				}
 				pled->blink_in_prog = true;
@@ -2068,7 +2068,7 @@ static void SwLedControlMode4(
 			if (pled1->wps_blink_in_prog)
 			{
 				pled1->wps_blink_in_prog = false;
-				_cancel_timer_ex(&(pled1->blinktimer));
+				del_timer_sync(&(pled1->blinktimer));
 
 				pled1->blinkingledstate = RTW_LED_OFF;
 				pled1->currledstate = RTW_LED_OFF;
@@ -2081,17 +2081,17 @@ static void SwLedControlMode4(
 			{
 				if (pled->nolink_blink_in_prog == true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->nolink_blink_in_prog = false;
 				}
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				if (pled->scan_blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->scan_blink_in_prog = false;
 				}
 				pled->wps_blink_in_prog = true;
@@ -2112,7 +2112,7 @@ static void SwLedControlMode4(
 		case LED_CTL_STOP_WPS:	/* WPS connect success */
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->wps_blink_in_prog = false;
 			}
 
@@ -2129,7 +2129,7 @@ static void SwLedControlMode4(
 		case LED_CTL_STOP_WPS_FAIL:		/* WPS authentication fail */
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->wps_blink_in_prog = false;
 			}
 
@@ -2143,7 +2143,7 @@ static void SwLedControlMode4(
 
 			/* LED1 settings */
 			if (pled1->wps_blink_in_prog)
-				_cancel_timer_ex(&(pled1->blinktimer));
+				del_timer_sync(&(pled1->blinktimer));
 			else
 				pled1->wps_blink_in_prog = true;
 
@@ -2159,7 +2159,7 @@ static void SwLedControlMode4(
 		case LED_CTL_STOP_WPS_FAIL_OVERLAP:	/* WPS session overlap */
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->wps_blink_in_prog = false;
 			}
 
@@ -2173,7 +2173,7 @@ static void SwLedControlMode4(
 
 			/* LED1 settings */
 			if (pled1->wps_blink_in_prog)
-				_cancel_timer_ex(&(pled1->blinktimer));
+				del_timer_sync(&(pled1->blinktimer));
 			else
 				pled1->wps_blink_in_prog = true;
 
@@ -2193,38 +2193,38 @@ static void SwLedControlMode4(
 
 			if (pled->nolink_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->nolink_blink_in_prog = false;
 			}
 			if (pled->link_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->link_blink_in_prog = false;
 			}
 			if (pled->blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->blink_in_prog = false;
 			}
 			if (pled->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->wps_blink_in_prog = false;
 			}
 			if (pled->scan_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->scan_blink_in_prog = false;
 			}
 			if (pled->start_link_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->start_link_blink_in_prog = false;
 			}
 
 			if (pled1->wps_blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled1->blinktimer));
+				del_timer_sync(&(pled1->blinktimer));
 				pled1->wps_blink_in_prog = false;
 			}
 
@@ -2273,7 +2273,7 @@ static void SwLedControlMode5(
 			{
 				if (pled->blink_in_prog ==true)
 				{
-					_cancel_timer_ex(&(pled->blinktimer));
+					del_timer_sync(&(pled->blinktimer));
 					pled->blink_in_prog = false;
 				}
 				pled->scan_blink_in_prog = true;
@@ -2312,7 +2312,7 @@ static void SwLedControlMode5(
 
 			if (pled->blink_in_prog)
 			{
-				_cancel_timer_ex(&(pled->blinktimer));
+				del_timer_sync(&(pled->blinktimer));
 				pled->blink_in_prog = false;
 			}
 
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -158,11 +158,6 @@ u32	rtw_ms_to_systime(u32 ms);
 void	rtw_sleep_schedulable(int ms);
 void	rtw_usleep_os(int us);
 
-static inline unsigned char _cancel_timer_ex(struct timer_list *timer)
-{
-	return del_timer_sync(timer);
-}
-
 static inline void thread_enter(char *name)
 {
 	allow_signal(SIGTERM);
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -463,9 +463,9 @@ void rtw_cfg80211_indicate_disconnect(st
 
 #ifdef CONFIG_P2P
 	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) {
-		_cancel_timer_ex(&pwdinfo->find_phase_timer);
-		_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
-		_cancel_timer_ex(&pwdinfo->pre_tx_scan_timer);
+		del_timer_sync(&pwdinfo->find_phase_timer);
+		del_timer_sync(&pwdinfo->restore_p2p_state_timer);
+		del_timer_sync(&pwdinfo->pre_tx_scan_timer);
 
 		rtw_p2p_set_state(pwdinfo, rtw_p2p_pre_state(pwdinfo));
 		rtw_p2p_set_role(pwdinfo, P2P_ROLE_DEVICE);
@@ -1328,9 +1328,9 @@ static int cfg80211_rtw_change_iface(str
 		networkType = NDIS802_11INFRA;
 		#ifdef CONFIG_P2P
 		if (change && rtw_p2p_chk_role(pwdinfo, P2P_ROLE_GO)) {
-			_cancel_timer_ex(&pwdinfo->find_phase_timer);
-			_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
-			_cancel_timer_ex(&pwdinfo->pre_tx_scan_timer);
+			del_timer_sync(&pwdinfo->find_phase_timer);
+			del_timer_sync(&pwdinfo->restore_p2p_state_timer);
+			del_timer_sync(&pwdinfo->pre_tx_scan_timer);
 
 			/* it means remove GO and change mode from AP(GO) to station(P2P DEVICE) */
 			rtw_p2p_set_role(pwdinfo, P2P_ROLE_DEVICE);
@@ -2816,9 +2816,9 @@ static int rtw_add_beacon(struct rtw_ada
 			}
 			else
 			{
-				_cancel_timer_ex(&pwdinfo->find_phase_timer);
-				_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
-				_cancel_timer_ex(&pwdinfo->pre_tx_scan_timer);
+				del_timer_sync(&pwdinfo->find_phase_timer);
+				del_timer_sync(&pwdinfo->restore_p2p_state_timer);
+				del_timer_sync(&pwdinfo->pre_tx_scan_timer);
 
 				DBG_8192D("enter GO Mode, p2p_ielen=%d\n", p2p_ielen);
 
@@ -3334,7 +3334,7 @@ static s32 cfg80211_rtw_remain_on_channe
 	{
 		DBG_8192D("%s, cancel ro ch timer\n", __func__);
 
-		_cancel_timer_ex(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
+		del_timer_sync(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
 
 #ifdef CONFIG_CONCURRENT_MODE
                 atomic_set(&pwdev_priv->ro_ch_to, 1);
@@ -3464,7 +3464,7 @@ static s32 cfg80211_rtw_cancel_remain_on
 
 	if (pcfg80211_wdinfo->is_ro_ch == true) {
 		DBG_8192D("%s, cancel ro ch timer\n", __func__);
-		_cancel_timer_ex(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
+		del_timer_sync(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
 		#ifdef CONFIG_CONCURRENT_MODE
 		atomic_set(&pwdev_priv->ro_ch_to, 1);
 		#endif
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -3713,7 +3713,7 @@ static int rtw_p2p_connect(struct net_de
 #ifdef CONFIG_CONCURRENT_MODE
 		if (check_buddy_fwstate(padapter, _FW_LINKED))
 		{
-			_cancel_timer_ex(&pwdinfo->ap_p2p_switch_timer);
+			del_timer_sync(&pwdinfo->ap_p2p_switch_timer);
 		}
 #endif /*  CONFIG_CONCURRENT_MODE */
 
@@ -3724,7 +3724,7 @@ static int rtw_p2p_connect(struct net_de
 		memcpy(pwdinfo->nego_req_info.peerDevAddr, pnetwork->network.MacAddress, ETH_ALEN);
 		pwdinfo->nego_req_info.benable = true;
 
-		_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
+		del_timer_sync(&pwdinfo->restore_p2p_state_timer);
 		if (rtw_p2p_state(pwdinfo) != P2P_STATE_GONEGO_OK)
 		{
 			/*	Restore to the listen state if the current p2p state is not nego OK */
@@ -3884,7 +3884,7 @@ static int rtw_p2p_invite_req(struct net
 #ifdef CONFIG_CONCURRENT_MODE
 		if (check_fwstate(pbuddy_mlmepriv, _FW_LINKED))
 		{
-			_cancel_timer_ex(&pwdinfo->ap_p2p_switch_timer);
+			del_timer_sync(&pwdinfo->ap_p2p_switch_timer);
 		}
 #endif /*  CONFIG_CONCURRENT_MODE */
 
@@ -4142,7 +4142,7 @@ static int rtw_p2p_prov_disc(struct net_
 #ifdef CONFIG_CONCURRENT_MODE
 		if (check_buddy_fwstate(padapter, _FW_LINKED))
 		{
-			_cancel_timer_ex(&pwdinfo->ap_p2p_switch_timer);
+			del_timer_sync(&pwdinfo->ap_p2p_switch_timer);
 		}
 #endif /*  CONFIG_CONCURRENT_MODE */
 		memcpy(pwdinfo->tx_prov_disc_info.peerIFAddr, pnetwork->network.MacAddress, ETH_ALEN);
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -643,30 +643,30 @@ void rtw_cancel_all_timer(struct rtw_ada
 {
 	RT_TRACE(_module_os_intfs_c_, _drv_info_, ("+rtw_cancel_all_timer\n"));
 
-	_cancel_timer_ex(&padapter->mlmepriv.assoc_timer);
+	del_timer_sync(&padapter->mlmepriv.assoc_timer);
 	RT_TRACE(_module_os_intfs_c_, _drv_info_, ("rtw_cancel_all_timer:cancel association timer complete!\n"));
 
-	_cancel_timer_ex(&padapter->mlmepriv.scan_to_timer);
+	del_timer_sync(&padapter->mlmepriv.scan_to_timer);
 	RT_TRACE(_module_os_intfs_c_, _drv_info_, ("rtw_cancel_all_timer:cancel scan_to_timer!\n"));
 
-	_cancel_timer_ex(&padapter->mlmepriv.dynamic_chk_timer);
+	del_timer_sync(&padapter->mlmepriv.dynamic_chk_timer);
 	RT_TRACE(_module_os_intfs_c_, _drv_info_, ("rtw_cancel_all_timer:cancel dynamic_chk_timer!\n"));
 
 	/*  cancel sw led timer */
 	rtw_hal_sw_led_deinit(padapter);
 	RT_TRACE(_module_os_intfs_c_, _drv_info_, ("rtw_cancel_all_timer:cancel DeInitSwLeds!\n"));
 
-	_cancel_timer_ex(&padapter->pwrctrlpriv.pwr_state_check_timer);
+	del_timer_sync(&padapter->pwrctrlpriv.pwr_state_check_timer);
 
 #ifdef CONFIG_P2P
-	_cancel_timer_ex(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
+	del_timer_sync(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
 #endif /* CONFIG_P2P */
 
-	_cancel_timer_ex(&padapter->mlmepriv.set_scan_deny_timer);
+	del_timer_sync(&padapter->mlmepriv.set_scan_deny_timer);
 	rtw_clear_scan_deny(padapter);
 	RT_TRACE(_module_os_intfs_c_, _drv_info_, ("rtw_cancel_all_timer:cancel set_scan_deny_timer!\n"));
 
-	_cancel_timer_ex(&padapter->recvpriv.signal_stat_timer);
+	del_timer_sync(&padapter->recvpriv.signal_stat_timer);
 
 	/*  cancel dm  timer */
 	rtw_hal_dm_deinit(padapter);
@@ -684,11 +684,11 @@ u8 rtw_free_drv_sw(struct rtw_adapter *p
 		struct wifidirect_info *pwdinfo = &padapter->wdinfo;
 		if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
 		{
-			_cancel_timer_ex(&pwdinfo->find_phase_timer);
-			_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
-			_cancel_timer_ex(&pwdinfo->pre_tx_scan_timer);
+			del_timer_sync(&pwdinfo->find_phase_timer);
+			del_timer_sync(&pwdinfo->restore_p2p_state_timer);
+			del_timer_sync(&pwdinfo->pre_tx_scan_timer);
 #ifdef CONFIG_CONCURRENT_MODE
-			_cancel_timer_ex(&pwdinfo->ap_p2p_switch_timer);
+			del_timer_sync(&pwdinfo->ap_p2p_switch_timer);
 #endif /*  CONFIG_CONCURRENT_MODE */
 			rtw_p2p_set_state(pwdinfo, P2P_STATE_NONE);
 		}
