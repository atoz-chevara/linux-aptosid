From 7843bfd73df295f0de58aaadb043ffa634d84150 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Thu, 20 Feb 2014 13:28:13 -0600
Subject: [PATCH 228/390] rtl8192du: Remove CONFIG_TCP_CSUM_OFFLOAD_RX

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_recv.c       |  9 ---------
 hal/rtl8192d_rxdesc.c | 19 -------------------
 os_dep/recv_linux.c   | 14 --------------
 3 files changed, 42 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -1989,16 +1989,7 @@ static int amsdu_to_msdu(struct rtw_adap
 			    eth_type_trans(sub_skb, padapter->pnetdev);
 			sub_skb->dev = padapter->pnetdev;
 
-#ifdef CONFIG_TCP_CSUM_OFFLOAD_RX
-			if ((pattrib->tcpchk_valid == 1) &&
-			    (pattrib->tcp_chkrpt == 1))
-				sub_skb->ip_summed = CHECKSUM_UNNECESSARY;
-			else
-				sub_skb->ip_summed = CHECKSUM_NONE;
-#else /* !CONFIG_TCP_CSUM_OFFLOAD_RX */
 			sub_skb->ip_summed = CHECKSUM_NONE;
-#endif /* CONFIG_TCP_CSUM_OFFLOAD_RX */
-
 			netif_rx(sub_skb);
 		}
 	}
--- a/drivers/staging/rtl8192du/hal/rtl8192d_rxdesc.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_rxdesc.c
@@ -554,25 +554,6 @@ void rtl8192d_query_rx_desc_status(struc
 	pattrib->frag_num = (u8)((le32_to_cpu(pdesc->rxdw2) >> 12) & 0xf);/* fragmentation number */
 
 	/* Offset 12 */
-#ifdef CONFIG_TCP_CSUM_OFFLOAD_RX
-	if (le32_to_cpu(pdesc->rxdw3) & BIT(13)) {
-		pattrib->tcpchk_valid = 1; /*  valid */
-		if (le32_to_cpu(pdesc->rxdw3) & BIT(11)) {
-			pattrib->tcp_chkrpt = 1; /*  correct */
-		}
-		else
-			pattrib->tcp_chkrpt = 0; /*  incorrect */
-
-		if (le32_to_cpu(pdesc->rxdw3) & BIT(12))
-			pattrib->ip_chkrpt = 1; /*  correct */
-		else
-			pattrib->ip_chkrpt = 0; /*  incorrect */
-	}
-	else {
-		pattrib->tcpchk_valid = 0; /*  invalid */
-	}
-#endif
-
 	pattrib->mcs_rate=(u8)((le32_to_cpu(pdesc->rxdw3))&0x3f);
 	pattrib->rxht=(u8)((le32_to_cpu(pdesc->rxdw3) >>6)&0x1);
 
--- a/drivers/staging/rtl8192du/os_dep/recv_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/recv_linux.c
@@ -196,9 +196,6 @@ int rtw_recv_indicatepkt(struct rtw_adap
 	struct __queue *pfree_recv_queue;
 	struct sk_buff *skb;
 	struct mlme_priv*pmlmepriv = &padapter->mlmepriv;
-#ifdef CONFIG_TCP_CSUM_OFFLOAD_RX
-	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
-#endif
 
 	precvpriv = &(padapter->recvpriv);
 	pfree_recv_queue = &(precvpriv->free_recv_queue);
@@ -267,19 +264,8 @@ int rtw_recv_indicatepkt(struct rtw_adap
 
 		}
 	}
-
-#ifdef CONFIG_TCP_CSUM_OFFLOAD_RX
-	if ((pattrib->tcpchk_valid == 1) && (pattrib->tcp_chkrpt == 1)) {
-		skb->ip_summed = CHECKSUM_UNNECESSARY;
-	} else {
-		skb->ip_summed = CHECKSUM_NONE;
-	}
-#else /* !CONFIG_TCP_CSUM_OFFLOAD_RX */
-
 	skb->ip_summed = CHECKSUM_NONE;
 
-#endif
-
 	skb->dev = padapter->pnetdev;
 	skb->protocol = eth_type_trans(skb, padapter->pnetdev);
 
