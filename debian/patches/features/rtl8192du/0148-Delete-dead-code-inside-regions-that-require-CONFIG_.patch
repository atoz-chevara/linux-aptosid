From a93247b95b807fd382f98c4e766b27301cac0892 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Mon, 13 May 2013 13:11:36 -0500
Subject: [PATCH 148/390] Delete dead code inside regions that require
 CONFIG_IOL to be defined

This change also deletes the now unused files core/rtw_iol.c and
include/rtw_iol.h.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 Makefile                |   1 -
 core/rtw_iol.c          | 228 ------------------------------------------------
 hal/hal_intf.c          |   9 --
 hal/rtl8192d_hal_init.c |   3 -
 include/drv_types.h     |   3 -
 include/hal_intf.h      |   7 --
 include/rtw_iol.h       |  77 ----------------
 os_dep/ioctl_linux.c    | 149 -------------------------------
 os_dep/os_intfs.c       |  10 ---
 9 files changed, 487 deletions(-)
 delete mode 100644 core/rtw_iol.c
 delete mode 100644 include/rtw_iol.h

--- a/drivers/staging/rtl8192du/Makefile
+++ b/drivers/staging/rtl8192du/Makefile
@@ -155,7 +155,6 @@ rtk_core :=	core/rtw_cmd.o \
 		core/rtw_p2p.o \
 		core/rtw_tdls.o \
 		core/rtw_br_ext.o \
-		core/rtw_iol.o \
 		core/rtw_sreset.o
 
 $(MODULE_NAME)-y += $(rtk_core)
--- a/drivers/staging/rtl8192du/core/rtw_iol.c
+++ /dev/null
@@ -1,228 +0,0 @@
-/******************************************************************************
- *
- * Copyright(c) 2007 - 2011 Realtek Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
- * more details.
- *
- * You should have received a copy of the GNU General Public License along with
- * this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110, USA
- *
- *
- ******************************************************************************/
-
-#include<rtw_iol.h>
-
-#ifdef CONFIG_IOL
-struct xmit_frame	*rtw_IOL_accquire_xmit_frame(ADAPTER *adapter)
-{
-	struct xmit_frame	*xmit_frame;
-	struct xmit_buf	*xmitbuf;
-	struct pkt_attrib	*pattrib;
-	struct xmit_priv	*pxmitpriv = &(adapter->xmitpriv);
-
-	xmit_frame = rtw_alloc_xmitframe(pxmitpriv);
-	if (xmit_frame == NULL) {
-		DBG_871X("%s rtw_alloc_xmitframe return null\n", __func__);
-		goto exit;
-	}
-
-	xmitbuf = rtw_alloc_xmitbuf(pxmitpriv);
-	if (xmitbuf == NULL) {
-		DBG_871X("%s rtw_alloc_xmitbuf return null\n", __func__);
-		rtw_free_xmitframe(pxmitpriv, xmit_frame);
-		xmit_frame = NULL;
-		goto exit;
-	}
-
-	xmit_frame->frame_tag = MGNT_FRAMETAG;
-	xmit_frame->pxmitbuf = xmitbuf;
-	xmit_frame->buf_addr = xmitbuf->pbuf;
-	xmitbuf->priv_data = xmit_frame;
-
-	pattrib = &xmit_frame->attrib;
-	update_mgntframe_attrib(adapter, pattrib);
-	pattrib->qsel = 0x10;
-	pattrib->pktlen = 0;
-	pattrib->last_txcmdsz = 0;
-exit:
-	return xmit_frame;
-}
-
-int rtw_IOL_append_cmds(struct xmit_frame *xmit_frame, u8 *IOL_cmds,
-			u32 cmd_len)
-{
-	struct pkt_attrib	*pattrib = &xmit_frame->attrib;
-	u16 buf_offset;
-	u32 ori_len;
-
-/* Todo: bulkout without this offset */
-	buf_offset = TXDESC_OFFSET;
-	ori_len = buf_offset+pattrib->pktlen;
-
-	/* check if the io_buf can accommodate new cmds */
-	if (ori_len + cmd_len + 8 > MAX_XMITBUF_SZ) {
-		DBG_871X("%s %u is large than MAX_XMITBUF_SZ:%u, can't accommodate new cmds\n",
-			 __func__, ori_len + cmd_len + 8, MAX_XMITBUF_SZ);
-		return _FAIL;
-	}
-
-	memcpy(xmit_frame->buf_addr + buf_offset + pattrib->pktlen,
-	       IOL_cmds, cmd_len);
-	pattrib->pktlen += cmd_len;
-	pattrib->last_txcmdsz += cmd_len;
-	return _SUCCESS;
-}
-
-int rtw_IOL_append_LLT_cmd(struct xmit_frame *xmit_frame, u8 page_boundary)
-{
-	IOL_CMD cmd = {0x0, IOL_CMD_LLT, 0x0, 0x0};
-
-	RTW_PUT_BE32((u8 *)&cmd.value, (u32)page_boundary);
-
-	return rtw_IOL_append_cmds(xmit_frame, (u8 *)&cmd, 8);
-}
-
-int _rtw_IOL_append_WB_cmd(struct xmit_frame *xmit_frame, u16 addr, u8 value)
-{
-	IOL_CMD cmd = {0x0, IOL_CMD_WB_REG, 0x0, 0x0};
-
-	RTW_PUT_BE16((u8 *)&cmd.address, (u16)addr);
-	RTW_PUT_BE32((u8 *)&cmd.value, (u32)value);
-
-	return rtw_IOL_append_cmds(xmit_frame, (u8 *)&cmd, 8);
-}
-
-int _rtw_IOL_append_WW_cmd(struct xmit_frame *xmit_frame, u16 addr, u16 value)
-{
-	IOL_CMD cmd = {0x0, IOL_CMD_WW_REG, 0x0, 0x0};
-
-	RTW_PUT_BE16((u8 *)&cmd.address, (u16)addr);
-	RTW_PUT_BE32((u8 *)&cmd.value, (u32)value);
-
-	return rtw_IOL_append_cmds(xmit_frame, (u8i *)&cmd, 8);
-}
-
-int _rtw_IOL_append_WD_cmd(struct xmit_frame *xmit_frame, u16 addr, u32 value)
-{
-	IOL_CMD cmd = {0x0, IOL_CMD_WD_REG, 0x0, 0x0};
-	u8 *pos = (u8 *)&cmd;
-
-	RTW_PUT_BE16((u8 *)&cmd.address, (u16)addr);
-	RTW_PUT_BE32((u8 *)&cmd.value, (u32)value);
-
-	return rtw_IOL_append_cmds(xmit_frame, (u8 *)&cmd, 8);
-}
-
-#ifdef DBG_IO
-int dbg_rtw_IOL_append_WB_cmd(struct xmit_frame *xmit_frame, u16 addr, u8 value,
-			      const char *caller, const int line)
-{
-	if (match_write_sniff_ranges(addr, 1))
-		DBG_871X("DBG_IO %s:%d IOL_WB(0x%04x, 0x%02x)\n", caller,
-			 line, addr, value);
-
-	return _rtw_IOL_append_WB_cmd(xmit_frame, addr, value);
-}
-
-int dbg_rtw_IOL_append_WW_cmd(struct xmit_frame *xmit_frame, u16 addr,
-			      u16 value, const char *caller, const int line)
-{
-	if (match_write_sniff_ranges(addr, 2))
-		DBG_871X("DBG_IO %s:%d IOL_WW(0x%04x, 0x%04x)\n",
-			 caller, line, addr, value);
-
-	return _rtw_IOL_append_WW_cmd(xmit_frame, addr, value);
-}
-
-int dbg_rtw_IOL_append_WD_cmd(struct xmit_frame *xmit_frame, u16 addr,
-			      u32 value, const char *caller, const int line)
-{
-	if (match_write_sniff_ranges(addr, 4))
-		DBG_871X("DBG_IO %s:%d IOL_WD(0x%04x, 0x%08x)\n", caller,
-			 line, addr, value);
-
-	return _rtw_IOL_append_WD_cmd(xmit_frame, addr, value);
-}
-#endif
-
-int rtw_IOL_append_DELAY_US_cmd(struct xmit_frame *xmit_frame, u16 us)
-{
-	IOL_CMD cmd = {0x0, IOL_CMD_DELAY_US, 0x0, 0x0};
-
-	RTW_PUT_BE32((u8 *)&cmd.value, (u32)us);
-
-	return rtw_IOL_append_cmds(xmit_frame, (u8 *)&cmd, 8);
-}
-
-int rtw_IOL_append_DELAY_MS_cmd(struct xmit_frame *xmit_frame, u16 ms)
-{
-	IOL_CMD cmd = {0x0, IOL_CMD_DELAY_MS, 0x0, 0x0};
-
-	RTW_PUT_BE32((u8 *)&cmd.value, (u32)ms);
-
-	return rtw_IOL_append_cmds(xmit_frame, (u8 *)&cmd, 8);
-}
-
-int rtw_IOL_append_END_cmd(struct xmit_frame *xmit_frame)
-{
-	struct pkt_attrib	*pattrib = &xmit_frame->attrib;
-	u16 buf_offset;
-	u32 ori_len;
-	IOL_CMD end_cmd = {0x0, IOL_CMD_END, 0x0, 0x0};
-
-/* Todo: bulkout without this offset */
-	buf_offset = TXDESC_OFFSET;
-	ori_len = buf_offset+pattrib->pktlen;
-
-	/* check if the io_buf can accommodate new cmds */
-	if (ori_len + 8 > MAX_XMITBUF_SZ) {
-		DBG_871X("%s %u is large than MAX_XMITBUF_SZ:%u, can't accommodate end cmd\n",
-			 __func__, ori_len + 8, MAX_XMITBUF_SZ);
-		return _FAIL;
-	}
-
-	memcpy(xmit_frame->buf_addr + buf_offset + pattrib->pktlen,
-	       (u8 *)&end_cmd, 8);
-	pattrib->pktlen += 8;
-	pattrib->last_txcmdsz += 8;
-
-	return _SUCCESS;
-}
-
-int rtw_IOL_exec_cmds_sync(ADAPTER *adapter, struct xmit_frame *xmit_frame,
-			   u32 max_wating_ms)
-{
-	return rtw_hal_iol_cmd(adapter, xmit_frame, max_wating_ms);
-}
-
-int rtw_IOL_exec_cmd_array_sync(PADAPTER adapter, u8 *IOL_cmds, u32 cmd_num,
-				u32 max_wating_ms)
-{
-	struct xmit_frame	*xmit_frame;
-
-	xmit_frame = rtw_IOL_accquire_xmit_frame(adapter);
-	if (xmit_frame == NULL)
-		return _FAIL;
-
-	if (rtw_IOL_append_cmds(xmit_frame, IOL_cmds, cmd_num<<3) == _FAIL)
-		return _FAIL;
-
-	return rtw_IOL_exec_cmds_sync(adapter, xmit_frame, max_wating_ms);
-}
-
-int rtw_IOL_exec_empty_cmds_sync(ADAPTER *adapter, u32 max_wating_ms)
-{
-	IOL_CMD end_cmd = {0x0, IOL_CMD_END, 0x0, 0x0};
-	return rtw_IOL_exec_cmd_array_sync(adapter, (u8 *)&end_cmd, 1,
-					   max_wating_ms);
-}
-
-#endif /* CONFIG_IOL */
--- a/drivers/staging/rtl8192du/hal/hal_intf.c
+++ b/drivers/staging/rtl8192du/hal/hal_intf.c
@@ -445,15 +445,6 @@ u8 rtw_hal_sreset_get_wifi_status(struct
 }
 #endif //DBG_CONFIG_ERROR_DETECT
 
-#ifdef CONFIG_IOL
-int rtw_hal_iol_cmd(ADAPTER *adapter, struct xmit_frame *xmit_frame, u32 max_wating_ms)
-{
-	if (adapter->HalFunc.IOL_exec_cmds_sync)
-		return adapter->HalFunc.IOL_exec_cmds_sync(adapter, xmit_frame, max_wating_ms);
-	return _FAIL;
-}
-#endif
-
 void rtw_hal_notch_filter(struct rtw_adapter *adapter, bool enable)
 {
 	if (adapter->HalFunc.hal_notch_filter)
--- a/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
@@ -2332,9 +2332,6 @@ void rtl8192d_set_hal_ops(struct hal_ops
 	pHalFunc->Efuse_PgPacketWrite = &rtl8192d_Efuse_PgPacketWrite;
 	pHalFunc->Efuse_WordEnableDataWrite = &rtl8192d_Efuse_WordEnableDataWrite;
 
-#ifdef CONFIG_IOL
-	pHalFunc->IOL_exec_cmds_sync = NULL;
-#endif
 	pHalFunc->hal_notch_filter = &hal_notch_filter_8192d;
 
 	pHalFunc->c2h_handler = c2h_handler_8192d;
--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -171,9 +171,6 @@ struct registry_priv {
 	u8	max_roaming_times; // the max number driver will try to roaming
 #endif
 
-#ifdef CONFIG_IOL
-	bool force_iol; //enable iol without other concern
-#endif
 	u8  special_rf_path; //0: 2T2R ,1: only turn on path A 1T1R, 2: only turn on path B 1T1R
 	u8	mac_phy_mode; //0:by efuse, 1:smsp, 2:dmdp, 3:dmsp.
 
--- a/drivers/staging/rtl8192du/include/hal_intf.h
+++ b/drivers/staging/rtl8192du/include/hal_intf.h
@@ -217,9 +217,6 @@ struct hal_ops {
 	u8 (*sreset_get_wifi_status)(struct rtw_adapter *padapter);
 #endif
 
-#ifdef CONFIG_IOL
-	int (*IOL_exec_cmds_sync)(ADAPTER *adapter, struct xmit_frame *xmit_frame, u32 max_wating_ms);
-#endif
 	void (*hal_notch_filter)(struct rtw_adapter *adapter, bool enable);
 	void (*hal_reset_security_engine)(struct rtw_adapter *adapter);
 
@@ -387,10 +384,6 @@ void rtw_hal_sreset_linked_status_check(
 u8 rtw_hal_sreset_get_wifi_status(struct rtw_adapter *padapter);
 #endif
 
-#ifdef CONFIG_IOL
-int rtw_hal_iol_cmd(ADAPTER *adapter, struct xmit_frame *xmit_frame, u32 max_wating_ms);
-#endif
-
 void rtw_hal_notch_filter(struct rtw_adapter *adapter, bool enable);
 void rtw_hal_reset_security_engine(struct rtw_adapter *adapter);
 
--- a/drivers/staging/rtl8192du/include/rtw_iol.h
+++ /dev/null
@@ -1,77 +0,0 @@
-/******************************************************************************
- *
- * Copyright(c) 2007 - 2011 Realtek Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
- * more details.
- *
- * You should have received a copy of the GNU General Public License along with
- * this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110, USA
- *
- *
- ******************************************************************************/
-#ifndef __RTW_IOL_H_
-#define __RTW_IOL_H_
-
-#include <drv_conf.h>
-#include <osdep_service.h>
-#include <drv_types.h>
-
-#define IOL_CMD_LLT		0x00
-#define IOL_CMD_WB_REG		0x02
-#define IOL_CMD_WW_REG		0x03
-#define IOL_CMD_WD_REG		0x04
-#define IOL_CMD_DELAY_US	0x80
-#define IOL_CMD_DELAY_MS	0x81
-#define IOL_CMD_END		0x83
-
-/*****************************************************
-CMD					Address			Value
-(B1)					(B2/B3:H/L addr)	(B4:B7 : MSB:LSB)
-******************************************************
-IOL_CMD_LLT			-				B7: PGBNDY
-//IOL_CMD_R_EFUSE	-				-
-IOL_CMD_WB_REG		0x0~0xFFFF		B7
-IOL_CMD_WW_REG	0x0~0xFFFF		B6~B7
-IOL_CMD_WD_REG	0x0~0xFFFF		B4~B7
-//IOL_CMD_W_RF		RF Reg			B5~B7
-IOL_CMD_DELAY_US	-				B6~B7
-IOL_CMD_DELAY_MS	-				B6~B7
-//IOL_CMD_DELAY_S	-				B6~B7
-IOL_CMD_END		-				-
-******************************************************/
-
-struct xmit_frame	*rtw_IOL_accquire_xmit_frame(struct rtw_adapter *adapter);
-int rtw_IOL_append_cmds(struct xmit_frame *xmit_frame, u8 *IOL_cmds, u32 cmd_len);
-int rtw_IOL_append_LLT_cmd(struct xmit_frame *xmit_frame, u8 page_boundary);
-int _rtw_IOL_append_WB_cmd(struct xmit_frame *xmit_frame, u16 addr, u8 value);
-int _rtw_IOL_append_WW_cmd(struct xmit_frame *xmit_frame, u16 addr, u16 value);
-int _rtw_IOL_append_WD_cmd(struct xmit_frame *xmit_frame, u16 addr, u32 value);
-int rtw_IOL_append_DELAY_US_cmd(struct xmit_frame *xmit_frame, u16 us);
-int rtw_IOL_append_DELAY_MS_cmd(struct xmit_frame *xmit_frame, u16 ms);
-int rtw_IOL_append_END_cmd(struct xmit_frame *xmit_frame);
-int rtw_IOL_exec_cmds_sync(struct rtw_adapter *adapter, struct xmit_frame *xmit_frame, u32 max_wating_ms);
-int rtw_IOL_exec_cmd_array_sync(struct rtw_adapter *adapter, u8 *IOL_cmds, u32 cmd_num, u32 max_wating_ms);
-int rtw_IOL_exec_empty_cmds_sync(struct rtw_adapter *adapter, u32 max_wating_ms);
-
-#ifdef DBG_IO
-int dbg_rtw_IOL_append_WB_cmd(struct xmit_frame *xmit_frame, u16 addr, u8 value, const char *caller, const int line);
-int dbg_rtw_IOL_append_WW_cmd(struct xmit_frame *xmit_frame, u16 addr, u16 value, const char *caller, const int line);
-int dbg_rtw_IOL_append_WD_cmd(struct xmit_frame *xmit_frame, u16 addr, u32 value, const char *caller, const int line);
-#define rtw_IOL_append_WB_cmd(xmit_frame, addr, value) dbg_rtw_IOL_append_WB_cmd((xmit_frame), (addr), (value), __func__, __LINE__)
-#define rtw_IOL_append_WW_cmd(xmit_frame, addr, value) dbg_rtw_IOL_append_WW_cmd((xmit_frame), (addr), (value), __func__, __LINE__)
-#define rtw_IOL_append_WD_cmd(xmit_frame, addr, value) dbg_rtw_IOL_append_WD_cmd((xmit_frame), (addr), (value), __func__, __LINE__)
-#else
-#define rtw_IOL_append_WB_cmd(xmit_frame, addr, value) _rtw_IOL_append_WB_cmd((xmit_frame), (addr), (value))
-#define rtw_IOL_append_WW_cmd(xmit_frame, addr, value) _rtw_IOL_append_WW_cmd((xmit_frame), (addr), (value))
-#define rtw_IOL_append_WD_cmd(xmit_frame, addr, value) _rtw_IOL_append_WD_cmd((xmit_frame), (addr), (value))
-#endif
-
-#endif //__RTW_IOL_H_
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -5884,9 +5884,6 @@ void rf_reg_dump(struct rtw_adapter *pad
 	}
 }
 
-#ifdef CONFIG_IOL
-#include <rtw_iol.h>
-#endif
 static int rtw_dbg_port(struct net_device *dev,
                                struct iw_request_info *info,
                                union iwreq_data *wrqu, char *extra)
@@ -5977,152 +5974,6 @@ static int rtw_dbg_port(struct net_devic
 			}
 			break;
 		case 0x78: //IOL test
-			switch (minor_cmd)
-			{
-				#ifdef CONFIG_IOL
-				case 0x04: //LLT table initialization test
-				{
-					u8 page_boundary = 0xf9;
-					{
-						struct xmit_frame	*xmit_frame;
-
-						if ((xmit_frame=rtw_IOL_accquire_xmit_frame(padapter)) == NULL) {
-							ret = -ENOMEM;
-							break;
-						}
-
-						rtw_IOL_append_LLT_cmd(xmit_frame, page_boundary);
-
-
-						if (_SUCCESS != rtw_IOL_exec_cmds_sync(padapter, xmit_frame, 500))
-							ret = -EPERM;
-					}
-				}
-					break;
-				case 0x05: //blink LED test
-				{
-					u16 reg = 0x4c;
-					u32 blink_num = 50;
-					u32 blink_delay_ms = 200;
-					int i;
-
-					{
-						struct xmit_frame	*xmit_frame;
-
-						if ((xmit_frame=rtw_IOL_accquire_xmit_frame(padapter)) == NULL) {
-							ret = -ENOMEM;
-							break;
-						}
-
-						for (i=0;i<blink_num;i++) {
-							rtw_IOL_append_WB_cmd(xmit_frame, reg, 0x00);
-							rtw_IOL_append_DELAY_MS_cmd(xmit_frame, blink_delay_ms);
-							rtw_IOL_append_WB_cmd(xmit_frame, reg, 0x08);
-							rtw_IOL_append_DELAY_MS_cmd(xmit_frame, blink_delay_ms);
-						}
-						if (_SUCCESS != rtw_IOL_exec_cmds_sync(padapter, xmit_frame, (blink_delay_ms*blink_num*2)+200))
-							ret = -EPERM;
-					}
-				}
-					break;
-
-				case 0x06: //continuous wirte byte test
-				{
-					u16 reg = arg;
-					u16 start_value = 0;
-					u32 write_num = extra_arg;
-					int i;
-					u8 final;
-
-					{
-						struct xmit_frame	*xmit_frame;
-
-						if ((xmit_frame=rtw_IOL_accquire_xmit_frame(padapter)) == NULL) {
-							ret = -ENOMEM;
-							break;
-						}
-
-						for (i=0;i<write_num;i++) {
-							rtw_IOL_append_WB_cmd(xmit_frame, reg, i+start_value);
-						}
-						if (_SUCCESS != rtw_IOL_exec_cmds_sync(padapter, xmit_frame, 5000))
-							ret = -EPERM;
-					}
-
-					if (start_value+write_num-1 == (final=rtw_read8(padapter, reg))) {
-						DBG_8192D("continuous IOL_CMD_WB_REG to 0x%x %u times Success, start:%u, final:%u\n", reg, write_num, start_value, final);
-					} else {
-						DBG_8192D("continuous IOL_CMD_WB_REG to 0x%x %u times Fail, start:%u, final:%u\n", reg, write_num, start_value, final);
-					}
-				}
-					break;
-
-				case 0x07: //continuous wirte word test
-				{
-					u16 reg = arg;
-					u16 start_value = 200;
-					u32 write_num = extra_arg;
-
-					int i;
-					u16 final;
-
-					{
-						struct xmit_frame	*xmit_frame;
-
-						if ((xmit_frame=rtw_IOL_accquire_xmit_frame(padapter)) == NULL) {
-							ret = -ENOMEM;
-							break;
-						}
-
-						for (i=0;i<write_num;i++) {
-							rtw_IOL_append_WW_cmd(xmit_frame, reg, i+start_value);
-						}
-						if (_SUCCESS !=rtw_IOL_exec_cmds_sync(padapter, xmit_frame, 5000))
-							ret = -EPERM;
-					}
-
-					if (start_value+write_num-1 == (final=rtw_read16(padapter, reg))) {
-						DBG_8192D("continuous IOL_CMD_WW_REG to 0x%x %u times Success, start:%u, final:%u\n", reg, write_num, start_value, final);
-					} else {
-						DBG_8192D("continuous IOL_CMD_WW_REG to 0x%x %u times Fail, start:%u, final:%u\n", reg, write_num, start_value, final);
-					}
-				}
-					break;
-
-				case 0x08: //continuous wirte dword test
-				{
-					u16 reg = arg;
-					u32 start_value = 0x110000c7;
-					u32 write_num = extra_arg;
-
-					int i;
-					u32 final;
-
-					{
-						struct xmit_frame	*xmit_frame;
-
-						if ((xmit_frame=rtw_IOL_accquire_xmit_frame(padapter)) == NULL) {
-							ret = -ENOMEM;
-							break;
-						}
-
-						for (i=0;i<write_num;i++) {
-							rtw_IOL_append_WD_cmd(xmit_frame, reg, i+start_value);
-						}
-						if (_SUCCESS !=rtw_IOL_exec_cmds_sync(padapter, xmit_frame, 5000))
-							ret = -EPERM;
-
-					}
-
-					if (start_value+write_num-1 == (final=rtw_read32(padapter, reg))) {
-						DBG_8192D("continuous IOL_CMD_WD_REG to 0x%x %u times Success, start:%u, final:%u\n", reg, write_num, start_value, final);
-					} else {
-						DBG_8192D("continuous IOL_CMD_WD_REG to 0x%x %u times Fail, start:%u, final:%u\n", reg, write_num, start_value, final);
-					}
-				}
-					break;
-				#endif //CONFIG_IOL
-			}
 			break;
 		case 0x7a:
 			receive_disconnect(padapter, pmlmeinfo->network.MacAddress
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -215,12 +215,6 @@ module_param(rtw_max_roaming_times, uint
 MODULE_PARM_DESC(rtw_max_roaming_times,"The max roaming times to try");
 #endif /* CONFIG_LAYER2_ROAMING */
 
-#ifdef CONFIG_IOL
-bool rtw_force_iol = false;
-module_param(rtw_force_iol, bool, 0644);
-MODULE_PARM_DESC(rtw_force_iol,"Force to enable IOL");
-#endif /* CONFIG_IOL */
-
 #ifdef CONFIG_FILE_FWIMG
 char *rtw_fw_file_path = "";
 module_param(rtw_fw_file_path, charp, 0644);
@@ -768,10 +762,6 @@ _func_enter_;
 #endif /*  CONFIG_INTEL_WIDI */
 #endif
 
-#ifdef CONFIG_IOL
-	registry_par->force_iol = rtw_force_iol;
-#endif
-
 	registry_par->mac_phy_mode = rtw_mac_phy_mode;
 
 #ifdef CONFIG_80211D
