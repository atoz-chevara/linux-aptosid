From f13dec8a6547a4f186fcd6890373a3d5507ff7bf Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Mon, 17 Feb 2014 14:28:16 -0600
Subject: [PATCH 197/210] rtl8192du: Remove LIST_CONTAINOR and union recv_frame

These two are connected, which is the reason they were taken together.

LIST_CONTANOR may almost be replaced by container_of except that
the latter does not handle members of a union. Once those are replaced,
there is no use for union recv_frame as it can be replaced everywhere
by struct recv_frame_hdr.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c           |  16 +--
 core/rtw_cmd.c          |   4 +-
 core/rtw_debug.c        |   2 +-
 core/rtw_mlme.c         |  14 +--
 core/rtw_mlme_ext.c     | 158 +++++++++++------------
 core/rtw_p2p.c          |   4 +-
 core/rtw_pwrctrl.c      |   4 +-
 core/rtw_recv.c         | 328 ++++++++++++++++++++++++------------------------
 core/rtw_security.c     |  18 +--
 core/rtw_sta_mgt.c      |  18 +--
 core/rtw_tdls.c         |  82 ++++++------
 core/rtw_xmit.c         |  20 +--
 hal/rtl8192d_dm.c       |   2 +-
 hal/rtl8192d_rxdesc.c   |  52 ++++----
 hal/rtl8192du_xmit.c    |   4 +-
 hal/usb_ops_linux.c     |  82 ++++++------
 include/osdep_service.h |   4 -
 include/recv_osdep.h    |  16 +--
 include/rtl8192d_recv.h |   4 +-
 include/rtw_mlme_ext.h  |  52 ++++----
 include/rtw_recv.h      | 113 ++++++++---------
 include/rtw_tdls.h      |  26 ++--
 include/usb_osintf.h    |   2 +-
 os_dep/ioctl_cfg80211.c |   6 +-
 os_dep/ioctl_linux.c    |  30 ++---
 os_dep/recv_linux.c     |  50 ++++----
 os_dep/xmit_linux.c     |   2 +-
 27 files changed, 549 insertions(+), 564 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -291,7 +291,7 @@ void	expire_timeout_chk(struct rtw_adapt
 	plist = get_next(phead);
 
 	while (!rtw_end_of_queue_search(phead, plist)) {
-		psta = LIST_CONTAINOR(plist, struct sta_info, auth_list);
+		psta = container_of(plist, struct sta_info, auth_list);
 		plist = get_next(plist);
 
 		if (psta->expire_to > 0) {
@@ -327,7 +327,7 @@ void	expire_timeout_chk(struct rtw_adapt
 
 	/* check asoc_queue */
 	while (!rtw_end_of_queue_search(phead, plist)) {
-		psta = LIST_CONTAINOR(plist, struct sta_info, asoc_list);
+		psta = container_of(plist, struct sta_info, asoc_list);
 		plist = get_next(plist);
 
 		if (chk_sta_is_alive(psta) || !psta->expire_to) {
@@ -1296,7 +1296,7 @@ int rtw_acl_add_sta(struct rtw_adapter *
 	plist = get_next(phead);
 
 	while (!rtw_end_of_queue_search(phead, plist)) {
-		paclnode = LIST_CONTAINOR(plist, struct rtw_wlan_acl_node, list);
+		paclnode = container_of(plist, struct rtw_wlan_acl_node, list);
 		plist = get_next(plist);
 
 		if (_rtw_memcmp(paclnode->addr, addr, ETH_ALEN)) {
@@ -1357,7 +1357,7 @@ int rtw_acl_remove_sta(struct rtw_adapte
 	plist = get_next(phead);
 
 	while (!rtw_end_of_queue_search(phead, plist)) {
-		paclnode = LIST_CONTAINOR(plist, struct rtw_wlan_acl_node, list);
+		paclnode = container_of(plist, struct rtw_wlan_acl_node, list);
 		plist = get_next(plist);
 
 		if (_rtw_memcmp(paclnode->addr, addr, ETH_ALEN)) {
@@ -1663,7 +1663,7 @@ void associated_clients_update(struct rt
 
 		/* check asoc_queue */
 		while (!rtw_end_of_queue_search(phead, plist)) {
-			psta = LIST_CONTAINOR(plist, struct sta_info, asoc_list);
+			psta = container_of(plist, struct sta_info, asoc_list);
 
 			plist = get_next(plist);
 
@@ -1962,7 +1962,7 @@ int rtw_ap_inform_ch_switch(struct rtw_a
 
 	/* for each sta in asoc_queue */
 	while (!rtw_end_of_queue_search(phead, plist)) {
-		psta = LIST_CONTAINOR(plist, struct sta_info, asoc_list);
+		psta = container_of(plist, struct sta_info, asoc_list);
 		plist = get_next(plist);
 
 		issue_action_spct_ch_switch(padapter, psta->hwaddr, new_ch,
@@ -1998,7 +1998,7 @@ int rtw_sta_flush(struct rtw_adapter *pa
 
 	/* free sta asoc_queue */
 	while (!rtw_end_of_queue_search(phead, plist)) {
-		psta = LIST_CONTAINOR(plist, struct sta_info, asoc_list);
+		psta = container_of(plist, struct sta_info, asoc_list);
 
 		plist = get_next(plist);
 
@@ -2126,7 +2126,7 @@ void stop_ap_mode(struct rtw_adapter *pa
 	phead = get_list_head(pacl_node_q);
 	plist = get_next(phead);
 	while (!rtw_end_of_queue_search(phead, plist)) {
-		paclnode = LIST_CONTAINOR(plist, struct rtw_wlan_acl_node,
+		paclnode = container_of(plist, struct rtw_wlan_acl_node,
 					  list);
 		plist = get_next(plist);
 
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -210,7 +210,7 @@ _func_enter_;
 	if (rtw_is_list_empty(&(queue->queue))) {
 		obj = NULL;
 	} else {
-		obj = LIST_CONTAINOR(get_next(&(queue->queue)), struct cmd_obj, list);
+		obj = container_of(get_next(&(queue->queue)), struct cmd_obj, list);
 		rtw_list_delete(&obj->list);
 	}
 
@@ -516,7 +516,7 @@ _func_enter_;
 	if (rtw_is_list_empty(&(queue->queue))) {
 		pevtobj = NULL;
 	} else {
-		pevtobj = LIST_CONTAINOR(get_next(&(queue->queue)), struct evt_obj, list);
+		pevtobj = container_of(get_next(&(queue->queue)), struct evt_obj, list);
 		rtw_list_delete(&pevtobj->list);
 	}
 
--- a/drivers/staging/rtl8192du/core/rtw_debug.c
+++ b/drivers/staging/rtl8192du/core/rtw_debug.c
@@ -994,7 +994,7 @@ int proc_get_all_sta_info(char *page, ch
 		plist = get_next(phead);
 
 		while ((rtw_end_of_queue_search(phead, plist)) == false) {
-			psta = LIST_CONTAINOR(plist, struct sta_info, hash_list);
+			psta = container_of(plist, struct sta_info, hash_list);
 
 			plist = get_next(plist);
 
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -202,7 +202,7 @@ struct wlan_network *_rtw_dequeue_networ
 		pnetwork = NULL;
 	} else {
 		pnetwork =
-		    LIST_CONTAINOR(get_next(&queue->queue), struct wlan_network,
+		    container_of(get_next(&queue->queue), struct wlan_network,
 				   list);
 
 		rtw_list_delete(&(pnetwork->list));
@@ -231,7 +231,7 @@ struct wlan_network *_rtw_alloc_network(
 	}
 	plist = get_next(&(free_queue->queue));
 
-	pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+	pnetwork = container_of(plist, struct wlan_network, list);
 
 	rtw_list_delete(&pnetwork->list);
 
@@ -345,7 +345,7 @@ struct wlan_network *_rtw_find_network(s
 	plist = get_next(phead);
 
 	while (plist != phead) {
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 
 		if (_rtw_memcmp(addr, pnetwork->network.MacAddress, ETH_ALEN) ==
 		    true)
@@ -381,7 +381,7 @@ void _rtw_free_network_queue(struct rtw_
 	plist = get_next(phead);
 
 	while (rtw_end_of_queue_search(phead, plist) == false) {
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 
 		plist = get_next(plist);
 
@@ -605,7 +605,7 @@ struct wlan_network *rtw_get_oldest_wlan
 		if (rtw_end_of_queue_search(phead, plist) == true)
 			break;
 
-		pwlan = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pwlan = container_of(plist, struct wlan_network, list);
 
 		if (pwlan->fixed != true) {
 			if (oldest == NULL ||
@@ -752,7 +752,7 @@ void rtw_update_scanned_network(struct r
 		if (rtw_end_of_queue_search(phead, plist) == true)
 			break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 
 		if ((unsigned long)(pnetwork) < 0x7ffffff) {
 		}
@@ -2447,7 +2447,7 @@ int rtw_select_and_join_from_scanned_que
 
 	while (!rtw_end_of_queue_search(phead, pmlmepriv->pscanned)) {
 		pnetwork =
-		    LIST_CONTAINOR(pmlmepriv->pscanned, struct wlan_network,
+		    container_of(pmlmepriv->pscanned, struct wlan_network,
 				   list);
 		if (pnetwork == NULL) {
 			RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_,
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -574,10 +574,10 @@ static u8 cmp_pkt_chnl_diff(struct rtw_a
 
 static void _mgt_dispatcher(struct rtw_adapter *adapt,
 			    struct mlme_handler *ptable,
-			    union recv_frame *precv_frame)
+			    struct recv_frame_hdr *precv_frame)
 {
 	u8 bc_addr[ETH_ALEN] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
-	u8 *pframe = precv_frame->u.hdr.rx_data;
+	u8 *pframe = precv_frame->rx_data;
 
 	if (ptable->func) {
 		/* receive the frames that ra(a1) is my address or ra(a1) is bc address. */
@@ -588,7 +588,7 @@ static void _mgt_dispatcher(struct rtw_a
 	}
 }
 
-void mgt_dispatcher(struct rtw_adapter *adapt, union recv_frame *precv_frame)
+void mgt_dispatcher(struct rtw_adapter *adapt, struct recv_frame_hdr *precv_frame)
 {
 	int index;
 	struct mlme_handler *ptable;
@@ -596,7 +596,7 @@ void mgt_dispatcher(struct rtw_adapter *
 	struct mlme_priv *pmlmepriv = &adapt->mlmepriv;
 #endif /* CONFIG_AP_MODE */
 	u8 bc_addr[ETH_ALEN] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
-	u8 *pframe = precv_frame->u.hdr.rx_data;
+	u8 *pframe = precv_frame->rx_data;
 	struct sta_info *psta =
 	    rtw_get_stainfo(&adapt->stapriv, GetAddr2Ptr(pframe));
 
@@ -642,16 +642,16 @@ void mgt_dispatcher(struct rtw_adapter *
 
 	if (psta != NULL) {
 		if (GetRetry(pframe)) {
-			if (precv_frame->u.hdr.attrib.seq_num ==
+			if (precv_frame->attrib.seq_num ==
 			    psta->RxMgmtFrameSeqNum) {
 				/* drop the duplicate management frame */
 				DBG_8192D
 				    ("Drop duplicate management frame with seq_num = %d.\n",
-				     precv_frame->u.hdr.attrib.seq_num);
+				     precv_frame->attrib.seq_num);
 				return;
 			}
 		}
-		psta->RxMgmtFrameSeqNum = precv_frame->u.hdr.attrib.seq_num;
+		psta->RxMgmtFrameSeqNum = precv_frame->attrib.seq_num;
 	}
 #ifdef CONFIG_AP_MODE
 	switch (GetFrameSubType(pframe)) {
@@ -736,7 +736,7 @@ Following are the callback functions for
 *****************************************************************************/
 
 unsigned int OnProbeReq(struct rtw_adapter *adapt,
-			union recv_frame *precv_frame)
+			struct recv_frame_hdr *precv_frame)
 {
 	unsigned int ielen;
 	unsigned char *p;
@@ -744,13 +744,13 @@ unsigned int OnProbeReq(struct rtw_adapt
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct wlan_bssid_ex *cur = &(pmlmeinfo->network);
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint len = precv_frame->len;
 	u8 is_valid_p2p_probereq = false;
 
 #ifdef CONFIG_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 	u8 wifi_test_chk_rate = 1;
 
 	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE) &&
@@ -843,13 +843,13 @@ _issue_probersp:
 }
 
 unsigned int OnProbeRsp(struct rtw_adapter *adapt,
-			union recv_frame *precv_frame)
+			struct recv_frame_hdr *precv_frame)
 {
 	struct sta_info *psta;
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct sta_priv *pstapriv = &adapt->stapriv;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
+	u8 *pframe = precv_frame->rx_data;
 #ifdef CONFIG_P2P
 	struct wifidirect_info *pwdinfo = &adapt->wdinfo;
 #endif
@@ -930,15 +930,15 @@ unsigned int OnProbeRsp(struct rtw_adapt
 }
 
 unsigned int OnBeacon(struct rtw_adapter *adapt,
-		      union recv_frame *precv_frame)
+		      struct recv_frame_hdr *precv_frame)
 {
 	int cam_idx;
 	struct sta_info *psta;
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct sta_priv *pstapriv = &adapt->stapriv;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint len = precv_frame->len;
 
 	if (pmlmeext->sitesurvey_res.state == SCAN_PROCESS) {
 		report_survey_event(adapt, precv_frame);
@@ -1063,7 +1063,7 @@ _END_ONBEACON_:
 	return _SUCCESS;
 }
 
-unsigned int OnAuth(struct rtw_adapter *adapt, union recv_frame *precv_frame)
+unsigned int OnAuth(struct rtw_adapter *adapt, struct recv_frame_hdr *precv_frame)
 {
 #ifdef CONFIG_AP_MODE
 	unsigned int auth_mode, seq, ie_len;
@@ -1076,8 +1076,8 @@ unsigned int OnAuth(struct rtw_adapter *
 	struct security_priv *psecuritypriv = &adapt->securitypriv;
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint len = precv_frame->len;
 
 #ifdef CONFIG_CONCURRENT_MODE
 	if (((pmlmeinfo->state & 0x03) == WIFI_FW_AP_STATE) &&
@@ -1259,15 +1259,15 @@ auth_fail:
 }
 
 unsigned int OnAuthClient(struct rtw_adapter *adapt,
-			  union recv_frame *precv_frame)
+			  struct recv_frame_hdr *precv_frame)
 {
 	unsigned int seq, len, status, offset;
 	unsigned char *p;
 	unsigned int go2asoc = 0;
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint pkt_len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint pkt_len = precv_frame->len;
 
 	DBG_8192D("%s\n", __func__);
 
@@ -1344,7 +1344,7 @@ authclnt_fail:
 }
 
 unsigned int OnAssocReq(struct rtw_adapter *adapt,
-			union recv_frame *precv_frame)
+			struct recv_frame_hdr *precv_frame)
 {
 #ifdef CONFIG_AP_MODE
 	u16 capab_info;
@@ -1363,8 +1363,8 @@ unsigned int OnAssocReq(struct rtw_adapt
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct wlan_bssid_ex *cur = &(pmlmeinfo->network);
 	struct sta_priv *pstapriv = &adapt->stapriv;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint pkt_len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint pkt_len = precv_frame->len;
 #ifdef CONFIG_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
 	u8 p2p_status_code = P2P_STATUS_SUCCESS;
@@ -1914,7 +1914,7 @@ OnAssocReqFail:
 }
 
 unsigned int OnAssocRsp(struct rtw_adapter *adapt,
-			union recv_frame *precv_frame)
+			struct recv_frame_hdr *precv_frame)
 {
 	uint i;
 	int res;
@@ -1924,8 +1924,8 @@ unsigned int OnAssocRsp(struct rtw_adapt
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 	/* struct wlan_bssid_ex *cur_network = &(pmlmeinfo->network); */
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint pkt_len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint pkt_len = precv_frame->len;
 
 	DBG_8192D("%s\n", __func__);
 
@@ -2021,13 +2021,13 @@ report_assoc_result:
 }
 
 unsigned int OnDeAuth(struct rtw_adapter *adapt,
-		      union recv_frame *precv_frame)
+		      struct recv_frame_hdr *precv_frame)
 {
 	unsigned short reason;
 	struct mlme_priv *pmlmepriv = &adapt->mlmepriv;
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
-	u8 *pframe = precv_frame->u.hdr.rx_data;
+	u8 *pframe = precv_frame->rx_data;
 #ifdef CONFIG_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
 #endif /* CONFIG_P2P */
@@ -2086,13 +2086,13 @@ unsigned int OnDeAuth(struct rtw_adapter
 }
 
 unsigned int OnDisassoc(struct rtw_adapter *adapt,
-			union recv_frame *precv_frame)
+			struct recv_frame_hdr *precv_frame)
 {
 	unsigned short reason;
 	struct mlme_priv *pmlmepriv = &adapt->mlmepriv;
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
-	u8 *pframe = precv_frame->u.hdr.rx_data;
+	u8 *pframe = precv_frame->rx_data;
 #ifdef CONFIG_P2P
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
 #endif /* CONFIG_P2P */
@@ -2150,7 +2150,7 @@ unsigned int OnDisassoc(struct rtw_adapt
 	return _SUCCESS;
 }
 
-unsigned int OnAtim(struct rtw_adapter *adapt, union recv_frame *precv_frame)
+unsigned int OnAtim(struct rtw_adapter *adapt, struct recv_frame_hdr *precv_frame)
 {
 	DBG_8192D("%s\n", __func__);
 	return _SUCCESS;
@@ -2222,13 +2222,13 @@ exit:
 }
 
 unsigned int on_action_spct(struct rtw_adapter *adapt,
-			    union recv_frame *precv_frame)
+			    struct recv_frame_hdr *precv_frame)
 {
 	unsigned int ret = _FAIL;
 	struct sta_info *psta = NULL;
 	struct sta_priv *pstapriv = &adapt->stapriv;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint frame_len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint frame_len = precv_frame->len;
 	u8 *frame_body =
 	    (u8 *)(pframe + sizeof(struct rtw_ieee80211_hdr_3addr));
 	u8 category;
@@ -2268,19 +2268,19 @@ exit:
 }
 
 unsigned int OnAction_qos(struct rtw_adapter *adapt,
-			  union recv_frame *precv_frame)
+			  struct recv_frame_hdr *precv_frame)
 {
 	return _SUCCESS;
 }
 
 unsigned int OnAction_dls(struct rtw_adapter *adapt,
-			  union recv_frame *precv_frame)
+			  struct recv_frame_hdr *precv_frame)
 {
 	return _SUCCESS;
 }
 
 unsigned int OnAction_back(struct rtw_adapter *adapt,
-			   union recv_frame *precv_frame)
+			   struct recv_frame_hdr *precv_frame)
 {
 	u8 *addr;
 	struct sta_info *psta = NULL;
@@ -2290,7 +2290,7 @@ unsigned int OnAction_back(struct rtw_ad
 	unsigned short tid, status, reason_code = 0;
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
-	u8 *pframe = precv_frame->u.hdr.rx_data;
+	u8 *pframe = precv_frame->rx_data;
 	struct sta_priv *pstapriv = &adapt->stapriv;
 
 	/* check RA matches or not */
@@ -5120,13 +5120,13 @@ exit:
 
 #endif /* CONFIG_P2P */
 
-static s32 rtw_action_public_decache(union recv_frame *recv_frame, s32 token)
+static s32 rtw_action_public_decache(struct recv_frame_hdr *recv_frame, s32 token)
 {
-	struct rtw_adapter *adapter = recv_frame->u.hdr.adapter;
+	struct rtw_adapter *adapter = recv_frame->adapter;
 	struct mlme_ext_priv *mlmeext = &(adapter->mlmeextpriv);
-	u8 *frame = recv_frame->u.hdr.rx_data;
-	u16 seq_ctrl = ((recv_frame->u.hdr.attrib.seq_num & 0xffff) << 4) |
-	    (recv_frame->u.hdr.attrib.frag_num & 0xf);
+	u8 *frame = recv_frame->rx_data;
+	u16 seq_ctrl = ((recv_frame->attrib.seq_num & 0xffff) << 4) |
+	    (recv_frame->attrib.frag_num & 0xf);
 
 	if (GetRetry(frame)) {
 		if (token >= 0) {
@@ -5157,11 +5157,11 @@ static s32 rtw_action_public_decache(uni
 	return _SUCCESS;
 }
 
-static unsigned int on_action_public_p2p(union recv_frame *precv_frame)
+static unsigned int on_action_public_p2p(struct recv_frame_hdr *precv_frame)
 {
-	struct rtw_adapter *adapt = precv_frame->u.hdr.adapter;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint len = precv_frame->u.hdr.len;
+	struct rtw_adapter *adapt = precv_frame->adapter;
+	u8 *pframe = precv_frame->rx_data;
+	uint len = precv_frame->len;
 	u8 *frame_body;
 	u8 dialogToken = 0;
 #ifdef CONFIG_P2P
@@ -5744,11 +5744,11 @@ static unsigned int on_action_public_p2p
 	return _SUCCESS;
 }
 
-static unsigned int on_action_public_vendor(union recv_frame *precv_frame)
+static unsigned int on_action_public_vendor(struct recv_frame_hdr *precv_frame)
 {
 	unsigned int ret = _FAIL;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint frame_len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint frame_len = precv_frame->len;
 	u8 *frame_body = pframe + sizeof(struct rtw_ieee80211_hdr_3addr);
 
 	if (_rtw_memcmp(frame_body + 2, P2P_OUI, 4) == true) {
@@ -5758,14 +5758,14 @@ static unsigned int on_action_public_ven
 	return ret;
 }
 
-static unsigned int on_action_public_default(union recv_frame *precv_frame, u8 action)
+static unsigned int on_action_public_default(struct recv_frame_hdr *precv_frame, u8 action)
 {
 	unsigned int ret = _FAIL;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint frame_len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint frame_len = precv_frame->len;
 	u8 *frame_body = pframe + sizeof(struct rtw_ieee80211_hdr_3addr);
 	u8 token;
-	struct rtw_adapter *adapter = precv_frame->u.hdr.adapter;
+	struct rtw_adapter *adapter = precv_frame->adapter;
 	int cnt = 0;
 	char msg[64];
 
@@ -5788,11 +5788,11 @@ exit:
 }
 
 unsigned int on_action_public(struct rtw_adapter *adapt,
-			      union recv_frame *precv_frame)
+			      struct recv_frame_hdr *precv_frame)
 {
 	unsigned int ret = _FAIL;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint frame_len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint frame_len = precv_frame->len;
 	u8 *frame_body = pframe + sizeof(struct rtw_ieee80211_hdr_3addr);
 	u8 category, action;
 
@@ -5820,25 +5820,25 @@ exit:
 }
 
 unsigned int OnAction_ht(struct rtw_adapter *adapt,
-			 union recv_frame *precv_frame)
+			 struct recv_frame_hdr *precv_frame)
 {
 	return _SUCCESS;
 }
 
 unsigned int OnAction_wmm(struct rtw_adapter *adapt,
-			  union recv_frame *precv_frame)
+			  struct recv_frame_hdr *precv_frame)
 {
 	return _SUCCESS;
 }
 
 unsigned int OnAction_p2p(struct rtw_adapter *adapt,
-			  union recv_frame *precv_frame)
+			  struct recv_frame_hdr *precv_frame)
 {
 #ifdef CONFIG_P2P
 	u8 *frame_body;
 	u8 category, OUI_Subtype;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	uint len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	uint len = precv_frame->len;
 	struct wifidirect_info *pwdinfo = &(adapt->wdinfo);
 
 	DBG_8192D("%s\n", __func__);
@@ -5886,13 +5886,13 @@ unsigned int OnAction_p2p(struct rtw_ada
 }
 
 unsigned int OnAction(struct rtw_adapter *adapt,
-		      union recv_frame *precv_frame)
+		      struct recv_frame_hdr *precv_frame)
 {
 	int i;
 	unsigned char category;
 	struct action_handler *ptable;
 	unsigned char *frame_body;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
+	u8 *pframe = precv_frame->rx_data;
 
 	frame_body =
 	    (unsigned char *)(pframe + sizeof(struct rtw_ieee80211_hdr_3addr));
@@ -5910,7 +5910,7 @@ unsigned int OnAction(struct rtw_adapter
 }
 
 unsigned int DoReserved(struct rtw_adapter *adapt,
-			union recv_frame *precv_frame)
+			struct recv_frame_hdr *precv_frame)
 {
 	/* DBG_8192D("rcvd mgt frame(%x, %x)\n", (GetFrameSubType(pframe) >> 4), *(unsigned int *)GetAddr1Ptr(pframe)); */
 	return _SUCCESS;
@@ -8462,7 +8462,7 @@ static void issue_action_BSSCoexistPacke
 				break;
 
 			pnetwork =
-			    LIST_CONTAINOR(plist, struct wlan_network, list);
+			    container_of(plist, struct wlan_network, list);
 
 			plist = get_next(plist);
 
@@ -9000,15 +9000,15 @@ void site_survey(struct rtw_adapter *ada
 
 /* collect bss info from Beacon and Probe response frames. */
 u8 collect_bss_info(struct rtw_adapter *adapt,
-		    union recv_frame *precv_frame,
+		    struct recv_frame_hdr *precv_frame,
 		    struct wlan_bssid_ex *bssid)
 {
 	int i;
 	u32 len;
 	u8 *p;
 	u16 val16, subtype;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	u32 packet_len = precv_frame->u.hdr.len;
+	u8 *pframe = precv_frame->rx_data;
+	u32 packet_len = precv_frame->len;
 	struct registry_priv *pregistrypriv = &adapt->registrypriv;
 	struct mlme_ext_priv *pmlmeext = &adapt->mlmeextpriv;
 	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
@@ -9038,9 +9038,9 @@ u8 collect_bss_info(struct rtw_adapter *
 	       bssid->IELength);
 
 	/* get the signal strength */
-	bssid->PhyInfo.SignalQuality = precv_frame->u.hdr.attrib.signal_qual;	/* in percentage */
-	bssid->PhyInfo.SignalStrength = precv_frame->u.hdr.attrib.signal_strength;	/* in percentage */
-	bssid->Rssi = precv_frame->u.hdr.attrib.RecvSignalPower;	/*  in dBM.raw data */
+	bssid->PhyInfo.SignalQuality = precv_frame->attrib.signal_qual;	/* in percentage */
+	bssid->PhyInfo.SignalStrength = precv_frame->attrib.signal_strength;	/* in percentage */
+	bssid->Rssi = precv_frame->attrib.RecvSignalPower;	/*  in dBM.raw data */
 
 #ifdef CONFIG_ANTENNA_DIVERSITY
 	/* rtw_hal_get_hwreg(adapt, HW_VAR_CURRENT_ANTENNA, (u8 *)(&bssid->PhyInfo.Optimum_antenna)); */
@@ -9666,7 +9666,7 @@ Following are the functions to report ev
 *****************************************************************************/
 
 void report_survey_event(struct rtw_adapter *adapt,
-			 union recv_frame *precv_frame)
+			 struct recv_frame_hdr *precv_frame)
 {
 	struct cmd_obj *pcmd_obj;
 	u8 *pevtcmd;
@@ -9675,8 +9675,8 @@ void report_survey_event(struct rtw_adap
 	struct C2HEvent_Header *pc2h_evt_hdr;
 	struct mlme_ext_priv *pmlmeext;
 	struct cmd_priv *pcmdpriv;
-	/* u8 *pframe = precv_frame->u.hdr.rx_data; */
-	/* uint len = precv_frame->u.hdr.len; */
+	/* u8 *pframe = precv_frame->rx_data; */
+	/* uint len = precv_frame->len; */
 
 	if (!adapt)
 		return;
@@ -11385,7 +11385,7 @@ u8 tx_beacon_hdl(struct rtw_adapter *ada
 			while ((rtw_end_of_queue_search
 				(xmitframe_phead, xmitframe_plist)) == false) {
 				pxmitframe =
-				    LIST_CONTAINOR(xmitframe_plist,
+				    container_of(xmitframe_plist,
 						   struct xmit_frame, list);
 
 				xmitframe_plist = get_next(xmitframe_plist);
@@ -11827,7 +11827,7 @@ u8 dc_handle_site_survey(struct rtw_adap
 }
 
 void dc_report_survey_event(struct rtw_adapter *adapt,
-			    union recv_frame *precv_frame)
+			    struct recv_frame_hdr *precv_frame)
 {
 	if (adapt->pbuddy_adapter != NULL &&
 	    adapt->DualMacConcurrent == true) {
--- a/drivers/staging/rtl8192du/core/rtw_p2p.c
+++ b/drivers/staging/rtl8192du/core/rtw_p2p.c
@@ -83,7 +83,7 @@ static u32 go_add_group_info_attr(struct
 
 	/* look up sta asoc_queue */
 	while ((rtw_end_of_queue_search(phead, plist)) == false) {
-		psta = LIST_CONTAINOR(plist, struct sta_info, asoc_list);
+		psta = container_of(plist, struct sta_info, asoc_list);
 
 		plist = get_next(plist);
 
@@ -2250,7 +2250,7 @@ u32 process_p2p_devdisc_req(struct wifid
 
 					/* look up sta asoc_queue */
 					while ((rtw_end_of_queue_search(phead, plist)) == false) {
-						psta = LIST_CONTAINOR(plist, struct sta_info, asoc_list);
+						psta = container_of(plist, struct sta_info, asoc_list);
 
 						plist = get_next(plist);
 
--- a/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
+++ b/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
@@ -426,7 +426,7 @@ void rtw_set_ps_mode(struct rtw_adapter
 				while ((rtw_end_of_queue_search(phead, plist))
 				       == false) {
 					ptdls_sta =
-					    LIST_CONTAINOR(plist,
+					    container_of(plist,
 							   struct sta_info,
 							   hash_list);
 
@@ -487,7 +487,7 @@ void rtw_set_ps_mode(struct rtw_adapter
 				while ((rtw_end_of_queue_search(phead, plist))
 				       == false) {
 					ptdls_sta =
-					    LIST_CONTAINOR(plist,
+					    container_of(plist,
 							   struct sta_info,
 							   hash_list);
 
--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -52,7 +52,7 @@ int _rtw_init_recv_priv(struct recv_priv
 {
 	int i;
 
-	union recv_frame *precvframe;
+	struct recv_frame_hdr *precvframe;
 
 	int res = _SUCCESS;
 
@@ -71,7 +71,7 @@ int _rtw_init_recv_priv(struct recv_priv
 	rtw_os_recv_resource_init(precvpriv, padapter);
 
 	precvpriv->pallocated_frame_buf =
-	    vzalloc(NR_RECVFRAME * sizeof(union recv_frame) +
+	    vzalloc(NR_RECVFRAME * sizeof(struct recv_frame_hdr) +
 			 RXFRAME_ALIGN_SZ);
 
 	if (precvpriv->pallocated_frame_buf == NULL) {
@@ -80,17 +80,17 @@ int _rtw_init_recv_priv(struct recv_priv
 	}
 	precvpriv->precv_frame_buf = (u8 *)N_BYTE_ALIGMENT((SIZE_PTR)(precvpriv->pallocated_frame_buf), RXFRAME_ALIGN_SZ);
 
-	precvframe = (union recv_frame *)precvpriv->precv_frame_buf;
+	precvframe = (struct recv_frame_hdr *)precvpriv->precv_frame_buf;
 
 	for (i = 0; i < NR_RECVFRAME; i++) {
-		INIT_LIST_HEAD(&(precvframe->u.list));
+		INIT_LIST_HEAD(&(precvframe->list));
 
-		rtw_list_insert_tail(&(precvframe->u.list),
+		rtw_list_insert_tail(&(precvframe->list),
 				     &(precvpriv->free_recv_queue.queue));
 
 		res = rtw_os_recv_resource_alloc(padapter, precvframe);
 
-		precvframe->u.hdr.adapter = padapter;
+		precvframe->adapter = padapter;
 		precvframe++;
 	}
 	precvpriv->rx_pending_cnt = 1;
@@ -157,25 +157,25 @@ void _rtw_free_recv_priv(struct recv_pri
 	_func_exit_;
 }
 
-union recv_frame *_rtw_alloc_recvframe(struct __queue *pfree_recv_queue)
+struct recv_frame_hdr *_rtw_alloc_recvframe(struct __queue *pfree_recv_queue)
 {
-	union recv_frame *precvframe;
+	struct recv_frame_hdr *hdr;
 	struct list_head *plist, *phead;
 	struct rtw_adapter *padapter;
 	struct recv_priv *precvpriv;
 	_func_enter_;
 
 	if (_rtw_queue_empty(pfree_recv_queue) == true) {
-		precvframe = NULL;
+		hdr = NULL;
 	} else {
 		phead = get_list_head(pfree_recv_queue);
 
 		plist = get_next(phead);
 
-		precvframe = LIST_CONTAINOR(plist, union recv_frame, u);
+		hdr = container_of(plist, struct recv_frame_hdr, list);
 
-		rtw_list_delete(&precvframe->u.hdr.list);
-		padapter = precvframe->u.hdr.adapter;
+		list_del_init(&hdr->list);
+		padapter = hdr->adapter;
 		if (padapter != NULL) {
 			precvpriv = &padapter->recvpriv;
 			if (pfree_recv_queue == &precvpriv->free_recv_queue)
@@ -185,12 +185,12 @@ union recv_frame *_rtw_alloc_recvframe(s
 
 	_func_exit_;
 
-	return precvframe;
+	return hdr;
 }
 
-union recv_frame *rtw_alloc_recvframe(struct __queue *pfree_recv_queue)
+struct recv_frame_hdr *rtw_alloc_recvframe(struct __queue *pfree_recv_queue)
 {
-	union recv_frame *precvframe;
+	struct recv_frame_hdr *precvframe;
 
 	spin_lock_bh(&pfree_recv_queue->lock);
 
@@ -201,19 +201,19 @@ union recv_frame *rtw_alloc_recvframe(st
 	return precvframe;
 }
 
-void rtw_init_recvframe(union recv_frame *precvframe,
+void rtw_init_recvframe(struct recv_frame_hdr *precvframe,
 			struct recv_priv *precvpriv)
 {
 	/* Perry: This can be removed */
-	INIT_LIST_HEAD(&precvframe->u.hdr.list);
+	INIT_LIST_HEAD(&precvframe->list);
 
-	precvframe->u.hdr.len = 0;
+	precvframe->len = 0;
 }
 
-int rtw_free_recvframe(union recv_frame *precvframe,
+int rtw_free_recvframe(struct recv_frame_hdr *precvframe,
 		       struct __queue *pfree_recv_queue)
 {
-	struct rtw_adapter *padapter = precvframe->u.hdr.adapter;
+	struct rtw_adapter *padapter = precvframe->adapter;
 	struct recv_priv *precvpriv = &padapter->recvpriv;
 
 	_func_enter_;
@@ -223,23 +223,23 @@ int rtw_free_recvframe(union recv_frame
 		padapter = padapter->pbuddy_adapter;	/* get primary_padapter */
 		precvpriv = &padapter->recvpriv;
 		pfree_recv_queue = &precvpriv->free_recv_queue;
-		precvframe->u.hdr.adapter = padapter;
+		precvframe->adapter = padapter;
 	}
 #endif
-	if (precvframe->u.hdr.pkt) {
+	if (precvframe->pkt) {
 #ifdef CONFIG_BSD_RX_USE_MBUF
-		m_freem(precvframe->u.hdr.pkt);
+		m_freem(precvframe->pkt);
 #else /*  CONFIG_BSD_RX_USE_MBUF */
-		dev_kfree_skb_any(precvframe->u.hdr.pkt);	/* free skb by driver */
+		dev_kfree_skb_any(precvframe->pkt);	/* free skb by driver */
 #endif /*  CONFIG_BSD_RX_USE_MBUF */
-		precvframe->u.hdr.pkt = NULL;
+		precvframe->pkt = NULL;
 	}
 
 	spin_lock_bh(&pfree_recv_queue->lock);
 
-	rtw_list_delete(&(precvframe->u.hdr.list));
+	rtw_list_delete(&(precvframe->list));
 
-	rtw_list_insert_tail(&(precvframe->u.hdr.list),
+	rtw_list_insert_tail(&(precvframe->list),
 			     get_list_head(pfree_recv_queue));
 
 	if (padapter != NULL) {
@@ -254,17 +254,17 @@ int rtw_free_recvframe(union recv_frame
 	return _SUCCESS;
 }
 
-int _rtw_enqueue_recvframe(union recv_frame *precvframe, struct __queue *queue)
+int _rtw_enqueue_recvframe(struct recv_frame_hdr *precvframe, struct __queue *queue)
 {
-	struct rtw_adapter *padapter = precvframe->u.hdr.adapter;
+	struct rtw_adapter *padapter = precvframe->adapter;
 	struct recv_priv *precvpriv = &padapter->recvpriv;
 
 	_func_enter_;
 
-	/* INIT_LIST_HEAD(&(precvframe->u.hdr.list)); */
-	rtw_list_delete(&(precvframe->u.hdr.list));
+	/* INIT_LIST_HEAD(&(precvframe->list)); */
+	rtw_list_delete(&(precvframe->list));
 
-	rtw_list_insert_tail(&(precvframe->u.hdr.list), get_list_head(queue));
+	rtw_list_insert_tail(&(precvframe->list), get_list_head(queue));
 
 	if (padapter != NULL) {
 		if (queue == &precvpriv->free_recv_queue)
@@ -276,7 +276,7 @@ int _rtw_enqueue_recvframe(union recv_fr
 	return _SUCCESS;
 }
 
-int rtw_enqueue_recvframe(union recv_frame *precvframe, struct __queue *queue)
+int rtw_enqueue_recvframe(struct recv_frame_hdr *precvframe, struct __queue *queue)
 {
 	int ret;
 
@@ -298,7 +298,7 @@ using spinlock to protect
 void rtw_free_recvframe_queue(struct __queue *pframequeue,
 			      struct __queue *pfree_recv_queue)
 {
-	union recv_frame *precvframe;
+	struct recv_frame_hdr *precvframe;
 	struct list_head *plist, *phead;
 
 	_func_enter_;
@@ -308,7 +308,7 @@ void rtw_free_recvframe_queue(struct __q
 	plist = get_next(phead);
 
 	while (rtw_end_of_queue_search(phead, plist) == false) {
-		precvframe = LIST_CONTAINOR(plist, union recv_frame, u);
+		precvframe = container_of(plist, struct recv_frame_hdr, list);
 
 		plist = get_next(plist);
 
@@ -323,7 +323,7 @@ void rtw_free_recvframe_queue(struct __q
 u32 rtw_free_uc_swdec_pending_queue(struct rtw_adapter *adapter)
 {
 	u32 cnt = 0;
-	union recv_frame *pending_frame;
+	struct recv_frame_hdr *pending_frame;
 	while ((pending_frame =
 		rtw_alloc_recvframe(&adapter->recvpriv.
 				    uc_swdec_pending_queue))) {
@@ -381,7 +381,7 @@ struct recv_buf *rtw_dequeue_recvbuf(str
 
 		plist = get_next(phead);
 
-		precvbuf = LIST_CONTAINOR(plist, struct recv_buf, list);
+		precvbuf = container_of(plist, struct recv_buf, list);
 
 		rtw_list_delete(&precvbuf->list);
 	}
@@ -389,7 +389,7 @@ struct recv_buf *rtw_dequeue_recvbuf(str
 	return precvbuf;
 }
 
-static int recvframe_chkmic(struct rtw_adapter *adapter, union recv_frame *precvframe)
+static int recvframe_chkmic(struct rtw_adapter *adapter, struct recv_frame_hdr *precvframe)
 {
 	int i, res = _SUCCESS;
 	u32 datalen;
@@ -399,7 +399,7 @@ static int recvframe_chkmic(struct rtw_a
 	u8 *mickey;
 	/* u8   *iv,rxdata_key_idx=0; */
 	struct sta_info *stainfo;
-	struct rx_pkt_attrib *prxattrib = &precvframe->u.hdr.attrib;
+	struct rx_pkt_attrib *prxattrib = &precvframe->attrib;
 	struct security_priv *psecuritypriv = &adapter->securitypriv;
 
 	struct mlme_ext_priv *pmlmeext = &adapter->mlmeextpriv;
@@ -421,7 +421,7 @@ static int recvframe_chkmic(struct rtw_a
 		if (stainfo != NULL) {
 			if (IS_MCAST(prxattrib->ra)) {
 				/* mickey=&psecuritypriv->dot118021XGrprxmickey.skey[0]; */
-				/* iv = precvframe->u.hdr.rx_data+prxattrib->hdrlen; */
+				/* iv = precvframe->rx_data+prxattrib->hdrlen; */
 				/* rxdata_key_idx =(((iv[3])>>6)&0x3) ; */
 				mickey =
 				    &psecuritypriv->
@@ -448,8 +448,8 @@ static int recvframe_chkmic(struct rtw_a
 					 ("\n recvframe_chkmic: unicast key\n"));
 			}
 
-			datalen = precvframe->u.hdr.len - prxattrib->hdrlen - prxattrib->iv_len - prxattrib->icv_len - 8;	/* icv_len included the mic code */
-			pframe = precvframe->u.hdr.rx_data;
+			datalen = precvframe->len - prxattrib->hdrlen - prxattrib->iv_len - prxattrib->icv_len - 8;	/* icv_len included the mic code */
+			pframe = precvframe->rx_data;
 			payload =
 			    pframe + prxattrib->hdrlen + prxattrib->iv_len;
 
@@ -493,34 +493,34 @@ static int recvframe_chkmic(struct rtw_a
 					RT_TRACE(_module_rtl871x_recv_c_,
 						 _drv_err_,
 						 ("\n ======demp packet (len=%d)======\n",
-						  precvframe->u.hdr.len));
-					for (i = 0; i < precvframe->u.hdr.len;
+						  precvframe->len));
+					for (i = 0; i < precvframe->len;
 					     i = i + 8) {
 						RT_TRACE
 						    (_module_rtl871x_recv_c_,
 						     _drv_err_,
 						     ("0x%02x:0x%02x:0x%02x:0x%02x:0x%02x:0x%02x:0x%02x:0x%02x",
-						      *(precvframe->u.hdr.
+						      *(precvframe->
 							rx_data + i),
-						      *(precvframe->u.hdr.
+						      *(precvframe->
 							rx_data + i + 1),
-						      *(precvframe->u.hdr.
+						      *(precvframe->
 							rx_data + i + 2),
-						      *(precvframe->u.hdr.
+						      *(precvframe->
 							rx_data + i + 3),
-						      *(precvframe->u.hdr.
+						      *(precvframe->
 							rx_data + i + 4),
-						      *(precvframe->u.hdr.
+						      *(precvframe->
 							rx_data + i + 5),
-						      *(precvframe->u.hdr.
+						      *(precvframe->
 							rx_data + i + 6),
-						      *(precvframe->u.hdr.
+						      *(precvframe->
 							rx_data + i + 7)));
 					}
 					RT_TRACE(_module_rtl871x_recv_c_,
 						 _drv_err_,
 						 ("\n ======demp packet end [len=%d]======\n",
-						  precvframe->u.hdr.len));
+						  precvframe->len));
 					RT_TRACE(_module_rtl871x_recv_c_,
 						 _drv_err_, ("\n hrdlen=%d,\n",
 							     prxattrib->
@@ -581,12 +581,12 @@ exit:
 }
 
 /* decrypt and set the ivlen,icvlen of the recv_frame */
-static union recv_frame *decryptor(struct rtw_adapter *padapter,
-				   union recv_frame *precv_frame)
+static struct recv_frame_hdr *decryptor(struct rtw_adapter *padapter,
+				   struct recv_frame_hdr *precv_frame)
 {
-	struct rx_pkt_attrib *prxattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib *prxattrib = &precv_frame->attrib;
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
-	union recv_frame *return_packet = precv_frame;
+	struct recv_frame_hdr *return_packet = precv_frame;
 	u32 res = _SUCCESS;
 	_func_enter_;
 
@@ -595,7 +595,7 @@ static union recv_frame *decryptor(struc
 		  prxattrib->bdecrypted, prxattrib->encrypt));
 
 	if (prxattrib->encrypt > 0) {
-		u8 *iv = precv_frame->u.hdr.rx_data + prxattrib->hdrlen;
+		u8 *iv = precv_frame->rx_data + prxattrib->hdrlen;
 		prxattrib->key_index = (((iv[3]) >> 6) & 0x3);
 
 		if (prxattrib->key_index > WEP_KEYS) {
@@ -679,25 +679,25 @@ static union recv_frame *decryptor(struc
 }
 
 /* set the security information in the recv_frame */
-static union recv_frame *portctrl(struct rtw_adapter *adapter,
-				  union recv_frame *precv_frame)
+static struct recv_frame_hdr *portctrl(struct rtw_adapter *adapter,
+				  struct recv_frame_hdr *precv_frame)
 {
 	u8 *psta_addr, *ptr;
 	uint auth_alg;
 	struct recv_frame_hdr *pfhdr;
 	struct sta_info *psta;
 	struct sta_priv *pstapriv;
-	union recv_frame *prtnframe;
+	struct recv_frame_hdr *prtnframe;
 	u16 ether_type = 0;
 	u16 eapol_type = 0x888e;	/* for Funia BD's WPA issue */
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 	__be16 be_tmp;
 
 	_func_enter_;
 
 	pstapriv = &adapter->stapriv;
 	ptr = get_recvframe_data(precv_frame);
-	pfhdr = &precv_frame->u.hdr;
+	pfhdr = precv_frame;
 	psta_addr = pfhdr->attrib.ta;
 	psta = rtw_get_stainfo(pstapriv, psta_addr);
 
@@ -739,7 +739,7 @@ static union recv_frame *portctrl(struct
 				 ("########portctrl:psta->ieee8021x_blocked==0\n"));
 			RT_TRACE(_module_rtl871x_recv_c_, _drv_info_,
 				 ("portctrl:precv_frame->hdr.attrib.privacy=%x\n",
-				  precv_frame->u.hdr.attrib.privacy));
+				  precv_frame->attrib.privacy));
 
 			if (pattrib->bdecrypted == 0)
 				RT_TRACE(_module_rtl871x_recv_c_, _drv_info_,
@@ -769,13 +769,13 @@ static union recv_frame *portctrl(struct
 	return prtnframe;
 }
 
-static int recv_decache(union recv_frame *precv_frame, u8 bretry,
+static int recv_decache(struct recv_frame_hdr *precv_frame, u8 bretry,
 			struct stainfo_rxcache *prxcache)
 {
-	int tid = precv_frame->u.hdr.attrib.priority;
+	int tid = precv_frame->attrib.priority;
 
-	u16 seq_ctrl = ((precv_frame->u.hdr.attrib.seq_num & 0xffff) << 4) |
-	    (precv_frame->u.hdr.attrib.frag_num & 0xf);
+	u16 seq_ctrl = ((precv_frame->attrib.seq_num & 0xffff) << 4) |
+	    (precv_frame->attrib.frag_num & 0xf);
 
 	_func_enter_;
 
@@ -805,12 +805,12 @@ static int recv_decache(union recv_frame
 }
 
 static void process_pwrbit_data(struct rtw_adapter *padapter,
-			        union recv_frame *precv_frame)
+			        struct recv_frame_hdr *precv_frame)
 {
 #ifdef CONFIG_AP_MODE
 	unsigned char pwrbit;
-	u8 *ptr = precv_frame->u.hdr.rx_data;
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	u8 *ptr = precv_frame->rx_data;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	struct sta_info *psta = NULL;
 
@@ -831,10 +831,10 @@ static void process_pwrbit_data(struct r
 }
 
 void process_wmmps_data(struct rtw_adapter *padapter,
-			union recv_frame *precv_frame)
+			struct recv_frame_hdr *precv_frame)
 {
 #ifdef CONFIG_AP_MODE
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	struct sta_info *psta = NULL;
 
@@ -897,9 +897,9 @@ void process_wmmps_data(struct rtw_adapt
 }
 
 #ifdef CONFIG_TDLS
-int OnTDLS(struct rtw_adapter *adapter, union recv_frame *precv_frame)
+int OnTDLS(struct rtw_adapter *adapter, struct recv_frame_hdr *precv_frame)
 {
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 	int ret = _SUCCESS;
 	u8 *paction = get_recvframe_data(precv_frame);
 	u8 category_field = 1;
@@ -982,13 +982,13 @@ exit:
 }
 #endif /* CONFIG_TDLS */
 
-static void count_rx_stats(struct rtw_adapter *padapter, union recv_frame *prframe,
+static void count_rx_stats(struct rtw_adapter *padapter, struct recv_frame_hdr *prframe,
 			   struct sta_info *sta)
 {
 	int sz;
 	struct sta_info *psta = NULL;
 	struct stainfo_stats *pstats = NULL;
-	struct rx_pkt_attrib *pattrib = &prframe->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &prframe->attrib;
 	struct recv_priv *precvpriv = &padapter->recvpriv;
 
 	sz = get_recvframe_len(prframe);
@@ -1002,7 +1002,7 @@ static void count_rx_stats(struct rtw_ad
 	if (sta)
 		psta = sta;
 	else
-		psta = prframe->u.hdr.psta;
+		psta = prframe->psta;
 
 	if (psta) {
 		pstats = &psta->sta_stats;
@@ -1013,11 +1013,11 @@ static void count_rx_stats(struct rtw_ad
 }
 
 static int sta2sta_data_frame(struct rtw_adapter *adapter,
-		       union recv_frame *precv_frame, struct sta_info **psta)
+		       struct recv_frame_hdr *precv_frame, struct sta_info **psta)
 {
-	u8 *ptr = precv_frame->u.hdr.rx_data;
+	u8 *ptr = precv_frame->rx_data;
 	int ret = _SUCCESS;
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 	struct sta_priv *pstapriv = &adapter->stapriv;
 	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
 	u8 *mybssid = get_bssid(pmlmepriv);
@@ -1212,10 +1212,10 @@ exit:
 }
 
 static int ap2sta_data_frame(struct rtw_adapter *adapter,
-			     union recv_frame *precv_frame, struct sta_info **psta)
+			     struct recv_frame_hdr *precv_frame, struct sta_info **psta)
 {
-	u8 *ptr = precv_frame->u.hdr.rx_data;
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	u8 *ptr = precv_frame->rx_data;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 	int ret = _SUCCESS;
 	struct sta_priv *pstapriv = &adapter->stapriv;
 	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
@@ -1368,10 +1368,10 @@ exit:
 }
 
 static int sta2ap_data_frame(struct rtw_adapter *adapter,
-			     union recv_frame *precv_frame, struct sta_info **psta)
+			     struct recv_frame_hdr *precv_frame, struct sta_info **psta)
 {
-	u8 *ptr = precv_frame->u.hdr.rx_data;
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	u8 *ptr = precv_frame->rx_data;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 	struct sta_priv *pstapriv = &adapter->stapriv;
 	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
 	unsigned char *mybssid = get_bssid(pmlmepriv);
@@ -1435,13 +1435,13 @@ exit:
 }
 
 static int validate_recv_ctrl_frame(struct rtw_adapter *padapter,
-			     union recv_frame *precv_frame)
+			     struct recv_frame_hdr *precv_frame)
 {
 #ifdef CONFIG_AP_MODE
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 	struct sta_priv *pstapriv = &padapter->stapriv;
-	u8 *pframe = precv_frame->u.hdr.rx_data;
-	/* uint len = precv_frame->u.hdr.len; */
+	u8 *pframe = precv_frame->rx_data;
+	/* uint len = precv_frame->len; */
 
 	/* DBG_8192D("+validate_recv_ctrl_frame\n"); */
 
@@ -1510,7 +1510,7 @@ static int validate_recv_ctrl_frame(stru
 			if ((rtw_end_of_queue_search
 			     (xmitframe_phead, xmitframe_plist)) == false) {
 				pxmitframe =
-				    LIST_CONTAINOR(xmitframe_plist,
+				    container_of(xmitframe_plist,
 						   struct xmit_frame, list);
 
 				xmitframe_plist = get_next(xmitframe_plist);
@@ -1573,10 +1573,10 @@ static int validate_recv_ctrl_frame(stru
 	return _FAIL;
 }
 
-union recv_frame *recvframe_chk_defrag(struct rtw_adapter *padapter,
-				       union recv_frame *precv_frame);
+struct recv_frame_hdr *recvframe_chk_defrag(struct rtw_adapter *padapter,
+				       struct recv_frame_hdr *precv_frame);
 static int validate_recv_mgnt_frame(struct rtw_adapter *padapter,
-			     union recv_frame *precv_frame)
+			     struct recv_frame_hdr *precv_frame)
 {
 	RT_TRACE(_module_rtl871x_recv_c_, _drv_info_,
 		 ("+validate_recv_mgnt_frame\n"));
@@ -1591,18 +1591,18 @@ static int validate_recv_mgnt_frame(stru
 	{
 		/* for rx pkt statistics */
 		struct sta_info *psta =
-		    rtw_get_stainfo(&padapter->stapriv, GetAddr2Ptr(precv_frame->u.hdr.rx_data));
+		    rtw_get_stainfo(&padapter->stapriv, GetAddr2Ptr(precv_frame->rx_data));
 		if (psta) {
 			psta->sta_stats.rx_mgnt_pkts++;
-			if (GetFrameSubType(precv_frame->u.hdr.rx_data) == WIFI_BEACON) {
+			if (GetFrameSubType(precv_frame->rx_data) == WIFI_BEACON) {
 				psta->sta_stats.rx_beacon_pkts++;
-			} else if (GetFrameSubType(precv_frame->u.hdr.rx_data) == WIFI_PROBEREQ) {
+			} else if (GetFrameSubType(precv_frame->rx_data) == WIFI_PROBEREQ) {
 				psta->sta_stats.rx_probereq_pkts++;
-			} else if (GetFrameSubType(precv_frame->u.hdr.rx_data) == WIFI_PROBERSP) {
-				if (_rtw_memcmp(padapter->eeprompriv.mac_addr, GetAddr1Ptr(precv_frame->u.hdr.rx_data), ETH_ALEN) == true)
+			} else if (GetFrameSubType(precv_frame->rx_data) == WIFI_PROBERSP) {
+				if (_rtw_memcmp(padapter->eeprompriv.mac_addr, GetAddr1Ptr(precv_frame->rx_data), ETH_ALEN) == true)
 					psta->sta_stats.rx_probersp_pkts++;
-				else if (is_broadcast_mac_addr(GetAddr1Ptr(precv_frame->u.hdr.rx_data)) ||
-					 is_multicast_mac_addr(GetAddr1Ptr(precv_frame->u.hdr.rx_data)))
+				else if (is_broadcast_mac_addr(GetAddr1Ptr(precv_frame->rx_data)) ||
+					 is_multicast_mac_addr(GetAddr1Ptr(precv_frame->rx_data)))
 					psta->sta_stats.rx_probersp_bm_pkts++;
 				else
 					psta->sta_stats.rx_probersp_uo_pkts++;
@@ -1616,13 +1616,13 @@ static int validate_recv_mgnt_frame(stru
 }
 
 static int validate_recv_data_frame(struct rtw_adapter *adapter,
-			     union recv_frame *precv_frame)
+			     struct recv_frame_hdr *precv_frame)
 {
 	u8 bretry;
 	u8 *psa, *pda, *pbssid;
 	struct sta_info *psta = NULL;
-	u8 *ptr = precv_frame->u.hdr.rx_data;
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	u8 *ptr = precv_frame->rx_data;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 	struct security_priv *psecuritypriv = &adapter->securitypriv;
 	int ret = _SUCCESS;
 #ifdef CONFIG_TDLS
@@ -1692,7 +1692,7 @@ static int validate_recv_data_frame(stru
 
 	/* psta->rssi = prxcmd->rssi; */
 	/* psta->signal_quality= prxcmd->sq; */
-	precv_frame->u.hdr.psta = psta;
+	precv_frame->psta = psta;
 
 	pattrib->amsdu = 0;
 	pattrib->ack_policy = 0;
@@ -1714,7 +1714,7 @@ static int validate_recv_data_frame(stru
 		pattrib->hdrlen += 4;
 	}
 
-	precv_frame->u.hdr.preorder_ctrl =
+	precv_frame->preorder_ctrl =
 	    &psta->recvreorder_ctrl[pattrib->priority];
 
 	/*  decache, drop duplicate recv packets */
@@ -1762,7 +1762,7 @@ exit:
 }
 
 static int validate_recv_frame(struct rtw_adapter *adapter,
-			union recv_frame *precv_frame)
+			struct recv_frame_hdr *precv_frame)
 {
 	/* shall check frame subtype, to / from ds, da, bssid */
 
@@ -1772,9 +1772,9 @@ static int validate_recv_frame(struct rt
 	u8 subtype;
 	int retval = _SUCCESS;
 
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 
-	u8 *ptr = precv_frame->u.hdr.rx_data;
+	u8 *ptr = precv_frame->rx_data;
 	u8 ver = (unsigned char)(*ptr) & 0x3;
 #ifdef CONFIG_FIND_BEST_CHANNEL
 	struct mlme_ext_priv *pmlmeext = &adapter->mlmeextpriv;
@@ -1869,7 +1869,7 @@ exit:
 
 /* remove the wlanhdr and add the eth_hdr */
 
-static int wlanhdr_to_ethhdr(union recv_frame *precvframe)
+static int wlanhdr_to_ethhdr(struct recv_frame_hdr *precvframe)
 {
 	int rmv_len;
 	u16 eth_type, len;
@@ -1879,11 +1879,11 @@ static int wlanhdr_to_ethhdr(union recv_
 	__be16 be_tmp;
 
 	int ret = _SUCCESS;
-	struct rtw_adapter *adapter = precvframe->u.hdr.adapter;
+	struct rtw_adapter *adapter = precvframe->adapter;
 	struct mlme_priv *pmlmepriv = &adapter->mlmepriv;
 
 	u8 *ptr = get_recvframe_data(precvframe);	/*  point to frame_ctrl field */
-	struct rx_pkt_attrib *pattrib = &precvframe->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &precvframe->attrib;
 
 	_func_enter_;
 
@@ -1911,7 +1911,7 @@ static int wlanhdr_to_ethhdr(union recv_
 
 	rmv_len =
 	    pattrib->hdrlen + pattrib->iv_len + (bsnaphdr ? SNAP_SIZE : 0);
-	len = precvframe->u.hdr.len - rmv_len;
+	len = precvframe->len - rmv_len;
 
 	RT_TRACE(_module_rtl871x_recv_c_, _drv_info_,
 		 ("\n===pattrib->hdrlen: %x,  pattrib->iv_len:%x ===\n\n",
@@ -1953,14 +1953,14 @@ static int wlanhdr_to_ethhdr(union recv_
 }
 
 /* perform defrag */
-static union recv_frame *recvframe_defrag(struct rtw_adapter *adapter,
+static struct recv_frame_hdr *recvframe_defrag(struct rtw_adapter *adapter,
 				   struct __queue *defrag_q)
 {
 	struct list_head *plist, *phead;
 	u8 wlanhdr_offset;
 	u8 curfragnum;
 	struct recv_frame_hdr *pfhdr, *pnfhdr;
-	union recv_frame *prframe, *pnextrframe;
+	struct recv_frame_hdr *prframe, *pnextrframe;
 	struct __queue *pfree_recv_queue;
 
 	_func_enter_;
@@ -1970,9 +1970,9 @@ static union recv_frame *recvframe_defra
 
 	phead = get_list_head(defrag_q);
 	plist = get_next(phead);
-	prframe = LIST_CONTAINOR(plist, union recv_frame, u);
-	pfhdr = &prframe->u.hdr;
-	rtw_list_delete(&(prframe->u.list));
+	prframe = container_of(plist, struct recv_frame_hdr, list);
+	pfhdr = prframe;
+	rtw_list_delete(&(prframe->list));
 
 	if (curfragnum != pfhdr->attrib.frag_num) {
 		/* the first fragment number must be 0 */
@@ -1990,8 +1990,8 @@ static union recv_frame *recvframe_defra
 	plist = get_next(plist);
 
 	while (rtw_end_of_queue_search(phead, plist) == false) {
-		pnextrframe = LIST_CONTAINOR(plist, union recv_frame, u);
-		pnfhdr = &pnextrframe->u.hdr;
+		pnextrframe = container_of(plist, struct recv_frame_hdr, list);
+		pnfhdr = pnextrframe;
 
 		/* check the fragment sequence  (2nd ~n fragment frame) */
 
@@ -2037,8 +2037,8 @@ static union recv_frame *recvframe_defra
 }
 
 /* check if need to defrag, if needed queue the frame to defrag_q */
-union recv_frame *recvframe_chk_defrag(struct rtw_adapter *padapter,
-				       union recv_frame *precv_frame)
+struct recv_frame_hdr *recvframe_chk_defrag(struct rtw_adapter *padapter,
+				       struct recv_frame_hdr *precv_frame)
 {
 	u8 ismfrag;
 	u8 fragnum;
@@ -2047,14 +2047,14 @@ union recv_frame *recvframe_chk_defrag(s
 	struct sta_info *psta;
 	struct sta_priv *pstapriv;
 	struct list_head *phead;
-	union recv_frame *prtnframe = NULL;
+	struct recv_frame_hdr *prtnframe = NULL;
 	struct __queue *pfree_recv_queue, *pdefrag_q;
 
 	_func_enter_;
 
 	pstapriv = &padapter->stapriv;
 
-	pfhdr = &precv_frame->u.hdr;
+	pfhdr = precv_frame;
 
 	pfree_recv_queue = &padapter->recvpriv.free_recv_queue;
 
@@ -2140,7 +2140,7 @@ union recv_frame *recvframe_chk_defrag(s
 				  ismfrag, fragnum));
 		}
 	}
-	if ((prtnframe != NULL) && (prtnframe->u.hdr.attrib.privacy)) {
+	if ((prtnframe != NULL) && (prtnframe->attrib.privacy)) {
 		/* after defrag we must check tkip mic code */
 		if (recvframe_chkmic(padapter, prtnframe) == _FAIL) {
 			RT_TRACE(_module_rtl871x_recv_c_, _drv_err_,
@@ -2155,7 +2155,7 @@ union recv_frame *recvframe_chk_defrag(s
 	return prtnframe;
 }
 
-static int amsdu_to_msdu(struct rtw_adapter *padapter, union recv_frame *prframe)
+static int amsdu_to_msdu(struct rtw_adapter *padapter, struct recv_frame_hdr *prframe)
 {
 	int a_len, padding_len;
 	u16 eth_type, nSubframe_Length;
@@ -2169,16 +2169,16 @@ static int amsdu_to_msdu(struct rtw_adap
 	int ret = _SUCCESS;
 	nr_subframes = 0;
 
-	pattrib = &prframe->u.hdr.attrib;
+	pattrib = &prframe->attrib;
 
-	recvframe_pull(prframe, prframe->u.hdr.attrib.hdrlen);
+	recvframe_pull(prframe, prframe->attrib.hdrlen);
 
-	if (prframe->u.hdr.attrib.iv_len > 0)
-		recvframe_pull(prframe, prframe->u.hdr.attrib.iv_len);
+	if (prframe->attrib.iv_len > 0)
+		recvframe_pull(prframe, prframe->attrib.iv_len);
 
-	a_len = prframe->u.hdr.len;
+	a_len = prframe->len;
 
-	pdata = prframe->u.hdr.rx_data;
+	pdata = prframe->rx_data;
 
 	while (a_len > ETH_HLEN) {
 		/* Offset 12 denote 2 mac address */
@@ -2208,7 +2208,7 @@ static int amsdu_to_msdu(struct rtw_adap
 		} else
 #endif /*  CONFIG_SKB_COPY */
 		{
-			sub_skb = skb_clone(prframe->u.hdr.pkt, GFP_ATOMIC);
+			sub_skb = skb_clone(prframe->pkt, GFP_ATOMIC);
 			if (sub_skb) {
 				sub_skb->data = pdata;
 				sub_skb->len = nSubframe_Length;
@@ -2317,7 +2317,7 @@ static int amsdu_to_msdu(struct rtw_adap
 
 exit:
 
-	prframe->u.hdr.len = 0;
+	prframe->len = 0;
 	rtw_free_recvframe(prframe, pfree_recv_queue);	/* free this recv_frame */
 
 	return ret;
@@ -2379,21 +2379,21 @@ static int check_indicate_seq(struct rec
 }
 
 static int enqueue_reorder_recvframe(struct recv_reorder_ctrl *preorder_ctrl,
-				     union recv_frame *prframe)
+				     struct recv_frame_hdr *prframe)
 {
-	struct rx_pkt_attrib *pattrib = &prframe->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &prframe->attrib;
 	struct __queue *ppending_recvframe_queue =
 	    &preorder_ctrl->pending_recvframe_queue;
 	struct list_head *phead, *plist;
-	union recv_frame *pnextrframe;
+	struct recv_frame_hdr *pnextrframe;
 	struct rx_pkt_attrib *pnextattrib;
 
 	phead = get_list_head(ppending_recvframe_queue);
 	plist = get_next(phead);
 
 	while (rtw_end_of_queue_search(phead, plist) == false) {
-		pnextrframe = LIST_CONTAINOR(plist, union recv_frame, u);
-		pnextattrib = &pnextrframe->u.hdr.attrib;
+		pnextrframe = container_of(plist, struct recv_frame_hdr, list);
+		pnextattrib = &pnextrframe->attrib;
 
 		if (SN_LESS(pnextattrib->seq_num, pattrib->seq_num))
 			plist = get_next(plist);
@@ -2402,8 +2402,8 @@ static int enqueue_reorder_recvframe(str
 		else
 			break;
 	}
-	rtw_list_delete(&(prframe->u.hdr.list));
-	rtw_list_insert_tail(&(prframe->u.hdr.list), plist);
+	rtw_list_delete(&(prframe->list));
+	rtw_list_insert_tail(&(prframe->list), plist);
 	return true;
 }
 
@@ -2412,7 +2412,7 @@ static int recv_indicatepkts_in_order(st
 			       int bforced)
 {
 	struct list_head *phead, *plist;
-	union recv_frame *prframe;
+	struct recv_frame_hdr *prframe;
 	struct rx_pkt_attrib *pattrib;
 	int bPktInBuf = false;
 	struct recv_priv *precvpriv = &padapter->recvpriv;
@@ -2430,8 +2430,8 @@ static int recv_indicatepkts_in_order(st
 			return true;
 		}
 
-		prframe = LIST_CONTAINOR(plist, union recv_frame, u);
-		pattrib = &prframe->u.hdr.attrib;
+		prframe = container_of(plist, struct recv_frame_hdr, list);
+		pattrib = &prframe->attrib;
 		preorder_ctrl->indicate_seq = pattrib->seq_num;
 #ifdef DBG_RX_SEQ
 		DBG_8192D("DBG_RX_SEQ %s:%d IndicateSeq: %d, NewSeq: %d\n",
@@ -2443,8 +2443,8 @@ static int recv_indicatepkts_in_order(st
 	/*  Prepare indication list and indication. */
 	/*  Check if there is any packet need indicate. */
 	while (!rtw_is_list_empty(phead)) {
-		prframe = LIST_CONTAINOR(plist, union recv_frame, u);
-		pattrib = &prframe->u.hdr.attrib;
+		prframe = container_of(plist, struct recv_frame_hdr, list);
+		pattrib = &prframe->attrib;
 
 		if (!SN_LESS(preorder_ctrl->indicate_seq, pattrib->seq_num)) {
 			RT_TRACE(_module_rtl871x_recv_c_, _drv_notice_,
@@ -2453,7 +2453,7 @@ static int recv_indicatepkts_in_order(st
 				  pattrib->amsdu));
 
 			plist = get_next(plist);
-			rtw_list_delete(&(prframe->u.hdr.list));
+			rtw_list_delete(&(prframe->list));
 
 			if (SN_EQUAL
 			    (preorder_ctrl->indicate_seq, pattrib->seq_num)) {
@@ -2498,11 +2498,11 @@ static int recv_indicatepkts_in_order(st
 }
 
 static int recv_indicatepkt_reorder(struct rtw_adapter *padapter,
-				    union recv_frame *prframe)
+				    struct recv_frame_hdr *prframe)
 {
 	int retval = _SUCCESS;
-	struct rx_pkt_attrib *pattrib = &prframe->u.hdr.attrib;
-	struct recv_reorder_ctrl *preorder_ctrl = prframe->u.hdr.preorder_ctrl;
+	struct rx_pkt_attrib *pattrib = &prframe->attrib;
+	struct recv_reorder_ctrl *preorder_ctrl = prframe->preorder_ctrl;
 	struct __queue *ppending_recvframe_queue =
 	    &preorder_ctrl->pending_recvframe_queue;
 
@@ -2645,14 +2645,14 @@ void rtw_reordering_ctrl_timeout_handler
 }
 
 static int process_recv_indicatepkts(struct rtw_adapter *padapter,
-				     union recv_frame *prframe)
+				     struct recv_frame_hdr *prframe)
 {
 	int retval = _SUCCESS;
 	/* struct recv_priv *precvpriv = &padapter->recvpriv; */
-	/* struct rx_pkt_attrib *pattrib = &prframe->u.hdr.attrib; */
+	/* struct rx_pkt_attrib *pattrib = &prframe->attrib; */
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 #ifdef CONFIG_TDLS
-	struct sta_info *psta = prframe->u.hdr.psta;
+	struct sta_info *psta = prframe->psta;
 #endif /* CONFIG_TDLS */
 
 #ifdef CONFIG_80211N_HT
@@ -2718,10 +2718,10 @@ static int process_recv_indicatepkts(str
 	return retval;
 }
 
-static int recv_func_prehandle(struct rtw_adapter *padapter, union recv_frame *rframe)
+static int recv_func_prehandle(struct rtw_adapter *padapter, struct recv_frame_hdr *rframe)
 {
 	int ret = _SUCCESS;
-	struct rx_pkt_attrib *pattrib = &rframe->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &rframe->attrib;
 	struct recv_priv *precvpriv = &padapter->recvpriv;
 	struct __queue *pfree_recv_queue = &padapter->recvpriv.free_recv_queue;
 
@@ -2739,11 +2739,11 @@ exit:
 }
 
 static int recv_func_posthandle(struct rtw_adapter *padapter,
-			 union recv_frame *prframe)
+			 struct recv_frame_hdr *prframe)
 {
 	int ret = _SUCCESS;
-	union recv_frame *orig_prframe = prframe;
-	struct rx_pkt_attrib *pattrib = &prframe->u.hdr.attrib;
+	struct recv_frame_hdr *orig_prframe = prframe;
+	struct rx_pkt_attrib *pattrib = &prframe->attrib;
 	struct recv_priv *precvpriv = &padapter->recvpriv;
 	struct __queue *pfree_recv_queue = &padapter->recvpriv.free_recv_queue;
 
@@ -2899,10 +2899,10 @@ _recv_data_drop:
 	return ret;
 }
 
-static int recv_func(struct rtw_adapter *padapter, union recv_frame *rframe)
+static int recv_func(struct rtw_adapter *padapter, struct recv_frame_hdr *rframe)
 {
 	int ret;
-	struct rx_pkt_attrib *prxattrib = &rframe->u.hdr.attrib;
+	struct rx_pkt_attrib *prxattrib = &rframe->attrib;
 	struct recv_priv *recvpriv = &padapter->recvpriv;
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 	struct mlme_priv *mlmepriv = &padapter->mlmepriv;
@@ -2910,7 +2910,7 @@ static int recv_func(struct rtw_adapter
 	/* check if need to handle uc_swdec_pending_queue */
 	if (check_fwstate(mlmepriv, WIFI_STATION_STATE) &&
 	    psecuritypriv->busetkipkey) {
-		union recv_frame *pending_frame;
+		struct recv_frame_hdr *pending_frame;
 
 		while ((pending_frame =
 			rtw_alloc_recvframe(&padapter->recvpriv.
@@ -2949,7 +2949,7 @@ exit:
 	return ret;
 }
 
-s32 rtw_recv_entry(union recv_frame *precvframe)
+s32 rtw_recv_entry(struct recv_frame_hdr *precvframe)
 {
 	struct rtw_adapter *padapter;
 	struct recv_priv *precvpriv;
@@ -2957,7 +2957,7 @@ s32 rtw_recv_entry(union recv_frame *pre
 
 	_func_enter_;
 
-	padapter = precvframe->u.hdr.adapter;
+	padapter = precvframe->adapter;
 
 	precvpriv = &padapter->recvpriv;
 
--- a/drivers/staging/rtl8192du/core/rtw_security.c
+++ b/drivers/staging/rtl8192du/core/rtw_security.c
@@ -237,13 +237,13 @@ void rtw_wep_decrypt(struct rtw_adapter
 	u8 *pframe, *payload, *iv, wepkey[16];
 	u8 keyindex;
 	struct rx_pkt_attrib *prxattrib =
-	    &(((union recv_frame *)precvframe)->u.hdr.attrib);
+	    &(((struct recv_frame_hdr *)precvframe)->attrib);
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 
 	_func_enter_;
 
 	pframe =
-	    (unsigned char *)((union recv_frame *)precvframe)->u.hdr.rx_data;
+	    (unsigned char *)((struct recv_frame_hdr *)precvframe)->rx_data;
 
 	/* start to decrypt recvframe */
 	if ((prxattrib->encrypt == _WEP40_) || (prxattrib->encrypt == _WEP104_)) {
@@ -257,7 +257,7 @@ void rtw_wep_decrypt(struct rtw_adapter
 		       &psecuritypriv->dot11DefKey[keyindex].skey[0],
 		       keylength);
 		length =
-		    ((union recv_frame *)precvframe)->u.hdr.len -
+		    ((struct recv_frame_hdr *)precvframe)->len -
 		    prxattrib->hdrlen - prxattrib->iv_len;
 
 		payload = pframe + prxattrib->iv_len + prxattrib->hdrlen;
@@ -750,13 +750,13 @@ u32 rtw_tkip_decrypt(struct rtw_adapter
 	union pn48 dot11txpn;
 	struct sta_info *stainfo;
 	struct rx_pkt_attrib *prxattrib =
-	    &((union recv_frame *)precvframe)->u.hdr.attrib;
+	    &((struct recv_frame_hdr *)precvframe)->attrib;
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 	u32 res = _SUCCESS;
 
 	_func_enter_;
 	pframe =
-	    (unsigned char *)((union recv_frame *)precvframe)->u.hdr.rx_data;
+	    (unsigned char *)((struct recv_frame_hdr *)precvframe)->rx_data;
 
 	/* 4 start to decrypt recvframe */
 	if (prxattrib->encrypt == _TKIP_) {
@@ -785,7 +785,7 @@ u32 rtw_tkip_decrypt(struct rtw_adapter
 			payload =
 			    pframe + prxattrib->iv_len + prxattrib->hdrlen;
 			length =
-			    ((union recv_frame *)precvframe)->u.hdr.len -
+			    ((struct recv_frame_hdr *)precvframe)->len -
 			    prxattrib->hdrlen - prxattrib->iv_len;
 
 			GET_TKIP_PN(iv, dot11txpn);
@@ -1699,12 +1699,12 @@ u32 rtw_aes_decrypt(struct rtw_adapter *
 	u8 *pframe, *prwskey;	/*  *payload,*iv */
 	struct sta_info *stainfo;
 	struct rx_pkt_attrib *prxattrib =
-	    &((union recv_frame *)precvframe)->u.hdr.attrib;
+	    &((struct recv_frame_hdr *)precvframe)->attrib;
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 	u32 res = _SUCCESS;
 	_func_enter_;
 	pframe =
-	    (unsigned char *)((union recv_frame *)precvframe)->u.hdr.rx_data;
+	    (unsigned char *)((struct recv_frame_hdr *)precvframe)->rx_data;
 	/* 4 start to encrypt each fragment */
 	if ((prxattrib->encrypt == _AES_)) {
 		stainfo =
@@ -1741,7 +1741,7 @@ u32 rtw_aes_decrypt(struct rtw_adapter *
 			}
 
 			length =
-			    ((union recv_frame *)precvframe)->u.hdr.len -
+			    ((struct recv_frame_hdr *)precvframe)->len -
 			    prxattrib->hdrlen - prxattrib->iv_len;
 
 			res =
--- a/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
+++ b/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
@@ -208,7 +208,7 @@ _func_enter_;
 	plist = get_next(phead);
 
 	while ((rtw_end_of_queue_search(phead, plist)) == false) {
-		psta = LIST_CONTAINOR(plist, struct sta_info, list);
+		psta = container_of(plist, struct sta_info, list);
 		plist = get_next(plist);
 
 		rtw_mfree_stainfo(psta);
@@ -257,7 +257,7 @@ _func_enter_;
 
 			while ((rtw_end_of_queue_search(phead, plist)) == false) {
 				int i;
-				psta = LIST_CONTAINOR(plist, struct sta_info, hash_list);
+				psta = container_of(plist, struct sta_info, hash_list);
 				plist = get_next(plist);
 
 				for (i = 0; i < 16; i++) {
@@ -299,7 +299,7 @@ _func_enter_;
 		spin_unlock_bh(&(pfree_sta_queue->lock));
 		psta = NULL;
 	} else {
-		psta = LIST_CONTAINOR(get_next(&pfree_sta_queue->queue),
+		psta = container_of(get_next(&pfree_sta_queue->queue),
 				      struct sta_info, list);
 
 		rtw_list_delete(&(psta->list));
@@ -463,7 +463,7 @@ _func_enter_;
 	/* for A-MPDU Rx reordering buffer control, cancel reorder_ctrl_timer */
 	for (i = 0; i < 16; i++) {
 		struct list_head *phead, *plist;
-		union recv_frame *prframe;
+		struct recv_frame_hdr *prframe;
 		struct __queue *ppending_recvframe_queue;
 		struct __queue *free_recv_q = &padapter->recvpriv.free_recv_queue;
 
@@ -479,11 +479,11 @@ _func_enter_;
 		plist = get_next(phead);
 
 		while (!rtw_is_list_empty(phead)) {
-			prframe = LIST_CONTAINOR(plist, union recv_frame, u);
+			prframe = container_of(plist, struct recv_frame_hdr, list);
 
 			plist = get_next(plist);
 
-			rtw_list_delete(&(prframe->u.hdr.list));
+			rtw_list_delete(&(prframe->list));
 
 			rtw_free_recvframe(prframe, free_recv_q);
 		}
@@ -561,7 +561,7 @@ _func_enter_;
 		plist = get_next(phead);
 
 		while ((rtw_end_of_queue_search(phead, plist)) == false) {
-			psta = LIST_CONTAINOR(plist, struct sta_info,
+			psta = container_of(plist, struct sta_info,
 					      hash_list);
 
 			plist = get_next(plist);
@@ -606,7 +606,7 @@ _func_enter_;
 
 
 	while ((rtw_end_of_queue_search(phead, plist)) == false) {
-		psta = LIST_CONTAINOR(plist, struct sta_info, hash_list);
+		psta = container_of(plist, struct sta_info, hash_list);
 
 		if (_rtw_memcmp(psta->hwaddr, addr, ETH_ALEN) == true) {
 			/*  if found the matched address */
@@ -676,7 +676,7 @@ u8 rtw_access_ctrl(struct rtw_adapter *p
 	phead = get_list_head(pacl_node_q);
 	plist = get_next(phead);
 	while ((rtw_end_of_queue_search(phead, plist)) == false) {
-		paclnode = LIST_CONTAINOR(plist, struct rtw_wlan_acl_node,
+		paclnode = container_of(plist, struct rtw_wlan_acl_node,
 					  list);
 		plist = get_next(plist);
 
--- a/drivers/staging/rtl8192du/core/rtw_tdls.c
+++ b/drivers/staging/rtl8192du/core/rtw_tdls.c
@@ -444,13 +444,13 @@ exit:
 	return;
 }
 
-void issue_tunneled_probe_rsp(_adapter *padapter, union recv_frame *precv_frame)
+void issue_tunneled_probe_rsp(_adapter *padapter, struct recv_frame_hdr *precv_frame)
 {
 	struct xmit_frame			*pmgntframe;
 	struct pkt_attrib			*pattrib;
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct xmit_priv			*pxmitpriv = &(padapter->xmitpriv);
-	struct rx_pkt_attrib	*rx_pkt_pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib	*rx_pkt_pattrib = &precv_frame->attrib;
 
 	DBG_871X("[%s]\n", __func__);
 
@@ -665,14 +665,14 @@ exit:
 	return;
 }
 
-void issue_tdls_setup_rsp(_adapter *padapter, union recv_frame *precv_frame)
+void issue_tdls_setup_rsp(_adapter *padapter, struct recv_frame_hdr *precv_frame)
 {
 	struct xmit_frame			*pmgntframe;
 	struct pkt_attrib			*pattrib;
 	struct xmit_priv			*pxmitpriv = &(padapter->xmitpriv);
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	struct rx_pkt_attrib	*rx_pkt_pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib	*rx_pkt_pattrib = &precv_frame->attrib;
 
 	pmgntframe = alloc_mgtxmitframe(pxmitpriv);
 	if (pmgntframe == NULL)
@@ -705,7 +705,7 @@ exit:
 	return;
 }
 
-void issue_tdls_setup_cfm(_adapter *padapter, union recv_frame *precv_frame)
+void issue_tdls_setup_cfm(_adapter *padapter, struct recv_frame_hdr *precv_frame)
 {
 	struct tdls_info *ptdlsinfo = &padapter->tdlsinfo;
 	struct xmit_frame			*pmgntframe;
@@ -713,7 +713,7 @@ void issue_tdls_setup_cfm(_adapter *pada
 	struct xmit_priv			*pxmitpriv = &(padapter->xmitpriv);
 	struct sta_info		*ptdls_sta = NULL;
 
-	struct rx_pkt_attrib	*rx_pkt_pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib	*rx_pkt_pattrib = &precv_frame->attrib;
 
 	pmgntframe = alloc_mgtxmitframe(pxmitpriv);
 	if (pmgntframe == NULL)
@@ -748,7 +748,7 @@ exit:
 }
 
 /* TDLS Discovery Response frame is a management action frame */
-void issue_tdls_dis_rsp(_adapter *padapter, union recv_frame *precv_frame, u8 dialog)
+void issue_tdls_dis_rsp(_adapter *padapter, struct recv_frame_hdr *precv_frame, u8 dialog)
 {
 	struct xmit_frame		*pmgntframe;
 	struct pkt_attrib		*pattrib;
@@ -758,7 +758,7 @@ void issue_tdls_dis_rsp(_adapter *padapt
 	struct xmit_priv		*pxmitpriv = &(padapter->xmitpriv);
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 
-	struct rx_pkt_attrib	*rx_pkt_pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib	*rx_pkt_pattrib = &precv_frame->attrib;
 
 	pmgntframe = alloc_mgtxmitframe(pxmitpriv);
 	if (pmgntframe == NULL)
@@ -928,12 +928,12 @@ exit:
 	return;
 }
 
-int On_TDLS_Dis_Rsp(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Dis_Rsp(_adapter *adapter, struct recv_frame_hdr *precv_frame)
 {
 	struct sta_info *ptdls_sta = NULL, *psta = rtw_get_stainfo(&(adapter->stapriv), get_bssid(&(adapter->mlmepriv)));
 	struct recv_priv *precvpriv = &(adapter->recvpriv);
-	u8 *ptr = precv_frame->u.hdr.rx_data, *psa;
-	struct rx_pkt_attrib *pattrib = &(precv_frame->u.hdr.attrib);
+	u8 *ptr = precv_frame->rx_data, *psa;
+	struct rx_pkt_attrib *pattrib = &(precv_frame->attrib);
 	struct tdls_info *ptdlsinfo = &(adapter->tdlsinfo);
 	u8 empty_addr[ETH_ALEN] = { 0x00 };
 	int UndecoratedSmoothedPWDB;
@@ -988,16 +988,16 @@ int On_TDLS_Dis_Rsp(_adapter *adapter, u
 	return _SUCCESS;
 }
 
-int On_TDLS_Setup_Req(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Setup_Req(_adapter *adapter, struct recv_frame_hdr *precv_frame)
 {
 	struct tdls_info *ptdlsinfo = &adapter->tdlsinfo;
 	u8 *psa, *pmyid;
 	struct sta_info *ptdls_sta = NULL;
 	struct sta_priv *pstapriv = &adapter->stapriv;
-	u8 *ptr = precv_frame->u.hdr.rx_data;
+	u8 *ptr = precv_frame->rx_data;
 	struct mlme_priv *pmlmepriv = &(adapter->mlmepriv);
 	struct security_priv *psecuritypriv = &adapter->securitypriv;
-	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->attrib;
 	u8 *prsnie, *ppairwise_cipher;
 	u8 i, k, pairwise_count;
 	u8 ccmp_have = 0, rsnie_have = 0;
@@ -1015,7 +1015,7 @@ int On_TDLS_Setup_Req(_adapter *adapter,
 
 	pmyid = myid(&(adapter->eeprompriv));
 	ptr += prx_pkt_attrib->hdrlen + prx_pkt_attrib->iv_len+LLC_HEADER_SIZE+TYPE_LENGTH_FIELD_SIZE+1;
-	parsing_length = ((union recv_frame *)precv_frame)->u.hdr.len
+	parsing_length = ((struct recv_frame_hdr *)precv_frame)->len
 			-prx_pkt_attrib->hdrlen
 			-prx_pkt_attrib->iv_len
 			-prx_pkt_attrib->icv_len
@@ -1184,13 +1184,13 @@ exit:
 	return _FAIL;
 }
 
-int On_TDLS_Setup_Rsp(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Setup_Rsp(_adapter *adapter, struct recv_frame_hdr *precv_frame)
 {
 	struct tdls_info *ptdlsinfo = &adapter->tdlsinfo;
 	struct sta_info *ptdls_sta = NULL;
 	struct sta_priv *pstapriv = &adapter->stapriv;
-	u8 *ptr = precv_frame->u.hdr.rx_data;
-	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
+	u8 *ptr = precv_frame->rx_data;
+	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->attrib;
 	u8 *psa;
 	u16 stat_code;
 	int parsing_length;	/* frame body length, without icv_len */
@@ -1209,7 +1209,7 @@ int On_TDLS_Setup_Rsp(_adapter *adapter,
 		return _FAIL;
 
 	ptr += prx_pkt_attrib->hdrlen + prx_pkt_attrib->iv_len+LLC_HEADER_SIZE+TYPE_LENGTH_FIELD_SIZE+1;
-	parsing_length = ((union recv_frame *)precv_frame)->u.hdr.len
+	parsing_length = ((struct recv_frame_hdr *)precv_frame)->len
 			-prx_pkt_attrib->hdrlen
 			-prx_pkt_attrib->iv_len
 			-prx_pkt_attrib->icv_len
@@ -1337,13 +1337,13 @@ int On_TDLS_Setup_Rsp(_adapter *adapter,
 	return _FAIL;
 }
 
-int On_TDLS_Setup_Cfm(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Setup_Cfm(_adapter *adapter, struct recv_frame_hdr *precv_frame)
 {
 	struct tdls_info *ptdlsinfo = &adapter->tdlsinfo;
 	struct sta_info *ptdls_sta = NULL;
 	struct sta_priv *pstapriv = &adapter->stapriv;
-	u8 *ptr = precv_frame->u.hdr.rx_data;
-	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
+	u8 *ptr = precv_frame->rx_data;
+	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->attrib;
 	u8 *psa;
 	u16 stat_code;
 	int parsing_length;
@@ -1356,7 +1356,7 @@ int On_TDLS_Setup_Cfm(_adapter *adapter,
 	ptdls_sta = rtw_get_stainfo(pstapriv, psa);
 
 	ptr += prx_pkt_attrib->hdrlen + prx_pkt_attrib->iv_len+LLC_HEADER_SIZE+TYPE_LENGTH_FIELD_SIZE+1;
-	parsing_length = ((union recv_frame *)precv_frame)->u.hdr.len
+	parsing_length = ((struct recv_frame_hdr *)precv_frame)->len
 			-prx_pkt_attrib->hdrlen
 			-prx_pkt_attrib->iv_len
 			-prx_pkt_attrib->icv_len
@@ -1424,12 +1424,12 @@ int On_TDLS_Setup_Cfm(_adapter *adapter,
 	return _FAIL;
 }
 
-int On_TDLS_Dis_Req(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Dis_Req(_adapter *adapter, struct recv_frame_hdr *precv_frame)
 {
-	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->attrib;
 	struct sta_priv *pstapriv = &adapter->stapriv;
 	struct sta_info *psta_ap;
-	u8 *ptr = precv_frame->u.hdr.rx_data;
+	u8 *ptr = precv_frame->rx_data;
 	int parsing_length;	/* frame body length, without icv_len */
 	PNDIS_802_11_VARIABLE_IEs	pIE;
 	u8 FIXED_IE = 3, *dst, *pdialog = NULL;
@@ -1438,7 +1438,7 @@ int On_TDLS_Dis_Req(_adapter *adapter, u
 	ptr += prx_pkt_attrib->hdrlen + prx_pkt_attrib->iv_len + LLC_HEADER_SIZE+TYPE_LENGTH_FIELD_SIZE + 1;
 	pdialog = ptr+2;
 
-	parsing_length = ((union recv_frame *)precv_frame)->u.hdr.len
+	parsing_length = ((struct recv_frame_hdr *)precv_frame)->len
 			-prx_pkt_attrib->hdrlen
 			-prx_pkt_attrib->iv_len
 			-prx_pkt_attrib->icv_len
@@ -1475,11 +1475,11 @@ exit:
 	return _FAIL;
 }
 
-int On_TDLS_Teardown(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Teardown(_adapter *adapter, struct recv_frame_hdr *precv_frame)
 {
 	u8 *psa;
-	u8 *ptr = precv_frame->u.hdr.rx_data;
-	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
+	u8 *ptr = precv_frame->rx_data;
+	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->attrib;
 	struct mlme_ext_priv	*pmlmeext = &(adapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct sta_priv		*pstapriv = &adapter->stapriv;
@@ -1513,11 +1513,11 @@ u8 TDLS_check_ch_state(uint state)
 }
 
 /* we process buffered data for 1. U-APSD, 2. ch. switch, 3. U-APSD + ch. switch here */
-int On_TDLS_Peer_Traffic_Rsp(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Peer_Traffic_Rsp(_adapter *adapter, struct recv_frame_hdr *precv_frame)
 {
 	struct tdls_info *ptdlsinfo = &adapter->tdlsinfo;
 	struct mlme_ext_priv *pmlmeext = &adapter->mlmeextpriv;
-	struct rx_pkt_attrib	*pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib	*pattrib = &precv_frame->attrib;
 	struct sta_priv *pstapriv = &adapter->stapriv;
 	/* get peer sta infomation */
 	struct sta_info *ptdls_sta = rtw_get_stainfo(pstapriv, pattrib->src);
@@ -1555,7 +1555,7 @@ int On_TDLS_Peer_Traffic_Rsp(_adapter *a
 
 			/* transmit buffered frames */
 			while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == false) {
-				pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+				pxmitframe = container_of(xmitframe_plist, struct xmit_frame, list);
 				xmitframe_plist = get_next(xmitframe_plist);
 				rtw_list_delete(&pxmitframe->list);
 
@@ -1595,12 +1595,12 @@ int On_TDLS_Peer_Traffic_Rsp(_adapter *a
 	return _FAIL;
 }
 
-int On_TDLS_Ch_Switch_Req(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Ch_Switch_Req(_adapter *adapter, struct recv_frame_hdr *precv_frame)
 {
 	struct sta_info *ptdls_sta = NULL;
 	struct sta_priv *pstapriv = &adapter->stapriv;
-	u8 *ptr = precv_frame->u.hdr.rx_data;
-	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
+	u8 *ptr = precv_frame->rx_data;
+	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->attrib;
 	u8 *psa;
 	int parsing_length;
 	PNDIS_802_11_VARIABLE_IEs	pIE;
@@ -1612,7 +1612,7 @@ int On_TDLS_Ch_Switch_Req(_adapter *adap
 	ptdls_sta = rtw_get_stainfo(pstapriv, psa);
 
 	ptr += prx_pkt_attrib->hdrlen + prx_pkt_attrib->iv_len+LLC_HEADER_SIZE+TYPE_LENGTH_FIELD_SIZE+1;
-	parsing_length = ((union recv_frame *)precv_frame)->u.hdr.len
+	parsing_length = ((struct recv_frame_hdr *)precv_frame)->len
 			-prx_pkt_attrib->hdrlen
 			-prx_pkt_attrib->iv_len
 			-prx_pkt_attrib->icv_len
@@ -1664,12 +1664,12 @@ int On_TDLS_Ch_Switch_Req(_adapter *adap
 	return _FAIL;
 }
 
-int On_TDLS_Ch_Switch_Rsp(_adapter *adapter, union recv_frame *precv_frame)
+int On_TDLS_Ch_Switch_Rsp(_adapter *adapter, struct recv_frame_hdr *precv_frame)
 {
 	struct sta_info *ptdls_sta = NULL;
 	struct sta_priv *pstapriv = &adapter->stapriv;
-	u8 *ptr = precv_frame->u.hdr.rx_data;
-	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->u.hdr.attrib;
+	u8 *ptr = precv_frame->rx_data;
+	struct rx_pkt_attrib	*prx_pkt_attrib = &precv_frame->attrib;
 	u8 *psa;
 	int parsing_length;
 	PNDIS_802_11_VARIABLE_IEs	pIE;
@@ -1699,7 +1699,7 @@ int On_TDLS_Ch_Switch_Rsp(_adapter *adap
 		return _FAIL;
 
 	ptr += prx_pkt_attrib->hdrlen + prx_pkt_attrib->iv_len+LLC_HEADER_SIZE+TYPE_LENGTH_FIELD_SIZE+1;
-	parsing_length = ((union recv_frame *)precv_frame)->u.hdr.len
+	parsing_length = ((struct recv_frame_hdr *)precv_frame)->len
 			-prx_pkt_attrib->hdrlen
 			-prx_pkt_attrib->iv_len
 			-prx_pkt_attrib->icv_len
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -1618,7 +1618,7 @@ _func_enter_;
 
 		plist = get_next(phead);
 
-		pxmitbuf = LIST_CONTAINOR(plist, struct xmit_buf, list);
+		pxmitbuf = container_of(plist, struct xmit_buf, list);
 
 		rtw_list_delete(&(pxmitbuf->list));
 	}
@@ -1687,7 +1687,7 @@ _func_enter_;
 
 		plist = get_next(phead);
 
-		pxmitbuf = LIST_CONTAINOR(plist, struct xmit_buf, list);
+		pxmitbuf = container_of(plist, struct xmit_buf, list);
 
 		rtw_list_delete(&(pxmitbuf->list));
 	}
@@ -1792,7 +1792,7 @@ _func_enter_;
 
 		plist = get_next(phead);
 
-		pxframe = LIST_CONTAINOR(plist, struct xmit_frame, list);
+		pxframe = container_of(plist, struct xmit_frame, list);
 
 		rtw_list_delete(&(pxframe->list));
 	}
@@ -1886,7 +1886,7 @@ _func_enter_;
 	plist = get_next(phead);
 
 	while (rtw_end_of_queue_search(phead, plist) == false) {
-		pxmitframe = LIST_CONTAINOR(plist, struct xmit_frame, list);
+		pxmitframe = container_of(plist, struct xmit_frame, list);
 		plist = get_next(plist);
 		rtw_free_xmitframe(pxmitpriv, pxmitframe);
 	}
@@ -1918,7 +1918,7 @@ static struct xmit_frame *dequeue_one_xm
 	xmitframe_plist = get_next(xmitframe_phead);
 
 	if ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == false) {
-		pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+		pxmitframe = container_of(xmitframe_plist, struct xmit_frame, list);
 
 		xmitframe_plist = get_next(xmitframe_plist);
 
@@ -1976,7 +1976,7 @@ _func_enter_;
 		sta_plist = get_next(sta_phead);
 
 		while ((rtw_end_of_queue_search(sta_phead, sta_plist)) == false) {
-			ptxservq = LIST_CONTAINOR(sta_plist, struct tx_servq, tx_pending);
+			ptxservq = container_of(sta_plist, struct tx_servq, tx_pending);
 
 			pframe_queue = &ptxservq->sta_pending;
 
@@ -2524,7 +2524,7 @@ static void dequeue_xmitframes_to_sleepi
 	plist = get_next(phead);
 
 	while (rtw_end_of_queue_search(phead, plist) == false) {
-		pxmitframe = LIST_CONTAINOR(plist, struct xmit_frame, list);
+		pxmitframe = container_of(plist, struct xmit_frame, list);
 
 		plist = get_next(plist);
 
@@ -2597,7 +2597,7 @@ void wakeup_sta_to_xmit(struct rtw_adapt
 	xmitframe_plist = get_next(xmitframe_phead);
 
 	while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == false) {
-		pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+		pxmitframe = container_of(xmitframe_plist, struct xmit_frame, list);
 
 		xmitframe_plist = get_next(xmitframe_plist);
 
@@ -2686,7 +2686,7 @@ void wakeup_sta_to_xmit(struct rtw_adapt
 		xmitframe_plist = get_next(xmitframe_phead);
 
 		while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == false) {
-			pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+			pxmitframe = container_of(xmitframe_plist, struct xmit_frame, list);
 
 			xmitframe_plist = get_next(xmitframe_plist);
 
@@ -2726,7 +2726,7 @@ void xmit_delivery_enabled_frames(struct
 	xmitframe_plist = get_next(xmitframe_phead);
 
 	while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == false) {
-		pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+		pxmitframe = container_of(xmitframe_plist, struct xmit_frame, list);
 
 		xmitframe_plist = get_next(xmitframe_plist);
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
@@ -1240,7 +1240,7 @@ static void PWDB_Monitor(
 
 			while ((rtw_end_of_queue_search(phead, plist)) == false)
 			{
-				psta = LIST_CONTAINOR(plist, struct sta_info, hash_list);
+				psta = container_of(plist, struct sta_info, hash_list);
 
 				plist = get_next(plist);
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_rxdesc.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_rxdesc.c
@@ -82,7 +82,7 @@ static s32  translate2dbm(u8 signal_stre
 }
 
 
-static void query_rx_phy_status(union recv_frame *prframe, struct phy_stat *pphy_stat, bool bPacketMatchBSSID)
+static void query_rx_phy_status(struct recv_frame_hdr *prframe, struct phy_stat *pphy_stat, bool bPacketMatchBSSID)
 {
 	struct phy_ofdm_rx_status_report_8192cd	*pOfdm_buf;
 	struct phy_cck_rx_status_report_8192cd *pCck_buf;
@@ -91,8 +91,8 @@ static void query_rx_phy_status(union re
 	u8	pwdb_all;
 	u32	rssi,total_rssi=0;
 	u8	bcck_rate=0, rf_rx_num = 0, cck_highpwr = 0;
-	struct rtw_adapter				*padapter = prframe->u.hdr.adapter;
-	struct rx_pkt_attrib	*pattrib = &prframe->u.hdr.attrib;
+	struct rtw_adapter				*padapter = prframe->adapter;
+	struct rx_pkt_attrib	*pattrib = &prframe->attrib;
 	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	u8	tmp_rxsnr;
 	s8	rx_snrX;
@@ -369,10 +369,10 @@ static void query_rx_phy_status(union re
 }
 
 
-static void process_rssi(struct rtw_adapter *padapter,union recv_frame *prframe)
+static void process_rssi(struct rtw_adapter *padapter,struct recv_frame_hdr *prframe)
 {
 	u32	last_rssi, tmp_val;
-	struct rx_pkt_attrib *pattrib = &prframe->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &prframe->attrib;
 #ifdef CONFIG_NEW_SIGNAL_STAT_PROCESS
 	struct signal_stat * signal_stat = &padapter->recvpriv.signal_strength_data;
 #endif /* CONFIG_NEW_SIGNAL_STAT_PROCESS */
@@ -413,13 +413,13 @@ static void process_rssi(struct rtw_adap
 }/*  Process_UI_RSSI_8192S */
 
 
-static void process_PWDB(struct rtw_adapter *padapter, union recv_frame *prframe)
+static void process_PWDB(struct rtw_adapter *padapter, struct recv_frame_hdr *prframe)
 {
 	int	UndecoratedSmoothedPWDB;
 	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	struct dm_priv		*pdmpriv = &pHalData->dmpriv;
-	struct rx_pkt_attrib	*pattrib= &prframe->u.hdr.attrib;
-	struct sta_info		*psta = prframe->u.hdr.psta;
+	struct rx_pkt_attrib	*pattrib= &prframe->attrib;
+	struct sta_info		*psta = prframe->psta;
 
 	if (psta)
 	{
@@ -464,7 +464,7 @@ static void process_PWDB(struct rtw_adap
 }
 
 
-static void process_link_qual(struct rtw_adapter *padapter,union recv_frame *prframe)
+static void process_link_qual(struct rtw_adapter *padapter,struct recv_frame_hdr *prframe)
 {
 	u32	last_evm=0,  tmpVal;
 	struct rx_pkt_attrib *pattrib;
@@ -476,7 +476,7 @@ static void process_link_qual(struct rtw
 		return;
 	}
 
-	pattrib = &prframe->u.hdr.attrib;
+	pattrib = &prframe->attrib;
 #ifdef CONFIG_NEW_SIGNAL_STAT_PROCESS
 	signal_stat = &padapter->recvpriv.signal_qual_data;
 #endif /* CONFIG_NEW_SIGNAL_STAT_PROCESS */
@@ -524,9 +524,9 @@ static void process_link_qual(struct rtw
 }/*  Process_UiLinkQuality8192S */
 
 
-static void process_phy_info(struct rtw_adapter *padapter, union recv_frame *prframe)
+static void process_phy_info(struct rtw_adapter *padapter, struct recv_frame_hdr *prframe)
 {
-	union recv_frame *precvframe = (union recv_frame *)prframe;
+	struct recv_frame_hdr *precvframe = (struct recv_frame_hdr *)prframe;
 
 	/*  */
 	/*  Check RSSI */
@@ -542,39 +542,39 @@ static void process_phy_info(struct rtw_
 	process_link_qual(padapter,  precvframe);
 }
 
-void rtl8192d_translate_rx_signal_stuff(union recv_frame *precvframe, struct phy_stat *pphy_info)
+void rtl8192d_translate_rx_signal_stuff(struct recv_frame_hdr *precvframe, struct phy_stat *pphy_info)
 {
-	struct rx_pkt_attrib	*pattrib = &precvframe->u.hdr.attrib;
-	struct rtw_adapter				*padapter = precvframe->u.hdr.adapter;
+	struct rx_pkt_attrib	*pattrib = &precvframe->attrib;
+	struct rtw_adapter				*padapter = precvframe->adapter;
 	u8	bPacketMatchBSSID =false;
 	u8	bPacketToSelf = false;
 	u8	bPacketBeacon = false;
 
 	if ((pattrib->physt) && (pphy_info != NULL))
 	{
-		bPacketMatchBSSID = ((!IsFrameTypeCtrl(precvframe->u.hdr.rx_data)) && !(pattrib->icv_err) && !(pattrib->crc_err) &&
-			_rtw_memcmp(get_hdr_bssid(precvframe->u.hdr.rx_data), get_my_bssid(&padapter->mlmeextpriv.mlmext_info.network), ETH_ALEN));
+		bPacketMatchBSSID = ((!IsFrameTypeCtrl(precvframe->rx_data)) && !(pattrib->icv_err) && !(pattrib->crc_err) &&
+			_rtw_memcmp(get_hdr_bssid(precvframe->rx_data), get_my_bssid(&padapter->mlmeextpriv.mlmext_info.network), ETH_ALEN));
 
 
-		bPacketToSelf = bPacketMatchBSSID &&  (_rtw_memcmp(get_da(precvframe->u.hdr.rx_data), myid(&padapter->eeprompriv), ETH_ALEN));
+		bPacketToSelf = bPacketMatchBSSID &&  (_rtw_memcmp(get_da(precvframe->rx_data), myid(&padapter->eeprompriv), ETH_ALEN));
 
-		bPacketBeacon =bPacketMatchBSSID && (GetFrameSubType(precvframe->u.hdr.rx_data) ==  WIFI_BEACON);
+		bPacketBeacon =bPacketMatchBSSID && (GetFrameSubType(precvframe->rx_data) ==  WIFI_BEACON);
 
 		query_rx_phy_status(precvframe, pphy_info, bPacketMatchBSSID);
 
-		precvframe->u.hdr.psta = NULL;
+		precvframe->psta = NULL;
 		if (bPacketMatchBSSID && check_fwstate(&padapter->mlmepriv, WIFI_AP_STATE) == true)
 		{
 			u8 *sa;
 			struct sta_info *psta=NULL;
 			struct sta_priv *pstapriv = &padapter->stapriv;
 
-			sa = get_sa(precvframe->u.hdr.rx_data);
+			sa = get_sa(precvframe->rx_data);
 
 			psta = rtw_get_stainfo(pstapriv, sa);
 			if (psta)
 			{
-				precvframe->u.hdr.psta = psta;
+				precvframe->psta = psta;
 				process_phy_info(padapter, precvframe);
 			}
 		}
@@ -586,12 +586,12 @@ void rtl8192d_translate_rx_signal_stuff(
 				struct sta_info *psta=NULL;
 				struct sta_priv *pstapriv = &padapter->stapriv;
 
-				sa = get_sa(precvframe->u.hdr.rx_data);
+				sa = get_sa(precvframe->rx_data);
 
 				psta = rtw_get_stainfo(pstapriv, sa);
 				if (psta)
 				{
-					precvframe->u.hdr.psta = psta;
+					precvframe->psta = psta;
 				}
 			}
 
@@ -600,9 +600,9 @@ void rtl8192d_translate_rx_signal_stuff(
 	}
 }
 
-void rtl8192d_query_rx_desc_status(union recv_frame *precvframe, struct recv_stat *pdesc)
+void rtl8192d_query_rx_desc_status(struct recv_frame_hdr *precvframe, struct recv_stat *pdesc)
 {
-	struct rx_pkt_attrib	*pattrib = &precvframe->u.hdr.attrib;
+	struct rx_pkt_attrib	*pattrib = &precvframe->attrib;
 
 	/* Offset 0 */
 	pattrib->physt = (u8)((le32_to_cpu(pdesc->rxdw0) >> 26) & 0x1);
--- a/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
@@ -589,7 +589,7 @@ static void UpdateEarlyModeInfo8192D(str
 	xmitframe_plist = get_next(xmitframe_phead);
 	while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist) == false)&&(pxmitframe->EMPktNum < 5))
 	{
-		pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+		pxmitframe = container_of(xmitframe_plist, struct xmit_frame, list);
 		xmitframe_plist = get_next(xmitframe_plist);
 
 		len = xmitframe_need_length(pxmitframe);
@@ -676,7 +676,7 @@ s32 rtl8192du_xmitframe_complete(struct
 				xmitframe_phead = get_list_head(&ptxservq->sta_pending);
 				xmitframe_plist = get_next(xmitframe_phead);
 
-				pxmitframe = LIST_CONTAINOR(xmitframe_plist, struct xmit_frame, list);
+				pxmitframe = container_of(xmitframe_plist, struct xmit_frame, list);
 
 
 				len = xmitframe_need_length(pxmitframe) + TXDESC_SIZE + ((USB_92D_DUMMY_OFFSET - 1) * PACKET_OFFSET_SZ);
--- a/drivers/staging/rtl8192du/hal/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/hal/usb_ops_linux.c
@@ -469,22 +469,22 @@ _func_exit_;
 }
 #endif
 
-static s32 pre_recv_entry(union recv_frame *precvframe, struct recv_stat *prxstat, struct phy_stat *pphy_info)
+static s32 pre_recv_entry(struct recv_frame_hdr *precvframe, struct recv_stat *prxstat, struct phy_stat *pphy_info)
 {
 	s32 ret=_SUCCESS;
 #ifdef CONFIG_CONCURRENT_MODE
 	u8 *primary_myid, *secondary_myid, *paddr1;
-	union recv_frame	*precvframe_if2 = NULL;
-	struct rtw_adapter *primary_padapter = precvframe->u.hdr.adapter;
+	struct recv_frame_hdr	*precvframe_if2 = NULL;
+	struct rtw_adapter *primary_padapter = precvframe->adapter;
 	struct rtw_adapter *secondary_padapter = primary_padapter->pbuddy_adapter;
 	struct recv_priv *precvpriv = &primary_padapter->recvpriv;
 	struct __queue *pfree_recv_queue = &precvpriv->free_recv_queue;
-	u8	*pbuf = precvframe->u.hdr.rx_data;
+	u8	*pbuf = precvframe->rx_data;
 
 	if (!secondary_padapter)
 		return ret;
 
-	paddr1 = GetAddr1Ptr(precvframe->u.hdr.rx_data);
+	paddr1 = GetAddr1Ptr(precvframe->rx_data);
 
 	if (IS_MCAST(paddr1) == false)/* unicast packets */
 	{
@@ -493,7 +493,7 @@ static s32 pre_recv_entry(union recv_fra
 		if (_rtw_memcmp(paddr1, secondary_myid, ETH_ALEN))
 		{
 			/* change to secondary interface */
-			precvframe->u.hdr.adapter = secondary_padapter;
+			precvframe->adapter = secondary_padapter;
 		}
 
 
@@ -513,15 +513,15 @@ static s32 pre_recv_entry(union recv_fra
 			precvframe_if2 = rtw_alloc_recvframe(pfree_recv_queue);
 			if (precvframe_if2)
 			{
-				precvframe_if2->u.hdr.adapter = secondary_padapter;
+				precvframe_if2->adapter = secondary_padapter;
 
-				INIT_LIST_HEAD(&precvframe_if2->u.hdr.list);
-				precvframe_if2->u.hdr.precvbuf = NULL;	/* can't access the precvbuf for new arch. */
-				precvframe_if2->u.hdr.len=0;
+				INIT_LIST_HEAD(&precvframe_if2->list);
+				precvframe_if2->precvbuf = NULL;	/* can't access the precvbuf for new arch. */
+				precvframe_if2->len=0;
 
-				memcpy(&precvframe_if2->u.hdr.attrib, &precvframe->u.hdr.attrib, sizeof(struct rx_pkt_attrib));
+				memcpy(&precvframe_if2->attrib, &precvframe->attrib, sizeof(struct rx_pkt_attrib));
 
-				pattrib = &precvframe_if2->u.hdr.attrib;
+				pattrib = &precvframe_if2->attrib;
 
 				/* 	Modified by Albert 20101213 */
 				/* 	For 8 bytes IP header alignment. */
@@ -559,13 +559,13 @@ static s32 pre_recv_entry(union recv_fra
 				if (pkt_copy)
 				{
 					pkt_copy->dev = secondary_padapter->pnetdev;
-					precvframe_if2->u.hdr.pkt = pkt_copy;
-					precvframe_if2->u.hdr.rx_head = pkt_copy->data;
-					precvframe_if2->u.hdr.rx_end = pkt_copy->data + alloc_sz;
+					precvframe_if2->pkt = pkt_copy;
+					precvframe_if2->rx_head = pkt_copy->data;
+					precvframe_if2->rx_end = pkt_copy->data + alloc_sz;
 					skb_reserve(pkt_copy, 8 - ((SIZE_PTR)(pkt_copy->data) & 7));/* force pkt_copy->data at 8-byte alignment address */
 					skb_reserve(pkt_copy, shift_sz);/* force ip_hdr at 8-byte alignment address according to shift_sz. */
 					memcpy(pkt_copy->data, pbuf, skb_len);
-					precvframe_if2->u.hdr.rx_data = precvframe_if2->u.hdr.rx_tail = pkt_copy->data;
+					precvframe_if2->rx_data = precvframe_if2->rx_tail = pkt_copy->data;
 				}
 
 				recvframe_put(precvframe_if2, skb_len);
@@ -601,7 +601,7 @@ static int recvbuf2recvframe(struct rtw_
 	struct recv_stat	*prxstat;
 	struct phy_stat	*pphy_info = NULL;
 	struct sk_buff *pkt_copy = NULL;
-	union recv_frame	*precvframe = NULL;
+	struct recv_frame_hdr	*precvframe = NULL;
 	struct rx_pkt_attrib	*pattrib = NULL;
 	struct hal_data_8192du 		*pHalData = GET_HAL_DATA(padapter);
 	struct recv_priv	*precvpriv = &padapter->recvpriv;
@@ -629,13 +629,13 @@ static int recvbuf2recvframe(struct rtw_
 			goto _exit_recvbuf2recvframe;
 		}
 
-		INIT_LIST_HEAD(&precvframe->u.hdr.list);
-		precvframe->u.hdr.precvbuf = NULL;	/* can't access the precvbuf for new arch. */
-		precvframe->u.hdr.len=0;
+		INIT_LIST_HEAD(&precvframe->list);
+		precvframe->precvbuf = NULL;	/* can't access the precvbuf for new arch. */
+		precvframe->len=0;
 
 		rtl8192d_query_rx_desc_status(precvframe, prxstat);
 
-		pattrib = &precvframe->u.hdr.attrib;
+		pattrib = &precvframe->attrib;
 		if (pattrib->physt)
 		{
 			pphy_info = (struct phy_stat *)(pbuf + RXDESC_OFFSET);
@@ -686,22 +686,22 @@ static int recvbuf2recvframe(struct rtw_
 #endif
 		if (pkt_copy)
 		{
-			precvframe->u.hdr.pkt = pkt_copy;
-			precvframe->u.hdr.rx_head = pkt_copy->data;
-			precvframe->u.hdr.rx_end = pkt_copy->data + alloc_sz;
+			precvframe->pkt = pkt_copy;
+			precvframe->rx_head = pkt_copy->data;
+			precvframe->rx_end = pkt_copy->data + alloc_sz;
 			skb_reserve(pkt_copy, 8 - ((SIZE_PTR)(pkt_copy->data) & 7));/* force pkt_copy->data at 8-byte alignment address */
 			skb_reserve(pkt_copy, shift_sz);/* force ip_hdr at 8-byte alignment address according to shift_sz. */
 			memcpy(pkt_copy->data, (pbuf + pattrib->shift_sz + pattrib->drvinfo_sz + RXDESC_SIZE), skb_len);
-			precvframe->u.hdr.rx_data = precvframe->u.hdr.rx_tail = pkt_copy->data;
+			precvframe->rx_data = precvframe->rx_tail = pkt_copy->data;
 		}
 		else
 		{
 			DBG_8192D("recvbuf2recvframe:can not allocate memory for skb copy\n");
-			/* precvframe->u.hdr.pkt = skb_clone(pskb, GFP_ATOMIC); */
-			/* precvframe->u.hdr.rx_head = precvframe->u.hdr.rx_data = precvframe->u.hdr.rx_tail = pbuf; */
-			/* precvframe->u.hdr.rx_end = pbuf + (pkt_offset>1612?pkt_offset:1612); */
+			/* precvframe->pkt = skb_clone(pskb, GFP_ATOMIC); */
+			/* precvframe->rx_head = precvframe->rx_data = precvframe->rx_tail = pbuf; */
+			/* precvframe->rx_end = pbuf + (pkt_offset>1612?pkt_offset:1612); */
 
-			precvframe->u.hdr.pkt = NULL;
+			precvframe->pkt = NULL;
 			rtw_free_recvframe(precvframe, pfree_recv_queue);
 
 			goto _exit_recvbuf2recvframe;
@@ -933,7 +933,7 @@ static int recvbuf2recvframe(struct rtw_
 	struct recv_stat	*prxstat;
 	struct phy_stat	*pphy_info = NULL;
 	struct sk_buff *pkt_copy = NULL;
-	union recv_frame	*precvframe = NULL;
+	struct recv_frame_hdr	*precvframe = NULL;
 	struct rx_pkt_attrib	*pattrib = NULL;
 	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(padapter);
 	struct recv_priv	*precvpriv = &padapter->recvpriv;
@@ -960,13 +960,13 @@ static int recvbuf2recvframe(struct rtw_
 			goto _exit_recvbuf2recvframe;
 		}
 
-		INIT_LIST_HEAD(&precvframe->u.hdr.list);
-		precvframe->u.hdr.precvbuf = NULL;	/* can't access the precvbuf for new arch. */
-		precvframe->u.hdr.len=0;
+		INIT_LIST_HEAD(&precvframe->list);
+		precvframe->precvbuf = NULL;	/* can't access the precvbuf for new arch. */
+		precvframe->len=0;
 
 		rtl8192d_query_rx_desc_status(precvframe, prxstat);
 
-		pattrib = &precvframe->u.hdr.attrib;
+		pattrib = &precvframe->attrib;
 		if (pattrib->physt)
 		{
 			pphy_info = (struct phy_stat *)(pbuf + RXDESC_OFFSET);
@@ -1017,21 +1017,21 @@ static int recvbuf2recvframe(struct rtw_
 #endif
 		if (pkt_copy)
 		{
-			precvframe->u.hdr.pkt = pkt_copy;
-			precvframe->u.hdr.rx_head = pkt_copy->data;
-			precvframe->u.hdr.rx_end = pkt_copy->data + alloc_sz;
+			precvframe->pkt = pkt_copy;
+			precvframe->rx_head = pkt_copy->data;
+			precvframe->rx_end = pkt_copy->data + alloc_sz;
 			skb_reserve(pkt_copy, 8 - ((SIZE_PTR)(pkt_copy->data) & 7));/* force pkt_copy->data at 8-byte alignment address */
 			skb_reserve(pkt_copy, shift_sz);/* force ip_hdr at 8-byte alignment address according to shift_sz. */
 			memcpy(pkt_copy->data, (pbuf + pattrib->shift_sz + pattrib->drvinfo_sz + RXDESC_SIZE), skb_len);
-			precvframe->u.hdr.rx_data = precvframe->u.hdr.rx_tail = pkt_copy->data;
+			precvframe->rx_data = precvframe->rx_tail = pkt_copy->data;
 		}
 		else
 		{
-			precvframe->u.hdr.pkt = skb_clone(pskb, GFP_ATOMIC);
+			precvframe->pkt = skb_clone(pskb, GFP_ATOMIC);
 			if (pkt_copy)
 			{
-				precvframe->u.hdr.rx_head = precvframe->u.hdr.rx_data = precvframe->u.hdr.rx_tail = pbuf;
-				precvframe->u.hdr.rx_end = pbuf + alloc_sz;
+				precvframe->rx_head = precvframe->rx_data = precvframe->rx_tail = pbuf;
+				precvframe->rx_end = pbuf + alloc_sz;
 			}
 			else
 			{
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -130,10 +130,6 @@ static inline struct list_head *get_list
 	return (&(queue->queue));
 }
 
-
-#define LIST_CONTAINOR(ptr, type, member) \
-        ((type *)((char *)(ptr)-(__kernel_size_t)(&((type *)0)->member)))
-
 static inline void _enter_critical_mutex(_mutex *pmutex)
 {
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37))
--- a/drivers/staging/rtl8192du/include/recv_osdep.h
+++ b/drivers/staging/rtl8192du/include/recv_osdep.h
@@ -20,21 +20,21 @@
 #include <osdep_service.h>
 #include <drv_types.h>
 
-extern int _rtw_init_recv_priv(struct recv_priv *precvpriv, struct rtw_adapter *padapter);
-extern void _rtw_free_recv_priv (struct recv_priv *precvpriv);
+int _rtw_init_recv_priv(struct recv_priv *precvpriv, struct rtw_adapter *padapter);
+void _rtw_free_recv_priv (struct recv_priv *precvpriv);
 
-extern s32  rtw_recv_entry(union recv_frame *precv_frame);
-extern int rtw_recv_indicatepkt(struct rtw_adapter *adapter, union recv_frame *precv_frame);
-extern void rtw_recv_returnpacket(struct net_device *cnxt, struct sk_buff *preturnedpkt);
+s32  rtw_recv_entry(struct recv_frame_hdr *precv_frame);
+int rtw_recv_indicatepkt(struct rtw_adapter *adapter, struct recv_frame_hdr *precv_frame);
+void rtw_recv_returnpacket(struct net_device *cnxt, struct sk_buff *preturnedpkt);
 
-extern void rtw_hostapd_mlme_rx(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-extern void rtw_handle_tkip_mic_err(struct rtw_adapter *padapter, u8 bgroup);
+void rtw_hostapd_mlme_rx(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+void rtw_handle_tkip_mic_err(struct rtw_adapter *padapter, u8 bgroup);
 
 int	rtw_init_recv_priv(struct recv_priv *precvpriv, struct rtw_adapter *padapter);
 void rtw_free_recv_priv (struct recv_priv *precvpriv);
 
 int rtw_os_recv_resource_init(struct recv_priv *precvpriv, struct rtw_adapter *padapter);
-int rtw_os_recv_resource_alloc(struct rtw_adapter *padapter, union recv_frame *precvframe);
+int rtw_os_recv_resource_alloc(struct rtw_adapter *padapter, struct recv_frame_hdr *precvframe);
 void rtw_os_recv_resource_free(struct recv_priv *precvpriv);
 
 int rtw_os_recvbuf_resource_alloc(struct rtw_adapter *padapter, struct recv_buf *precvbuf);
--- a/drivers/staging/rtl8192du/include/rtl8192d_recv.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_recv.h
@@ -97,7 +97,7 @@ void rtl8192du_init_recvbuf(struct rtw_a
 int	rtl8192du_init_recv_priv(struct rtw_adapter * padapter);
 void	rtl8192du_free_recv_priv(struct rtw_adapter * padapter);
 
-void rtl8192d_translate_rx_signal_stuff(union recv_frame *precvframe, struct phy_stat *pphy_info);
-void rtl8192d_query_rx_desc_status(union recv_frame *precvframe, struct recv_stat *pdesc);
+void rtl8192d_translate_rx_signal_stuff(struct recv_frame_hdr *precvframe, struct phy_stat *pphy_info);
+void rtl8192d_query_rx_desc_status(struct recv_frame_hdr *precvframe, struct recv_stat *pdesc);
 
 #endif
--- a/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
@@ -221,13 +221,13 @@ enum SCAN_STATE
 struct mlme_handler {
 	unsigned int   num;
 	char* str;
-	unsigned int (*func)(struct rtw_adapter *padapter, union recv_frame *precv_frame);
+	unsigned int (*func)(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
 };
 
 struct action_handler {
 	unsigned int   num;
 	char* str;
-	unsigned int (*func)(struct rtw_adapter *padapter, union recv_frame *precv_frame);
+	unsigned int (*func)(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
 };
 
 struct	ss_res
@@ -518,7 +518,7 @@ void flush_all_cam_entry(struct rtw_adap
 bool IsLegal5GChannel(struct rtw_adapter *adapter, u8 channel);
 
 void site_survey(struct rtw_adapter *padapter);
-u8 collect_bss_info(struct rtw_adapter *padapter, union recv_frame *precv_frame, struct wlan_bssid_ex *bssid);
+u8 collect_bss_info(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame, struct wlan_bssid_ex *bssid);
 
 int get_bsstype(unsigned short capability);
 u8* get_my_bssid(struct wlan_bssid_ex *pnetwork);
@@ -570,7 +570,7 @@ unsigned int is_ap_in_tkip(struct rtw_ad
 
 
 void report_join_res(struct rtw_adapter *padapter, int res);
-void report_survey_event(struct rtw_adapter *padapter, union recv_frame *precv_frame);
+void report_survey_event(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
 void report_surveydone_event(struct rtw_adapter *padapter);
 void report_del_sta_event(struct rtw_adapter *padapter, unsigned char* MacAddr, unsigned short reason);
 void report_add_sta_event(struct rtw_adapter *padapter, unsigned char* MacAddr, int cam_idx);
@@ -614,27 +614,27 @@ void start_clnt_auth(struct rtw_adapter*
 void start_clnt_join(struct rtw_adapter* padapter);
 void start_create_ibss(struct rtw_adapter* padapter);
 
-unsigned int OnAssocReq(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAssocRsp(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnProbeReq(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnProbeRsp(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int DoReserved(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnBeacon(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAtim(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnDisassoc(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAuth(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAuthClient(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnDeAuth(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAction(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-
-unsigned int on_action_spct(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAction_qos(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAction_dls(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAction_back(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int on_action_public(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAction_ht(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAction_wmm(struct rtw_adapter *padapter, union recv_frame *precv_frame);
-unsigned int OnAction_p2p(struct rtw_adapter *padapter, union recv_frame *precv_frame);
+unsigned int OnAssocReq(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAssocRsp(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnProbeReq(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnProbeRsp(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int DoReserved(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnBeacon(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAtim(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnDisassoc(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAuth(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAuthClient(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnDeAuth(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAction(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+
+unsigned int on_action_spct(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAction_qos(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAction_dls(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAction_back(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int on_action_public(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAction_ht(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAction_wmm(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
+unsigned int OnAction_p2p(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
 
 
 void mlmeext_joinbss_event_callback(struct rtw_adapter *padapter, int join_res);
@@ -682,7 +682,7 @@ u8	dc_handle_join_request(struct rtw_ada
 void	dc_handle_join_done(struct rtw_adapter *padapter, u8 join_res);
 int	dc_check_fwstate(struct rtw_adapter *padapter, int fw_state);
 u8	dc_handle_site_survey(struct rtw_adapter *padapter);
-void	dc_report_survey_event(struct rtw_adapter *padapter, union recv_frame *precv_frame);
+void	dc_report_survey_event(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
 void	dc_set_channel_bwmode_survey_done(struct rtw_adapter *padapter);
 void	dc_set_ap_channel_bandwidth(struct rtw_adapter *padapter, u8 channel, u8 channel_offset, u8 bwmode);
 void	dc_resume_xmit(struct rtw_adapter *padapter);
--- a/drivers/staging/rtl8192du/include/rtw_recv.h
+++ b/drivers/staging/rtl8192du/include/rtw_recv.h
@@ -320,8 +320,7 @@ struct recv_buf {
 	len = (unsigned int)(tail - data);
 
 */
-struct recv_frame_hdr
-{
+struct recv_frame_hdr {
 	struct list_head list;
 #ifndef CONFIG_BSD_RX_USE_MBUF
 	struct sk_buff	 *pkt;
@@ -356,26 +355,16 @@ struct recv_frame_hdr
 
 };
 
-
-union recv_frame{
-	union{
-		struct list_head list;
-		struct recv_frame_hdr hdr;
-		uint mem[RECVFRAME_HDR_ALIGN>>2];
-	} u;
-};
-
-
-extern union recv_frame *_rtw_alloc_recvframe (struct __queue *pfree_recv_queue);  /* get a free recv_frame from pfree_recv_queue */
-extern union recv_frame *rtw_alloc_recvframe (struct __queue *pfree_recv_queue);  /* get a free recv_frame from pfree_recv_queue */
-extern void rtw_init_recvframe(union recv_frame *precvframe ,struct recv_priv *precvpriv);
-extern int	 rtw_free_recvframe(union recv_frame *precvframe, struct __queue *pfree_recv_queue);
+struct recv_frame_hdr *_rtw_alloc_recvframe (struct __queue *pfree_recv_queue);  /* get a free recv_frame from pfree_recv_queue */
+struct recv_frame_hdr *rtw_alloc_recvframe (struct __queue *pfree_recv_queue);  /* get a free recv_frame from pfree_recv_queue */
+void rtw_init_recvframe(struct recv_frame_hdr *precvframe ,struct recv_priv *precvpriv);
+int	 rtw_free_recvframe(struct recv_frame_hdr *precvframe, struct __queue *pfree_recv_queue);
 
 #define rtw_dequeue_recvframe(queue) rtw_alloc_recvframe(queue)
-extern int _rtw_enqueue_recvframe(union recv_frame *precvframe, struct __queue *queue);
-extern int rtw_enqueue_recvframe(union recv_frame *precvframe, struct __queue *queue);
+int _rtw_enqueue_recvframe(struct recv_frame_hdr *precvframe, struct __queue *queue);
+int rtw_enqueue_recvframe(struct recv_frame_hdr *precvframe, struct __queue *queue);
 
-extern void rtw_free_recvframe_queue(struct __queue *pframequeue, struct __queue *pfree_recv_queue);
+void rtw_free_recvframe_queue(struct __queue *pframequeue, struct __queue *pfree_recv_queue);
 u32 rtw_free_uc_swdec_pending_queue(struct rtw_adapter *adapter);
 
 int rtw_enqueue_recvbuf_to_head(struct recv_buf *precvbuf, struct __queue *queue);
@@ -384,34 +373,34 @@ struct recv_buf *rtw_dequeue_recvbuf (st
 
 void rtw_reordering_ctrl_timeout_handler(void *pcontext);
 
-static inline u8 *get_rxmem(union recv_frame *precvframe)
+static inline u8 *get_rxmem(struct recv_frame_hdr *precvframe)
 {
 	/* always return rx_head... */
 	if (precvframe==NULL)
 		return NULL;
 
-	return precvframe->u.hdr.rx_head;
+	return precvframe->rx_head;
 }
 
-static inline u8 *get_rx_status(union recv_frame *precvframe)
+static inline u8 *get_rx_status(struct recv_frame_hdr *precvframe)
 {
 
 	return get_rxmem(precvframe);
 
 }
 
-static inline u8 *get_recvframe_data(union recv_frame *precvframe)
+static inline u8 *get_recvframe_data(struct recv_frame_hdr *precvframe)
 {
 
 	/* alwasy return rx_data */
 	if (precvframe==NULL)
 		return NULL;
 
-	return precvframe->u.hdr.rx_data;
+	return precvframe->rx_data;
 
 }
 
-static inline u8 *recvframe_push(union recv_frame *precvframe, int sz)
+static inline u8 *recvframe_push(struct recv_frame_hdr *precvframe, int sz)
 {
 	/*  append data before rx_data */
 
@@ -425,21 +414,21 @@ static inline u8 *recvframe_push(union r
 		return NULL;
 
 
-	precvframe->u.hdr.rx_data -= sz ;
-	if (precvframe->u.hdr.rx_data < precvframe->u.hdr.rx_head)
+	precvframe->rx_data -= sz ;
+	if (precvframe->rx_data < precvframe->rx_head)
 	{
-		precvframe->u.hdr.rx_data += sz ;
+		precvframe->rx_data += sz ;
 		return NULL;
 	}
 
-	precvframe->u.hdr.len +=sz;
+	precvframe->len +=sz;
 
-	return precvframe->u.hdr.rx_data;
+	return precvframe->rx_data;
 
 }
 
 
-static inline u8 *recvframe_pull(union recv_frame *precvframe, int sz)
+static inline u8 *recvframe_pull(struct recv_frame_hdr *precvframe, int sz)
 {
 	/*  rx_data += sz; move rx_data sz bytes  hereafter */
 
@@ -450,21 +439,21 @@ static inline u8 *recvframe_pull(union r
 		return NULL;
 
 
-	precvframe->u.hdr.rx_data += sz;
+	precvframe->rx_data += sz;
 
-	if (precvframe->u.hdr.rx_data > precvframe->u.hdr.rx_tail)
+	if (precvframe->rx_data > precvframe->rx_tail)
 	{
-		precvframe->u.hdr.rx_data -= sz;
+		precvframe->rx_data -= sz;
 		return NULL;
 	}
 
-	precvframe->u.hdr.len -=sz;
+	precvframe->len -=sz;
 
-	return precvframe->u.hdr.rx_data;
+	return precvframe->rx_data;
 
 }
 
-static inline u8 *recvframe_put(union recv_frame *precvframe, int sz)
+static inline u8 *recvframe_put(struct recv_frame_hdr *precvframe, int sz)
 {
 	/*  rx_tai += sz; move rx_tail sz bytes  hereafter */
 
@@ -474,21 +463,21 @@ static inline u8 *recvframe_put(union re
 	if (precvframe==NULL)
 		return NULL;
 
-	precvframe->u.hdr.rx_tail += sz;
+	precvframe->rx_tail += sz;
 
-	if (precvframe->u.hdr.rx_tail > precvframe->u.hdr.rx_end) {
-		precvframe->u.hdr.rx_tail -= sz;
+	if (precvframe->rx_tail > precvframe->rx_end) {
+		precvframe->rx_tail -= sz;
 		return NULL;
 	}
 
-	precvframe->u.hdr.len +=sz;
+	precvframe->len +=sz;
 
-	return precvframe->u.hdr.rx_tail;
+	return precvframe->rx_tail;
 }
 
 
 
-static inline u8 *recvframe_pull_tail(union recv_frame *precvframe, int sz)
+static inline u8 *recvframe_pull_tail(struct recv_frame_hdr *precvframe, int sz)
 {
 	/*  rmv data from rx_tail (by yitsen) */
 
@@ -498,23 +487,23 @@ static inline u8 *recvframe_pull_tail(un
 	if (precvframe==NULL)
 		return NULL;
 
-	precvframe->u.hdr.rx_tail -= sz;
+	precvframe->rx_tail -= sz;
 
-	if (precvframe->u.hdr.rx_tail < precvframe->u.hdr.rx_data)
+	if (precvframe->rx_tail < precvframe->rx_data)
 	{
-		precvframe->u.hdr.rx_tail += sz;
+		precvframe->rx_tail += sz;
 		return NULL;
 	}
 
-	precvframe->u.hdr.len -=sz;
+	precvframe->len -=sz;
 
-	return precvframe->u.hdr.rx_tail;
+	return precvframe->rx_tail;
 
 }
 
 
 
-static inline unsigned char *get_rxbuf_desc(union recv_frame *precvframe)
+static inline unsigned char *get_rxbuf_desc(struct recv_frame_hdr *precvframe)
 {
 	unsigned char *buf_desc;
 
@@ -524,21 +513,21 @@ static inline unsigned char *get_rxbuf_d
 }
 
 
-static inline union recv_frame *rxmem_to_recvframe(u8 *rxmem)
+static inline struct recv_frame_hdr *rxmem_to_recvframe(u8 *rxmem)
 {
-	/* due to the design of 2048 bytes alignment of recv_frame, we can reference the union recv_frame */
+	/* due to the design of 2048 bytes alignment of recv_frame, we can reference the struct recv_frame_hdr */
 	/* from any given member of recv_frame. */
 	/*  rxmem indicates the any member/address in recv_frame */
 
-	return (union recv_frame*)(((SIZE_PTR)rxmem >> RXFRAME_ALIGN) << RXFRAME_ALIGN);
+	return (struct recv_frame_hdr*)(((SIZE_PTR)rxmem >> RXFRAME_ALIGN) << RXFRAME_ALIGN);
 
 }
 
-static inline union recv_frame *pkt_to_recvframe(struct sk_buff *pkt)
+static inline struct recv_frame_hdr *pkt_to_recvframe(struct sk_buff *pkt)
 {
 
 	u8 * buf_star;
-	union recv_frame * precv_frame;
+	struct recv_frame_hdr * precv_frame;
 	precv_frame = rxmem_to_recvframe((unsigned char*)buf_star);
 
 	return precv_frame;
@@ -548,9 +537,9 @@ static inline u8 *pkt_to_recvmem(struct
 {
 	/*  return the rx_head */
 
-	union recv_frame * precv_frame = pkt_to_recvframe(pkt);
+	struct recv_frame_hdr * precv_frame = pkt_to_recvframe(pkt);
 
-	return	precv_frame->u.hdr.rx_head;
+	return	precv_frame->rx_head;
 
 }
 
@@ -558,16 +547,16 @@ static inline u8 *pkt_to_recvdata(struct
 {
 	/*  return the rx_data */
 
-	union recv_frame * precv_frame =pkt_to_recvframe(pkt);
+	struct recv_frame_hdr * precv_frame =pkt_to_recvframe(pkt);
 
-	return	precv_frame->u.hdr.rx_data;
+	return	precv_frame->rx_data;
 
 }
 
 
-static inline int get_recvframe_len(union recv_frame *precvframe)
+static inline int get_recvframe_len(struct recv_frame_hdr *precvframe)
 {
-	return precvframe->u.hdr.len;
+	return precvframe->len;
 }
 
 static inline u8 query_rx_pwr_percentage(s8 antpower)
@@ -600,8 +589,8 @@ static inline s32 translate_percentage_t
 
 struct sta_info;
 
-extern void _rtw_init_sta_recv_priv(struct sta_recv_priv *psta_recvpriv);
+void _rtw_init_sta_recv_priv(struct sta_recv_priv *psta_recvpriv);
 
-extern void  mgt_dispatcher(struct rtw_adapter *padapter, union recv_frame *precv_frame);
+void  mgt_dispatcher(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
 
 #endif
--- a/drivers/staging/rtl8192du/include/rtw_tdls.h
+++ b/drivers/staging/rtl8192du/include/rtw_tdls.h
@@ -100,26 +100,26 @@ void init_handshake_timer(_adapter *pada
 void free_tdls_sta(_adapter *padapter, struct sta_info *ptdls_sta);
 #ifdef CONFIG_WFD
 void issue_tunneled_probe_req(_adapter *padapter);
-void issue_tunneled_probe_rsp(_adapter *padapter, union recv_frame *precv_frame);
+void issue_tunneled_probe_rsp(_adapter *padapter, struct recv_frame_hdr *precv_frame);
 #endif /* CONFIG_WFD */
 void issue_tdls_dis_req(_adapter *padapter, u8 *mac_addr);
 void issue_tdls_setup_req(_adapter *padapter, u8 *mac_addr);
-void issue_tdls_setup_rsp(_adapter *padapter, union recv_frame *precv_frame);
-void issue_tdls_setup_cfm(_adapter *padapter, union recv_frame *precv_frame);
-void issue_tdls_dis_rsp(_adapter * padapter, union recv_frame * precv_frame, u8 dialog);
+void issue_tdls_setup_rsp(_adapter *padapter, struct recv_frame_hdr *precv_frame);
+void issue_tdls_setup_cfm(_adapter *padapter, struct recv_frame_hdr *precv_frame);
+void issue_tdls_dis_rsp(_adapter * padapter, struct recv_frame_hdr * precv_frame, u8 dialog);
 void issue_tdls_teardown(_adapter *padapter, u8 *mac_addr);
 void issue_tdls_peer_traffic_indication(_adapter *padapter, struct sta_info *psta);
 void issue_tdls_ch_switch_req(_adapter *padapter, u8 *mac_addr);
 void issue_tdls_ch_switch_rsp(_adapter *padapter, u8 *mac_addr);
-int On_TDLS_Dis_Rsp(_adapter *adapter, union recv_frame *precv_frame);
-int On_TDLS_Setup_Req(_adapter *adapter, union recv_frame *precv_frame);
-int On_TDLS_Setup_Rsp(_adapter *adapter, union recv_frame *precv_frame);
-int On_TDLS_Setup_Cfm(_adapter *adapter, union recv_frame *precv_frame);
-int On_TDLS_Dis_Req(_adapter *adapter, union recv_frame *precv_frame);
-int On_TDLS_Teardown(_adapter *adapter, union recv_frame *precv_frame);
-int On_TDLS_Peer_Traffic_Rsp(_adapter *adapter, union recv_frame *precv_frame);
-int On_TDLS_Ch_Switch_Req(_adapter *adapter, union recv_frame *precv_frame);
-int On_TDLS_Ch_Switch_Rsp(_adapter *adapter, union recv_frame *precv_frame);
+int On_TDLS_Dis_Rsp(_adapter *adapter, struct recv_frame_hdr *precv_frame);
+int On_TDLS_Setup_Req(_adapter *adapter, struct recv_frame_hdr *precv_frame);
+int On_TDLS_Setup_Rsp(_adapter *adapter, struct recv_frame_hdr *precv_frame);
+int On_TDLS_Setup_Cfm(_adapter *adapter, struct recv_frame_hdr *precv_frame);
+int On_TDLS_Dis_Req(_adapter *adapter, struct recv_frame_hdr *precv_frame);
+int On_TDLS_Teardown(_adapter *adapter, struct recv_frame_hdr *precv_frame);
+int On_TDLS_Peer_Traffic_Rsp(_adapter *adapter, struct recv_frame_hdr *precv_frame);
+int On_TDLS_Ch_Switch_Req(_adapter *adapter, struct recv_frame_hdr *precv_frame);
+int On_TDLS_Ch_Switch_Rsp(_adapter *adapter, struct recv_frame_hdr *precv_frame);
 void rtw_build_tdls_setup_req_ies(_adapter * padapter, struct xmit_frame * pxmitframe, u8 *pframe);
 void rtw_build_tdls_setup_rsp_ies(_adapter * padapter, struct xmit_frame * pxmitframe, u8 *pframe);
 void rtw_build_tdls_setup_cfm_ies(_adapter * padapter, struct xmit_frame * pxmitframe, u8 *pframe);
--- a/drivers/staging/rtl8192du/include/usb_osintf.h
+++ b/drivers/staging/rtl8192du/include/usb_osintf.h
@@ -48,7 +48,7 @@ u8 str_2char2num(u8 hch, u8 lch);
 u8 str_2char2num(u8 hch, u8 lch);
 u8 key_2char2num(u8 hch, u8 lch);
 u8 convert_ip_addr(u8 hch, u8 mch, u8 lch);
-void process_wmmps_data(struct rtw_adapter *padapter, union recv_frame *precv_frame);
+void process_wmmps_data(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame);
 
 #ifdef CONFIG_XMIT_ACK_POLLING
 s32 c2h_evt_hdl(struct rtw_adapter *adapter, struct c2h_evt_hdr *c2h_evt, c2h_id_filter filter);
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -1581,7 +1581,7 @@ void rtw_cfg80211_surveydone_event_callb
 		if (rtw_end_of_queue_search(phead,plist)== true)
 			break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 
 		/* report network only if the current channel set contains the channel to which this network belongs */
 		if (rtw_ch_set_search_ch(padapter->mlmeextpriv.channel_set, pnetwork->network.Configuration.DSConfig) >= 0
@@ -2363,7 +2363,7 @@ static int cfg80211_rtw_connect(struct w
 			break;
 		}
 
-		pnetwork = LIST_CONTAINOR(pmlmepriv->pscanned, struct wlan_network, list);
+		pnetwork = container_of(pmlmepriv->pscanned, struct wlan_network, list);
 		pmlmepriv->pscanned = get_next(pmlmepriv->pscanned);
 
 		dst_ssid = pnetwork->network.Ssid.Ssid;
@@ -3437,7 +3437,7 @@ static int	cfg80211_rtw_del_station(stru
 	/* check asoc_queue */
 	while ((rtw_end_of_queue_search(phead, plist)) == false)
 	{
-		psta = LIST_CONTAINOR(plist, struct sta_info, asoc_list);
+		psta = container_of(plist, struct sta_info, asoc_list);
 
 		plist = get_next(plist);
 
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -1348,7 +1348,7 @@ static int rtw_wx_set_wap(struct net_dev
 		if ((rtw_end_of_queue_search(phead, pmlmepriv->pscanned)) == true)
 			break;
 
-		pnetwork = LIST_CONTAINOR(pmlmepriv->pscanned, struct wlan_network, list);
+		pnetwork = container_of(pmlmepriv->pscanned, struct wlan_network, list);
 
 		pmlmepriv->pscanned = get_next(pmlmepriv->pscanned);
 
@@ -1738,7 +1738,7 @@ static int rtw_wx_get_scan(struct net_de
 			break;
 		}
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 
 		/* report network only if the current channel set contains the channel to which this network belongs */
 		if (rtw_ch_set_search_ch(padapter->mlmeextpriv.channel_set, pnetwork->network.Configuration.DSConfig) >= 0
@@ -1895,7 +1895,7 @@ static int rtw_wx_set_essid(struct net_d
 				break;
 			}
 
-			pnetwork = LIST_CONTAINOR(pmlmepriv->pscanned, struct wlan_network, list);
+			pnetwork = container_of(pmlmepriv->pscanned, struct wlan_network, list);
 
 			pmlmepriv->pscanned = get_next(pmlmepriv->pscanned);
 
@@ -3105,7 +3105,7 @@ static int rtw_get_ap_info(struct net_de
 		if (rtw_end_of_queue_search(phead, plist) == true)
 			break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 
 		if (hwaddr_aton_i(data, bssid)) {
 			DBG_8192D("Invalid BSSID '%s'.\n", (u8 *)data);
@@ -3714,7 +3714,7 @@ static int rtw_p2p_get_wps_configmethod(
 	{
 		if (rtw_end_of_queue_search(phead, plist) == true) break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 		if (!memcmp(pnetwork->network.MacAddress, peerMAC, ETH_ALEN))
 		{
 			u8 *wpsie;
@@ -3844,7 +3844,7 @@ static int rtw_p2p_get_go_device_address
 	{
 		if (rtw_end_of_queue_search(phead, plist) == true) break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 		if (!memcmp(pnetwork->network.MacAddress, peerMAC, ETH_ALEN))
 		{
 			/*	Commented by Albert 2011/05/18 */
@@ -3934,7 +3934,7 @@ static int rtw_p2p_get_device_type(struc
 	{
 		if (rtw_end_of_queue_search(phead, plist) == true) break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 		if (!memcmp(pnetwork->network.MacAddress, peerMAC, ETH_ALEN))
 		{
 			u8 *wpsie;
@@ -4009,7 +4009,7 @@ static int rtw_p2p_get_device_name(struc
 	{
 		if (rtw_end_of_queue_search(phead, plist) == true) break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 		if (!memcmp(pnetwork->network.MacAddress, peerMAC, ETH_ALEN))
 		{
 			u8 *wpsie;
@@ -4081,7 +4081,7 @@ static int rtw_p2p_get_invitation_proced
 	{
 		if (rtw_end_of_queue_search(phead, plist) == true) break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 		if (!memcmp(pnetwork->network.MacAddress, peerMAC, ETH_ALEN))
 		{
 			/*	Commented by Albert 20121226 */
@@ -4187,7 +4187,7 @@ static int rtw_p2p_connect(struct net_de
 		if (rtw_end_of_queue_search(phead, plist) == true)
 			break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 		if (!memcmp(pnetwork->network.MacAddress, peerMAC, ETH_ALEN)) {
 			uintPeerChannel = pnetwork->network.Configuration.DSConfig;
 			break;
@@ -4337,7 +4337,7 @@ static int rtw_p2p_invite_req(struct net
 		if (rtw_end_of_queue_search(phead, plist) == true)
 			break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 
 		/*	Commented by Albert 2011/05/18 */
 		/*	Match the device address located in the P2P IE */
@@ -4596,7 +4596,7 @@ static int rtw_p2p_set_pc(struct net_dev
 		if (rtw_end_of_queue_search(phead, plist) == true)
 			break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 
 		/*	Commented by Albert 2011/05/18 */
 		/*	Match the device address located in the P2P IE */
@@ -4873,7 +4873,7 @@ static int rtw_p2p_prov_disc(struct net_
 		if (uintPeerChannel != 0)
 			break;
 
-		pnetwork = LIST_CONTAINOR(plist, struct wlan_network, list);
+		pnetwork = container_of(plist, struct wlan_network, list);
 
 		/*	Commented by Albert 2011/05/18 */
 		/*	Match the device address located in the P2P IE */
@@ -5606,7 +5606,7 @@ static int rtw_dbg_port(struct net_devic
 
 							while ((rtw_end_of_queue_search(phead, plist)) == false)
 							{
-								psta = LIST_CONTAINOR(plist, struct sta_info, hash_list);
+								psta = container_of(plist, struct sta_info, hash_list);
 
 								plist = get_next(plist);
 
@@ -7608,7 +7608,7 @@ static int rtw_tdls_enable(struct net_de
 			plist = get_next(phead);
 
 			while ((rtw_end_of_queue_search(phead, plist)) == false) {
-				psta = LIST_CONTAINOR(plist, struct sta_info , hash_list);
+				psta = container_of(plist, struct sta_info , hash_list);
 
 				plist = get_next(plist);
 
--- a/drivers/staging/rtl8192du/os_dep/recv_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/recv_linux.c
@@ -35,17 +35,17 @@ int rtw_os_recv_resource_init(struct rec
 	return res;
 }
 
-/* alloc os related resource in union recv_frame */
-int rtw_os_recv_resource_alloc(struct rtw_adapter *padapter, union recv_frame *precvframe)
+/* alloc os related resource in struct recv_frame_hdr */
+int rtw_os_recv_resource_alloc(struct rtw_adapter *padapter, struct recv_frame_hdr *precvframe)
 {
 	int	res=_SUCCESS;
 
-	precvframe->u.hdr.pkt_newalloc = precvframe->u.hdr.pkt = NULL;
+	precvframe->pkt_newalloc = precvframe->pkt = NULL;
 
 	return res;
 }
 
-/* free os related resource in union recv_frame */
+/* free os related resource in struct recv_frame_hdr */
 void rtw_os_recv_resource_free(struct recv_priv *precvpriv)
 {
 }
@@ -178,7 +178,7 @@ void rtw_handle_tkip_mic_err(struct rtw_
 	wireless_send_event(padapter->pnetdev, IWEVMICHAELMICFAILURE, &wrqu, (char*) &ev);
 }
 
-void rtw_hostapd_mlme_rx(struct rtw_adapter *padapter, union recv_frame *precv_frame)
+void rtw_hostapd_mlme_rx(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame)
 {
 #ifdef CONFIG_HOSTAPD_MLME
 	struct sk_buff *skb;
@@ -187,14 +187,14 @@ void rtw_hostapd_mlme_rx(struct rtw_adap
 
 	RT_TRACE(_module_recv_osdep_c_, _drv_info_, ("+rtw_hostapd_mlme_rx\n"));
 
-	skb = precv_frame->u.hdr.pkt;
+	skb = precv_frame->pkt;
 
 	if (skb == NULL)
 		return;
 
-	skb->data = precv_frame->u.hdr.rx_data;
-	skb->tail = precv_frame->u.hdr.rx_tail;
-	skb->len = precv_frame->u.hdr.len;
+	skb->data = precv_frame->rx_data;
+	skb->tail = precv_frame->rx_tail;
+	skb->len = precv_frame->len;
 
 	skb->dev = pmgnt_netdev;
 	skb->ip_summed = CHECKSUM_NONE;
@@ -208,18 +208,18 @@ void rtw_hostapd_mlme_rx(struct rtw_adap
 
 	netif_rx(skb);
 
-	precv_frame->u.hdr.pkt = NULL; /*  set pointer to NULL before rtw_free_recvframe() if call netif_rx() */
+	precv_frame->pkt = NULL; /*  set pointer to NULL before rtw_free_recvframe() if call netif_rx() */
 #endif
 }
 
-int rtw_recv_indicatepkt(struct rtw_adapter *padapter, union recv_frame *precv_frame)
+int rtw_recv_indicatepkt(struct rtw_adapter *padapter, struct recv_frame_hdr *precv_frame)
 {
 	struct recv_priv *precvpriv;
 	struct __queue *pfree_recv_queue;
 	struct sk_buff *skb;
 	struct mlme_priv*pmlmepriv = &padapter->mlmepriv;
 #ifdef CONFIG_TCP_CSUM_OFFLOAD_RX
-	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+	struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 #endif
 
 _func_enter_;
@@ -228,11 +228,11 @@ _func_enter_;
 	pfree_recv_queue = &(precvpriv->free_recv_queue);
 
 #ifdef CONFIG_DRVEXT_MODULE
-	if (drvext_rx_handler(padapter, precv_frame->u.hdr.rx_data, precv_frame->u.hdr.len) == _SUCCESS)
+	if (drvext_rx_handler(padapter, precv_frame->rx_data, precv_frame->len) == _SUCCESS)
 		goto _recv_indicatepkt_drop;
 #endif
 
-	skb = precv_frame->u.hdr.pkt;
+	skb = precv_frame->pkt;
 	if (skb == NULL) {
 		RT_TRACE(_module_recv_osdep_c_,_drv_err_,("rtw_recv_indicatepkt():skb==NULL something wrong!!!!\n"));
 		goto _recv_indicatepkt_drop;
@@ -241,19 +241,19 @@ _func_enter_;
 	RT_TRACE(_module_recv_osdep_c_,_drv_info_,
 		 ("rtw_recv_indicatepkt():skb != NULL !!!\n"));
 	RT_TRACE(_module_recv_osdep_c_, _drv_info_,
-		 ("rtw_recv_indicatepkt():precv_frame->u.hdr.rx_head=%p  precv_frame->hdr.rx_data=%p\n",
-		 precv_frame->u.hdr.rx_head, precv_frame->u.hdr.rx_data));
+		 ("rtw_recv_indicatepkt():precv_frame->rx_head=%p  precv_frame->hdr.rx_data=%p\n",
+		 precv_frame->rx_head, precv_frame->rx_data));
 	RT_TRACE(_module_recv_osdep_c_, _drv_info_,
-		 ("precv_frame->hdr.rx_tail=%p precv_frame->u.hdr.rx_end=%p precv_frame->hdr.len=%d\n",
-		 precv_frame->u.hdr.rx_tail,
-		 precv_frame->u.hdr.rx_end,
-		 precv_frame->u.hdr.len));
+		 ("precv_frame->hdr.rx_tail=%p precv_frame->rx_end=%p precv_frame->hdr.len=%d\n",
+		 precv_frame->rx_tail,
+		 precv_frame->rx_end,
+		 precv_frame->len));
 
-	skb->data = precv_frame->u.hdr.rx_data;
+	skb->data = precv_frame->rx_data;
 
-	skb_set_tail_pointer(skb, precv_frame->u.hdr.len);
+	skb_set_tail_pointer(skb, precv_frame->len);
 
-	skb->len = precv_frame->u.hdr.len;
+	skb->len = precv_frame->len;
 
 	RT_TRACE(_module_recv_osdep_c_, _drv_info_,
 		 ("\n skb->head=%p skb->data=%p skb->tail=%p skb->end=%p skb->len=%d\n",
@@ -264,7 +264,7 @@ _func_enter_;
 		struct sk_buff *pskb2 = NULL;
 		struct sta_info *psta = NULL;
 		struct sta_priv *pstapriv = &padapter->stapriv;
-		struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
+		struct rx_pkt_attrib *pattrib = &precv_frame->attrib;
 		int bmcast = IS_MCAST(pattrib->dst);
 
 		if (_rtw_memcmp(pattrib->dst, myid(&padapter->eeprompriv), ETH_ALEN)==false) {
@@ -314,7 +314,7 @@ _func_enter_;
 
 _recv_indicatepkt_end:
 
-	precv_frame->u.hdr.pkt = NULL; /*  pointers to NULL before rtw_free_recvframe() */
+	precv_frame->pkt = NULL; /*  pointers to NULL before rtw_free_recvframe() */
 
 	rtw_free_recvframe(precv_frame, pfree_recv_queue);
 
--- a/drivers/staging/rtl8192du/os_dep/xmit_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/xmit_linux.c
@@ -239,7 +239,7 @@ static int rtw_mlcst2unicst(struct rtw_a
 	/* free sta asoc_queue */
 	while ((rtw_end_of_queue_search(phead, plist)) == false)
 	{
-		psta = LIST_CONTAINOR(plist, struct sta_info, asoc_list);
+		psta = container_of(plist, struct sta_info, asoc_list);
 
 		plist = get_next(plist);
 
