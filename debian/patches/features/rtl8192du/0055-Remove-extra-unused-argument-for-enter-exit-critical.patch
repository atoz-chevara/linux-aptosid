From cc5709f05cb464a61829b461825458537a04ddc0 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Tue, 23 Apr 2013 19:20:25 -0500
Subject: [PATCH 055/390] Remove extra, unused argument for
 {enter,exit}critical_mutex() calls

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_mlme_ext.c     | 12 ++++++------
 core/rtw_wlan_util.c    | 12 ++++++------
 hal/rtl8192d_cmd.c      |  4 ++--
 hal/usb_ops_linux.c     |  4 ++--
 include/osdep_service.h |  4 ++--
 os_dep/os_intfs.c       | 12 ++++++------
 6 files changed, 24 insertions(+), 24 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -5946,7 +5946,7 @@ s32 dump_mgntframe_and_wait_ack(_adapter
 		padapter->bDriverStopped == true)
 		return -1;
 
-	_enter_critical_mutex(&pxmitpriv->ack_tx_mutex, NULL);
+	_enter_critical_mutex(&pxmitpriv->ack_tx_mutex);
 	pxmitpriv->ack_tx = true;
 
 	pmgntframe->ack_report = 1;
@@ -5955,7 +5955,7 @@ s32 dump_mgntframe_and_wait_ack(_adapter
 	}
 
 	pxmitpriv->ack_tx = false;
-	_exit_critical_mutex(&pxmitpriv->ack_tx_mutex, NULL);
+	_exit_critical_mutex(&pxmitpriv->ack_tx_mutex);
 
 	 return ret;
 #else //!CONFIG_XMIT_ACK
@@ -11340,11 +11340,11 @@ void dc_SelectChannel(_adapter *padapter
 		ptarget_adapter = padapter;
 	}
 
-	_enter_critical_mutex(&(adapter_to_dvobj(ptarget_adapter)->setch_mutex), NULL);
+	_enter_critical_mutex(&(adapter_to_dvobj(ptarget_adapter)->setch_mutex));
 
 	rtw_hal_set_chan(ptarget_adapter, channel);
 
-	_exit_critical_mutex(&(adapter_to_dvobj(ptarget_adapter)->setch_mutex), NULL);
+	_exit_critical_mutex(&(adapter_to_dvobj(ptarget_adapter)->setch_mutex));
 }
 
 void dc_SetBWMode(_adapter *padapter, unsigned short bwmode, unsigned char channel_offset)
@@ -11363,11 +11363,11 @@ void dc_SetBWMode(_adapter *padapter, un
 		ptarget_adapter = padapter;
 	}
 
-	_enter_critical_mutex(&(adapter_to_dvobj(ptarget_adapter)->setbw_mutex), NULL);
+	_enter_critical_mutex(&(adapter_to_dvobj(ptarget_adapter)->setbw_mutex));
 
 	rtw_hal_set_bwmode(ptarget_adapter, (HT_CHANNEL_WIDTH)bwmode, channel_offset);
 
-	_exit_critical_mutex(&(adapter_to_dvobj(ptarget_adapter)->setbw_mutex), NULL);
+	_exit_critical_mutex(&(adapter_to_dvobj(ptarget_adapter)->setbw_mutex));
 }
 
 void dc_set_channel_bwmode_disconnect(_adapter *padapter)
--- a/drivers/staging/rtl8192du/core/rtw_wlan_util.c
+++ b/drivers/staging/rtl8192du/core/rtw_wlan_util.c
@@ -471,14 +471,14 @@ void SelectChannel(_adapter *padapter, u
 	dc_SelectChannel(padapter, channel);
 #else //CONFIG_DUALMAC_CONCURRENT
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex), NULL);
+	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex));
 
 	//saved channel info
 	rtw_set_oper_ch(padapter, channel);
 
 	rtw_hal_set_chan(padapter, channel);
 
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex), NULL);
+	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex));
 
 #endif // CONFIG_DUALMAC_CONCURRENT
 }
@@ -494,7 +494,7 @@ void SetBWMode(_adapter *padapter, unsig
 	dc_SetBWMode(padapter, bwmode, channel_offset);
 #else //CONFIG_DUALMAC_CONCURRENT
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->setbw_mutex), NULL);
+	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->setbw_mutex));
 
 	//saved bw info
 	rtw_set_oper_bw(padapter, bwmode);
@@ -502,7 +502,7 @@ void SetBWMode(_adapter *padapter, unsig
 
 	rtw_hal_set_bwmode(padapter, (enum HT_CHANNEL_WIDTH)bwmode, channel_offset);
 
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->setbw_mutex), NULL);
+	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->setbw_mutex));
 
 #endif // CONFIG_DUALMAC_CONCURRENT
 }
@@ -547,7 +547,7 @@ void set_channel_bwmode(_adapter *padapt
 #else //CONFIG_DUALMAC_CONCURRENT
 
 	if (!mutex_is_locked(&(adapter_to_dvobj(padapter)->hw_init_mutex)))
-		_enter_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex), NULL);
+		_enter_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex));
 
 	//saved channel/bw info
 	rtw_set_oper_ch(padapter, channel);
@@ -557,7 +557,7 @@ void set_channel_bwmode(_adapter *padapt
 	rtw_hal_set_chan(padapter, center_ch);
 
 	if (!mutex_is_locked(&(adapter_to_dvobj(padapter)->hw_init_mutex)))
-		_exit_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex), NULL);
+		_exit_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex));
 
 #endif // CONFIG_DUALMAC_CONCURRENT
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
@@ -105,7 +105,7 @@ _func_enter_;
 	padapter = GET_PRIMARY_ADAPTER(padapter);
 	pHalData = GET_HAL_DATA(padapter);
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->h2c_fwcmd_mutex), NULL);
+	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->h2c_fwcmd_mutex));
 
 	//DBG_8192D("FillH2CCmd : ElementID=%d \n",ElementID);
 
@@ -264,7 +264,7 @@ _func_enter_;
 
 	}
 
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->h2c_fwcmd_mutex), NULL);
+	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->h2c_fwcmd_mutex));
 
 _func_exit_;
 }
--- a/drivers/staging/rtl8192du/hal/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/hal/usb_ops_linux.c
@@ -72,7 +72,7 @@ static int usbctrl_vendorreq(struct intf
 	}
 
 	#ifdef CONFIG_USB_VENDOR_REQ_MUTEX
-	_enter_critical_mutex(&pdvobjpriv->usb_vendor_req_mutex, NULL);
+	_enter_critical_mutex(&pdvobjpriv->usb_vendor_req_mutex);
 	#endif
 
 
@@ -172,7 +172,7 @@ static int usbctrl_vendorreq(struct intf
 
 release_mutex:
 	#ifdef CONFIG_USB_VENDOR_REQ_MUTEX
-	_exit_critical_mutex(&pdvobjpriv->usb_vendor_req_mutex, NULL);
+	_exit_critical_mutex(&pdvobjpriv->usb_vendor_req_mutex);
 	#endif
 exit:
 	return status;
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -197,7 +197,7 @@ static inline void _exit_critical_bh(_lo
 	spin_unlock_bh(plock);
 }
 
-static inline void _enter_critical_mutex(_mutex *pmutex, _irqL *pirqL)
+static inline void _enter_critical_mutex(_mutex *pmutex)
 {
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37))
 		mutex_lock(pmutex);
@@ -207,7 +207,7 @@ static inline void _enter_critical_mutex
 }
 
 
-static inline void _exit_critical_mutex(_mutex *pmutex, _irqL *pirqL)
+static inline void _exit_critical_mutex(_mutex *pmutex)
 {
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37))
 		mutex_unlock(pmutex);
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -1541,9 +1541,9 @@ int netdev_vir_if_open(struct net_device
 	int ret;
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(pnetdev);
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex), NULL);
+	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 	ret = _netdev_vir_if_open(pnetdev);
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex), NULL);
+	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 	return ret;
 }
 
@@ -1925,9 +1925,9 @@ static int netdev_if2_open(struct net_de
 	int ret;
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(pnetdev);
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex), NULL);
+	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 	ret = _netdev_if2_open(pnetdev);
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex), NULL);
+	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 	return ret;
 }
 
@@ -2341,9 +2341,9 @@ int netdev_open(struct net_device *pnetd
 	int ret;
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(pnetdev);
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex), NULL);
+	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 	ret = _netdev_open(pnetdev);
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex), NULL);
+	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 
 	return ret;
 }
