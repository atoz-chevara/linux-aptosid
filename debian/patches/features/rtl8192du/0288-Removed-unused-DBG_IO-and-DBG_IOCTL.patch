From 226369685408c2594e5d4b48a0190f3fad09f842 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sat, 15 Mar 2014 15:14:06 -0500
Subject: [PATCH 288/390] Removed unused DBG_IO and DBG_IOCTL

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_io.c        | 115 -----------------------------------------
 include/rtw_io.h     |  35 -------------
 os_dep/ioctl_linux.c | 141 ++++++++++++++++-----------------------------------
 3 files changed, 44 insertions(+), 247 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_io.c
+++ b/drivers/staging/rtl8192du/core/rtw_io.c
@@ -308,118 +308,3 @@ int rtw_init_io_priv(struct rtw_adapter
 
 	return _SUCCESS;
 }
-
-#ifdef DBG_IO
-
-u16 read_sniff_ranges[][2] = {
-	/* 0x550, 0x551}, */
-};
-
-u16 write_sniff_ranges[][2] = {
-	/* 0x550, 0x551}, */
-	/* 0x4c, 0x4c}, */
-};
-
-int read_sniff_num = sizeof(read_sniff_ranges)/sizeof(u16)/2;
-int write_sniff_num = sizeof(write_sniff_ranges)/sizeof(u16)/2;
-
-bool match_read_sniff_ranges(u16 addr, u16 len)
-{
-	int i;
-	for (i = 0; i < read_sniff_num; i++) {
-		if (addr + len > read_sniff_ranges[i][0] &&
-		    addr <= read_sniff_ranges[i][1])
-			return true;
-	}
-
-	return false;
-}
-
-bool match_write_sniff_ranges(u16 addr, u16 len)
-{
-	int i;
-	for (i = 0; i < write_sniff_num; i++) {
-		if (addr + len > write_sniff_ranges[i][0] &&
-		    addr <= write_sniff_ranges[i][1])
-			return true;
-	}
-
-	return false;
-}
-
-u8 dbg_rtw_read8(struct rtw_adapter *adapter, u32 addr,
-		 const char *caller, const int line)
-{
-	u8 val = _rtw_read8(adapter, addr);
-
-	if (match_read_sniff_ranges(addr, 1))
-		DBG_871X("DBG_IO %s:%d rtw_read8(0x%04x) return 0x%02x\n",
-			 caller, line, addr, val);
-
-	return val;
-}
-
-u16 dbg_rtw_read16(struct rtw_adapter *adapter, u32 addr,
-		   const char *caller, const int line)
-{
-	u16 val = _rtw_read16(adapter, addr);
-
-	if (match_read_sniff_ranges(addr, 2))
-		DBG_871X("DBG_IO %s:%d rtw_read16(0x%04x) return 0x%04x\n",
-			 caller, line, addr, val);
-
-	return val;
-}
-
-u32 dbg_rtw_read32(struct rtw_adapter *adapter, u32 addr,
-		   const char *caller, const int line)
-{
-	u32 val = _rtw_read32(adapter, addr);
-
-	if (match_read_sniff_ranges(addr, 4))
-		DBG_871X("DBG_IO %s:%d rtw_read32(0x%04x) return 0x%08x\n",
-			 caller, line, addr, val);
-
-	return val;
-}
-
-int dbg_rtw_write8(struct rtw_adapter *adapter, u32 addr, u8 val,
-		   const char *caller, const int line)
-{
-	if (match_write_sniff_ranges(addr, 1))
-		DBG_871X("DBG_IO %s:%d rtw_write8(0x%04x, 0x%02x)\n", caller,
-			 line, addr, val);
-
-	return _rtw_write8(adapter, addr, val);
-}
-
-int dbg_rtw_write16(struct rtw_adapter *adapter, u32 addr, u16 val,
-		    const char *caller, const int line)
-{
-	if (match_write_sniff_ranges(addr, 2))
-		DBG_871X("DBG_IO %s:%d rtw_write16(0x%04x, 0x%04x)\n", caller,
-			 line, addr, val);
-
-	return _rtw_write16(adapter, addr, val);
-}
-
-int dbg_rtw_write32(struct rtw_adapter *adapter, u32 addr, u32 val,
-		    const char *caller, const int line)
-{
-	if (match_write_sniff_ranges(addr, 4))
-		DBG_871X("DBG_IO %s:%d rtw_write32(0x%04x, 0x%08x)\n", caller,
-			 line, addr, val);
-
-	return _rtw_write32(adapter, addr, val);
-}
-
-int dbg_rtw_writeN(struct rtw_adapter *adapter, u32 addr, u32 length, u8 *data,
-		   const char *caller, const int line)
-{
-	if (match_write_sniff_ranges(addr, length))
-		DBG_871X("DBG_IO %s:%d rtw_writeN(0x%04x, %u)\n", caller,
-			 line, addr, length);
-
-	return _rtw_writeN(adapter, addr, length, data);
-}
-#endif
--- a/drivers/staging/rtl8192du/include/rtw_io.h
+++ b/drivers/staging/rtl8192du/include/rtw_io.h
@@ -323,40 +323,6 @@ u32 _rtw_write_port(struct rtw_adapter *
 u32 _rtw_write_port_and_wait(struct rtw_adapter *adapter, u32 addr, u32 cnt, u8 *pmem, int timeout_ms);
 void _rtw_write_port_cancel(struct rtw_adapter *adapter);
 
-#ifdef DBG_IO
-bool match_read_sniff_ranges(u16 addr, u16 len);
-bool match_write_sniff_ranges(u16 addr, u16 len);
-
-u8 dbg_rtw_read8(struct rtw_adapter *adapter, u32 addr, const char *caller, const int line);
-u16 dbg_rtw_read16(struct rtw_adapter *adapter, u32 addr, const char *caller, const int line);
-u32 dbg_rtw_read32(struct rtw_adapter *adapter, u32 addr, const char *caller, const int line);
-
-int dbg_rtw_write8(struct rtw_adapter *adapter, u32 addr, u8 val, const char *caller, const int line);
-int dbg_rtw_write16(struct rtw_adapter *adapter, u32 addr, u16 val, const char *caller, const int line);
-int dbg_rtw_write32(struct rtw_adapter *adapter, u32 addr, u32 val, const char *caller, const int line);
-int dbg_rtw_writeN(struct rtw_adapter *adapter, u32 addr ,u32 length , u8 *data, const char *caller, const int line);
-
-#define rtw_read8(adapter, addr) dbg_rtw_read8((adapter), (addr), __func__, __LINE__)
-#define rtw_read16(adapter, addr) dbg_rtw_read16((adapter), (addr), __func__, __LINE__)
-#define rtw_read32(adapter, addr) dbg_rtw_read32((adapter), (addr), __func__, __LINE__)
-#define rtw_read_mem(adapter, addr, cnt, mem) _rtw_read_mem((adapter), (addr), (cnt), (mem))
-#define rtw_read_port(adapter, addr, cnt, mem) _rtw_read_port((adapter), (addr), (cnt), (mem))
-#define rtw_read_port_cancel(adapter) _rtw_read_port_cancel((adapter))
-
-#define  rtw_write8(adapter, addr, val) dbg_rtw_write8((adapter), (addr), (val), __func__, __LINE__)
-#define  rtw_write16(adapter, addr, val) dbg_rtw_write16((adapter), (addr), (val), __func__, __LINE__)
-#define  rtw_write32(adapter, addr, val) dbg_rtw_write32((adapter), (addr), (val), __func__, __LINE__)
-#define  rtw_writeN(adapter, addr, length, data) dbg_rtw_writeN((adapter), (addr), (length), (data), __func__, __LINE__)
-
-#define rtw_write8_async(adapter, addr, val) _rtw_write8_async((adapter), (addr), (val))
-#define rtw_write16_async(adapter, addr, val) _rtw_write16_async((adapter), (addr), (val))
-#define rtw_write32_async(adapter, addr, val) _rtw_write32_async((adapter), (addr), (val))
-
-#define rtw_write_mem(adapter, addr, cnt, mem) _rtw_write_mem((adapter), addr, cnt, mem)
-#define rtw_write_port(adapter, addr, cnt, mem) _rtw_write_port(adapter, addr, cnt, mem)
-#define rtw_write_port_and_wait(adapter, addr, cnt, mem, timeout_ms) _rtw_write_port_and_wait((adapter), (addr), (cnt), (mem), (timeout_ms))
-#define rtw_write_port_cancel(adapter) _rtw_write_port_cancel(adapter)
-#else /* DBG_IO */
 #define rtw_read8(adapter, addr) _rtw_read8((adapter), (addr))
 #define rtw_read16(adapter, addr) _rtw_read16((adapter), (addr))
 #define rtw_read32(adapter, addr) _rtw_read32((adapter), (addr))
@@ -377,7 +343,6 @@ int dbg_rtw_writeN(struct rtw_adapter *a
 #define rtw_write_port(adapter, addr, cnt, mem) _rtw_write_port((adapter), (addr), (cnt), (mem))
 #define rtw_write_port_and_wait(adapter, addr, cnt, mem, timeout_ms) _rtw_write_port_and_wait((adapter), (addr), (cnt), (mem), (timeout_ms))
 #define rtw_write_port_cancel(adapter) _rtw_write_port_cancel((adapter))
-#endif /* DBG_IO */
 
 void rtw_write_scsi(struct rtw_adapter *adapter, u32 cnt, u8 *pmem);
 
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -1375,12 +1375,7 @@ static int rtw_wx_set_scan(struct net_de
 #endif /* CONFIG_P2P */
 	RT_TRACE(_module_rtl871x_mlme_c_, _drv_info_, ("rtw_wx_set_scan\n"));
 
-	#ifdef DBG_IOCTL
-	DBG_8192D("DBG_IOCTL %s:%d\n", __func__, __LINE__);
-	#endif
-
-	if (_FAIL == rtw_pwr_wakeup(padapter))
-	{
+	if (_FAIL == rtw_pwr_wakeup(padapter)) {
 		ret = -1;
 		goto exit;
 	}
@@ -1410,18 +1405,15 @@ static int rtw_wx_set_scan(struct net_de
 		goto exit;
 	}
 
-	if (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY|_FW_UNDER_LINKING) == true)
-	{
+	if (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY|_FW_UNDER_LINKING)) {
 		indicate_wx_scan_complete_event(padapter);
 		goto exit;
 	}
 
 #ifdef CONFIG_CONCURRENT_MODE
 	if (check_buddy_fwstate(padapter,
-		_FW_UNDER_SURVEY|_FW_UNDER_LINKING|WIFI_UNDER_WPS) == true)
-	{
-		if (check_buddy_fwstate(padapter, _FW_UNDER_SURVEY))
-		{
+		_FW_UNDER_SURVEY|_FW_UNDER_LINKING|WIFI_UNDER_WPS)) {
+		if (check_buddy_fwstate(padapter, _FW_UNDER_SURVEY)) {
 			DBG_8192D("scanning_via_buddy_intf\n");
 			pmlmepriv->scanning_via_buddy_intf = true;
 		}
@@ -1433,21 +1425,18 @@ static int rtw_wx_set_scan(struct net_de
 #endif
 
 #ifdef CONFIG_DUALMAC_CONCURRENT
-	if (dc_check_fwstate(padapter, _FW_UNDER_SURVEY|_FW_UNDER_LINKING) == true)
-	{
+	if (dc_check_fwstate(padapter, _FW_UNDER_SURVEY|_FW_UNDER_LINKING)) {
 		indicate_wx_scan_complete_event(padapter);
 		goto exit;
 	}
 #endif
 
-/*	Mareded by Albert 20101103 */
 /*	For the DMP WiFi Display project, the driver won't to scan because */
 /*	the pmlmepriv->scan_interval is always equal to 3. */
 /*	So, the wpa_supplicant won't find out the WPS SoftAP. */
 
 #ifdef CONFIG_P2P
-	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
-	{
+	if (!rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) {
 		rtw_p2p_set_pre_state(pwdinfo, rtw_p2p_state(pwdinfo));
 		rtw_p2p_set_state(pwdinfo, P2P_STATE_FIND_PHASE_SEARCH);
 		rtw_p2p_findphase_ex_set(pwdinfo, P2P_FINDPHASE_EX_FULL);
@@ -1458,12 +1447,10 @@ static int rtw_wx_set_scan(struct net_de
 	memset(ssid, 0, sizeof(struct ndis_802_11_ssid)*RTW_SSID_SCAN_AMOUNT);
 
 #if WIRELESS_EXT >= 17
-	if (wrqu->data.length == sizeof(struct iw_scan_req))
-	{
+	if (wrqu->data.length == sizeof(struct iw_scan_req)) {
 		struct iw_scan_req *req = (struct iw_scan_req *)extra;
 
-		if (wrqu->data.flags & IW_SCAN_THIS_ESSID)
-		{
+		if (wrqu->data.flags & IW_SCAN_THIS_ESSID) {
 			int len = min((int)req->essid_len, IW_ESSID_MAX_SIZE);
 
 			memcpy(ssid[0].Ssid, req->essid, len);
@@ -1477,14 +1464,11 @@ static int rtw_wx_set_scan(struct net_de
 
 			spin_unlock_bh(&pmlmepriv->lock);
 
-		}
-		else if (req->scan_type == IW_SCAN_TYPE_PASSIVE)
-		{
+		} else if (req->scan_type == IW_SCAN_TYPE_PASSIVE) {
 			DBG_8192D("rtw_wx_set_scan, req->scan_type == IW_SCAN_TYPE_PASSIVE\n");
 		}
 
-	}
-	else
+	} else
 #endif
 
 	if (wrqu->data.length >= WEXT_CSCAN_HEADER_SIZE &&
@@ -1499,40 +1483,39 @@ static int rtw_wx_set_scan(struct net_de
 			section = *(pos++); len-= 1;
 
 			switch (section) {
-				case WEXT_CSCAN_SSID_SECTION:
-					if (len < 1) {
-						len = 0;
-						break;
-					}
-
-					sec_len = *(pos++); len-= 1;
-
-					if (sec_len > 0 && sec_len<= len) {
-						ssid[ssid_index].SsidLength = sec_len;
-						memcpy(ssid[ssid_index].Ssid, pos, ssid[ssid_index].SsidLength);
-						ssid_index++;
-					}
-
-					pos+= sec_len; len-= sec_len;
+			case WEXT_CSCAN_SSID_SECTION:
+				if (len < 1) {
+					len = 0;
 					break;
+				}
 
-				case WEXT_CSCAN_CHANNEL_SECTION:
-					pos+= 1; len-= 1;
-					break;
-				case WEXT_CSCAN_ACTV_DWELL_SECTION:
-					pos+= 2; len-= 2;
-					break;
-				case WEXT_CSCAN_PASV_DWELL_SECTION:
-					pos+= 2; len-= 2;
-					break;
-				case WEXT_CSCAN_HOME_DWELL_SECTION:
-					pos+= 2; len-= 2;
-					break;
-				case WEXT_CSCAN_TYPE_SECTION:
-					pos+= 1; len-= 1;
-					break;
-				default:
-					len = 0; /*  stop parsing */
+				sec_len = *(pos++); len-= 1;
+
+				if (sec_len > 0 && sec_len<= len) {
+					ssid[ssid_index].SsidLength = sec_len;
+					memcpy(ssid[ssid_index].Ssid, pos, ssid[ssid_index].SsidLength);
+					ssid_index++;
+				}
+
+				pos+= sec_len; len-= sec_len;
+				break;
+			case WEXT_CSCAN_CHANNEL_SECTION:
+				pos+= 1; len-= 1;
+				break;
+			case WEXT_CSCAN_ACTV_DWELL_SECTION:
+				pos+= 2; len-= 2;
+				break;
+			case WEXT_CSCAN_PASV_DWELL_SECTION:
+				pos+= 2; len-= 2;
+				break;
+			case WEXT_CSCAN_HOME_DWELL_SECTION:
+				pos+= 2; len-= 2;
+				break;
+			case WEXT_CSCAN_TYPE_SECTION:
+				pos+= 1; len-= 1;
+				break;
+			default:
+				len = 0; /*  stop parsing */
 			}
 		}
 		/* jeff: it has still some scan paramater to parse, we only do this now... */
@@ -1544,12 +1527,7 @@ static int rtw_wx_set_scan(struct net_de
 
 	if (_status == false)
 		ret = -1;
-
 exit:
-	#ifdef DBG_IOCTL
-	DBG_8192D("DBG_IOCTL %s:%d return %d\n", __func__, __LINE__, ret);
-	#endif
-
 	return ret;
 }
 
@@ -1575,12 +1553,7 @@ static int rtw_wx_get_scan(struct net_de
 	RT_TRACE(_module_rtl871x_mlme_c_, _drv_info_, ("rtw_wx_get_scan\n"));
 	RT_TRACE(_module_rtl871x_ioctl_os_c, _drv_info_, (" Start of Query SIOCGIWSCAN .\n"));
 
-	#ifdef DBG_IOCTL
-	DBG_8192D("DBG_IOCTL %s:%d\n", __func__, __LINE__);
-	#endif
-
-	if (padapter->pwrctrlpriv.brfoffbyhw && padapter->bDriverStopped)
-	{
+	if (padapter->pwrctrlpriv.brfoffbyhw && padapter->bDriverStopped) {
 		ret = -EINVAL;
 		goto exit;
 	}
@@ -1667,10 +1640,6 @@ static int rtw_wx_get_scan(struct net_de
 
 exit:
 
-	#ifdef DBG_IOCTL
-	DBG_8192D("DBG_IOCTL %s:%d return %d\n", __func__, __LINE__, ret);
-	#endif
-
 	return ret ;
 }
 
@@ -1688,31 +1657,15 @@ static int rtw_wx_set_essid(struct net_d
 	struct __queue *queue = &pmlmepriv->scanned_queue;
 	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
 	struct list_head *phead;
-	s8 status = true;
 	struct wlan_network *pnetwork = NULL;
-	enum NDIS_802_11_AUTHENTICATION_MODE authmode;
 	struct ndis_802_11_ssid ndis_ssid;
+	s8 status = true;
+	enum NDIS_802_11_AUTHENTICATION_MODE authmode;
 	u8 *dst_ssid, *src_ssid;
-
 	uint ret = 0, len;
 
-	#ifdef DBG_IOCTL
-	DBG_8192D("DBG_IOCTL %s:%d\n", __func__, __LINE__);
-	#endif
-
-/*
 #ifdef CONFIG_CONCURRENT_MODE
-	if (padapter->iface_type > PRIMARY_IFACE)
-	{
-		ret = -EINVAL;
-		goto exit;
-	}
-#endif
-*/
-
-#ifdef CONFIG_CONCURRENT_MODE
-	if (check_buddy_fwstate(padapter, _FW_UNDER_SURVEY|_FW_UNDER_LINKING) == true)
-	{
+	if (check_buddy_fwstate(padapter, _FW_UNDER_SURVEY|_FW_UNDER_LINKING)) {
 		DBG_8192D("set ssid, but buddy_intf is under scanning or linking\n");
 
 		ret = -EINVAL;
@@ -1840,13 +1793,7 @@ static int rtw_wx_set_essid(struct net_d
 	}
 
 exit:
-
 	DBG_8192D("<=%s, ret %d\n", __func__, ret);
-
-	#ifdef DBG_IOCTL
-	DBG_8192D("DBG_IOCTL %s:%d return %d\n", __func__, __LINE__, ret);
-	#endif
-
 	return ret;
 }
 
