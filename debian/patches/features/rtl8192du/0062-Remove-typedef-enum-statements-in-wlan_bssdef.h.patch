From 35d95284c444e78a158e0a0e9fe1fd33aabcbd02 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Fri, 26 Apr 2013 18:18:54 -0500
Subject: [PATCH 062/390] Remove "typedef enum" statements in wlan_bssdef.h

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c           |  14 +++---
 core/rtw_cmd.c          |  14 +++---
 core/rtw_ioctl_set.c    |  23 +++++----
 core/rtw_mlme.c         |  65 ++++++++++++-------------
 core/rtw_mlme_ext.c     |  16 +++---
 hal/rtl8192d_cmd.c      |   6 +--
 include/rtw_cmd.h       |   2 +-
 include/rtw_ioctl_set.h |   4 +-
 include/rtw_security.h  |   8 +--
 include/wlan_bssdef.h   | 127 ++++++++++++++++++++++--------------------------
 os_dep/ioctl_linux.c    | 116 +++++++++++++++++++++----------------------
 os_dep/mlme_linux.c     |   8 +--
 os_dep/os_intfs.c       |   6 +--
 13 files changed, 195 insertions(+), 214 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -1376,7 +1376,7 @@ int rtw_check_beacon_data(_adapter *pada
 	_rtw_memcpy(ie, pbuf, pbss_network->IELength);
 
 
-	if(pbss_network->InfrastructureMode!=Ndis802_11APMode)
+	if(pbss_network->InfrastructureMode!=NDIS802_11APMODE)
 		return _FAIL;
 
 	pbss_network->Rssi = 0;
@@ -1661,19 +1661,19 @@ int rtw_check_beacon_data(_adapter *pada
 	switch(network_type)
 	{
 		case WIRELESS_11B:
-			pbss_network->NetworkTypeInUse = Ndis802_11DS;
+			pbss_network->NetworkTypeInUse = NDIS802_11DS;
 			break;
 		case WIRELESS_11G:
 		case WIRELESS_11BG:
              case WIRELESS_11G_24N:
 		case WIRELESS_11BG_24N:
-			pbss_network->NetworkTypeInUse = Ndis802_11OFDM24;
+			pbss_network->NetworkTypeInUse = NDIS802_11OFDM24;
 			break;
 		case WIRELESS_11A:
-			pbss_network->NetworkTypeInUse = Ndis802_11OFDM5;
+			pbss_network->NetworkTypeInUse = NDIS802_11OFDM5;
 			break;
 		default :
-			pbss_network->NetworkTypeInUse = Ndis802_11OFDM24;
+			pbss_network->NetworkTypeInUse = NDIS802_11OFDM24;
 			break;
 	}
 
@@ -2755,8 +2755,8 @@ void stop_ap_mode(_adapter *padapter)
 
 	//reset and init security priv , this can refine with rtw_reset_securitypriv
 	_rtw_memset((unsigned char *)&padapter->securitypriv, 0, sizeof (struct security_priv));
-	padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeOpen;
-	padapter->securitypriv.ndisencryptstatus = Ndis802_11WEPDisabled;
+	padapter->securitypriv.ndisauthtype = NDIS802_11AUTHMODEOPEN;
+	padapter->securitypriv.ndisencryptstatus = NDIS802_11WEPDISABLED;
 
 	//for ACL
 	spin_lock_bh(&(pacl_node_q->lock));
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -1088,7 +1088,7 @@ u8 rtw_joinbss_cmd(_adapter  *padapter,
 	struct security_priv	*psecuritypriv=&padapter->securitypriv;
 	struct registry_priv	*pregistrypriv = &padapter->registrypriv;
 	struct ht_priv			*phtpriv = &pmlmepriv->htpriv;
-	NDIS_802_11_NETWORK_INFRASTRUCTURE ndis_network_mode = pnetwork->network.InfrastructureMode;
+	enum NDIS_802_11_NETWORK_INFRASTRUCTURE ndis_network_mode = pnetwork->network.InfrastructureMode;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 
@@ -1125,17 +1125,17 @@ _func_enter_;
 	{
 		switch(ndis_network_mode)
 		{
-			case Ndis802_11IBSS:
+			case NDIS802_11IBSS:
 				set_fwstate(pmlmepriv, WIFI_ADHOC_STATE);
 				break;
 
-			case Ndis802_11Infrastructure:
+			case NDIS802_11INFRA:
 				set_fwstate(pmlmepriv, WIFI_STATION_STATE);
 				break;
 
-			case Ndis802_11APMode:
-			case Ndis802_11AutoUnknown:
-			case Ndis802_11InfrastructureMax:
+			case NDIS802_11APMODE:
+			case NDIS802_11AUTOUNK:
+			case NDIS802_11INFRA_MAX:
 				break;
 
 		}
@@ -1294,7 +1294,7 @@ _func_exit_;
 	return res;
 }
 
-u8 rtw_setopmode_cmd(_adapter  *padapter, NDIS_802_11_NETWORK_INFRASTRUCTURE networktype)
+u8 rtw_setopmode_cmd(_adapter  *padapter, enum NDIS_802_11_NETWORK_INFRASTRUCTURE networktype)
 {
 	struct	cmd_obj*	ph2c;
 	struct	setopmode_parm* psetop;
--- a/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
+++ b/drivers/staging/rtl8192du/core/rtw_ioctl_set.c
@@ -446,11 +446,11 @@ rtw_set_802_11_infrastructure_mode(~)
 	MUST TAKE CARE THAT BEFORE CALLING THIS FUNC, YOU SHOULD HAVE LOCKED pmlmepriv->lock and scanned_queue->lock in sequence
 */
 u8 rtw_set_802_11_infrastructure_mode(_adapter* padapter,
-	NDIS_802_11_NETWORK_INFRASTRUCTURE networktype)
+	enum NDIS_802_11_NETWORK_INFRASTRUCTURE networktype)
 {
 	struct	mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct	wlan_network	*cur_network = &pmlmepriv->cur_network;
-	NDIS_802_11_NETWORK_INFRASTRUCTURE* pold_state = &(cur_network->network.InfrastructureMode);
+	enum NDIS_802_11_NETWORK_INFRASTRUCTURE *pold_state = &(cur_network->network.InfrastructureMode);
 
 _func_enter_;
 
@@ -464,8 +464,7 @@ _func_enter_;
 		RT_TRACE(_module_rtl871x_ioctl_set_c_,_drv_info_,(" change mode!"));
 		//DBG_8192D("change mode, old_mode=%d, new_mode=%d, fw_state=0x%x\n", *pold_state, networktype, get_fwstate(pmlmepriv));
 
-		if(*pold_state==Ndis802_11APMode)
-		{
+		if (*pold_state==NDIS802_11APMODE) {
 			//change to other mode from Ndis802_11APMode
 			cur_network->join_res = -1;
 
@@ -474,14 +473,14 @@ _func_enter_;
 #endif
 		}
 
-		if((check_fwstate(pmlmepriv, _FW_LINKED)== true) ||(*pold_state==Ndis802_11IBSS))
+		if((check_fwstate(pmlmepriv, _FW_LINKED)== true) ||(*pold_state==NDIS802_11IBSS))
 			rtw_disassoc_cmd(padapter, 0, true);
 
 		if((check_fwstate(pmlmepriv, _FW_LINKED)== true) ||
 			(check_fwstate(pmlmepriv, WIFI_ADHOC_MASTER_STATE)== true) )
 			rtw_free_assoc_resources(padapter, 0);
 
-		if((*pold_state == Ndis802_11Infrastructure) ||(*pold_state == Ndis802_11IBSS))
+		if((*pold_state == NDIS802_11INFRA) ||(*pold_state == NDIS802_11IBSS))
 	       {
 			if(check_fwstate(pmlmepriv, _FW_LINKED) == true)
 			{
@@ -495,15 +494,15 @@ _func_enter_;
 
 		switch(networktype)
 		{
-			case Ndis802_11IBSS:
+			case NDIS802_11IBSS:
 				set_fwstate(pmlmepriv, WIFI_ADHOC_STATE);
 				break;
 
-			case Ndis802_11Infrastructure:
+			case NDIS802_11INFRA:
 				set_fwstate(pmlmepriv, WIFI_STATION_STATE);
 				break;
 
-			case Ndis802_11APMode:
+			case NDIS802_11APMODE:
 				set_fwstate(pmlmepriv, WIFI_AP_STATE);
 #ifdef CONFIG_NATIVEAP_MLME
 				start_ap_mode(padapter);
@@ -512,8 +511,8 @@ _func_enter_;
 
 				break;
 
-			case Ndis802_11AutoUnknown:
-			case Ndis802_11InfrastructureMax:
+			case NDIS802_11AUTOUNK:
+			case NDIS802_11INFRA_MAX:
 				break;
 		}
 
@@ -605,7 +604,7 @@ _func_exit_;
 	return res;
 }
 
-u8 rtw_set_802_11_authentication_mode(_adapter* padapter, NDIS_802_11_AUTHENTICATION_MODE authmode)
+u8 rtw_set_802_11_authentication_mode(_adapter* padapter, enum NDIS_802_11_AUTHENTICATION_MODE authmode)
 {
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 	int res;
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -60,7 +60,7 @@ _func_enter_;
 
 	pmlmepriv->pscanned = NULL;
 	pmlmepriv->fw_state = 0;
-	pmlmepriv->cur_network.network.InfrastructureMode = Ndis802_11AutoUnknown;
+	pmlmepriv->cur_network.network.InfrastructureMode = NDIS802_11AUTOUNK;
 	pmlmepriv->scan_mode=SCAN_ACTIVE;// 1: active, 0: pasive. Maybe someday we should rename this varable to "active_mode" (Jeff)
 
 	_rtw_spinlock_init(&(pmlmepriv->lock));
@@ -916,12 +916,12 @@ int rtw_is_desired_network(_adapter *ada
 	}
 	if (adapter->registrypriv.wifi_spec == 1) //for  correct flow of 8021X  to do....
 	{
-		if ((desired_encmode == Ndis802_11EncryptionDisabled) && (privacy != 0))
+		if ((desired_encmode == NDIS802_11ENCRYPTION_DISABLED) && (privacy != 0))
 	            bselected = false;
 	}
 
 
-	if ((desired_encmode != Ndis802_11EncryptionDisabled) && (privacy == 0)) {
+	if ((desired_encmode != NDIS802_11ENCRYPTION_DISABLED) && (privacy == 0)) {
 		DBG_8192D("desired_encmode: %d, privacy: %d\n", desired_encmode, privacy);
 		bselected = false;
 	}
@@ -1581,7 +1581,7 @@ static void rtw_joinbss_update_network(_
 	//update fw_state //will clr _FW_UNDER_LINKING here indirectly
 	switch(pnetwork->network.InfrastructureMode)
 	{
-		case Ndis802_11Infrastructure:
+		case NDIS802_11INFRA:
 
 				if(pmlmepriv->fw_state&WIFI_UNDER_WPS)
 					pmlmepriv->fw_state = WIFI_STATION_STATE|WIFI_UNDER_WPS;
@@ -1589,7 +1589,7 @@ static void rtw_joinbss_update_network(_
 					pmlmepriv->fw_state = WIFI_STATION_STATE;
 
 				break;
-		case Ndis802_11IBSS:
+		case NDIS802_11IBSS:
 				pmlmepriv->fw_state = WIFI_ADHOC_STATE;
 				break;
 		default:
@@ -2792,9 +2792,9 @@ _func_enter_;
 	//copy fixed ie only
 	_rtw_memcpy(out_ie, in_ie,12);
 	ielength=12;
-	if((ndisauthmode==Ndis802_11AuthModeWPA)||(ndisauthmode==Ndis802_11AuthModeWPAPSK))
+	if((ndisauthmode==NDIS802_11AUTHMODEWPA)||(ndisauthmode==NDIS802_11AUTHMODEWPAPSK))
 			authmode=_WPA_IE_ID_;
-	if((ndisauthmode==Ndis802_11AuthModeWPA2)||(ndisauthmode==Ndis802_11AuthModeWPA2PSK))
+	if((ndisauthmode==NDIS802_11AUTHMODEWPA2)||(ndisauthmode==NDIS802_11AUTHMODEWPA2PSK))
 			authmode=_WPA2_IE_ID_;
 
 	if(check_fwstate(pmlmepriv, WIFI_UNDER_WPS))
@@ -2873,37 +2873,36 @@ _func_enter_;
 
 	pdev_network->Rssi = 0;
 
-	switch(pregistrypriv->wireless_mode)
-	{
-		case WIRELESS_11B:
-			pdev_network->NetworkTypeInUse = (Ndis802_11DS);
-			break;
-		case WIRELESS_11G:
-		case WIRELESS_11BG:
-		case WIRELESS_11_24N:
-		case WIRELESS_11G_24N:
-		case WIRELESS_11BG_24N:
-			pdev_network->NetworkTypeInUse = (Ndis802_11OFDM24);
-			break;
-		case WIRELESS_11A:
-		case WIRELESS_11A_5N:
-			pdev_network->NetworkTypeInUse = (Ndis802_11OFDM5);
-			break;
-		case WIRELESS_11ABGN:
-			if(pregistrypriv->channel > 14)
-				pdev_network->NetworkTypeInUse = (Ndis802_11OFDM5);
-			else
-				pdev_network->NetworkTypeInUse = (Ndis802_11OFDM24);
-			break;
-		default :
-			// TODO
-			break;
+	switch(pregistrypriv->wireless_mode) {
+	case WIRELESS_11B:
+		pdev_network->NetworkTypeInUse = (NDIS802_11DS);
+		break;
+	case WIRELESS_11G:
+	case WIRELESS_11BG:
+	case WIRELESS_11_24N:
+	case WIRELESS_11G_24N:
+	case WIRELESS_11BG_24N:
+		pdev_network->NetworkTypeInUse = (NDIS802_11OFDM24);
+		break;
+	case WIRELESS_11A:
+	case WIRELESS_11A_5N:
+		pdev_network->NetworkTypeInUse = (NDIS802_11OFDM5);
+		break;
+	case WIRELESS_11ABGN:
+		if(pregistrypriv->channel > 14)
+			pdev_network->NetworkTypeInUse = (NDIS802_11OFDM5);
+		else
+			pdev_network->NetworkTypeInUse = (NDIS802_11OFDM24);
+		break;
+	default :
+		// TODO
+		break;
 	}
 
 	pdev_network->Configuration.DSConfig = (pregistrypriv->channel);
 	RT_TRACE(_module_rtl871x_mlme_c_,_drv_info_,("pregistrypriv->channel=%d, pdev_network->Configuration.DSConfig=0x%x\n", pregistrypriv->channel, pdev_network->Configuration.DSConfig));
 
-	if(cur_network->network.InfrastructureMode == Ndis802_11IBSS)
+	if(cur_network->network.InfrastructureMode == NDIS802_11IBSS)
 		pdev_network->Configuration.ATIMWindow = (0);
 
 	pdev_network->InfrastructureMode = (cur_network->network.InfrastructureMode);
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -8848,7 +8848,7 @@ u8 collect_bss_info(_adapter *padapter,
 	}
 
 	//todo:
-	bssid->NetworkTypeInUse = Ndis802_11OFDM24;
+	bssid->NetworkTypeInUse = NDIS802_11OFDM24;
 
 	if (bssid->IELength < 12)
 		return _FAIL;
@@ -8885,12 +8885,12 @@ u8 collect_bss_info(_adapter *padapter,
 
 	if (val16 & BIT(0))
 	{
-		bssid->InfrastructureMode = Ndis802_11Infrastructure;
+		bssid->InfrastructureMode = NDIS802_11INFRA;
 		_rtw_memcpy(bssid->MacAddress, GetAddr2Ptr(pframe), ETH_ALEN);
 	}
 	else
 	{
-		bssid->InfrastructureMode = Ndis802_11IBSS;
+		bssid->InfrastructureMode = NDIS802_11IBSS;
 		_rtw_memcpy(bssid->MacAddress, GetAddr3Ptr(pframe), ETH_ALEN);
 	}
 
@@ -10354,7 +10354,7 @@ u8 setopmode_hdl(_adapter *padapter, u8
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct setopmode_parm *psetop = (struct setopmode_parm *)pbuf;
 
-	if(psetop->mode == Ndis802_11APMode)
+	if(psetop->mode == NDIS802_11APMODE)
 	{
 		pmlmeinfo->state = WIFI_FW_AP_STATE;
 		type = _HW_STATE_AP_;
@@ -10362,13 +10362,13 @@ u8 setopmode_hdl(_adapter *padapter, u8
 		//start_ap_mode(padapter);
 #endif
 	}
-	else if(psetop->mode == Ndis802_11Infrastructure)
+	else if(psetop->mode == NDIS802_11INFRA)
 	{
 		pmlmeinfo->state &= ~(BIT(0)|BIT(1));// clear state
 		pmlmeinfo->state |= WIFI_FW_STATION_STATE;//set to	STATION_STATE
 		type = _HW_STATE_STATION_;
 	}
-	else if(psetop->mode == Ndis802_11IBSS)
+	else if(psetop->mode == NDIS802_11IBSS)
 	{
 		type = _HW_STATE_ADHOC_;
 	}
@@ -10393,7 +10393,7 @@ u8 createbss_hdl(_adapter *padapter, u8
 	u32	initialgain;
 
 
-	if(pparm->network.InfrastructureMode == Ndis802_11APMode)
+	if(pparm->network.InfrastructureMode == NDIS802_11APMODE)
 	{
 #ifdef CONFIG_AP_MODE
 
@@ -10406,7 +10406,7 @@ u8 createbss_hdl(_adapter *padapter, u8
 	}
 
 	//below is for ad-hoc master
-	if(pparm->network.InfrastructureMode == Ndis802_11IBSS)
+	if(pparm->network.InfrastructureMode == NDIS802_11IBSS)
 	{
 		rtw_joinbss_reset(padapter);
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
@@ -545,19 +545,19 @@ void ConstructNullFunctionData(_adapter
 
 	switch(cur_network->network.InfrastructureMode)
 	{
-		case Ndis802_11Infrastructure:
+		case NDIS802_11INFRA:
 			SetToDs(fctrl);
 			_rtw_memcpy(pwlanhdr->addr1, get_my_bssid(&(pmlmeinfo->network)), ETH_ALEN);
 			_rtw_memcpy(pwlanhdr->addr2, myid(&(padapter->eeprompriv)), ETH_ALEN);
 			_rtw_memcpy(pwlanhdr->addr3, StaAddr, ETH_ALEN);
 			break;
-		case Ndis802_11APMode:
+		case NDIS802_11APMODE:
 			SetFrDs(fctrl);
 			_rtw_memcpy(pwlanhdr->addr1, StaAddr, ETH_ALEN);
 			_rtw_memcpy(pwlanhdr->addr2, get_my_bssid(&(pmlmeinfo->network)), ETH_ALEN);
 			_rtw_memcpy(pwlanhdr->addr3, myid(&(padapter->eeprompriv)), ETH_ALEN);
 			break;
-		case Ndis802_11IBSS:
+		case NDIS802_11IBSS:
 		default:
 			_rtw_memcpy(pwlanhdr->addr1, StaAddr, ETH_ALEN);
 			_rtw_memcpy(pwlanhdr->addr2, myid(&(padapter->eeprompriv)), ETH_ALEN);
--- a/drivers/staging/rtl8192du/include/rtw_cmd.h
+++ b/drivers/staging/rtl8192du/include/rtw_cmd.h
@@ -921,7 +921,7 @@ extern u8 rtw_setstakey_cmd(_adapter  *p
 extern u8 rtw_clearstakey_cmd(_adapter *padapter, u8 *psta, u8 entry, u8 enqueue);
 extern u8 rtw_joinbss_cmd(_adapter  *padapter, struct wlan_network* pnetwork);
 u8 rtw_disassoc_cmd(_adapter *padapter, u32 deauth_timeout_ms, bool enqueue);
-extern u8 rtw_setopmode_cmd(_adapter  *padapter, NDIS_802_11_NETWORK_INFRASTRUCTURE networktype);
+extern u8 rtw_setopmode_cmd(_adapter  *padapter, enum NDIS_802_11_NETWORK_INFRASTRUCTURE networktype);
 extern u8 rtw_setdatarate_cmd(_adapter  *padapter, u8 *rateset);
 extern u8 rtw_setbasicrate_cmd(_adapter  *padapter, u8 *rateset);
 extern u8 rtw_setbbreg_cmd(_adapter * padapter, u8 offset, u8 val);
--- a/drivers/staging/rtl8192du/include/rtw_ioctl_set.h
+++ b/drivers/staging/rtl8192du/include/rtw_ioctl_set.h
@@ -32,12 +32,12 @@ typedef struct _BSSIDInfo {
 } BSSIDInfo, *PBSSIDInfo;
 
 u8 rtw_set_802_11_add_key(_adapter * padapter, NDIS_802_11_KEY * key);
-u8 rtw_set_802_11_authentication_mode(_adapter *pdapter, NDIS_802_11_AUTHENTICATION_MODE authmode);
+u8 rtw_set_802_11_authentication_mode(_adapter *pdapter, enum NDIS_802_11_AUTHENTICATION_MODE authmode);
 u8 rtw_set_802_11_bssid(_adapter* padapter, u8 *bssid);
 u8 rtw_set_802_11_add_wep(_adapter * padapter, NDIS_802_11_WEP * wep);
 u8 rtw_set_802_11_disassociate(_adapter * padapter);
 u8 rtw_set_802_11_bssid_list_scan(_adapter* padapter, struct ndis_802_11_ssid *pssid, int ssid_max_num);
-u8 rtw_set_802_11_infrastructure_mode(_adapter * padapter, NDIS_802_11_NETWORK_INFRASTRUCTURE networktype);
+u8 rtw_set_802_11_infrastructure_mode(_adapter * padapter, enum NDIS_802_11_NETWORK_INFRASTRUCTURE networktype);
 u8 rtw_set_802_11_remove_wep(_adapter * padapter, u32 keyindex);
 u8 rtw_set_802_11_ssid(_adapter * padapter, struct ndis_802_11_ssid * ssid);
 u8 rtw_set_802_11_remove_key(_adapter * padapter, NDIS_802_11_REMOVE_KEY * key);
--- a/drivers/staging/rtl8192du/include/rtw_security.h
+++ b/drivers/staging/rtl8192du/include/rtw_security.h
@@ -42,13 +42,9 @@
 #define AES_BLOCK_SIZE 16
 #define AES_PRIV_SIZE (4 * 44)
 
-#ifndef Ndis802_11AuthModeWPA2
-#define Ndis802_11AuthModeWPA2 (Ndis802_11AuthModeWPANone + 1)
-#endif
+#define NDIS802_11AUTHMODEWPA2 (NDIS802_11AUTHMODEWPANONE + 1)
 
-#ifndef Ndis802_11AuthModeWPA2PSK
-#define Ndis802_11AuthModeWPA2PSK (Ndis802_11AuthModeWPANone + 2)
-#endif
+#define NDIS802_11AUTHMODEWPA2PSK (NDIS802_11AUTHMODEWPANONE + 2)
 
 union pn48	{
 
--- a/drivers/staging/rtl8192du/include/wlan_bssdef.h
+++ b/drivers/staging/rtl8192du/include/wlan_bssdef.h
@@ -42,14 +42,13 @@ struct ndis_802_11_ssid {
 	u8  Ssid[32];
 };
 
-typedef enum _NDIS_802_11_NETWORK_TYPE
-{
-    Ndis802_11FH,
-    Ndis802_11DS,
-    Ndis802_11OFDM5,
-    Ndis802_11OFDM24,
-    Ndis802_11NetworkTypeMax    // not a real type, defined as an upper bound
-} NDIS_802_11_NETWORK_TYPE, *PNDIS_802_11_NETWORK_TYPE;
+enum NDIS_802_11_NETWORK_TYPE {
+	NDIS802_11FH,
+	NDIS802_11DS,
+	NDIS802_11OFDM5,
+	NDIS802_11OFDM24,
+	NDIS802_11NetworkTypeMax    // not a real type - upper bound
+};
 
 typedef struct _NDIS_802_11_CONFIGURATION_FH
 {
@@ -75,14 +74,13 @@ typedef struct _NDIS_802_11_CONFIGURATIO
 
 
 
-typedef enum _NDIS_802_11_NETWORK_INFRASTRUCTURE
-{
-    Ndis802_11IBSS,
-    Ndis802_11Infrastructure,
-    Ndis802_11AutoUnknown,
-    Ndis802_11InfrastructureMax,     // Not a real value, defined as upper bound
-    Ndis802_11APMode
-} NDIS_802_11_NETWORK_INFRASTRUCTURE, *PNDIS_802_11_NETWORK_INFRASTRUCTURE;
+enum NDIS_802_11_NETWORK_INFRASTRUCTURE {
+	NDIS802_11IBSS,
+	NDIS802_11INFRA,
+	NDIS802_11AUTOUNK,
+	NDIS802_11INFRA_MAX,     // Not a real value, defined as upper bound
+	NDIS802_11APMODE
+};
 
 typedef struct _NDIS_802_11_FIXED_IEs
 {
@@ -108,33 +106,30 @@ Except the IELength, all other fields ar
 partial sum.
 */
 
-typedef enum _NDIS_802_11_AUTHENTICATION_MODE
-{
-    Ndis802_11AuthModeOpen,
-    Ndis802_11AuthModeShared,
-    Ndis802_11AuthModeAutoSwitch,
-    Ndis802_11AuthModeWPA,
-    Ndis802_11AuthModeWPAPSK,
-    Ndis802_11AuthModeWPANone,
-    Ndis802_11AuthModeMax               // Not a real mode, defined as upper bound
-} NDIS_802_11_AUTHENTICATION_MODE, *PNDIS_802_11_AUTHENTICATION_MODE;
-
-typedef enum _NDIS_802_11_WEP_STATUS
-{
-    Ndis802_11WEPEnabled,
-    Ndis802_11Encryption1Enabled = Ndis802_11WEPEnabled,
-    Ndis802_11WEPDisabled,
-    Ndis802_11EncryptionDisabled = Ndis802_11WEPDisabled,
-    Ndis802_11WEPKeyAbsent,
-    Ndis802_11Encryption1KeyAbsent = Ndis802_11WEPKeyAbsent,
-    Ndis802_11WEPNotSupported,
-    Ndis802_11EncryptionNotSupported = Ndis802_11WEPNotSupported,
-    Ndis802_11Encryption2Enabled,
-    Ndis802_11Encryption2KeyAbsent,
-    Ndis802_11Encryption3Enabled,
-    Ndis802_11Encryption3KeyAbsent
-} NDIS_802_11_WEP_STATUS, *PNDIS_802_11_WEP_STATUS,
-  NDIS_802_11_ENCRYPTION_STATUS, *PNDIS_802_11_ENCRYPTION_STATUS;
+enum NDIS_802_11_AUTHENTICATION_MODE {
+	NDIS802_11AUTHMODEOPEN,
+	NDIS802_11AUTHMODESHARED,
+	NDIS802_11AUTHMODESWITCH,
+	NDIS802_11AUTHMODEWPA,
+	NDIS802_11AUTHMODEWPAPSK,
+	NDIS802_11AUTHMODEWPANONE,
+	NDIS802_11AUTHMODEMAX               // Not a real mode, defined as upper bound
+};
+
+enum NDIS_802_11_ENCRYPTION_STATUS {
+	NDIS802_11WEP_ENABLED,
+	NDIS802_11ENCRYPTION1ENABLED = NDIS802_11WEP_ENABLED,
+	NDIS802_11WEPDISABLED,
+	NDIS802_11ENCRYPTION_DISABLED = NDIS802_11WEPDISABLED,
+	NDIS802_11WEPKEYABSENT,
+	NDIS802_11ENCRYPTION1KEYABSENT = NDIS802_11WEPKEYABSENT,
+	NDIS802_11WEPNOTSUPPORTED,
+	NDIS802_11ENCRYPTIONNOTSUPPORTED = NDIS802_11WEPNOTSUPPORTED,
+	NDIS802_11ENCRYPTION2ENABLED,
+	NDIS802_11ENCRYPTION2KEYABSENT,
+	NDIS802_11ENCRYPTION3ENABLED,
+	NDIS802_11ENCRYPTION3KEYABSENT
+};
 
 #define NDIS_802_11_AI_REQFI_CAPABILITIES      1
 #define NDIS_802_11_AI_REQFI_LISTENINTERVAL    2
@@ -171,12 +166,6 @@ typedef struct _NDIS_802_11_ASSOCIATION_
     u32                   OffsetResponseIEs;
 } NDIS_802_11_ASSOCIATION_INFORMATION, *PNDIS_802_11_ASSOCIATION_INFORMATION;
 
-typedef enum _NDIS_802_11_RELOAD_DEFAULTS
-{
-   Ndis802_11ReloadWEPKeys
-} NDIS_802_11_RELOAD_DEFAULTS, *PNDIS_802_11_RELOAD_DEFAULTS;
-
-
 // Key mapping keys require a BSSID
 typedef struct _NDIS_802_11_KEY
 {
@@ -210,17 +199,15 @@ typedef struct _NDIS_802_11_AUTHENTICATI
     u32 Flags;
 } NDIS_802_11_AUTHENTICATION_REQUEST, *PNDIS_802_11_AUTHENTICATION_REQUEST;
 
-typedef enum _NDIS_802_11_STATUS_TYPE
-{
+enum NDIS_802_11_STATUS_TYPE {
 	Ndis802_11StatusType_Authentication,
 	Ndis802_11StatusType_MediaStreamMode,
 	Ndis802_11StatusType_PMKID_CandidateList,
 	Ndis802_11StatusTypeMax    // not a real type, defined as an upper bound
-} NDIS_802_11_STATUS_TYPE, *PNDIS_802_11_STATUS_TYPE;
+};
 
-typedef struct _NDIS_802_11_STATUS_INDICATION
-{
-    NDIS_802_11_STATUS_TYPE StatusType;
+typedef struct _NDIS_802_11_STATUS_INDICATION {
+	enum NDIS_802_11_STATUS_TYPE StatusType;
 } NDIS_802_11_STATUS_INDICATION, *PNDIS_802_11_STATUS_INDICATION;
 
 // mask for authentication/integrity fields
@@ -264,19 +251,19 @@ typedef struct _WLAN_PHY_INFO
 
 typedef struct _WLAN_BSSID_EX
 {
-  u32  Length;
-  NDIS_802_11_MAC_ADDRESS  MacAddress;
-  u8  Reserved[2];//[0]: IS beacon frame
-  struct ndis_802_11_ssid  Ssid;
-  u32  Privacy;
-  NDIS_802_11_RSSI  Rssi;//(in dBM,raw data ,get from PHY)
-  NDIS_802_11_NETWORK_TYPE  NetworkTypeInUse;
-  NDIS_802_11_CONFIGURATION  Configuration;
-  NDIS_802_11_NETWORK_INFRASTRUCTURE  InfrastructureMode;
-  NDIS_802_11_RATES_EX  SupportedRates;
-  WLAN_PHY_INFO	PhyInfo;
-  u32  IELength;
-  u8  IEs[MAX_IE_SZ];	//(timestamp, beacon interval, and capability information)
+	u32  Length;
+	NDIS_802_11_MAC_ADDRESS  MacAddress;
+	u8  Reserved[2];//[0]: IS beacon frame
+	struct ndis_802_11_ssid  Ssid;
+	u32  Privacy;
+	NDIS_802_11_RSSI  Rssi;//(in dBM,raw data ,get from PHY)
+	enum NDIS_802_11_NETWORK_TYPE  NetworkTypeInUse;
+	NDIS_802_11_CONFIGURATION  Configuration;
+	enum NDIS_802_11_NETWORK_INFRASTRUCTURE  InfrastructureMode;
+	NDIS_802_11_RATES_EX  SupportedRates;
+	WLAN_PHY_INFO	PhyInfo;
+	u32  IELength;
+	u8  IEs[MAX_IE_SZ];	//(timestamp, beacon interval, and capability information)
 } __attribute__((packed)) WLAN_BSSID_EX, *PWLAN_BSSID_EX;
 
 __inline  static uint get_WLAN_BSSID_EX_sz(WLAN_BSSID_EX *bss)
@@ -350,8 +337,8 @@ typedef struct _NDIS_802_11_PMKID_CANDID
 
 typedef struct _NDIS_802_11_AUTHENTICATION_ENCRYPTION
 {
-	NDIS_802_11_AUTHENTICATION_MODE AuthModeSupported;
-	NDIS_802_11_ENCRYPTION_STATUS EncryptStatusSupported;
+	enum NDIS_802_11_AUTHENTICATION_MODE AuthModeSupported;
+	enum NDIS_802_11_ENCRYPTION_STATUS EncryptStatusSupported;
 
 } NDIS_802_11_AUTHENTICATION_ENCRYPTION, *PNDIS_802_11_AUTHENTICATION_ENCRYPTION;
 
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -623,19 +623,19 @@ static int wpa_set_auth_algs(struct net_
 
 	if ((value & AUTH_ALG_SHARED_KEY)&&(value & AUTH_ALG_OPEN_SYSTEM)) {
 		DBG_8192D("wpa_set_auth_algs, AUTH_ALG_SHARED_KEY and  AUTH_ALG_OPEN_SYSTEM [value:0x%x]\n",value);
-		padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
-		padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeAutoSwitch;
+		padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
+		padapter->securitypriv.ndisauthtype = NDIS802_11AUTHMODESWITCH;
 		padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_Auto;
 	} else if (value & AUTH_ALG_SHARED_KEY) {
 		DBG_8192D("wpa_set_auth_algs, AUTH_ALG_SHARED_KEY  [value:0x%x]\n",value);
-		padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+		padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 
-		padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeShared;
+		padapter->securitypriv.ndisauthtype = NDIS802_11AUTHMODESHARED;
 		padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_Shared;
 	} else if (value & AUTH_ALG_OPEN_SYSTEM) {
 		DBG_8192D("wpa_set_auth_algs, AUTH_ALG_OPEN_SYSTEM\n");
-		if (padapter->securitypriv.ndisauthtype < Ndis802_11AuthModeWPAPSK) {
-			padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeOpen;
+		if (padapter->securitypriv.ndisauthtype < NDIS802_11AUTHMODEWPAPSK) {
+			padapter->securitypriv.ndisauthtype = NDIS802_11AUTHMODEOPEN;
 			padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_Open;
 		}
 	}
@@ -695,7 +695,7 @@ _func_enter_;
 		RT_TRACE(_module_rtl871x_ioctl_os_c,_drv_err_,("wpa_set_encryption, crypt.alg = WEP\n"));
 		DBG_8192D("wpa_set_encryption, crypt.alg = WEP\n");
 
-		padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+		padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 		padapter->securitypriv.dot11PrivacyAlgrthm=_WEP40_;
 		padapter->securitypriv.dot118021XGrpPrivacy=_WEP40_;
 
@@ -787,8 +787,8 @@ _func_enter_;
 				if (strcmp(param->u.crypt.alg, "none") != 0)
 					psta->ieee8021x_blocked = false;
 
-				if ((padapter->securitypriv.ndisencryptstatus == Ndis802_11Encryption2Enabled)||
-						(padapter->securitypriv.ndisencryptstatus ==  Ndis802_11Encryption3Enabled))
+				if ((padapter->securitypriv.ndisencryptstatus == NDIS802_11ENCRYPTION2ENABLED)||
+						(padapter->securitypriv.ndisencryptstatus ==  NDIS802_11ENCRYPTION3ENABLED))
 				{
 					psta->dot118021XPrivacy = padapter->securitypriv.dot11PrivacyAlgrthm;
 				}
@@ -847,8 +847,8 @@ _func_enter_;
 				if (strcmp(param->u.crypt.alg, "none") != 0)
 					pbcmc_sta->ieee8021x_blocked = false;
 
-				if ((padapter->securitypriv.ndisencryptstatus == Ndis802_11Encryption2Enabled)||
-						(padapter->securitypriv.ndisencryptstatus ==  Ndis802_11Encryption3Enabled))
+				if ((padapter->securitypriv.ndisencryptstatus == NDIS802_11ENCRYPTION2ENABLED)||
+						(padapter->securitypriv.ndisencryptstatus ==  NDIS802_11ENCRYPTION3ENABLED))
 				{
 					pbcmc_sta->dot118021XPrivacy = padapter->securitypriv.dot11PrivacyAlgrthm;
 				}
@@ -917,14 +917,14 @@ static int rtw_set_wpa_ie(_adapter *pada
 		if (rtw_parse_wpa_ie(buf, ielen, &group_cipher, &pairwise_cipher) == _SUCCESS)
 		{
 			padapter->securitypriv.dot11AuthAlgrthm= dot11AuthAlgrthm_8021X;
-			padapter->securitypriv.ndisauthtype=Ndis802_11AuthModeWPAPSK;
+			padapter->securitypriv.ndisauthtype=NDIS802_11AUTHMODEWPAPSK;
 			_rtw_memcpy(padapter->securitypriv.supplicant_ie, &buf[0], ielen);
 		}
 
 		if (rtw_parse_wpa2_ie(buf, ielen, &group_cipher, &pairwise_cipher) == _SUCCESS)
 		{
 			padapter->securitypriv.dot11AuthAlgrthm= dot11AuthAlgrthm_8021X;
-			padapter->securitypriv.ndisauthtype=Ndis802_11AuthModeWPA2PSK;
+			padapter->securitypriv.ndisauthtype=NDIS802_11AUTHMODEWPA2PSK;
 			_rtw_memcpy(padapter->securitypriv.supplicant_ie, &buf[0], ielen);
 		}
 
@@ -941,23 +941,23 @@ static int rtw_set_wpa_ie(_adapter *pada
 		{
 			case WPA_CIPHER_NONE:
 				padapter->securitypriv.dot118021XGrpPrivacy=_NO_PRIVACY_;
-				padapter->securitypriv.ndisencryptstatus=Ndis802_11EncryptionDisabled;
+				padapter->securitypriv.ndisencryptstatus=NDIS802_11ENCRYPTION_DISABLED;
 				break;
 			case WPA_CIPHER_WEP40:
 				padapter->securitypriv.dot118021XGrpPrivacy=_WEP40_;
-				padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+				padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 				break;
 			case WPA_CIPHER_TKIP:
 				padapter->securitypriv.dot118021XGrpPrivacy=_TKIP_;
-				padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption2Enabled;
+				padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION2ENABLED;
 				break;
 			case WPA_CIPHER_CCMP:
 				padapter->securitypriv.dot118021XGrpPrivacy=_AES_;
-				padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption3Enabled;
+				padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION3ENABLED;
 				break;
 			case WPA_CIPHER_WEP104:
 				padapter->securitypriv.dot118021XGrpPrivacy=_WEP104_;
-				padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+				padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 				break;
 		}
 
@@ -965,23 +965,23 @@ static int rtw_set_wpa_ie(_adapter *pada
 		{
 			case WPA_CIPHER_NONE:
 				padapter->securitypriv.dot11PrivacyAlgrthm=_NO_PRIVACY_;
-				padapter->securitypriv.ndisencryptstatus=Ndis802_11EncryptionDisabled;
+				padapter->securitypriv.ndisencryptstatus=NDIS802_11ENCRYPTION_DISABLED;
 				break;
 			case WPA_CIPHER_WEP40:
 				padapter->securitypriv.dot11PrivacyAlgrthm=_WEP40_;
-				padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+				padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 				break;
 			case WPA_CIPHER_TKIP:
 				padapter->securitypriv.dot11PrivacyAlgrthm=_TKIP_;
-				padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption2Enabled;
+				padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION2ENABLED;
 				break;
 			case WPA_CIPHER_CCMP:
 				padapter->securitypriv.dot11PrivacyAlgrthm=_AES_;
-				padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption3Enabled;
+				padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION3ENABLED;
 				break;
 			case WPA_CIPHER_WEP104:
 				padapter->securitypriv.dot11PrivacyAlgrthm=_WEP104_;
-				padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+				padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 				break;
 		}
 
@@ -1153,7 +1153,7 @@ static int rtw_wx_set_mode(struct net_de
 			     union iwreq_data *wrqu, char *b)
 {
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
-	NDIS_802_11_NETWORK_INFRASTRUCTURE networkType ;
+	enum NDIS_802_11_NETWORK_INFRASTRUCTURE networkType ;
 	int ret = 0;
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	_queue *queue = &pmlmepriv->scanned_queue;
@@ -1172,20 +1172,20 @@ static int rtw_wx_set_mode(struct net_de
 	switch(wrqu->mode)
 	{
 		case IW_MODE_AUTO:
-			networkType = Ndis802_11AutoUnknown;
+			networkType = NDIS802_11AUTOUNK;
 			DBG_8192D("set_mode = IW_MODE_AUTO\n");
 			break;
 		case IW_MODE_ADHOC:
-			networkType = Ndis802_11IBSS;
+			networkType = NDIS802_11IBSS;
 			DBG_8192D("set_mode = IW_MODE_ADHOC\n");
 			break;
 		case IW_MODE_MASTER:
-			networkType = Ndis802_11APMode;
+			networkType = NDIS802_11APMODE;
 			DBG_8192D("set_mode = IW_MODE_MASTER\n");
                         //rtw_setopmode_cmd(padapter, networkType);
 			break;
 		case IW_MODE_INFRA:
-			networkType = Ndis802_11Infrastructure;
+			networkType = NDIS802_11INFRA;
 			DBG_8192D("set_mode = IW_MODE_INFRA\n");
 			break;
 
@@ -1196,13 +1196,13 @@ static int rtw_wx_set_mode(struct net_de
 	}
 
 /*
-	if (Ndis802_11APMode == networkType)
+	if (NDIS802_11APMODE == networkType)
 	{
 		rtw_setopmode_cmd(padapter, networkType);
 	}
 	else
 	{
-		rtw_setopmode_cmd(padapter, Ndis802_11AutoUnknown);
+		rtw_setopmode_cmd(padapter, NDIS802_11AUTOUNK);
 	}
 */
 	spin_lock_bh(&pmlmepriv->lock);
@@ -1515,7 +1515,7 @@ static int rtw_wx_set_wap(struct net_dev
 	u8 *dst_bssid, *src_bssid;
 	_queue	*queue	= &(pmlmepriv->scanned_queue);
 	struct	wlan_network	*pnetwork = NULL;
-	NDIS_802_11_AUTHENTICATION_MODE	authmode;
+	enum NDIS_802_11_AUTHENTICATION_MODE	authmode;
 
 	_func_enter_;
 /*
@@ -2092,7 +2092,7 @@ static int rtw_wx_set_essid(struct net_d
 	_list *phead;
 	s8 status = true;
 	struct wlan_network *pnetwork = NULL;
-	NDIS_802_11_AUTHENTICATION_MODE authmode;
+	enum NDIS_802_11_AUTHENTICATION_MODE authmode;
 	struct ndis_802_11_ssid ndis_ssid;
 	u8 *dst_ssid, *src_ssid;
 
@@ -2518,7 +2518,7 @@ static int rtw_wx_set_enc(struct net_dev
 	u32 key, ret = 0;
 	u32 keyindex_provided;
 	NDIS_802_11_WEP	 wep;
-	NDIS_802_11_AUTHENTICATION_MODE authmode;
+	enum NDIS_802_11_AUTHENTICATION_MODE authmode;
 
 	struct iw_point *erq = &(wrqu->encoding);
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
@@ -2534,11 +2534,11 @@ static int rtw_wx_set_enc(struct net_dev
 	if (erq->flags & IW_ENCODE_DISABLED)
 	{
 		DBG_8192D("EncryptionDisabled\n");
-		padapter->securitypriv.ndisencryptstatus = Ndis802_11EncryptionDisabled;
+		padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION_DISABLED;
 		padapter->securitypriv.dot11PrivacyAlgrthm=_NO_PRIVACY_;
 		padapter->securitypriv.dot118021XGrpPrivacy=_NO_PRIVACY_;
 		padapter->securitypriv.dot11AuthAlgrthm= dot11AuthAlgrthm_Open; //open system
-		authmode = Ndis802_11AuthModeOpen;
+		authmode = NDIS802_11AUTHMODEOPEN;
 		padapter->securitypriv.ndisauthtype=authmode;
 
 		goto exit;
@@ -2561,36 +2561,36 @@ static int rtw_wx_set_enc(struct net_dev
 	if (erq->flags & IW_ENCODE_OPEN)
 	{
 		DBG_8192D("rtw_wx_set_enc():IW_ENCODE_OPEN\n");
-		padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;//Ndis802_11EncryptionDisabled;
+		padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;//NDIS802_11ENCRYPTION_DISABLED;
 
 		padapter->securitypriv.dot11AuthAlgrthm= dot11AuthAlgrthm_Open;
 
 		padapter->securitypriv.dot11PrivacyAlgrthm=_NO_PRIVACY_;
 		padapter->securitypriv.dot118021XGrpPrivacy=_NO_PRIVACY_;
-		authmode = Ndis802_11AuthModeOpen;
+		authmode = NDIS802_11AUTHMODEOPEN;
 		padapter->securitypriv.ndisauthtype=authmode;
 	}
 	else if (erq->flags & IW_ENCODE_RESTRICTED)
 	{
 		DBG_8192D("rtw_wx_set_enc():IW_ENCODE_RESTRICTED\n");
-		padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+		padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 
 		padapter->securitypriv.dot11AuthAlgrthm= dot11AuthAlgrthm_Shared;
 
 		padapter->securitypriv.dot11PrivacyAlgrthm=_WEP40_;
 		padapter->securitypriv.dot118021XGrpPrivacy=_WEP40_;
-		authmode = Ndis802_11AuthModeShared;
+		authmode = NDIS802_11AUTHMODESHARED;
 		padapter->securitypriv.ndisauthtype=authmode;
 	}
 	else
 	{
 		DBG_8192D("rtw_wx_set_enc():erq->flags=0x%x\n", erq->flags);
 
-		padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;//Ndis802_11EncryptionDisabled;
+		padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;//NDIS802_11ENCRYPTION_DISABLED;
 		padapter->securitypriv.dot11AuthAlgrthm= dot11AuthAlgrthm_Open; //open system
 		padapter->securitypriv.dot11PrivacyAlgrthm=_NO_PRIVACY_;
 		padapter->securitypriv.dot118021XGrpPrivacy=_NO_PRIVACY_;
-		authmode = Ndis802_11AuthModeOpen;
+		authmode = NDIS802_11AUTHMODEOPEN;
 		padapter->securitypriv.ndisauthtype=authmode;
 	}
 
@@ -2683,22 +2683,22 @@ static int rtw_wx_get_enc(struct net_dev
 
 	erq->flags = key + 1;
 
-	//if (padapter->securitypriv.ndisauthtype == Ndis802_11AuthModeOpen)
+	//if (padapter->securitypriv.ndisauthtype == NDIS802_11AUTHMODEOPEN)
 	//{
 	//      erq->flags |= IW_ENCODE_OPEN;
 	//}
 
 	switch(padapter->securitypriv.ndisencryptstatus)
 	{
-		case Ndis802_11EncryptionNotSupported:
-		case Ndis802_11EncryptionDisabled:
+		case NDIS802_11ENCRYPTIONNOTSUPPORTED:
+		case NDIS802_11ENCRYPTION_DISABLED:
 
 		erq->length = 0;
 		erq->flags |= IW_ENCODE_DISABLED;
 
 		break;
 
-		case Ndis802_11Encryption1Enabled:
+		case NDIS802_11ENCRYPTION1ENABLED:
 
 		erq->length = padapter->securitypriv.dot11DefKeylen[key];
 
@@ -2708,11 +2708,11 @@ static int rtw_wx_get_enc(struct net_dev
 
 		erq->flags |= IW_ENCODE_ENABLED;
 
-			if (padapter->securitypriv.ndisauthtype == Ndis802_11AuthModeOpen)
+			if (padapter->securitypriv.ndisauthtype == NDIS802_11AUTHMODEOPEN)
 			{
 				erq->flags |= IW_ENCODE_OPEN;
 			}
-			else if (padapter->securitypriv.ndisauthtype == Ndis802_11AuthModeShared)
+			else if (padapter->securitypriv.ndisauthtype == NDIS802_11AUTHMODESHARED)
 			{
 		erq->flags |= IW_ENCODE_RESTRICTED;
 			}
@@ -2725,8 +2725,8 @@ static int rtw_wx_get_enc(struct net_dev
 
 		break;
 
-		case Ndis802_11Encryption2Enabled:
-		case Ndis802_11Encryption3Enabled:
+		case NDIS802_11ENCRYPTION2ENABLED:
+		case NDIS802_11ENCRYPTION3ENABLED:
 
 		erq->length = 16;
 		erq->flags |= (IW_ENCODE_ENABLED | IW_ENCODE_OPEN | IW_ENCODE_NOKEY);
@@ -2822,18 +2822,18 @@ static int rtw_wx_set_auth(struct net_de
 			 * be set.
 			 */
 
-			if (padapter->securitypriv.ndisencryptstatus == Ndis802_11Encryption1Enabled)
+			if (padapter->securitypriv.ndisencryptstatus == NDIS802_11ENCRYPTION1ENABLED)
 			{
-				break;//it means init value, or using wep, ndisencryptstatus = Ndis802_11Encryption1Enabled,
+				break;//it means init value, or using wep, ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED,
 						// then it needn't reset it;
 			}
 
 			if (param->value){
-				padapter->securitypriv.ndisencryptstatus = Ndis802_11EncryptionDisabled;
+				padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION_DISABLED;
 				padapter->securitypriv.dot11PrivacyAlgrthm=_NO_PRIVACY_;
 				padapter->securitypriv.dot118021XGrpPrivacy=_NO_PRIVACY_;
 				padapter->securitypriv.dot11AuthAlgrthm= dot11AuthAlgrthm_Open; //open system
-				padapter->securitypriv.ndisauthtype=Ndis802_11AuthModeOpen;
+				padapter->securitypriv.ndisauthtype=NDIS802_11AUTHMODEOPEN;
 			}
 
 			break;
@@ -6559,12 +6559,12 @@ static int wpa_set_param(struct net_devi
 		switch((value)&0xff)
 		{
 			case 1 : //WPA
-			padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeWPAPSK; //WPA_PSK
-			padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption2Enabled;
+			padapter->securitypriv.ndisauthtype = NDIS802_11AUTHMODEWPAPSK; //WPA_PSK
+			padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION2ENABLED;
 				break;
 			case 2: //WPA2
-			padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeWPA2PSK; //WPA2_PSK
-			padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption3Enabled;
+			padapter->securitypriv.ndisauthtype = NDIS802_11AUTHMODEWPA2PSK; //WPA2_PSK
+			padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION3ENABLED;
 				break;
 		}
 
@@ -6956,7 +6956,7 @@ static int rtw_set_encryption(struct net
 		{
 			DBG_8192D("wep, set_tx=1\n");
 
-			psecuritypriv->ndisencryptstatus = Ndis802_11Encryption1Enabled;
+			psecuritypriv->ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 			psecuritypriv->dot11PrivacyAlgrthm=_WEP40_;
 			psecuritypriv->dot118021XGrpPrivacy=_WEP40_;
 
--- a/drivers/staging/rtl8192du/os_dep/mlme_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/mlme_linux.c
@@ -135,8 +135,8 @@ void rtw_reset_securitypriv( _adapter *a
 		adapter->securitypriv.btkip_countermeasure = backupTKIPCountermeasure;
 		adapter->securitypriv.btkip_countermeasure_time = backupTKIPcountermeasure_time;
 
-		adapter->securitypriv.ndisauthtype = Ndis802_11AuthModeOpen;
-		adapter->securitypriv.ndisencryptstatus = Ndis802_11WEPDisabled;
+		adapter->securitypriv.ndisauthtype = NDIS802_11AUTHMODEOPEN;
+		adapter->securitypriv.ndisencryptstatus = NDIS802_11WEPDISABLED;
 
 	}
 	else //reset values in securitypriv
@@ -152,8 +152,8 @@ void rtw_reset_securitypriv( _adapter *a
 		psec_priv->dot118021XGrpPrivacy = _NO_PRIVACY_;
 		psec_priv->dot118021XGrpKeyid = 1;
 
-		psec_priv->ndisauthtype = Ndis802_11AuthModeOpen;
-		psec_priv->ndisencryptstatus = Ndis802_11WEPDisabled;
+		psec_priv->ndisauthtype = NDIS802_11AUTHMODEOPEN;
+		psec_priv->ndisencryptstatus = NDIS802_11WEPDISABLED;
 		//}
 	}
 }
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -45,7 +45,7 @@ static int rtw_rfintfs = HWPI;
 static int rtw_lbkmode = 0;/* RTL8712_AIR_TRX; */
 
 
-static int rtw_network_mode = Ndis802_11IBSS;
+static int rtw_network_mode = NDIS802_11IBSS;
 static int rtw_channel = 1;/* ad-hoc support requirement */
 static int rtw_wireless_mode = WIRELESS_11BG_24N;
 static int rtw_vrtl_carrier_sense = AUTO_VCS;
@@ -1142,8 +1142,8 @@ u8 rtw_init_default_value(_adapter *pada
 	psecuritypriv->dot118021XGrpPrivacy = _NO_PRIVACY_;
 	psecuritypriv->dot118021XGrpKeyid = 1;
 
-	psecuritypriv->ndisauthtype = Ndis802_11AuthModeOpen;
-	psecuritypriv->ndisencryptstatus = Ndis802_11WEPDisabled;
+	psecuritypriv->ndisauthtype = NDIS802_11AUTHMODEOPEN;
+	psecuritypriv->ndisencryptstatus = NDIS802_11WEPDISABLED;
 
 
 	/* pwrctrl_priv */
