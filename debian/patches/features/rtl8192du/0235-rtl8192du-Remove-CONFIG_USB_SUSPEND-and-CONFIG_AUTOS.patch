From b06a2d7eb5284b849e8305d9c1e2a3f608ef8ec8 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Thu, 20 Feb 2014 16:25:07 -0600
Subject: [PATCH 235/390] rtl8192du: Remove CONFIG_USB_SUSPEND and
 CONFIG_AUTOSUSPEND

These were not selected.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_mlme.c         |   7 ---
 core/rtw_pwrctrl.c      | 125 ++++++++----------------------------------------
 include/drv_types.h     |   6 ---
 include/osdep_service.h |   4 --
 include/rtw_pwrctrl.h   |   3 --
 os_dep/os_intfs.c       |   3 --
 os_dep/usb_intf.c       | 120 ----------------------------------------------
 7 files changed, 21 insertions(+), 247 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -2339,13 +2339,6 @@ int rtw_set_key(struct rtw_adapter *adap
 	psetkeyparm->keyid = (u8) keyid;	/* 0~3 */
 	psetkeyparm->set_tx = set_tx;
 	pmlmepriv->key_mask |= BIT(psetkeyparm->keyid);
-#ifdef CONFIG_AUTOSUSPEND
-	if (true == adapter->pwrctrlpriv.bInternalAutoSuspend) {
-		adapter->pwrctrlpriv.wepkeymask = pmlmepriv->key_mask;
-		DBG_8192D("....AutoSuspend pwrctrlpriv.wepkeymask(%x)\n",
-			  adapter->pwrctrlpriv.wepkeymask);
-	}
-#endif
 	DBG_8192D("==> rtw_set_key algorithm(%x),keyid(%x),key_mask(%x)\n",
 		  psetkeyparm->algorithm, psetkeyparm->keyid,
 		  pmlmepriv->key_mask);
--- a/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
+++ b/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
@@ -100,11 +100,6 @@ int ips_leave(struct rtw_adapter *padapt
 	return result;
 }
 
-#ifdef CONFIG_AUTOSUSPEND
-extern void autosuspend_enter(struct rtw_adapter *padapter);
-extern int autoresume_enter(struct rtw_adapter *padapter);
-#endif
-
 #ifdef SUPPORT_HW_RFOFF_DETECTED
 int rtw_hw_suspend(struct rtw_adapter *padapter);
 int rtw_hw_resume(struct rtw_adapter *padapter);
@@ -186,52 +181,24 @@ void rtw_ps_processor(struct rtw_adapter
 	if (pwrpriv->bips_processing == true)
 		goto exit;
 
-	/* DBG_8192D("==> fw report state(0x%x)\n",rtw_read8(padapter,0x1ca)); */
 	if (padapter->pwrctrlpriv.bHWPwrPindetect) {
-#ifdef CONFIG_AUTOSUSPEND
-		if (padapter->registrypriv.usbss_enable) {
-			if (pwrpriv->rf_pwrstate == rf_on) {
-				if (padapter->net_closed == true)
-					pwrpriv->ps_flag = true;
-
-				rfpwrstate = RfOnOffDetect(padapter);
-				DBG_8192D("@@@@- #1  %s==> rfstate:%s\n",
-					  __func__,
-					  (rfpwrstate ==
-					   rf_on) ? "rf_on" : "rf_off");
-				if (rfpwrstate != pwrpriv->rf_pwrstate) {
-					if (rfpwrstate == rf_off) {
-						pwrpriv->change_rfpwrstate =
-						    rf_off;
-
-						pwrpriv->bkeepfwalive = true;
-						pwrpriv->brfoffbyhw = true;
-
-						autosuspend_enter(padapter);
-					}
-				}
-			}
-		} else
-#endif /* CONFIG_AUTOSUSPEND */
-		{
-			rfpwrstate = RfOnOffDetect(padapter);
-			DBG_8192D("@@@@- #2  %s==> rfstate:%s\n", __func__,
-				  (rfpwrstate == rf_on) ? "rf_on" : "rf_off");
-
-			if (rfpwrstate != pwrpriv->rf_pwrstate) {
-				if (rfpwrstate == rf_off) {
-					pwrpriv->change_rfpwrstate = rf_off;
-					pwrpriv->brfoffbyhw = true;
-					padapter->bCardDisableWOHSM = true;
-					rtw_hw_suspend(padapter);
-				} else {
-					pwrpriv->change_rfpwrstate = rf_on;
-					rtw_hw_resume(padapter);
-				}
-				DBG_8192D("current rf_pwrstate(%s)\n",
-					  (pwrpriv->rf_pwrstate ==
-					   rf_off) ? "rf_off" : "rf_on");
+		rfpwrstate = RfOnOffDetect(padapter);
+		DBG_8192D("@@@@- #2  %s==> rfstate:%s\n", __func__,
+			  (rfpwrstate == rf_on) ? "rf_on" : "rf_off");
+
+		if (rfpwrstate != pwrpriv->rf_pwrstate) {
+			if (rfpwrstate == rf_off) {
+				pwrpriv->change_rfpwrstate = rf_off;
+				pwrpriv->brfoffbyhw = true;
+				padapter->bCardDisableWOHSM = true;
+				rtw_hw_suspend(padapter);
+			} else {
+				pwrpriv->change_rfpwrstate = rf_on;
+				rtw_hw_resume(padapter);
 			}
+			DBG_8192D("current rf_pwrstate(%s)\n",
+				  (pwrpriv->rf_pwrstate ==
+				   rf_off) ? "rf_off" : "rf_on");
 		}
 		pwrpriv->pwr_state_check_cnts++;
 	}
@@ -253,21 +220,7 @@ void rtw_ps_processor(struct rtw_adapter
 			  get_fwstate(pmlmepriv));
 		pwrpriv->change_rfpwrstate = rf_off;
 
-#ifdef CONFIG_AUTOSUSPEND
-		if (padapter->registrypriv.usbss_enable) {
-			if (pwrpriv->bHWPwrPindetect)
-				pwrpriv->bkeepfwalive = true;
-
-			if (padapter->net_closed == true)
-				pwrpriv->ps_flag = true;
-
-			padapter->bCardDisableWOHSM = true;
-			autosuspend_enter(padapter);
-		} else
-#endif /* CONFIG_AUTOSUSPEND */
-		{
-			ips_enter(padapter);
-		}
+		ips_enter(padapter);
 	}
 exit:
 	rtw_set_pwr_state_check_timer(&padapter->pwrctrlpriv);
@@ -536,19 +489,7 @@ void LeaveAllPowerSaveMode(struct rtw_ad
 		p2p_ps_wk_cmd(adapter, P2P_PS_DISABLE, 0);
 #endif /*  CONFIG_P2P_PS */
 		rtw_lps_leave(adapter);
-	} else {
-		if (adapter->pwrctrlpriv.rf_pwrstate == rf_off) {
-#ifdef CONFIG_AUTOSUSPEND
-			if (adapter->registrypriv.usbss_enable) {
-				usb_disable_autosuspend(adapter_to_dvobj
-							(adapter)->pusbdev);
-			} else
-#endif
-			{
-			}
-		}
 	}
-
 }
 
 void rtw_init_pwrctrl_priv(struct rtw_adapter *padapter)
@@ -569,13 +510,6 @@ void rtw_init_pwrctrl_priv(struct rtw_ad
 	pwrctrlpriv->bInSuspend = false;
 	pwrctrlpriv->bkeepfwalive = false;
 
-#ifdef CONFIG_AUTOSUSPEND
-#ifdef SUPPORT_HW_RFOFF_DETECTED
-	pwrctrlpriv->pwr_state_check_interval =
-	    (pwrctrlpriv->bHWPwrPindetect) ? 1000 : 2000;
-#endif
-#endif
-
 	pwrctrlpriv->LpsIdleCount = 0;
 	pwrctrlpriv->power_mgnt = padapter->registrypriv.power_mgnt;	/*  PS_MODE_MIN; */
 	pwrctrlpriv->bLeisurePs =
@@ -688,29 +622,12 @@ int _rtw_pwr_wakeup(struct rtw_adapter *
 	}
 
 	if (rf_off == pwrpriv->rf_pwrstate) {
-#ifdef CONFIG_AUTOSUSPEND
-		if (pwrpriv->brfoffbyhw == true) {
-			DBG_8192D("hw still in rf_off state ...........\n");
+		DBG_8192D("%s call ips_leave....\n", __func__);
+		if (_FAIL == ips_leave(padapter)) {
+			DBG_8192D
+			    ("======> ips_leave fail.............\n");
 			ret = _FAIL;
 			goto exit;
-		} else if (padapter->registrypriv.usbss_enable) {
-			DBG_8192D("%s call autoresume_enter....\n", __func__);
-			if (_FAIL == autoresume_enter(padapter)) {
-				DBG_8192D
-				    ("======> autoresume fail.............\n");
-				ret = _FAIL;
-				goto exit;
-			}
-		} else
-#endif
-		{
-			DBG_8192D("%s call ips_leave....\n", __func__);
-			if (_FAIL == ips_leave(padapter)) {
-				DBG_8192D
-				    ("======> ips_leave fail.............\n");
-				ret = _FAIL;
-				goto exit;
-			}
 		}
 	}
 
--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -361,20 +361,14 @@ struct rtw_adapter {
 	u8 bReadPortCancel;
 	u8 bWritePortCancel;
 	u8 bRxRSSIDisplay;
-	/* 	Added by Albert 2012/07/26 */
 	/* 	The driver will write the initial gain everytime when running in the DM_Write_DIG function. */
 	u8 bForceWriteInitGain;
-	/* 	Added by Albert 2012/10/26 */
 	/* 	The driver will show up the desired channel number when this flag is 1. */
 	u8 bNotifyChannelChange;
 #ifdef CONFIG_P2P
-	/* 	Added by Albert 2012/12/06 */
 	/* 	The driver will show the current P2P status when the upper application reads it. */
 	u8 bShowGetP2PState;
 #endif
-#ifdef CONFIG_AUTOSUSPEND
-	u8	bDisableAutosuspend;
-#endif
 
 	/* pbuddy_adapter is used only in  two inteface case, (iface_nums=2 in struct dvobj_priv) */
 	/* PRIMARY_ADAPTER's buddy is SECONDARY_ADAPTER */
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -65,10 +65,6 @@
 	#include <linux/usb.h>
 	#include <linux/usb/ch9.h>
 
-#ifdef CONFIG_USB_SUSPEND
-#define CONFIG_AUTOSUSPEND	1
-#endif
-
 #define _mutex	struct mutex
 struct	__queue	{
 	struct	list_head	queue;
--- a/drivers/staging/rtl8192du/include/rtw_pwrctrl.h
+++ b/drivers/staging/rtl8192du/include/rtw_pwrctrl.h
@@ -262,9 +262,6 @@ int ips_leave(struct rtw_adapter * padap
 
 void rtw_ps_processor(struct rtw_adapter*padapter);
 
-#ifdef CONFIG_AUTOSUSPEND
-int autoresume_enter(struct rtw_adapter* padapter);
-#endif
 #ifdef SUPPORT_HW_RFOFF_DETECTED
 rt_rf_power_state RfOnOffDetect(IN	struct rtw_adapter * adapter);
 #endif
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -688,9 +688,6 @@ static uint loadparam(struct rtw_adapter
 
 	registry_par->antdiv_cfg = (u8)rtw_antdiv_cfg;
 
-#ifdef CONFIG_AUTOSUSPEND
-	registry_par->usbss_enable = (u8)rtw_enusbss;/* 0:disable, 1:enable */
-#endif
 #ifdef SUPPORT_HW_RFOFF_DETECTED
 	registry_par->hwpdn_mode = (u8)rtw_hwpdn_mode;/* 0:disable, 1:enable, 2:by EFUSE config */
 	registry_par->hwpwrp_detect = (u8)rtw_hwpwrp_detect;/* 0:disable, 1:enable */
--- a/drivers/staging/rtl8192du/os_dep/usb_intf.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_intf.c
@@ -195,9 +195,6 @@ static struct rtw_usb_drv rtl8192d_usb_d
 	.usbdrv.suspend =  rtw_suspend,
 	.usbdrv.resume = rtw_resume,
 	.usbdrv.reset_resume   = rtw_resume,
-	#ifdef CONFIG_AUTOSUSPEND
-	.usbdrv.supports_autosuspend = 1,
-	#endif
 };
 static struct rtw_usb_drv *usb_drv = &rtl8192d_usb_drv;
 
@@ -642,19 +639,6 @@ static int rtw_suspend(struct usb_interf
 		goto exit;
 	}
 
-	if (pwrpriv->bInternalAutoSuspend)
-	{
-	#ifdef CONFIG_AUTOSUSPEND
-	#ifdef SUPPORT_HW_RFOFF_DETECTED
-		/*  The FW command register update must after MAC and FW init ready. */
-		if ((padapter->bFWReady) && (padapter->pwrctrlpriv.bHWPwrPindetect) && (padapter->registrypriv.usbss_enable))
-		{
-			u8 bOpen = true;
-			rtw_interface_ps_func(padapter,HAL_USB_SELECT_SUSPEND,&bOpen);
-		}
-	#endif
-	#endif
-	}
 	pwrpriv->bInSuspend = true;
 	rtw_cancel_all_timer(padapter);
 	LeaveAllPowerSaveMode(padapter);
@@ -695,17 +679,10 @@ static int rtw_suspend(struct usb_interf
 	rtw_indicate_disconnect(padapter);
 	/* s2-3. */
 	rtw_free_assoc_resources(padapter, 1);
-#ifdef CONFIG_AUTOSUSPEND
-	if (!pwrpriv->bInternalAutoSuspend)
-#endif
 	/* s2-4. */
 	rtw_free_network_queue(padapter, true);
 
 	rtw_dev_unload(padapter);
-#ifdef CONFIG_AUTOSUSPEND
-	pwrpriv->rf_pwrstate = rf_off;
-	pwrpriv->bips_processing = false;
-#endif
 	_exit_pwrlock(&pwrpriv->lock);
 
 	if (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY))
@@ -764,42 +741,6 @@ int rtw_resume_process(struct rtw_adapte
 	netif_device_attach(pnetdev);
 	netif_carrier_on(pnetdev);
 
-#ifdef CONFIG_AUTOSUSPEND
-	if (pwrpriv->bInternalAutoSuspend)
-	{
-		#ifdef CONFIG_AUTOSUSPEND
-		#ifdef SUPPORT_HW_RFOFF_DETECTED
-			/*  The FW command register update must after MAC and FW init ready. */
-		if ((padapter->bFWReady) && (padapter->pwrctrlpriv.bHWPwrPindetect) && (padapter->registrypriv.usbss_enable))
-		{
-			u8 bOpen = false;
-			rtw_interface_ps_func(padapter,HAL_USB_SELECT_SUSPEND,&bOpen);
-		}
-		#endif
-		#endif
-
-		pwrpriv->bInternalAutoSuspend = false;
-		pwrpriv->brfoffbyhw = false;
-		{
-			DBG_8192D("enc_algorithm(%x),wepkeymask(%x)\n",
-				padapter->securitypriv.dot11PrivacyAlgrthm,pwrpriv->wepkeymask);
-			if (	(_WEP40_ == padapter->securitypriv.dot11PrivacyAlgrthm) ||
-				(_WEP104_ == padapter->securitypriv.dot11PrivacyAlgrthm))
-			{
-				int keyid;
-
-				for (keyid=0;keyid<4;keyid++) {
-					if (pwrpriv->wepkeymask & BIT(keyid)) {
-						if (keyid == padapter->securitypriv.dot11PrivacyKeyIndex)
-							rtw_set_key(padapter,&padapter->securitypriv, keyid, 1);
-						else
-							rtw_set_key(padapter,&padapter->securitypriv, keyid, 0);
-					}
-				}
-			}
-		}
-	}
-#endif
 	_exit_pwrlock(&pwrpriv->lock);
 
 	if (padapter->pid[1]!=0) {
@@ -820,52 +761,6 @@ exit:
 	return ret;
 }
 
-#ifdef CONFIG_AUTOSUSPEND
-void autosuspend_enter(struct rtw_adapter* padapter)
-{
-	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
-	struct dvobj_priv *dvobj = adapter_to_dvobj(padapter);
-
-	pwrpriv->bInternalAutoSuspend = true;
-	pwrpriv->bips_processing = true;
-
-	DBG_8192D("==>autosuspend_enter...........\n");
-
-	if (rf_off == pwrpriv->change_rfpwrstate) {
-		usb_enable_autosuspend(dvobj->pusbdev);
-
-		usb_autopm_put_interface(dvobj->pusbintf);
-	}
-	DBG_8192D("...pm_usage_cnt(%d).....\n", atomic_read(&(dvobj->pusbintf->pm_usage_cnt)));
-}
-
-int autoresume_enter(struct rtw_adapter* padapter)
-{
-	int result = _SUCCESS;
-	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
-	struct security_priv* psecuritypriv=&(padapter->securitypriv);
-	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	struct dvobj_priv *dvobj = adapter_to_dvobj(padapter);
-
-	DBG_8192D("====> autoresume_enter\n");
-
-	if (rf_off == pwrpriv->rf_pwrstate) {
-		pwrpriv->ps_flag = false;
-		if (usb_autopm_get_interface(dvobj->pusbintf) < 0) {
-			DBG_8192D("can't get autopm: %d\n", result);
-			result = _FAIL;
-			goto error_exit;
-		}
-		DBG_8192D("...pm_usage_cnt(%d).....\n", atomic_read(&(dvobj->pusbintf->pm_usage_cnt)));
-	}
-	DBG_8192D("<==== autoresume_enter\n");
-error_exit:
-
-	return result;
-}
-#endif
-
 static struct rtw_adapter *rtw_usb_if1_init(struct dvobj_priv *dvobj,
 					    struct usb_interface *pusb_intf,
 					    const struct usb_device_id *pdid)
@@ -958,21 +853,6 @@ static struct rtw_adapter *rtw_usb_if1_i
 	}
 #endif
 
-#ifdef CONFIG_AUTOSUSPEND
-	if (padapter->registrypriv.power_mgnt != PS_MODE_ACTIVE)
-	{
-		if (padapter->registrypriv.usbss_enable) {	/* autosuspend (2s delay) */
-			dvobj->pusbdev->dev.power.autosuspend_delay = 0 * HZ;/* 15 * HZ; idle-delay time */
-
-			usb_enable_autosuspend(dvobj->pusbdev);
-
-			usb_autopm_get_interface(dvobj->pusbintf);/* init pm_usage_cnt ,let it start from 1 */
-
-			DBG_8192D("%s...pm_usage_cnt(%d).....\n",__func__, atomic_read(&(dvobj->pusbintf ->pm_usage_cnt)));
-		}
-	}
-#endif
-
 	/*  alloc dev name after read efuse. */
 	rtw_init_netdev_name(pnetdev, padapter->registrypriv.ifname);
 	rtw_macaddr_cfg(padapter->eeprompriv.mac_addr);
