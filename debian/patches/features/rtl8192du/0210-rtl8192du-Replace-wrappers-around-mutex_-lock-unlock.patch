From 88682f7d432162ffc4fbe0af6bf16f7a17872465 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Wed, 19 Feb 2014 18:56:50 -0600
Subject: [PATCH 210/390] rtl8192du: Replace wrappers around
 mutex_{lock,unlock}

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_mlme_ext.c     | 12 ++++++------
 core/rtw_wlan_util.c    | 12 ++++++------
 hal/rtl8192d_cmd.c      |  4 ++--
 hal/usb_ops_linux.c     |  8 ++------
 include/osdep_service.h | 11 -----------
 os_dep/os_intfs.c       | 12 ++++++------
 6 files changed, 22 insertions(+), 37 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -6041,7 +6041,7 @@ s32 dump_mgntframe_and_wait_ack(struct r
 	    adapt->bDriverStopped == true)
 		return -1;
 
-	_enter_critical_mutex(&pxmitpriv->ack_tx_mutex);
+	mutex_lock(&pxmitpriv->ack_tx_mutex);
 	pxmitpriv->ack_tx = true;
 
 	pmgntframe->ack_report = 1;
@@ -6050,7 +6050,7 @@ s32 dump_mgntframe_and_wait_ack(struct r
 	}
 
 	pxmitpriv->ack_tx = false;
-	_exit_critical_mutex(&pxmitpriv->ack_tx_mutex);
+	mutex_unlock(&pxmitpriv->ack_tx_mutex);
 
 	return ret;
 }
@@ -11471,12 +11471,12 @@ void dc_SelectChannel(struct rtw_adapter
 		ptarget_adapter = adapt;
 	}
 
-	_enter_critical_mutex(&
+	mutex_lock(&
 			      (adapter_to_dvobj(ptarget_adapter)->setch_mutex));
 
 	rtw_hal_set_chan(ptarget_adapter, channel);
 
-	_exit_critical_mutex(&(adapter_to_dvobj(ptarget_adapter)->setch_mutex));
+	mutex_unlock(&(adapter_to_dvobj(ptarget_adapter)->setch_mutex));
 }
 
 void dc_SetBWMode(struct rtw_adapter *adapt, unsigned short bwmode,
@@ -11493,13 +11493,13 @@ void dc_SetBWMode(struct rtw_adapter *ad
 		ptarget_adapter = adapt;
 	}
 
-	_enter_critical_mutex(&
+	mutex_lock(&
 			      (adapter_to_dvobj(ptarget_adapter)->setbw_mutex));
 
 	rtw_hal_set_bwmode(ptarget_adapter, (HT_CHANNEL_WIDTH) bwmode,
 			   channel_offset);
 
-	_exit_critical_mutex(&(adapter_to_dvobj(ptarget_adapter)->setbw_mutex));
+	mutex_unlock(&(adapter_to_dvobj(ptarget_adapter)->setbw_mutex));
 }
 
 void dc_set_channel_bwmode_disconnect(struct rtw_adapter *adapt)
--- a/drivers/staging/rtl8192du/core/rtw_wlan_util.c
+++ b/drivers/staging/rtl8192du/core/rtw_wlan_util.c
@@ -390,14 +390,14 @@ void SelectChannel(struct rtw_adapter *p
 	dc_SelectChannel(padapter, channel);
 #else /* CONFIG_DUALMAC_CONCURRENT */
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex));
+	mutex_lock(&(adapter_to_dvobj(padapter)->setch_mutex));
 
 	/* saved channel info */
 	rtw_set_oper_ch(padapter, channel);
 
 	rtw_hal_set_chan(padapter, channel);
 
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex));
+	mutex_unlock(&(adapter_to_dvobj(padapter)->setch_mutex));
 
 #endif /*  CONFIG_DUALMAC_CONCURRENT */
 }
@@ -413,7 +413,7 @@ void SetBWMode(struct rtw_adapter *padap
 	dc_SetBWMode(padapter, bwmode, channel_offset);
 #else /* CONFIG_DUALMAC_CONCURRENT */
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->setbw_mutex));
+	mutex_lock(&(adapter_to_dvobj(padapter)->setbw_mutex));
 
 	/* saved bw info */
 	rtw_set_oper_bw(padapter, bwmode);
@@ -421,7 +421,7 @@ void SetBWMode(struct rtw_adapter *padap
 
 	rtw_hal_set_bwmode(padapter, (enum HT_CHANNEL_WIDTH)bwmode, channel_offset);
 
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->setbw_mutex));
+	mutex_unlock(&(adapter_to_dvobj(padapter)->setbw_mutex));
 
 #endif /*  CONFIG_DUALMAC_CONCURRENT */
 }
@@ -459,7 +459,7 @@ void set_channel_bwmode(struct rtw_adapt
 #else /* CONFIG_DUALMAC_CONCURRENT */
 
 	if (!mutex_is_locked(&(adapter_to_dvobj(padapter)->hw_init_mutex)))
-		_enter_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex));
+		mutex_lock(&(adapter_to_dvobj(padapter)->setch_mutex));
 
 	/* saved channel/bw info */
 	rtw_set_oper_ch(padapter, channel);
@@ -469,7 +469,7 @@ void set_channel_bwmode(struct rtw_adapt
 	rtw_hal_set_chan(padapter, center_ch);
 
 	if (!mutex_is_locked(&(adapter_to_dvobj(padapter)->hw_init_mutex)))
-		_exit_critical_mutex(&(adapter_to_dvobj(padapter)->setch_mutex));
+		mutex_unlock(&(adapter_to_dvobj(padapter)->setch_mutex));
 
 #endif /*  CONFIG_DUALMAC_CONCURRENT */
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
@@ -93,7 +93,7 @@ static void _FillH2CCmd92D(struct rtw_ad
 	padapter = GET_PRIMARY_ADAPTER(padapter);
 	pHalData = GET_HAL_DATA(padapter);
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->h2c_fwcmd_mutex));
+	mutex_lock(&(adapter_to_dvobj(padapter)->h2c_fwcmd_mutex));
 
 	while (!bWriteSucess)
 	{
@@ -234,7 +234,7 @@ static void _FillH2CCmd92D(struct rtw_ad
 
 	}
 
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->h2c_fwcmd_mutex));
+	mutex_unlock(&(adapter_to_dvobj(padapter)->h2c_fwcmd_mutex));
 
 }
 
--- a/drivers/staging/rtl8192du/hal/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/hal/usb_ops_linux.c
@@ -63,9 +63,7 @@ static int usbctrl_vendorreq(struct intf
 		goto exit;
 	}
 
-	#ifdef CONFIG_USB_VENDOR_REQ_MUTEX
-	_enter_critical_mutex(&pdvobjpriv->usb_vendor_req_mutex);
-	#endif
+	mutex_lock(&pdvobjpriv->usb_vendor_req_mutex);
 
 	/*  Acquire IO memory for vendorreq */
 	pIo_buf = pdvobjpriv->usb_vendor_req_buf;
@@ -148,9 +146,7 @@ static int usbctrl_vendorreq(struct intf
 	#endif
 
 release_mutex:
-	#ifdef CONFIG_USB_VENDOR_REQ_MUTEX
-	_exit_critical_mutex(&pdvobjpriv->usb_vendor_req_mutex);
-	#endif
+	mutex_unlock(&pdvobjpriv->usb_vendor_req_mutex);
 exit:
 	return status;
 }
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -82,17 +82,6 @@ static inline struct list_head *get_list
 	return (&(queue->queue));
 }
 
-static inline void _enter_critical_mutex(_mutex *pmutex)
-{
-	mutex_lock(pmutex);
-}
-
-
-static inline void _exit_critical_mutex(_mutex *pmutex)
-{
-	mutex_unlock(pmutex);
-}
-
 static inline void _init_timer(struct timer_list *timer, struct net_device * nic_hdl, void *pfunc, void *cntx)
 {
 	timer->function = pfunc;
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -1415,9 +1415,9 @@ int netdev_vir_if_open(struct net_device
 	int ret;
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(pnetdev);
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
+	mutex_lock(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 	ret = _netdev_vir_if_open(pnetdev);
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
+	mutex_unlock(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 	return ret;
 }
 
@@ -1763,9 +1763,9 @@ static int netdev_if2_open(struct net_de
 	int ret;
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(pnetdev);
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
+	mutex_lock(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 	ret = _netdev_if2_open(pnetdev);
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
+	mutex_unlock(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 	return ret;
 }
 
@@ -2133,9 +2133,9 @@ int netdev_open(struct net_device *pnetd
 	int ret;
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(pnetdev);
 
-	_enter_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
+	mutex_lock(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 	ret = _netdev_open(pnetdev);
-	_exit_critical_mutex(&(adapter_to_dvobj(padapter)->hw_init_mutex));
+	mutex_unlock(&(adapter_to_dvobj(padapter)->hw_init_mutex));
 
 	return ret;
 }
