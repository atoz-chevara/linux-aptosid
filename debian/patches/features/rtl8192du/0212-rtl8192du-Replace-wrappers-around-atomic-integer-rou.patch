From 044a3945b53966ed7bcd837445bd851382b6ff18 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Wed, 19 Feb 2014 20:43:22 -0600
Subject: [PATCH 212/390] rtl8192du: Replace wrappers around atomic integer
 routines

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_cmd.c          |  2 +-
 core/rtw_mlme.c         |  8 ++++----
 core/rtw_mlme_ext.c     | 18 +++++++++---------
 core/rtw_p2p.c          |  4 ++--
 include/osdep_service.h | 14 --------------
 include/usb_ops.h       |  4 ++--
 os_dep/ioctl_cfg80211.c | 20 ++++++++++----------
 os_dep/osdep_service.c  | 50 -------------------------------------------------
 8 files changed, 28 insertions(+), 92 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -84,7 +84,7 @@ int _rtw_init_evt_priv(struct evt_priv *
 #endif
 
 	/* allocate DMA-able/Non-Page memory for cmd_buf and rsp_buf */
-	ATOMIC_SET(&pevtpriv->event_seq, 0);
+	atomic_set(&pevtpriv->event_seq, 0);
 	pevtpriv->evt_done_cnt = 0;
 
 #ifdef CONFIG_EVENT_THREAD_MODE
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -2200,13 +2200,13 @@ void rtw_dynamic_check_timer_handlder(st
 inline bool rtw_is_scan_deny(struct rtw_adapter *adapter)
 {
 	struct mlme_priv *mlmepriv = &adapter->mlmepriv;
-	return (ATOMIC_READ(&mlmepriv->set_scan_deny) != 0) ? true : false;
+	return (atomic_read(&mlmepriv->set_scan_deny) != 0) ? true : false;
 }
 
 inline void rtw_clear_scan_deny(struct rtw_adapter *adapter)
 {
 	struct mlme_priv *mlmepriv = &adapter->mlmepriv;
-	ATOMIC_SET(&mlmepriv->set_scan_deny, 0);
+	atomic_set(&mlmepriv->set_scan_deny, 0);
 }
 
 void rtw_set_scan_deny_timer_hdl(struct rtw_adapter *adapter)
@@ -2220,7 +2220,7 @@ void rtw_set_scan_deny(struct rtw_adapte
 #ifdef CONFIG_CONCURRENT_MODE
 	struct mlme_priv *b_mlmepriv;
 #endif
-	ATOMIC_SET(&mlmepriv->set_scan_deny, 1);
+	atomic_set(&mlmepriv->set_scan_deny, 1);
 	_set_timer(&mlmepriv->set_scan_deny_timer, ms);
 
 #ifdef CONFIG_CONCURRENT_MODE
@@ -2228,7 +2228,7 @@ void rtw_set_scan_deny(struct rtw_adapte
 		return;
 
 	b_mlmepriv = &adapter->pbuddy_adapter->mlmepriv;
-	ATOMIC_SET(&b_mlmepriv->set_scan_deny, 1);
+	atomic_set(&b_mlmepriv->set_scan_deny, 1);
 	_set_timer(&b_mlmepriv->set_scan_deny_timer, ms);
 #endif
 }
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -286,7 +286,7 @@ static void init_mlme_ext_priv_value(str
 		_12M_RATE_, _24M_RATE_, 0xff,
 	 };
 
-	ATOMIC_SET(&pmlmeext->event_seq, 0);
+	atomic_set(&pmlmeext->event_seq, 0);
 	pmlmeext->mgnt_seq = 0;	/* reset to zero when disconnect at client mode */
 
 	pmlmeext->cur_channel = adapt->registrypriv.channel;
@@ -9702,7 +9702,7 @@ void report_survey_event(struct rtw_adap
 	pc2h_evt_hdr = (struct C2HEvent_Header *)(pevtcmd);
 	pc2h_evt_hdr->len = sizeof(struct survey_event);
 	pc2h_evt_hdr->ID = GEN_EVT_CODE(_SURVEY);
-	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
+	pc2h_evt_hdr->seq = atomic_inc_return(&pmlmeext->event_seq);
 
 	psurvey_evt =
 	    (struct survey_event *)(pevtcmd + sizeof(struct C2HEvent_Header));
@@ -9759,7 +9759,7 @@ void report_surveydone_event(struct rtw_
 	pc2h_evt_hdr = (struct C2HEvent_Header *)(pevtcmd);
 	pc2h_evt_hdr->len = sizeof(struct surveydone_event);
 	pc2h_evt_hdr->ID = GEN_EVT_CODE(_SURVEYDONE);
-	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
+	pc2h_evt_hdr->seq = atomic_inc_return(&pmlmeext->event_seq);
 
 	psurveydone_evt =
 	    (struct surveydone_event *)(pevtcmd +
@@ -9807,7 +9807,7 @@ void report_join_res(struct rtw_adapter
 	pc2h_evt_hdr = (struct C2HEvent_Header *)(pevtcmd);
 	pc2h_evt_hdr->len = sizeof(struct joinbss_event);
 	pc2h_evt_hdr->ID = GEN_EVT_CODE(_JOINBSS);
-	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
+	pc2h_evt_hdr->seq = atomic_inc_return(&pmlmeext->event_seq);
 
 	pjoinbss_evt =
 	    (struct joinbss_event *)(pevtcmd + sizeof(struct C2HEvent_Header));
@@ -9861,7 +9861,7 @@ void report_del_sta_event(struct rtw_ada
 	pc2h_evt_hdr = (struct C2HEvent_Header *)(pevtcmd);
 	pc2h_evt_hdr->len = sizeof(struct stadel_event);
 	pc2h_evt_hdr->ID = GEN_EVT_CODE(_DELSTA);
-	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
+	pc2h_evt_hdr->seq = atomic_inc_return(&pmlmeext->event_seq);
 
 	pdel_sta_evt =
 	    (struct stadel_event *)(pevtcmd + sizeof(struct C2HEvent_Header));
@@ -9918,7 +9918,7 @@ void report_add_sta_event(struct rtw_ada
 	pc2h_evt_hdr = (struct C2HEvent_Header *)(pevtcmd);
 	pc2h_evt_hdr->len = sizeof(struct stassoc_event);
 	pc2h_evt_hdr->ID = GEN_EVT_CODE(_ADDSTA);
-	pc2h_evt_hdr->seq = ATOMIC_INC_RETURN(&pmlmeext->event_seq);
+	pc2h_evt_hdr->seq = atomic_inc_return(&pmlmeext->event_seq);
 
 	padd_sta_evt =
 	    (struct stassoc_event *)(pevtcmd + sizeof(struct C2HEvent_Header));
@@ -11296,10 +11296,10 @@ u8 mlme_evt_hdl(struct rtw_adapter *adap
 
 #ifdef CHECK_EVENT_SEQ
 	/*  checking event sequence... */
-	if (evt_seq != (ATOMIC_READ(&pevt_priv->event_seq) & 0x7f)) {
+	if (evt_seq != (atomic_read(&pevt_priv->event_seq) & 0x7f)) {
 		RT_TRACE(_module_rtl871x_cmd_c_, _drv_info_,
 			 ("Evetn Seq Error! %d vs %d\n", (evt_seq & 0x7f),
-			  (ATOMIC_READ(&pevt_priv->event_seq) & 0x7f)));
+			  (atomic_read(&pevt_priv->event_seq) & 0x7f)));
 
 		pevt_priv->event_seq = (evt_seq + 1) & 0x7f;
 
@@ -11323,7 +11323,7 @@ u8 mlme_evt_hdl(struct rtw_adapter *adap
 		goto _abort_event_;
 	}
 
-	ATOMIC_INC(&pevt_priv->event_seq);
+	atomic_inc(&pevt_priv->event_seq);
 
 	peventbuf += 2;
 
--- a/drivers/staging/rtl8192du/core/rtw_p2p.c
+++ b/drivers/staging/rtl8192du/core/rtw_p2p.c
@@ -3072,7 +3072,7 @@ static void ro_ch_timer_process (void *F
 	struct rtw_wdev_priv *pwdev_priv = wdev_to_priv(adapter->rtw_wdev);
 
 #ifdef	CONFIG_CONCURRENT_MODE
-	ATOMIC_SET(&pwdev_priv->ro_ch_to, 1);
+	atomic_set(&pwdev_priv->ro_ch_to, 1);
 #endif
 
 	p2p_protocol_wk_cmd(adapter, P2P_RO_CH_WK);
@@ -3790,7 +3790,7 @@ static void ap_p2p_switch_timer_process(
 		return;
 
 #ifdef CONFIG_IOCTL_CFG80211
-	ATOMIC_SET(&pwdev_priv->switch_ch_to, 1);
+	atomic_set(&pwdev_priv->switch_ch_to, 1);
 #endif
 
 	p2p_protocol_wk_cmd(adapter, P2P_AP_P2P_CH_SWITCH_PROCESS_WK);
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -348,20 +348,6 @@ void rtw_suspend_lock_uninit(void);
 void rtw_lock_suspend(void);
 void rtw_unlock_suspend(void);
 
-
-/* Atomic integer operations */
-
-void ATOMIC_SET(atomic_t *v, int i);
-int ATOMIC_READ(atomic_t *v);
-void ATOMIC_ADD(atomic_t *v, int i);
-void ATOMIC_SUB(atomic_t *v, int i);
-void ATOMIC_INC(atomic_t *v);
-void ATOMIC_DEC(atomic_t *v);
-int ATOMIC_ADD_RETURN(atomic_t *v, int i);
-int ATOMIC_SUB_RETURN(atomic_t *v, int i);
-int ATOMIC_INC_RETURN(atomic_t *v);
-int ATOMIC_DEC_RETURN(atomic_t *v);
-
 /* File operation APIs, just for linux now */
 int rtw_is_file_readable(char *path);
 int rtw_retrive_from_file(char *path, u8 __user *buf, u32 sz);
--- a/drivers/staging/rtl8192du/include/usb_ops.h
+++ b/drivers/staging/rtl8192du/include/usb_ops.h
@@ -56,7 +56,7 @@ static inline int rtw_inc_and_chk_contin
 {
 	int ret = false;
 	int value;
-	if ((value=ATOMIC_INC_RETURN(&dvobj->continual_urb_error)) > MAX_CONTINUAL_URB_ERR) {
+	if ((value=atomic_inc_return(&dvobj->continual_urb_error)) > MAX_CONTINUAL_URB_ERR) {
 		DBG_8192D("[dvobj:%p][ERROR] continual_urb_error:%d > %d\n", dvobj, value, MAX_CONTINUAL_URB_ERR);
 		ret = true;
 	}
@@ -68,7 +68,7 @@ static inline int rtw_inc_and_chk_contin
 */
 static inline void rtw_reset_continual_urb_error(struct dvobj_priv *dvobj)
 {
-	ATOMIC_SET(&dvobj->continual_urb_error, 0);
+	atomic_set(&dvobj->continual_urb_error, 0);
 }
 
 #endif /* __USB_OPS_H_ */
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -3638,7 +3638,7 @@ static s32 cfg80211_rtw_remain_on_channe
 		_cancel_timer_ex(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
 
 #ifdef CONFIG_CONCURRENT_MODE
-                ATOMIC_SET(&pwdev_priv->ro_ch_to, 1);
+                atomic_set(&pwdev_priv->ro_ch_to, 1);
 #endif /* CONFIG_CONCURRENT_MODE */
 
 		p2p_protocol_wk_hdl(padapter, P2P_RO_CH_WK);
@@ -3697,13 +3697,13 @@ static s32 cfg80211_rtw_remain_on_channe
 
 			if (remain_ch != pbuddy_mlmeext->cur_channel)
 			{
-				if (ATOMIC_READ(&pwdev_priv->switch_ch_to)==1 ||
+				if (atomic_read(&pwdev_priv->switch_ch_to)==1 ||
 					(remain_ch != pmlmeext->cur_channel))
 				{
 					DBG_8192C("%s, issue nulldata pwrbit=1\n", __func__);
 					issue_nulldata(padapter->pbuddy_adapter, NULL, 1, 3, 500);
 
-					ATOMIC_SET(&pwdev_priv->switch_ch_to, 0);
+					atomic_set(&pwdev_priv->switch_ch_to, 0);
 
 					DBG_8192C("%s, set switch ch timer, duration=%d\n", __func__, duration-pwdinfo->ext_listen_interval);
 					_set_timer(&pwdinfo->ap_p2p_switch_timer, duration-pwdinfo->ext_listen_interval);
@@ -3723,11 +3723,11 @@ static s32 cfg80211_rtw_remain_on_channe
 
 	/* call this after other things have been done */
 #ifdef	CONFIG_CONCURRENT_MODE
-	if (ATOMIC_READ(&pwdev_priv->ro_ch_to)==1 ||
+	if (atomic_read(&pwdev_priv->ro_ch_to)==1 ||
 		(remain_ch != pmlmeext->cur_channel))
 	{
 		u8 co_channel = 0xff;
-		ATOMIC_SET(&pwdev_priv->ro_ch_to, 0);
+		atomic_set(&pwdev_priv->ro_ch_to, 0);
 #endif
 
 		if (ready_on_channel == true)
@@ -3778,7 +3778,7 @@ static s32 cfg80211_rtw_cancel_remain_on
 		DBG_8192C("%s, cancel ro ch timer\n", __func__);
 		_cancel_timer_ex(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
 		#ifdef CONFIG_CONCURRENT_MODE
-		ATOMIC_SET(&pwdev_priv->ro_ch_to, 1);
+		atomic_set(&pwdev_priv->ro_ch_to, 1);
 		#endif
 		p2p_protocol_wk_hdl(padapter, P2P_RO_CH_WK);
 	}
@@ -3837,11 +3837,11 @@ static int _cfg80211_rtw_mgmt_tx(_adapte
 		co_channel = rtw_get_oper_ch(padapter);
 
 		if (tx_ch != pbuddy_mlmeext->cur_channel) {
-			if (ATOMIC_READ(&pwdev_priv->switch_ch_to)==1) {
+			if (atomic_read(&pwdev_priv->switch_ch_to)==1) {
 				DBG_8192C("%s, issue nulldata pwrbit=1\n", __func__);
 				issue_nulldata(padapter->pbuddy_adapter, NULL, 1, 3, 500);
 
-				ATOMIC_SET(&pwdev_priv->switch_ch_to, 0);
+				atomic_set(&pwdev_priv->switch_ch_to, 0);
 
 			}
 
@@ -4595,8 +4595,8 @@ int rtw_wdev_alloc(_adapter *padapter, s
 		pwdev_priv->power_mgmt = false;
 
 #ifdef CONFIG_CONCURRENT_MODE
-	ATOMIC_SET(&pwdev_priv->switch_ch_to, 1);
-	ATOMIC_SET(&pwdev_priv->ro_ch_to, 1);
+	atomic_set(&pwdev_priv->switch_ch_to, 1);
+	atomic_set(&pwdev_priv->ro_ch_to, 1);
 #endif
 
 	return ret;
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -310,56 +310,6 @@ inline void rtw_unlock_suspend(void)
 	#endif
 }
 
-inline void ATOMIC_SET(atomic_t *v, int i)
-{
-	atomic_set(v,i);
-}
-
-inline int ATOMIC_READ(atomic_t *v)
-{
-	return atomic_read(v);
-}
-
-inline void ATOMIC_ADD(atomic_t *v, int i)
-{
-	atomic_add(i,v);
-}
-
-inline void ATOMIC_SUB(atomic_t *v, int i)
-{
-	atomic_sub(i,v);
-}
-
-inline void ATOMIC_INC(atomic_t *v)
-{
-	atomic_inc(v);
-}
-
-inline void ATOMIC_DEC(atomic_t *v)
-{
-	atomic_dec(v);
-}
-
-inline int ATOMIC_ADD_RETURN(atomic_t *v, int i)
-{
-	return atomic_add_return(i,v);
-}
-
-inline int ATOMIC_SUB_RETURN(atomic_t *v, int i)
-{
-	return atomic_sub_return(i,v);
-}
-
-inline int ATOMIC_INC_RETURN(atomic_t *v)
-{
-	return atomic_inc_return(v);
-}
-
-inline int ATOMIC_DEC_RETURN(atomic_t *v)
-{
-	return atomic_dec_return(v);
-}
-
 /*
 * Open a file with the specific @param path, @param flag, @param mode
 * @param fpp the pointer of struct file pointer to get struct file pointer while file opening is success
