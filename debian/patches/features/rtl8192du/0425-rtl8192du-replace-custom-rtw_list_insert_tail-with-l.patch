From 0124433d284972c8ee3db1cbb4383c093b8bfa5a Mon Sep 17 00:00:00 2001
From: Stefan Lippers-Hollmann <s.l-h@gmx.de>
Date: Sat, 22 Mar 2014 03:03:23 +0100
Subject: [PATCH 425/456] rtl8192du: replace custom rtw_list_insert_tail() with
 list_add_tail()

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 core/rtw_ap.c           |  2 +-
 core/rtw_cmd.c          |  4 ++--
 core/rtw_mlme.c         | 12 ++++++------
 core/rtw_mlme_ext.c     |  4 ++--
 core/rtw_recv.c         | 14 +++++++-------
 core/rtw_sta_mgt.c      |  6 +++---
 core/rtw_xmit.c         | 20 ++++++++++----------
 include/osdep_service.h |  2 --
 os_dep/osdep_service.c  | 12 ------------
 9 files changed, 31 insertions(+), 45 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -1391,7 +1391,7 @@ int rtw_acl_add_sta(struct rtw_adapter *
 
 			paclnode->valid = true;
 
-			rtw_list_insert_tail(&paclnode->list,
+			list_add_tail(&paclnode->list,
 					     get_list_head(pacl_node_q));
 
 			pacl_list->num++;
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -114,7 +114,7 @@ int	_rtw_enqueue_cmd(struct __queue *que
 
 	spin_lock_irqsave(&queue->lock, flags);
 
-	rtw_list_insert_tail(&obj->list, &queue->queue);
+	list_add_tail(&obj->list, &queue->queue);
 
 	spin_unlock_irqrestore(&queue->lock, flags);
 
@@ -2016,7 +2016,7 @@ void rtw_createbss_cmd_callback(struct r
 			}
 			pwlan->last_scanned = jiffies;
 		} else {
-			rtw_list_insert_tail(&(pwlan->list),
+			list_add_tail(&(pwlan->list),
 					     &pmlmepriv->scanned_queue.queue);
 		}
 
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -70,7 +70,7 @@ int _rtw_init_mlme_priv(struct rtw_adapt
 	for (i = 0; i < MAX_BSS_CNT; i++) {
 		INIT_LIST_HEAD(&(pnetwork->list));
 
-		rtw_list_insert_tail(&(pnetwork->list),
+		list_add_tail(&(pnetwork->list),
 				     &(pmlmepriv->free_bss_pool.queue));
 
 		pnetwork++;
@@ -149,7 +149,7 @@ int _rtw_enqueue_network(struct __queue
 
 	spin_lock_bh(&queue->lock);
 
-	rtw_list_insert_tail(&pnetwork->list, &queue->queue);
+	list_add_tail(&pnetwork->list, &queue->queue);
 
 	spin_unlock_bh(&queue->lock);
 
@@ -243,7 +243,7 @@ void _rtw_free_network(struct mlme_priv
 
 	list_del_init(&(pnetwork->list));
 
-	rtw_list_insert_tail(&(pnetwork->list), &(free_queue->queue));
+	list_add_tail(&(pnetwork->list), &(free_queue->queue));
 
 	pmlmepriv->num_of_scanned--;
 
@@ -263,7 +263,7 @@ void _rtw_free_network_nolock(struct mlm
 
 	list_del_init(&(pnetwork->list));
 
-	rtw_list_insert_tail(&(pnetwork->list), get_list_head(free_queue));
+	list_add_tail(&(pnetwork->list), get_list_head(free_queue));
 
 	pmlmepriv->num_of_scanned--;
 }
@@ -702,7 +702,7 @@ void rtw_update_scanned_network(struct r
 			if (pnetwork->network.PhyInfo.SignalQuality == 101)
 				pnetwork->network.PhyInfo.SignalQuality = 0;
 
-			rtw_list_insert_tail(&(pnetwork->list),
+			list_add_tail(&(pnetwork->list),
 					     &(queue->queue));
 		}
 	} else {
@@ -1013,7 +1013,7 @@ static void free_scanqueue(struct mlme_p
 	while (plist != phead) {
 		ptemp = plist->next;
 		list_del_init(plist);
-		rtw_list_insert_tail(plist, &free_queue->queue);
+		list_add_tail(plist, &free_queue->queue);
 		plist = ptemp;
 		pmlmepriv->num_of_scanned--;
 	}
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -1043,7 +1043,7 @@ unsigned int OnAuth(struct rtw_adapter *
 
 	spin_lock_bh(&pstapriv->auth_list_lock);
 	if (list_empty(&pstat->auth_list)) {
-		rtw_list_insert_tail(&pstat->auth_list, &pstapriv->auth_list);
+		list_add_tail(&pstat->auth_list, &pstapriv->auth_list);
 		pstapriv->auth_list_cnt++;
 	}
 	spin_unlock_bh(&pstapriv->auth_list_lock);
@@ -1691,7 +1691,7 @@ unsigned int OnAssocReq(struct rtw_adapt
 	spin_lock_bh(&pstapriv->asoc_list_lock);
 	if (list_empty(&pstat->asoc_list)) {
 		pstat->expire_to = pstapriv->expire_to;
-		rtw_list_insert_tail(&pstat->asoc_list, &pstapriv->asoc_list);
+		list_add_tail(&pstat->asoc_list, &pstapriv->asoc_list);
 		pstapriv->asoc_list_cnt++;
 	}
 	spin_unlock_bh(&pstapriv->asoc_list_lock);
--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -76,7 +76,7 @@ int _rtw_init_recv_priv(struct recv_priv
 	for (i = 0; i < NR_RECVFRAME; i++) {
 		INIT_LIST_HEAD(&(precvframe->list));
 
-		rtw_list_insert_tail(&(precvframe->list),
+		list_add_tail(&(precvframe->list),
 				     &(precvpriv->free_recv_queue.queue));
 
 		res = rtw_os_recv_resource_alloc(padapter, precvframe);
@@ -199,7 +199,7 @@ int rtw_free_recvframe(struct recv_frame
 
 	list_del_init(&(precvframe->list));
 
-	rtw_list_insert_tail(&(precvframe->list),
+	list_add_tail(&(precvframe->list),
 			     get_list_head(pfree_recv_queue));
 
 	if (padapter != NULL) {
@@ -220,7 +220,7 @@ int _rtw_enqueue_recvframe(struct recv_f
 	/* INIT_LIST_HEAD(&(precvframe->list)); */
 	list_del_init(&(precvframe->list));
 
-	rtw_list_insert_tail(&(precvframe->list), get_list_head(queue));
+	list_add_tail(&(precvframe->list), get_list_head(queue));
 
 	if (padapter != NULL) {
 		if (queue == &precvpriv->free_recv_queue)
@@ -311,7 +311,7 @@ int rtw_enqueue_recvbuf(struct recv_buf
 
 	list_del_init(&precvbuf->list);
 
-	rtw_list_insert_tail(&precvbuf->list, get_list_head(queue));
+	list_add_tail(&precvbuf->list, get_list_head(queue));
 
 	spin_unlock_irqrestore(&queue->lock, irqL);
 
@@ -1716,7 +1716,7 @@ struct recv_frame_hdr *recvframe_chk_def
 
 			/* spin_lock(&pdefrag_q->lock); */
 			phead = get_list_head(pdefrag_q);
-			rtw_list_insert_tail(&pfhdr->list, phead);
+			list_add_tail(&pfhdr->list, phead);
 			/* spin_unlock(&pdefrag_q->lock); */
 
 			RT_TRACE(_module_rtl871x_recv_c_, _drv_info_,
@@ -1741,7 +1741,7 @@ struct recv_frame_hdr *recvframe_chk_def
 		if (pdefrag_q != NULL) {
 			/* spin_lock(&pdefrag_q->lock); */
 			phead = get_list_head(pdefrag_q);
-			rtw_list_insert_tail(&pfhdr->list, phead);
+			list_add_tail(&pfhdr->list, phead);
 			/* spin_unlock(&pdefrag_q->lock); */
 
 			/* call recvframe_defrag to defrag */
@@ -1956,7 +1956,7 @@ static int enqueue_reorder_recvframe(str
 			break;
 	}
 	list_del_init(&(prframe->list));
-	rtw_list_insert_tail(&(prframe->list), plist);
+	list_add_tail(&(prframe->list), plist);
 	return true;
 }
 
--- a/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
+++ b/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
@@ -95,7 +95,7 @@ u32	_rtw_init_sta_priv(struct	sta_priv *
 
 		INIT_LIST_HEAD(&(pstapriv->sta_hash[i]));
 
-		rtw_list_insert_tail(&psta->list, get_list_head(&pstapriv->free_sta_queue));
+		list_add_tail(&psta->list, get_list_head(&pstapriv->free_sta_queue));
 
 		psta++;
 	}
@@ -270,7 +270,7 @@ struct	sta_info *rtw_alloc_stainfo(struc
 
 		spin_lock_bh(&(pstapriv->sta_hash_lock));
 
-		rtw_list_insert_tail(&psta->hash_list, phash_list);
+		list_add_tail(&psta->hash_list, phash_list);
 
 		pstapriv->asoc_sta_count++;
 
@@ -440,7 +440,7 @@ u32	rtw_free_stainfo(struct rtw_adapter
 #endif	/*  CONFIG_92D_AP_MODE */
 
 	spin_lock_bh(&(pfree_sta_queue->lock));
-	rtw_list_insert_tail(&psta->list, get_list_head(pfree_sta_queue));
+	list_add_tail(&psta->list, get_list_head(pfree_sta_queue));
 	spin_unlock_bh(&(pfree_sta_queue->lock));
 
 exit:
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -113,7 +113,7 @@ s32	_rtw_init_xmit_priv(struct xmit_priv
 		pxframe->buf_addr = NULL;
 		pxframe->pxmitbuf = NULL;
 
-		rtw_list_insert_tail(&(pxframe->list), &(pxmitpriv->free_xmit_queue.queue));
+		list_add_tail(&(pxframe->list), &(pxmitpriv->free_xmit_queue.queue));
 
 		pxframe++;
 	}
@@ -151,7 +151,7 @@ s32	_rtw_init_xmit_priv(struct xmit_priv
 
 		pxmitbuf->flags = XMIT_VO_QUEUE;
 
-		rtw_list_insert_tail(&pxmitbuf->list, &(pxmitpriv->free_xmitbuf_queue.queue));
+		list_add_tail(&pxmitbuf->list, &(pxmitpriv->free_xmitbuf_queue.queue));
 		pxmitbuf++;
 	}
 	pxmitpriv->free_xmitbuf_cnt = NR_XMITBUFF;
@@ -183,7 +183,7 @@ s32	_rtw_init_xmit_priv(struct xmit_priv
 		if (res == _FAIL)
 			goto exit;
 
-		rtw_list_insert_tail(&pxmitbuf->list, &(pxmitpriv->free_xmit_extbuf_queue.queue));
+		list_add_tail(&pxmitbuf->list, &(pxmitpriv->free_xmit_extbuf_queue.queue));
 		pxmitbuf++;
 	}
 
@@ -1241,7 +1241,7 @@ s32 rtw_free_xmitbuf_ext(struct xmit_pri
 
 	list_del_init(&pxmitbuf->list);
 
-	rtw_list_insert_tail(&(pxmitbuf->list), get_list_head(pfree_queue));
+	list_add_tail(&(pxmitbuf->list), get_list_head(pfree_queue));
 	pxmitpriv->free_xmit_extbuf_cnt++;
 
 	spin_unlock_irqrestore(&pfree_queue->lock, flags);
@@ -1307,7 +1307,7 @@ s32 rtw_free_xmitbuf(struct xmit_priv *p
 
 		list_del_init(&pxmitbuf->list);
 
-		rtw_list_insert_tail(&(pxmitbuf->list), get_list_head(pfree_xmitbuf_queue));
+		list_add_tail(&(pxmitbuf->list), get_list_head(pfree_xmitbuf_queue));
 
 		pxmitpriv->free_xmitbuf_cnt++;
 		spin_unlock_irqrestore(&pfree_xmitbuf_queue->lock, flags);
@@ -1401,7 +1401,7 @@ s32 rtw_free_xmitframe(struct xmit_priv
 		pxmitframe->pkt = NULL;
 	}
 
-	rtw_list_insert_tail(&pxmitframe->list, get_list_head(pfree_xmit_queue));
+	list_add_tail(&pxmitframe->list, get_list_head(pfree_xmit_queue));
 
 	pxmitpriv->free_xmitframe_cnt++;
 	RT_TRACE(_module_rtl871x_xmit_c_, _drv_debug_, ("rtw_free_xmitframe():free_xmitframe_cnt =%d\n", pxmitpriv->free_xmitframe_cnt));
@@ -1602,10 +1602,10 @@ s32 rtw_xmit_classifier(struct rtw_adapt
 	ptxservq = rtw_get_sta_pending(padapter, psta, pattrib->priority, (u8 *)(&ac_index));
 
 	if (list_empty(&ptxservq->tx_pending)) {
-		rtw_list_insert_tail(&ptxservq->tx_pending, get_list_head(phwxmits[ac_index].sta_queue));
+		list_add_tail(&ptxservq->tx_pending, get_list_head(phwxmits[ac_index].sta_queue));
 	}
 
-	rtw_list_insert_tail(&pxmitframe->list, get_list_head(&ptxservq->sta_pending));
+	list_add_tail(&pxmitframe->list, get_list_head(&ptxservq->sta_pending));
 	ptxservq->qcnt++;
 	phwxmits[ac_index].accnt++;
 
@@ -1740,7 +1740,7 @@ int xmitframe_enqueue_for_sleeping_sta(s
 		if (pstapriv->sta_dz_bitmap) {/* if anyone sta is in ps mode */
 			list_del_init(&pxmitframe->list);
 
-			rtw_list_insert_tail(&pxmitframe->list, get_list_head(&psta->sleep_q));
+			list_add_tail(&pxmitframe->list, get_list_head(&psta->sleep_q));
 
 			psta->sleepq_len++;
 
@@ -1761,7 +1761,7 @@ int xmitframe_enqueue_for_sleeping_sta(s
 		if (pstapriv->sta_dz_bitmap&BIT(psta->aid)) {
 			list_del_init(&pxmitframe->list);
 
-			rtw_list_insert_tail(&pxmitframe->list, get_list_head(&psta->sleep_q));
+			list_add_tail(&pxmitframe->list, get_list_head(&psta->sleep_q));
 
 			psta->sleepq_len++;
 
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -178,8 +178,6 @@ enum {
 
 #define rtw_update_mem_stat(flag, sz) do {} while (0)
 
-void	rtw_list_insert_tail(struct list_head *plist, struct list_head *phead);
-
 void	_rtw_init_sema(struct  semaphore *sema, int init_val);
 void	_rtw_free_sema(struct  semaphore *sema);
 void	_rtw_up_sema(struct  semaphore *sema);
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -36,18 +36,6 @@ inline int RTW_STATUS_CODE(int error_cod
 	}
 }
 
-/*
-For the following list_xxx operations,
-caller must guarantee the atomic context.
-Otherwise, there will be racing condition.
-*/
-void rtw_list_insert_tail(struct list_head *plist, struct list_head *phead)
-{
-	list_add_tail(plist, phead);
-}
-
-/* Caller must check if the list is empty before calling list_del_init */
-
 void _rtw_init_sema(struct  semaphore *sema, int init_val)
 {
 	sema_init(sema, init_val);
