From 9602569b469468db5308f6958f2dffa5f59f0ead Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Mon, 17 Feb 2014 12:44:42 -0600
Subject: [PATCH 194/390] rtl8192du: Remove wrapper around kmalloc

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c           |  8 +++----
 core/rtw_br_ext.c       |  2 +-
 core/rtw_cmd.c          |  2 +-
 core/rtw_security.c     |  2 +-
 hal/rtl8192d_cmd.c      |  2 +-
 hal/rtl8192du_recv.c    |  2 +-
 hal/usb_ops_linux.c     |  2 +-
 include/osdep_service.h |  3 ---
 os_dep/ioctl_cfg80211.c | 58 ++++++++++++++++++++++++-------------------------
 os_dep/ioctl_linux.c    | 42 +++++++++++++++++------------------
 os_dep/mlme_linux.c     |  2 +-
 os_dep/osdep_service.c  | 16 ++++----------
 12 files changed, 65 insertions(+), 76 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -120,7 +120,7 @@ static void update_BCNTIM(struct rtw_ada
 		}
 
 		if (remainder_ielen > 0) {
-			pbackup_remainder_ie = rtw_malloc(remainder_ielen);
+			pbackup_remainder_ie = kmalloc(remainder_ielen, GFP_KERNEL);
 			if (pbackup_remainder_ie && premainder_ie)
 				memcpy(pbackup_remainder_ie, premainder_ie, remainder_ielen);
 		}
@@ -205,7 +205,7 @@ void rtw_add_bcn_ie(struct rtw_adapter *
 	}
 
 	if (remainder_ielen > 0) {
-		pbackup_remainder_ie = rtw_malloc(remainder_ielen);
+		pbackup_remainder_ie = kmalloc(remainder_ielen, GFP_KERNEL);
 		if (pbackup_remainder_ie && premainder_ie)
 			memcpy(pbackup_remainder_ie, premainder_ie, remainder_ielen);
 	}
@@ -246,7 +246,7 @@ void rtw_remove_bcn_ie(struct rtw_adapte
 	}
 
 	if (remainder_ielen > 0) {
-		pbackup_remainder_ie = rtw_malloc(remainder_ielen);
+		pbackup_remainder_ie = kmalloc(remainder_ielen, GFP_KERNEL);
 		if (pbackup_remainder_ie && premainder_ie)
 			memcpy(pbackup_remainder_ie, premainder_ie, remainder_ielen);
 	}
@@ -1468,7 +1468,7 @@ static void update_bcn_wps_ie(struct rtw
 	remainder_ielen = ielen - wps_offset - wps_ielen;
 
 	if (remainder_ielen > 0) {
-		pbackup_remainder_ie = rtw_malloc(remainder_ielen);
+		pbackup_remainder_ie = kmalloc(remainder_ielen, GFP_KERNEL);
 		if (pbackup_remainder_ie)
 			memcpy(pbackup_remainder_ie, premainder_ie, remainder_ielen);
 	}
--- a/drivers/staging/rtl8192du/core/rtw_br_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_br_ext.c
@@ -481,7 +481,7 @@ static void __nat25_db_network_insert(st
 		db = db->next_hash;
 	}
 
-	db = (struct nat25_network_db_entry *)rtw_malloc(sizeof(*db));
+	db = (struct nat25_network_db_entry *)kmalloc(sizeof(*db), GFP_KERNEL);
 	if (db == NULL) {
 		spin_unlock_bh(&priv->br_ext_lock);
 		return;
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -2257,7 +2257,7 @@ static void c2h_wk_callback(_workitem *w
 		if (c2h_evt != NULL) {
 			/* This C2H event is read, clear it */
 			c2h_evt_clear(adapter);
-		} else if ((c2h_evt = (struct c2h_evt_hdr *)rtw_malloc(16)) != NULL) {
+		} else if ((c2h_evt = (struct c2h_evt_hdr *)kmalloc(16, GFP_KERNEL)) != NULL) {
 			/* This C2H event is not read, read & clear now */
 			if (c2h_evt_read(adapter, (u8 *)c2h_evt) != _SUCCESS)
 				continue;
--- a/drivers/staging/rtl8192du/core/rtw_security.c
+++ b/drivers/staging/rtl8192du/core/rtw_security.c
@@ -2352,7 +2352,7 @@ static void *aes_encrypt_init(u8 *key, s
 	u32 *rk;
 	if (len != 16)
 		return NULL;
-	rk = (u32 *)rtw_malloc(AES_PRIV_SIZE);
+	rk = (u32 *)kmalloc(AES_PRIV_SIZE, GFP_KERNEL);
 	if (rk == NULL)
 		return NULL;
 	rijndaelKeySetupEnc(rk, key);
--- a/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
@@ -659,7 +659,7 @@ static void SetFwRsvdPagePkt(struct rtw_
 
 	DBG_8192D("%s\n", __func__);
 
-	reservedpagepacket = (u8*)rtw_malloc(1000);
+	reservedpagepacket = (u8*)kmalloc(1000, GFP_KERNEL);
 	if (reservedpagepacket == NULL) {
 		DBG_8192D("%s(): alloc reservedpagepacket fail !!!\n", __func__);
 		return;
--- a/drivers/staging/rtl8192du/hal/rtl8192du_recv.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_recv.c
@@ -67,7 +67,7 @@ int	rtl8192du_init_recv_priv(struct rtw_
 	if (precvpriv->int_in_urb == NULL) {
 		DBG_8192D("alloc_urb for interrupt in endpoint fail !!!!\n");
 	}
-	precvpriv->int_in_buf = rtw_malloc(sizeof(INTERRUPT_MSG_FORMAT_EX));
+	precvpriv->int_in_buf = kmalloc(sizeof(INTERRUPT_MSG_FORMAT_EX), GFP_KERNEL);
 	if (precvpriv->int_in_buf == NULL) {
 		DBG_8192D("alloc_mem for interrupt in endpoint fail !!!!\n");
 	}
--- a/drivers/staging/rtl8192du/hal/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/hal/usb_ops_linux.c
@@ -75,7 +75,7 @@ static int usbctrl_vendorreq(struct intf
 	pIo_buf = pdvobjpriv->usb_vendor_req_buf;
 #else
 	#ifdef CONFIG_USB_VENDOR_REQ_BUFFER_DYNAMIC_ALLOCATE
-	tmp_buf = rtw_malloc((u32) len + ALIGNMENT_UNIT);
+	tmp_buf = kmalloc((u32) len + ALIGNMENT_UNIT, GFP_KERNEL);
 	tmp_buflen =  (u32)len + ALIGNMENT_UNIT;
 	#else /*  use stack memory */
 	tmp_buflen = MAX_USB_IO_CTL_SIZE;
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -290,10 +290,7 @@ enum {
 #define rtw_update_mem_stat(flag, sz) do {} while (0)
 extern u8*	_rtw_vmalloc(u32 sz);
 extern u8*	_rtw_zmalloc(u32 sz);
-extern u8*	_rtw_malloc(u32 sz);
 
-#define rtw_vmalloc(sz)			_rtw_vmalloc((sz))
-#define rtw_malloc(sz)			_rtw_malloc((sz))
 #define rtw_zmalloc(sz)			_rtw_zmalloc((sz))
 
 extern int	_rtw_memcmp(void *dst, void *src, u32 sz);
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -1180,7 +1180,7 @@ static int cfg80211_rtw_add_key(struct w
 #endif	/*  (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37)) */
 
 	param_len = sizeof(struct ieee_param) + params->key_len;
-	param = (struct ieee_param *)rtw_malloc(param_len);
+	param = (struct ieee_param *)kmalloc(param_len, GFP_KERNEL);
 	if (param == NULL)
 		return -1;
 
@@ -1635,9 +1635,9 @@ static int rtw_cfg80211_set_probe_req_wp
 				pmlmepriv->wps_probe_req_ie = NULL;
 			}
 
-			pmlmepriv->wps_probe_req_ie = rtw_malloc(wps_ielen);
+			pmlmepriv->wps_probe_req_ie = kmalloc(wps_ielen, GFP_KERNEL);
 			if (pmlmepriv->wps_probe_req_ie == NULL) {
-				DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -1660,10 +1660,10 @@ static int rtw_cfg80211_set_probe_req_wp
 				pmlmepriv->p2p_probe_req_ie = NULL;
 			}
 
-			pmlmepriv->p2p_probe_req_ie = rtw_malloc(p2p_ielen);
+			pmlmepriv->p2p_probe_req_ie = kmalloc(p2p_ielen, GFP_KERNEL);
 			if (pmlmepriv->p2p_probe_req_ie == NULL) {
-				DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
-				return -EINVAL;
+				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				return -ENOMEM;
 
 			}
 			memcpy(pmlmepriv->p2p_probe_req_ie, p2p_ie, p2p_ielen);
@@ -1686,9 +1686,9 @@ static int rtw_cfg80211_set_probe_req_wp
 				pmlmepriv->wfd_probe_req_ie = NULL;
 			}
 
-			pmlmepriv->wfd_probe_req_ie = rtw_malloc(wfd_ielen);
+			pmlmepriv->wfd_probe_req_ie = kmalloc(wfd_ielen, GFP_KERNEL);
 			if (pmlmepriv->wfd_probe_req_ie == NULL) {
-				DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -2208,9 +2208,9 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 				pmlmepriv->p2p_assoc_req_ie = NULL;
 			}
 
-			pmlmepriv->p2p_assoc_req_ie = rtw_malloc(p2p_ielen);
+			pmlmepriv->p2p_assoc_req_ie = kmalloc(p2p_ielen, GFP_KERNEL);
 			if (pmlmepriv->p2p_assoc_req_ie == NULL) {
-				DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				goto exit;
 			}
 			memcpy(pmlmepriv->p2p_assoc_req_ie, p2p_ie, p2p_ielen);
@@ -2239,9 +2239,9 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 				pmlmepriv->wfd_assoc_req_ie = NULL;
 			}
 
-			pmlmepriv->wfd_assoc_req_ie = rtw_malloc(wfd_ielen);
+			pmlmepriv->wfd_assoc_req_ie = kmalloc(wfd_ielen, GFP_KERNEL);
 			if (pmlmepriv->wfd_assoc_req_ie == NULL) {
-				DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				goto exit;
 			}
 			rtw_get_wfd_ie(buf, ielen, pmlmepriv->wfd_assoc_req_ie, &pmlmepriv->wfd_assoc_req_ie_len);
@@ -2481,7 +2481,7 @@ static int cfg80211_rtw_connect(struct w
 		{
 			wep_key_len = wep_key_len <= 5 ? 5 : 13;
 			wep_total_len = wep_key_len + FIELD_OFFSET(NDIS_802_11_WEP, KeyMaterial);
-			pwep =(NDIS_802_11_WEP	 *) rtw_malloc(wep_total_len);
+			pwep =(NDIS_802_11_WEP	 *) kmalloc(wep_total_len, GFP_KERNEL);
 			if (pwep == NULL) {
 				DBG_871X(" wpa_set_encryption: pwep allocate fail !!!\n");
 				ret = -ENOMEM;
@@ -4348,9 +4348,9 @@ static int rtw_cfg80211_set_beacon_wpsp2
 				pmlmepriv->wps_beacon_ie = NULL;
 			}
 
-			pmlmepriv->wps_beacon_ie = rtw_malloc(wps_ielen);
+			pmlmepriv->wps_beacon_ie = kmalloc(wps_ielen, GFP_KERNEL);
 			if (pmlmepriv->wps_beacon_ie == NULL) {
-				DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -4377,9 +4377,9 @@ static int rtw_cfg80211_set_beacon_wpsp2
 				pmlmepriv->p2p_beacon_ie = NULL;
 			}
 
-			pmlmepriv->p2p_beacon_ie = rtw_malloc(p2p_ielen);
+			pmlmepriv->p2p_beacon_ie = kmalloc(p2p_ielen, GFP_KERNEL);
 			if (pmlmepriv->p2p_beacon_ie == NULL) {
-				DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -4405,9 +4405,9 @@ static int rtw_cfg80211_set_beacon_wpsp2
 				pmlmepriv->wfd_beacon_ie = NULL;
 			}
 
-			pmlmepriv->wfd_beacon_ie = rtw_malloc(wfd_ielen);
+			pmlmepriv->wfd_beacon_ie = kmalloc(wfd_ielen, GFP_KERNEL);
 			if (pmlmepriv->wfd_beacon_ie == NULL) {
-				DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -4457,9 +4457,9 @@ static int rtw_cfg80211_set_probe_resp_w
 				pmlmepriv->wps_probe_resp_ie = NULL;
 			}
 
-			pmlmepriv->wps_probe_resp_ie = rtw_malloc(wps_ielen);
+			pmlmepriv->wps_probe_resp_ie = kmalloc(wps_ielen, GFP_KERNEL);
 			if (pmlmepriv->wps_probe_resp_ie == NULL) {
-				DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -4513,9 +4513,9 @@ static int rtw_cfg80211_set_probe_resp_w
 					pmlmepriv->p2p_probe_resp_ie = NULL;
 				}
 
-				pmlmepriv->p2p_probe_resp_ie = rtw_malloc(p2p_ielen);
+				pmlmepriv->p2p_probe_resp_ie = kmalloc(p2p_ielen, GFP_KERNEL);
 				if (pmlmepriv->p2p_probe_resp_ie == NULL) {
-					DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+					DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 					return -EINVAL;
 
 				}
@@ -4532,9 +4532,9 @@ static int rtw_cfg80211_set_probe_resp_w
 					pmlmepriv->p2p_go_probe_resp_ie = NULL;
 				}
 
-				pmlmepriv->p2p_go_probe_resp_ie = rtw_malloc(p2p_ielen);
+				pmlmepriv->p2p_go_probe_resp_ie = kmalloc(p2p_ielen, GFP_KERNEL);
 				if (pmlmepriv->p2p_go_probe_resp_ie == NULL) {
-					DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+					DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 					return -EINVAL;
 
 				}
@@ -4560,9 +4560,9 @@ static int rtw_cfg80211_set_probe_resp_w
 				pmlmepriv->wfd_probe_resp_ie = NULL;
 			}
 
-			pmlmepriv->wfd_probe_resp_ie = rtw_malloc(wfd_ielen);
+			pmlmepriv->wfd_probe_resp_ie = kmalloc(wfd_ielen, GFP_KERNEL);
 			if (pmlmepriv->wfd_probe_resp_ie == NULL) {
-				DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -4593,9 +4593,9 @@ static int rtw_cfg80211_set_assoc_resp_w
 			pmlmepriv->wps_assoc_resp_ie = NULL;
 		}
 
-		pmlmepriv->wps_assoc_resp_ie = rtw_malloc(len);
+		pmlmepriv->wps_assoc_resp_ie = kmalloc(len, GFP_KERNEL, GFP_KERNEL);
 		if (pmlmepriv->wps_assoc_resp_ie == NULL) {
-			DBG_8192C("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+			DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 			return -EINVAL;
 
 		}
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -149,7 +149,7 @@ static void request_wps_pbc_event(struct
 	u8 *buff, *p;
 	union iwreq_data wrqu;
 
-	buff = rtw_malloc(IW_CUSTOM_MAX);
+	buff = kmalloc(IW_CUSTOM_MAX, GFP_KERNEL);
 	if (!buff)
 		return;
 
@@ -635,7 +635,7 @@ _func_enter_;
 		if (wep_key_len > 0) {
 			wep_key_len = wep_key_len <= 5 ? 5 : 13;
 			wep_total_len = wep_key_len + FIELD_OFFSET(struct ndis_802_11_wep, KeyMaterial);
-			pwep = (struct ndis_802_11_wep *) rtw_malloc(wep_total_len);
+			pwep = (struct ndis_802_11_wep *) kmalloc(wep_total_len, GFP_KERNEL);
 			if (pwep == NULL) {
 				RT_TRACE(_module_rtl871x_ioctl_os_c, _drv_err_, (" wpa_set_encryption: pwep allocate fail !!!\n"));
 				goto exit;
@@ -2541,7 +2541,7 @@ static int rtw_wx_set_enc_ext(struct net
 	int ret = 0;
 
 	param_len = sizeof(struct ieee_param) + pext->key_len;
-	param = (struct ieee_param *)rtw_malloc(param_len);
+	param = (struct ieee_param *)kmalloc(param_len, GFP_KERNEL);
 	if (param == NULL)
 		return -1;
 
@@ -2637,7 +2637,7 @@ static int rtw_wx_read32(struct net_devi
 	padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	p = &wrqu->data;
 	len = p->length;
-	ptmp = (u8 *)rtw_malloc(len);
+	ptmp = (u8 *)kmalloc(len, GFP_KERNEL);
 	if (NULL == ptmp)
 		return -ENOMEM;
 
@@ -2822,7 +2822,7 @@ static  int rtw_drvext_hdl(struct net_de
 
 	bset = (u8)(p->flags&0xFFFF);
 	len = p->length;
-	pparmbuf = (u8 *)rtw_malloc(len);
+	pparmbuf = (u8 *)kmalloc(len, GFP_KERNEL);
 	if (pparmbuf == NULL) {
 		ret = -ENOMEM;
 		goto _rtw_drvext_hdl_exit;
@@ -3015,7 +3015,7 @@ static int rtw_mp_ioctl_hdl(struct net_d
 	pparmbuf = NULL;
 	bset = (u8)(p->flags & 0xFFFF);
 	len = p->length;
-	pparmbuf = (u8 *)rtw_malloc(len);
+	pparmbuf = (u8 *)kmalloc(len, GFP_KERNEL);
 	if (pparmbuf == NULL) {
 		ret = -ENOMEM;
 		goto _rtw_mp_ioctl_hdl_exit;
@@ -5243,7 +5243,7 @@ static int rtw_p2p_get2(struct net_devic
 #ifdef CONFIG_P2P
 
 	int length = wrqu->data.length;
-	char *buffer = (u8 *)rtw_malloc(length);
+	char *buffer = (u8 *)kmalloc(length, GFP_KERNEL);
 
 	if (buffer == NULL)
 	{
@@ -5960,7 +5960,7 @@ static int wpa_supplicant_ioctl(struct n
 		goto out;
 	}
 
-	param = (struct ieee_param *)rtw_malloc(p->length);
+	param = (struct ieee_param *)kmalloc(p->length, GFP_KERNEL);
 	if (param == NULL)
 	{
 		ret = -ENOMEM;
@@ -6203,7 +6203,7 @@ static int rtw_set_encryption(struct net
 		{
 			wep_key_len = wep_key_len <= 5 ? 5 : 13;
 			wep_total_len = wep_key_len + FIELD_OFFSET(struct ndis_802_11_wep, KeyMaterial);
-			pwep = (struct ndis_802_11_wep *)rtw_malloc(wep_total_len);
+			pwep = (struct ndis_802_11_wep *)kmalloc(wep_total_len, GFP_KERNEL);
 			if (pwep == NULL) {
 				DBG_8192D(" r871x_set_encryption: pwep allocate fail !!!\n");
 				goto exit;
@@ -6761,10 +6761,10 @@ static int rtw_set_wps_beacon(struct net
 	pmlmepriv->wps_beacon_ie = NULL;
 
 	if (ie_len > 0) {
-		pmlmepriv->wps_beacon_ie = rtw_malloc(ie_len);
+		pmlmepriv->wps_beacon_ie = kmalloc(ie_len, GFP_KERNEL);
 		pmlmepriv->wps_beacon_ie_len = ie_len;
 		if (pmlmepriv->wps_beacon_ie == NULL) {
-			DBG_8192D("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+			DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 			return -EINVAL;
 		}
 		memcpy(pmlmepriv->wps_beacon_ie, param->u.bcn_ie.buf, ie_len);
@@ -6795,10 +6795,10 @@ static int rtw_set_wps_probe_resp(struct
 	pmlmepriv->wps_probe_resp_ie = NULL;
 
 	if (ie_len > 0) {
-		pmlmepriv->wps_probe_resp_ie = rtw_malloc(ie_len);
+		pmlmepriv->wps_probe_resp_ie = kmalloc(ie_len, GFP_KERNEL);
 		pmlmepriv->wps_probe_resp_ie_len = ie_len;
 		if (pmlmepriv->wps_probe_resp_ie == NULL) {
-			DBG_8192D("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+			DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 			return -EINVAL;
 		}
 		memcpy(pmlmepriv->wps_probe_resp_ie, param->u.bcn_ie.buf, ie_len);
@@ -6824,10 +6824,10 @@ static int rtw_set_wps_assoc_resp(struct
 	pmlmepriv->wps_assoc_resp_ie = NULL;
 
 	if (ie_len > 0) {
-		pmlmepriv->wps_assoc_resp_ie = rtw_malloc(ie_len);
+		pmlmepriv->wps_assoc_resp_ie = kmalloc(ie_len, GFP_KERNEL);
 		pmlmepriv->wps_assoc_resp_ie_len = ie_len;
 		if (pmlmepriv->wps_assoc_resp_ie == NULL) {
-			DBG_8192D("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+			DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 			return -EINVAL;
 		}
 
@@ -6956,7 +6956,7 @@ static int rtw_hostapd_ioctl(struct net_
 		goto out;
 	}
 
-	param = (struct ieee_param *)rtw_malloc(p->length);
+	param = (struct ieee_param *)kmalloc(p->length, GFP_KERNEL);
 	if (param == NULL) {
 		ret = -ENOMEM;
 		goto out;
@@ -7048,7 +7048,7 @@ static int rtw_wx_set_priv(struct net_de
 	if (dwrq->length == 0)
 		return -EFAULT;
 	len = dwrq->length;
-	if (!(ext = rtw_vmalloc(len)))
+	if (!(ext = vmalloc(len)))
 		return -ENOMEM;
 
 	if (copy_from_user(ext, dwrq->pointer, len)) {
@@ -7089,9 +7089,9 @@ static int rtw_wx_set_priv(struct net_de
 				pmlmepriv->wps_probe_req_ie = NULL;
 			}
 
-			pmlmepriv->wps_probe_req_ie = rtw_malloc(cp_sz);
+			pmlmepriv->wps_probe_req_ie = kmalloc(cp_sz, GFP_KERNEL);
 			if (pmlmepriv->wps_probe_req_ie == NULL) {
-				DBG_8192D("%s()-%d: rtw_malloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				ret =  -EINVAL;
 				goto FREE_EXT;
 
@@ -8134,7 +8134,7 @@ static int rtw_wowlan_ctrl(struct net_de
 	pparmbuf = NULL;
 	bset = (u8)(p->flags & 0xFFFF);
 	len = p->length;
-	pparmbuf = (u8 *)rtw_malloc(len);
+	pparmbuf = (u8 *)kmalloc(len, GFP_KERNEL);
 	if (pparmbuf == NULL) {
 		ret = -ENOMEM;
 		goto _rtw_wowlan_ctrl_exit;
@@ -8186,7 +8186,7 @@ static int rtw_widi_set_probe_request(st
 	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	u8	*pbuf = NULL;
 
-	pbuf = rtw_malloc(sizeof(l2_msg_t));
+	pbuf = kmalloc(sizeof(l2_msg_t, GFP_KERNEL));
 	if (pbuf) {
 		memcpy(pbuf, wrqu->data.pointer, wrqu->data.length);
 		intel_widi_wk_cmd(padapter, INTEL_WIDI_ISSUE_PROB_WK, pbuf);
--- a/drivers/staging/rtl8192du/os_dep/mlme_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/mlme_linux.c
@@ -179,7 +179,7 @@ _func_enter_;
 	{
 		RT_TRACE(_module_mlme_osdep_c_,_drv_info_,("rtw_report_sec_ie, authmode=%d\n", authmode));
 
-		buff = rtw_malloc(IW_CUSTOM_MAX);
+		buff = kmalloc(IW_CUSTOM_MAX, GFP_KERNEL);
 
 		memset(buff,0,IW_CUSTOM_MAX);
 
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -66,18 +66,9 @@ inline u8* _rtw_vmalloc(u32 sz)
 	return pbuf;
 }
 
-u8* _rtw_malloc(u32 sz)
-{
-
-	u8	*pbuf=NULL;
-
-	pbuf = kmalloc(sz,in_interrupt() ? GFP_ATOMIC : GFP_KERNEL);
-	return pbuf;
-}
-
 u8* _rtw_zmalloc(u32 sz)
 {
-	u8	*pbuf = _rtw_malloc(sz);
+	u8	*pbuf = kmalloc(sz, GFP_KERNEL);
 
 	if (pbuf != NULL) {
 		memset(pbuf, 0, sz);
@@ -770,7 +761,7 @@ void rtw_buf_update(u8 **buf, u32 *buf_l
 		goto keep_ori;
 
 	/* duplicate src */
-	dup = rtw_malloc(src_len);
+	dup = kmalloc(src_len, GFP_KERNEL);
 	if (dup) {
 		dup_len = src_len;
 		memcpy(dup, src, dup_len);
@@ -861,7 +852,8 @@ struct rtw_cbuf *rtw_cbuf_alloc(u32 size
 {
 	struct rtw_cbuf *cbuf;
 
-	cbuf = (struct rtw_cbuf *)rtw_malloc(sizeof(*cbuf) + sizeof(void*)*size);
+	cbuf = (struct rtw_cbuf *)kmalloc(sizeof(*cbuf) + sizeof(void*) * size,
+					  GFP_KERNEL);
 
 	if (cbuf) {
 		cbuf->write = cbuf->read = 0;
