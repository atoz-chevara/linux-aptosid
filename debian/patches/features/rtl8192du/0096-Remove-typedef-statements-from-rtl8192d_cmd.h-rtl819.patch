From d1b35ad46da99aa828a17c776e251fa1d8c1c0d3 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Mon, 29 Apr 2013 11:22:39 -0500
Subject: [PATCH 096/210] Remove typedef statements from rtl8192d_cmd.h,
 rtl8192d_hal.h, sta_info.h, and drv_types.h

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 hal/rtl8192d_cmd.c      |  16 ++--
 hal/rtl8192d_dm.c       |  97 +++++++++++------------
 hal/rtl8192d_hal_init.c |  49 ++++++------
 hal/rtl8192d_phycfg.c   | 203 ++++++++++++++++++++++--------------------------
 hal/rtl8192d_rf6052.c   |  28 +++----
 hal/rtl8192d_rxdesc.c   |   4 +-
 hal/rtl8192du_led.c     |   6 +-
 hal/rtl8192du_xmit.c    |   6 +-
 hal/usb_halinit.c       | 137 ++++++++++++++++----------------
 hal/usb_ops_linux.c     |  12 +--
 include/drv_types.h     |   2 -
 include/rtl8192d_cmd.h  |   4 +-
 include/rtl8192d_hal.h  |  86 ++++----------------
 include/sta_info.h      |   6 +-
 os_dep/usb_ops_linux.c  |   6 +-
 15 files changed, 291 insertions(+), 371 deletions(-)

--- a/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
@@ -88,7 +88,7 @@ CheckFwReadLastH2C(
 ******************************************/
 static void _FillH2CCmd92D(struct rtw_adapter* padapter, u8 ElementID, u32 CmdLen, u8* pCmdBuffer)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	u8	BoxNum;
 	u16	BOXReg=0, BOXExtReg=0;
 	u8	BoxContent[4], BoxExtContent[2];
@@ -343,7 +343,7 @@ _func_exit_;
 void rtl8192d_Add_RateATid(struct rtw_adapter * pAdapter, u32 bitmap, u8 arg)
 {
 
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 
 	if(pHalData->fw_ractrl == true)
 	{
@@ -630,7 +630,7 @@ FillFakeTxDescriptor92D(
 	bool		IsPsPoll
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct tx_desc	*ptxdesc = (struct tx_desc *)pDesc;
 
 	// Clear all status
@@ -684,7 +684,7 @@ FillFakeTxDescriptor92D(
 void SetFwRsvdPagePkt(struct rtw_adapter * Adapter, bool bDLFinished);
 void SetFwRsvdPagePkt(struct rtw_adapter * Adapter, bool bDLFinished)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct xmit_frame	*pmgntframe;
 	struct pkt_attrib	*pattrib;
 	struct xmit_priv	*pxmitpriv = &(Adapter->xmitpriv);
@@ -826,7 +826,7 @@ void SetFwRsvdPagePkt(struct rtw_adapter
 void rtl8192d_set_FwJoinBssReport_cmd(struct rtw_adapter* padapter, u8 mstatus)
 {
 	u8	u1JoinBssRptParm[1]={0};
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	bool	bRecover = false;
@@ -903,8 +903,8 @@ void rtl8192d_set_p2p_ctw_period_cmd(str
 
 void rtl8192d_set_p2p_ps_offload_cmd(struct rtw_adapter* padapter, u8 p2p_ps_state)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
-	struct pwrctrl_priv		*pwrpriv = &padapter->pwrctrlpriv;
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
+	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
 	struct wifidirect_info	*pwdinfo = &( padapter->wdinfo );
 	struct P2P_PS_Offload_t	*p2p_ps_offload = &pHalData->p2p_ps_offload;
 	u8	i;
@@ -1058,7 +1058,7 @@ void rtl8192d_set_wowlan_cmd(struct rtw_
 	u32 test=0;
 	struct recv_priv	*precvpriv = &padapter->recvpriv;
 
-	SETWOWLAN_PARM pwowlan_parm;
+	struct set_wowlan_parm pwowlan_parm;
 	struct pwrctrl_priv *pwrpriv=&padapter->pwrctrlpriv;
 
 _func_enter_;
--- a/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
@@ -72,7 +72,7 @@ static void dm_DIGInit(
 	struct rtw_adapter *	pAdapter
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct DIG_T *dm_digtable = &pdmpriv->DM_DigTable;
 
@@ -116,7 +116,7 @@ dm_DualMacGetParameterFromBuddyAdapter(
 )
 {
 	struct rtw_adapter *	BuddyAdapter = Adapter->pbuddy_adapter;
-	PHAL_DATA_TYPE	pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct mlme_priv *pmlmepriv = &(Adapter->mlmepriv);
 	struct mlme_priv *pbuddy_mlmepriv = &(BuddyAdapter->mlmepriv);
 
@@ -145,7 +145,7 @@ odm_FalseAlarmCounterStatistics_ForSlave
 {
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	struct rtw_adapter *	BuddyAdapter = Adapter->pbuddy_adapter;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct FALSE_ALARM_STATISTICS *falsealmcnt = &(pdmpriv->falsealmcnt);
 	struct dm_priv	*Buddydmpriv;
@@ -200,15 +200,15 @@ odm_FalseAlarmCounterStatistics(
 	)
 {
 	u32	ret_value;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
-	struct mlme_priv	*pmlmepriv = &(Adapter->mlmepriv);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
+	struct mlme_priv *pmlmepriv = &(Adapter->mlmepriv);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct FALSE_ALARM_STATISTICS *falsealmcnt = &(pdmpriv->falsealmcnt);
 	u8	BBReset;
 #ifdef CONFIG_CONCURRENT_MODE
 	struct rtw_adapter * pbuddy_adapter = Adapter->pbuddy_adapter;
-	HAL_DATA_TYPE	*pbuddy_pHalData = GET_HAL_DATA(pbuddy_adapter);
-	struct mlme_priv	*pbuddy_pmlmepriv = &(pbuddy_adapter->mlmepriv);
+	struct hal_data_8192du *pbuddy_pHalData = GET_HAL_DATA(pbuddy_adapter);
+	struct mlme_priv *pbuddy_pmlmepriv = &(pbuddy_adapter->mlmepriv);
 #endif //CONFIG_CONCURRENT_MODE
 	//hold ofdm counter
 	PHY_SetBBReg(Adapter, rOFDM0_LSTF, BIT31, 1); //hold page C counter
@@ -326,7 +326,7 @@ odm_FindMinimumRSSI_Dmsp(
 )
 {
 #ifdef CONFIG_DUALMAC_CONCURRENT
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	s32	rssi_val_min_back_for_mac0;
 	bool		bGetValueFromBuddyAdapter = dm_DualMacGetParameterFromBuddyAdapter(pAdapter);
@@ -371,7 +371,7 @@ odm_FindMinimumRSSI_92D(
 struct rtw_adapter *	pAdapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct mlme_priv	*pmlmepriv = &pAdapter->mlmepriv;
 
@@ -413,7 +413,7 @@ odm_initial_gain_MinPWDB(
 	struct rtw_adapter *	pAdapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	s32	rssi_val_min = 0;
 	if(pdmpriv->EntryMinUndecoratedSmoothedPWDB != 0)
@@ -431,7 +431,7 @@ DM_Write_DIG_DMSP(
 	)
 {
 #ifdef CONFIG_DUALMAC_CONCURRENT
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct DIG_T *dm_digtable = &pdmpriv->DM_DigTable;
 	struct rtw_adapter *	BuddyAdapter = pAdapter->pbuddy_adapter;
@@ -503,7 +503,7 @@ DM_Write_DIG(
 	struct rtw_adapter *	pAdapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct DIG_T *dm_digtable = &pdmpriv->DM_DigTable;
 
@@ -525,7 +525,7 @@ DM_Write_DIG(
 static void odm_DIG(
 	struct rtw_adapter *	pAdapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct mlme_priv	*pmlmepriv = &(pAdapter->mlmepriv);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct registry_priv	 *pregistrypriv = &pAdapter->registrypriv;
@@ -540,7 +540,7 @@ static void odm_DIG(
 	u8	TxRate = rtw_read8(pAdapter, REG_INIDATA_RATE_SEL);
 #ifdef CONFIG_CONCURRENT_MODE
 	struct rtw_adapter * pbuddy_adapter = pAdapter->pbuddy_adapter;
-	HAL_DATA_TYPE	*pbuddy_pHalData = GET_HAL_DATA(pbuddy_adapter);
+	struct hal_data_8192du *pbuddy_pHalData = GET_HAL_DATA(pbuddy_adapter);
 	struct mlme_priv	*pbuddy_pmlmepriv = &(pbuddy_adapter->mlmepriv);
 	struct dm_priv	*pbuddy_pdmpriv = &pbuddy_pHalData->dmpriv;
 #endif //CONFIG_CONCURRENT_MODE
@@ -882,7 +882,7 @@ dm_initial_gain_MinPWDB(
 	struct rtw_adapter *	pAdapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	s32	rssi_val_min = 0;
 	struct DIG_T *dm_digtable = &pdmpriv->DM_DigTable;
@@ -909,7 +909,7 @@ static void dm_CCK_PacketDetectionThresh
 	struct rtw_adapter *	pAdapter)
 {
 #ifdef CONFIG_DUALMAC_CONCURRENT
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct DIG_T *dm_digtable = &pdmpriv->DM_DigTable;
 	struct rtw_adapter *	BuddyAdapter = pAdapter->pbuddy_adapter;
@@ -1059,7 +1059,7 @@ static void dm_CCK_PacketDetectionThresh
 
 static void dm_CCK_PacketDetectionThresh(struct rtw_adapter *	pAdapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct DIG_T *dm_digtable = &pdmpriv->DM_DigTable;
 
@@ -1089,9 +1089,9 @@ static void dm_CCK_PacketDetectionThresh
 
 }
 
-static void dm_1R_CCA(struct rtw_adapter *	pAdapter)
+static void dm_1R_CCA(struct rtw_adapter *pAdapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct PS_T *dm_pstable = &pdmpriv->DM_PSTable;
 	struct registry_priv *pregistrypriv = &pAdapter->registrypriv;
@@ -1159,7 +1159,7 @@ static void dm_1R_CCA(struct rtw_adapter
 
 static void dm_InitDynamicTxPower(struct rtw_adapter *	Adapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
 	pdmpriv->bDynamicTxPowerEnable = false;
@@ -1170,8 +1170,8 @@ static void dm_InitDynamicTxPower(struct
 
 static void odm_DynamicTxPower_92D(struct rtw_adapter *	Adapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
-	struct mlme_priv	*pmlmepriv = &(Adapter->mlmepriv);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
+	struct mlme_priv *pmlmepriv = &(Adapter->mlmepriv);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	int	UndecoratedSmoothedPWDB;
 
@@ -1337,7 +1337,7 @@ static void PWDB_Monitor(
 	struct rtw_adapter *	Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	int	i;
 	int	tmpEntryMaxPWDB=0, tmpEntryMinPWDB=0xff;
@@ -1450,16 +1450,13 @@ DM_InitEdcaTurbo(
 	struct rtw_adapter *	Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	pHalData->bCurrentTurboEDCA = false;
 	Adapter->recvpriv.bIsAnyNonBEPkts = false;
 }	// DM_InitEdcaTurbo
 
-static void
-dm_CheckEdcaTurbo(
-	struct rtw_adapter *	Adapter
-	)
+static void dm_CheckEdcaTurbo(struct rtw_adapter *Adapter)
 {
 	u32	trafficIndex;
 	u32	edca_param;
@@ -1467,13 +1464,13 @@ dm_CheckEdcaTurbo(
 	u64	cur_rx_bytes = 0;
 	u32	EDCA_BE[2] = {0x5ea42b, 0x5ea42b};
 	u8	bbtchange = false;
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
-	struct dm_priv		*pdmpriv = &pHalData->dmpriv;
-	struct xmit_priv		*pxmitpriv = &(Adapter->xmitpriv);
-	struct recv_priv		*precvpriv = &(Adapter->recvpriv);
-	struct registry_priv	*pregpriv = &Adapter->registrypriv;
-	struct mlme_ext_priv	*pmlmeext = &(Adapter->mlmeextpriv);
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
+	struct dm_priv *pdmpriv = &pHalData->dmpriv;
+	struct xmit_priv *pxmitpriv = &(Adapter->xmitpriv);
+	struct recv_priv *precvpriv = &(Adapter->recvpriv);
+	struct registry_priv *pregpriv = &Adapter->registrypriv;
+	struct mlme_ext_priv *pmlmeext = &(Adapter->mlmeextpriv);
+	struct mlme_ext_info *pmlmeinfo = &(pmlmeext->mlmext_info);
 
 	if(IS_92D_SINGLEPHY(pHalData->VersionID))
 	{
@@ -1587,7 +1584,7 @@ static void dm_InitDynamicBBPowerSaving(
 	struct rtw_adapter *	Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct PS_T *dm_pstable = &pdmpriv->DM_PSTable;
 
@@ -1602,7 +1599,7 @@ dm_DynamicBBPowerSaving(
 struct rtw_adapter *	pAdapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 
 	//1 Power Saving for 92C
 	if(IS_92D_SINGLEPHY(pHalData->VersionID))
@@ -1626,7 +1623,7 @@ dm_RXGainTrackingCallback_ThermalMeter_9
 
 	u8			eRFPath;
 	u32			u4tmp;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
 	u4tmp = (index_mapping[(pHalData->EEPROMThermalMeter - pdmpriv->ThermalValue_RxGain)]) << 12;
@@ -1644,7 +1641,7 @@ static	void
 dm_TXPowerTrackingCallback_ThermalMeter_92D(
             struct rtw_adapter *	Adapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u8			ThermalValue = 0, delta, delta_LCK, delta_IQK, delta_RxGain, index, offset;
 	u8			ThermalValue_AVG_count = 0;
@@ -2143,7 +2140,7 @@ static	void
 dm_InitializeTXPowerTracking_ThermalMeter(
 	struct rtw_adapter *		Adapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
 	//if(IS_HARDWARE_TYPE_8192C(pHalData))
@@ -2163,7 +2160,7 @@ static void
 DM_InitializeTXPowerTracking(
 	struct rtw_adapter *		Adapter)
 {
-	//HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	//struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	//if(IS_HARDWARE_TYPE_8192C(pHalData))
 	{
@@ -2193,9 +2190,9 @@ static void
 dm_CheckTXPowerTracking_ThermalMeter(
 	struct rtw_adapter *		Adapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
-	//u1Byte					TxPowerCheckCnt = 5;	//10 sec
+	//u1Byte TxPowerCheckCnt = 5;	//10 sec
 
 	if(!(pdmpriv->DMFlag & DYNAMIC_FUNC_SS))
 	{
@@ -2337,7 +2334,7 @@ static void	dm_CheckPbcGPIO(struct rtw_a
 
 static void dm_InitRateAdaptiveMask(struct rtw_adapter *	Adapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct rate_adaptive *ra = (struct rate_adaptive *)&pdmpriv->RateAdaptive;
 
@@ -2406,7 +2403,7 @@ dm_InitGPIOSetting(
 //============================================================
 void rtl8192d_init_dm_priv(struct rtw_adapter * Adapter)
 {
-	//PHAL_DATA_TYPE	pHalData = GET_HAL_DATA(Adapter);
+	//struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	//struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
 	//_rtw_memset(pdmpriv, 0, sizeof(struct dm_priv));
@@ -2415,7 +2412,7 @@ void rtl8192d_init_dm_priv(struct rtw_ad
 
 void rtl8192d_deinit_dm_priv(struct rtw_adapter * Adapter)
 {
-	//PHAL_DATA_TYPE	pHalData = GET_HAL_DATA(Adapter);
+	//struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	//struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
 }
@@ -2425,7 +2422,7 @@ rtl8192d_InitHalDm(
 	struct rtw_adapter *	Adapter
 	)
 {
-	PHAL_DATA_TYPE	pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u8	i;
 
@@ -2469,9 +2466,9 @@ rtl8192d_InitHalDm(
 #ifdef CONFIG_CONCURRENT_MODE
 static void FindMinimumRSSI(struct rtw_adapter * Adapter)
 {
-	PHAL_DATA_TYPE	pbuddy_HalData;
+	struct hal_data_8192du *pbuddy_HalData;
 	struct dm_priv *pbuddy_dmpriv;
-	PHAL_DATA_TYPE	pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct rtw_adapter * pbuddy_adapter = Adapter->pbuddy_adapter;
 	struct mlme_priv *pmlmepriv = &Adapter->mlmepriv;
@@ -2546,7 +2543,7 @@ rtl8192d_HalDmWatchDog(
 	bool		bFwCurrentInPSMode = false;
 	bool		bFwPSAwake = true;
 	u8 hw_init_completed = false;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 #ifdef CONFIG_CONCURRENT_MODE
 	struct rtw_adapter * pbuddy_adapter = Adapter->pbuddy_adapter;
--- a/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_hal_init.c
@@ -256,7 +256,7 @@ rtl8192d_FirmwareSelfReset(
 	struct rtw_adapter *		Adapter
 )
 {
-	//HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	//struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	u1bTmp;
 	u8	Delay = 100;
 
@@ -307,7 +307,7 @@ int _FWInit(
 	struct rtw_adapter *			  Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u32			counter = 0;
 
 
@@ -363,7 +363,7 @@ int FirmwareDownload92D(
 	int	rtStatus = _SUCCESS;
 	u8 writeFW_retry = 0;
 	u32 fwdl_start_time;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	s8				R92DFwImageFileName[] ={RTL8192D_FW_IMG};
 	u8*				FwImage;
 	u32				FwImageLen;
@@ -373,7 +373,7 @@ int FirmwareDownload92D(
 	u32			FwImageWoWLANLen;
 #endif //CONFIG_WOWLAN
 	struct RT_FIRMWARE_92D	*pFirmware = NULL;
-	PRT_8192D_FIRMWARE_HDR		pFwHdr = NULL;
+	struct rt_8192d_firmware_hdr *pFwHdr = NULL;
 	u8		*pFirmwareBuf;
 	u32		FirmwareLen;
 	u8		value;
@@ -460,7 +460,7 @@ int FirmwareDownload92D(
 	if(bUsedWoWLANFw)	{
 		pFirmwareBuf = pFirmware->szWoWLANFwBuffer;
 		FirmwareLen = pFirmware->ulWoWLANFwLength;
-		pFwHdr = (PRT_8192D_FIRMWARE_HDR)pFirmware->szWoWLANFwBuffer;
+		pFwHdr = (struct rt_8192d_firmware_hdr *)pFirmware->szWoWLANFwBuffer;
 	}
 	else
 #endif //CONFIG_WOWLAN
@@ -469,7 +469,7 @@ int FirmwareDownload92D(
 	FirmwareLen = pFirmware->ulFwLength;
 
 	// To Check Fw header. Added by tynli. 2009.12.04.
-	pFwHdr = (PRT_8192D_FIRMWARE_HDR)pFirmware->szFwBuffer;
+	pFwHdr = (struct rt_8192d_firmware_hdr *)pFirmware->szFwBuffer;
 	}
 
 	pHalData->FirmwareVersion =  le16_to_cpu(pFwHdr->Version);
@@ -611,7 +611,7 @@ InitializeFirmwareVars92D(
 	struct rtw_adapter *		Adapter
 )
 {
-	HAL_DATA_TYPE		*pHalData	= GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct pwrctrl_priv *pwrpriv;
 	pwrpriv = &Adapter->pwrctrlpriv;
 
@@ -641,7 +641,7 @@ SetFwRelatedForWoWLAN8192DU(
 )
 {
 	int	status=_FAIL;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	u8	 bRecover = false;
 
 	if(bHostIsGoingtoSleep)
@@ -712,7 +712,7 @@ rtl8192d_ReadChipVersion(
 	)
 {
 	u32	value32;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	enum VERSION_8192D	ChipVersion = VERSION_TEST_CHIP_88C;
 
 	value32 = rtw_read32(Adapter, REG_SYS_CFG);
@@ -769,17 +769,17 @@ rtl8192d_EfuseParseChnlPlan(
 
 static void
 hal_ReadPowerValueFromPROM92D(
-	struct rtw_adapter *		Adapter,
-	PTxPowerInfo	pwrInfo,
+	struct rtw_adapter *Adapter,
+	struct tx_power_info *pwrInfo,
 	u8*			PROMContent,
 	bool			AutoLoadFail
 	)
 {
 	u32	rfPath, eeAddr, group, offset1,offset2=0;
 	u8	i = 0;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
-	_rtw_memset(pwrInfo, 0, sizeof(TxPowerInfo));
+	_rtw_memset(pwrInfo, 0, sizeof(struct tx_power_info));
 
 	if(AutoLoadFail){
 		for(group = 0 ; group < CHANNEL_GROUP_MAX ; group++){
@@ -910,9 +910,9 @@ rtl8192d_ReadTxPowerInfo(
 	bool			AutoLoadFail
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
-	TxPowerInfo	pwrInfo;
+	struct tx_power_info pwrInfo;
 	u32			rfPath, ch, group;
 	u8			pwr, diff,tempval[2], i;
 
@@ -1108,7 +1108,7 @@ void rtl8192d_ResetDualMacSwitchVariable
 )
 {
 #ifdef CONFIG_DUALMAC_CONCURRENT
-/*	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+/*	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct rtw_adapter *		BuddyAdapter = Adapter->BuddyAdapter;
 
 	Adapter->bNeedReConfigMac = false;
@@ -1160,10 +1160,9 @@ PHY_CheckPowerOffFor8192D(
 )
 {
 	u8 u1bTmp;
-	PHAL_DATA_TYPE	pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
-	if(pHalData->MacPhyMode92D==SINGLEMAC_SINGLEPHY)
-	{
+	if(pHalData->MacPhyMode92D==SINGLEMAC_SINGLEPHY) {
 		u1bTmp = rtw_read8(Adapter, REG_MAC0);
 		rtw_write8(Adapter, REG_MAC0, u1bTmp&(~MAC0_ON));
 		return true;
@@ -1204,10 +1203,10 @@ Function: Synchrosize for power off/on w
 *************************************************************/
 void
 PHY_SetPowerOnFor8192D(
-	struct rtw_adapter *	Adapter
+	struct rtw_adapter *Adapter
 )
 {
-	PHAL_DATA_TYPE		pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	value8;
 	u16	i;
 
@@ -1273,7 +1272,7 @@ _func_enter_;
 	DBG_8192D("===== rtl8192du_free_hal_data =====\n");
 
 	if(padapter->HalData)
-		rtw_mfree(padapter->HalData, sizeof(HAL_DATA_TYPE));
+		rtw_mfree(padapter->HalData, sizeof(struct hal_data_8192du));
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	GlobalFirstConfigurationForNormalChip = true;
 #endif
@@ -1516,7 +1515,7 @@ hal_EfuseUpdateNormalChipVersion_92D(
 	struct rtw_adapter *	Adapter
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	enum VERSION_8192D	ChipVer = pHalData->VersionID;
 	u8	CutValue[2];
 	u16	ChipValue=0;
@@ -1555,7 +1554,7 @@ hal_EfuseMacMode_ISVS_92D(
          struct rtw_adapter *     Adapter
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	PartNo;
 	bool bResult = false;
 	// 92D VS not support dual mac mode
@@ -1596,7 +1595,7 @@ rtl8192d_ReadEFuse(
 	bool	bPseudoTest
 	)
 {
-	PHAL_DATA_TYPE	pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	ReadEFuse_RTL8192D(Adapter, efuseType, _offset, _size_byte, pbuf, bPseudoTest);
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
@@ -382,7 +382,7 @@ phy_RFSerialRead(
 	)
 {
 	u32	retValue = 0;
-	HAL_DATA_TYPE				*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct bb_register_def *pPhyReg = &pHalData->PHYRegDef[eRFPath];
 	u32	NewOffset;
 	u32	tmplong,tmplong2;
@@ -508,7 +508,7 @@ phy_RFSerialWrite(
 	)
 {
 	u32	DataAndAddr = 0;
-	HAL_DATA_TYPE				*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct bb_register_def *pPhyReg = &pHalData->PHYRegDef[eRFPath];
 	u32	NewOffset,MaskforPhySet=0;
 
@@ -580,7 +580,7 @@ rtl8192d_PHY_QueryRFReg(
 	)
 {
 	u32 Original_Value, Readback_Value, BitShift;
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	//u8	RFWaitCounter = 0;
 
 #if (DISABLE_BB_RF == 1)
@@ -629,8 +629,7 @@ rtl8192d_PHY_SetRFReg(
 	)
 {
 
-	HAL_DATA_TYPE	*pHalData		= GET_HAL_DATA(Adapter);
-	//u1Byte			RFWaitCounter	= 0;
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u32			Original_Value, BitShift;
 
 #if (DISABLE_BB_RF == 1)
@@ -681,7 +680,7 @@ phy_ConfigMACWithParaFile(
 	u8*			pFileName
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	int		rtStatus = _SUCCESS;
 
@@ -712,7 +711,7 @@ phy_ConfigMACWithHeaderFile(
 	u32					i = 0;
 	u32					ArrayLength = 0;
 	u32*				ptrArray;
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	//2008.11.06 Modified by tynli.
 	//RT_TRACE(COMP_INIT, DBG_LOUD, ("Read Rtl819XMACPHY_Array\n"));
@@ -750,7 +749,7 @@ PHY_MACConfig8192D(
 	struct rtw_adapter *	Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	char		*pszMACRegFile;
 	char		sz92DMACRegFile[] = RTL8192D_PHY_MACREG;
 	int		rtStatus = _SUCCESS;
@@ -807,7 +806,7 @@ phy_InitBBRFRegisterDefinition(
 	struct rtw_adapter *		Adapter
 )
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	// RF Interface Sowrtware Control
 	pHalData->PHYRegDef[RF_PATH_A].rfintfs = rFPGA0_XAB_RFInterfaceSW; // 16 LSBs if read 32-bit from 0x870
@@ -935,7 +934,7 @@ phy_ConfigBBWithHeaderFile(
 	u32*	Rtl819XAGCTAB_Array_Table=NULL;
 	u32*	Rtl819XAGCTAB_5GArray_Table=NULL;
 	u16	PHY_REGArrayLen=0, AGCTAB_ArrayLen=0, AGCTAB_5GArrayLen=0;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
 
@@ -1071,7 +1070,7 @@ phy_ConfigBBWithParaFile(
 	u8*			pFileName
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	int		rtStatus = _SUCCESS;
 
@@ -1087,7 +1086,7 @@ storePwrIndexDiffRateOffset(
 	u32		Data
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	if(RegAddr == rTxAGC_A_Rate18_06)
 	{
@@ -1212,7 +1211,7 @@ phy_ConfigBBWithPgHeaderFile(
 	int i;
 	u32*	Rtl819XPHY_REGArray_Table_PG;
 	u16	PHY_REGArrayPGLen;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	PHY_REGArrayPGLen = Rtl8192D_PHY_REG_Array_PGLength;
 	Rtl819XPHY_REGArray_Table_PG = (u32 *)Rtl8192D_PHY_REG_Array_PG;
@@ -1278,7 +1277,7 @@ phy_ConfigBBWithPgParaFile(
 	struct rtw_adapter *		Adapter,
 	u8*			pFileName)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	int		rtStatus = _SUCCESS;
 
@@ -1311,7 +1310,7 @@ phy_ConfigBBWithMpParaFile(
 	s8			*pFileName
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	int	rtStatus = _SUCCESS;
 
 	return rtStatus;
@@ -1394,7 +1393,7 @@ phy_BB8192D_Config_ParaFile(
 #if MP_DRIVER != 1
 	struct eeprom_priv *pEEPROM = GET_EEPROM_EFUSE_PRIV(Adapter);
 #endif
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	int		rtStatus = _SUCCESS;
 	s8		sz92DBBRegFile[] = RTL8192D_PHY_REG;
 	s8		sz92DBBRegPgFile[] = RTL8192D_PHY_REG_PG;
@@ -1522,7 +1521,7 @@ PHY_BBConfig8192D(
 {
 	int	rtStatus = _SUCCESS;
 	//u8		PathMap = 0, index = 0, rf_num = 0;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u32	RegVal;
 	u8	value;
 	struct registry_priv *pregistrypriv = &Adapter->registrypriv;
@@ -1611,7 +1610,7 @@ PHY_RFConfig8192D(
 	struct rtw_adapter *	Adapter
 	)
 {
-	//HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	//struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	int		rtStatus = _SUCCESS;
 
 	if(Adapter->bSurpriseRemoved){
@@ -1684,7 +1683,7 @@ rtl8192d_PHY_ConfigRFWithHeaderFile(
 	u32*	Rtl819XRadioA_Array_Table;
 	u32*	Rtl819XRadioB_Array_Table;
 	u16		RadioA_ArrayLen,RadioB_ArrayLen;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u32	MaskforPhySet= (u32)(Content&0xE000);
 
 	Content &= 0x1FFF;
@@ -1918,7 +1917,7 @@ rtl8192d_PHY_GetHWRegOriginalValue(
 	struct rtw_adapter *		Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	// read rx initial gain
 	pHalData->DefaultInitialGain[0] = (u8)PHY_QueryBBReg(Adapter, rOFDM0_XAAGCCore1, bMaskByte0);
@@ -2058,7 +2057,7 @@ PHY_GetTxPowerLevel8192D(
 	u32*		powerlevel
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8			TxPwrLevel = 0;
 	int			TxPwrDbm;
 
@@ -2096,7 +2095,7 @@ static void getTxPowerIndex(
 	u8*		ofdmPowerLevel
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	index = (channel -1);
 
 	// 1. CCK
@@ -2155,7 +2154,7 @@ PHY_SetTxPowerLevel8192D(
 	u8			channel
 	)
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	cckPowerLevel[2], ofdmPowerLevel[2];	// [0]:RF-A, [1]:RF-B
 
 #if(MP_DRIVER == 1)
@@ -2194,7 +2193,7 @@ PHY_UpdateTxPowerDbm8192D(
 	int		powerInDbm
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	idx;
 	u8	rf_path;
 
@@ -2273,14 +2272,14 @@ _PHY_SetBWMode92D(
 	struct rtw_adapter *	Adapter
 )
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	regBwOpMode;
 	u8	regRRSR_RSC;
 
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	// FOr 92D dual mac config.
-	struct rtw_adapter *	BuddyAdapter = Adapter->pbuddy_adapter;
-	PHAL_DATA_TYPE	pHalDataBuddyAdapter;
+	struct rtw_adapter *BuddyAdapter = Adapter->pbuddy_adapter;
+	struct hal_data_8192du *pHalDataBuddyAdapter;
 #endif
 
 	//DBG_8192D("==>[%d]: _PHY_SetBWMode92D()  Switch to %s bandwidth\n", pHalData->interfaceIndex, pHalData->CurrentChannelBW == HT_CHANNEL_WIDTH_20?"20MHz":"40MHz");
@@ -2442,7 +2441,7 @@ PHY_SetBWMode8192D(
 	unsigned char	Offset		// Upper, Lower, or Don't care
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	enum HT_CHANNEL_WIDTH	tmpBW= pHalData->CurrentChannelBW;
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	struct rtw_adapter *	BuddyAdapter = Adapter->pbuddy_adapter;
@@ -2507,7 +2506,7 @@ PHY_StopTRXBeforeChangeBand8192D(
 )
 {
 #if MP_DRIVER == 1
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
 	pdmpriv->RegC04_MP = (u8)PHY_QueryBBReg(Adapter, rOFDM0_TRxPathEnable, bMaskByte0);
@@ -2532,7 +2531,7 @@ PHY_SwitchWirelessBand(
 	struct rtw_adapter *		 Adapter,
 	u8		Band)
 {
-	HAL_DATA_TYPE	*pHalData	= GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u8	i, value8;//, RegValue
 
@@ -2666,7 +2665,7 @@ PHY_EnableRFENV(
 	u32*			pu4RegValue
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct bb_register_def *pPhyReg = &pHalData->PHYRegDef[eRFPath];
 
 	//RT_TRACE(COMP_RF, DBG_LOUD, ("====>PHY_EnableRFENV\n"));
@@ -2711,7 +2710,7 @@ PHY_RestoreRFENV(
 	u32*			pu4RegValue
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct bb_register_def *pPhyReg = &pHalData->PHYRegDef[eRFPath];
 
 	//RT_TRACE(COMP_RF, DBG_LOUD, ("=====>PHY_RestoreRFENV\n"));
@@ -2756,7 +2755,7 @@ PHY_RestoreRFENV(
 	u8					channel
 	)
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8			path = pHalData->CurrentBandType92D==BAND_ON_5G?RF_PATH_A:RF_PATH_B;
 	u8			index = 0,	i = 0, eRFPath = RF_PATH_A;
 	bool		bNeedPowerDownRadio = false, bInteralPA = false;
@@ -3014,7 +3013,7 @@ static  void
 	u8					channel
 	)
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8		eRFPath = pHalData->CurrentBandType92D == BAND_ON_5G?RF_PATH_A:IS_92D_SINGLEPHY(pHalData->VersionID)?RF_PATH_B:RF_PATH_A;
 	u32		u4tmp = 0, u4RegValue = 0;
 	bool		bNeedPowerDownRadio = false;
@@ -3105,7 +3104,7 @@ static  void
 	u8					eRFPath
 	)
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u32		IMR_NUM = MAX_RF_IMR_INDEX;
 	u32		RFMask=bRFRegOffsetMask;
 	u8		group=0, i;
@@ -3182,7 +3181,7 @@ static  void
 	u8					channel
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8		Indexforchannel;//index,
 
 	//only for 92D C-cut SMSP
@@ -3246,7 +3245,7 @@ static void _PHY_SwChnl8192D(struct rtw_
 	u32	param1, param2;
 	u32	ret_value;
 	enum BAND_TYPE	bandtype, target_bandtype;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 #if defined(CONFIG_CONCURRENT_MODE) || defined(CONFIG_DUALMAC_CONCURRENT)
 	// FOr 92D dual mac config. and sw concurrent mode
 	struct rtw_adapter *	BuddyAdapter = Adapter->pbuddy_adapter;
@@ -3350,19 +3349,19 @@ static void _PHY_SwChnl8192D(struct rtw_
 
 void
 PHY_SwChnl8192D(	// Call after initialization
-	struct rtw_adapter *	Adapter,
+	struct rtw_adapter *Adapter,
 	u8		channel
 	)
 {
 	//struct rtw_adapter * Adapter =  ADJUST_TO_ADAPTIVE_ADAPTER(pAdapter, true);
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	tmpchannel = pHalData->CurrentChannel;
 	bool  bResult = true;
 	u32	timeout = 1000, timecount = 0;
 
 #ifdef CONFIG_DUALMAC_CONCURRENT
-	struct rtw_adapter *	BuddyAdapter = Adapter->pbuddy_adapter;
-	HAL_DATA_TYPE	*pHalDataBuddyAdapter;
+	struct rtw_adapter *BuddyAdapter = Adapter->pbuddy_adapter;
+	struct hal_data_8192du *pHalDataBuddyAdapter;
 #endif
 
 	if(pHalData->rf_chip == RF_PSEUDO_11N)
@@ -3564,7 +3563,7 @@ PHY_SwChnlPhy8192D(	// Only called durin
 	u8		channel
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	//RT_TRACE(COMP_SCAN | COMP_RM, DBG_LOUD, ("==>PHY_SwChnlPhy8192S(), switch from channel %d to channel %d.\n", pHalData->CurrentChannel, channel));
 
@@ -3635,7 +3634,7 @@ PHY_CheckIsLegalRfPath8192D(
 	struct rtw_adapter *	pAdapter,
 	u32	eRFPath)
 {
-//	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+//	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	bool				rtValue = true;
 
 	// NOt check RF Path now.!
@@ -3660,7 +3659,7 @@ phy_PathA_IQK(
 {
 	u32	regEAC, regE94, regE9C, regEA4;
 	u8	result = 0x00;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 
 	//RTPRINT(FINIT, INIT_IQK, ("Path A IQK!\n"));
 
@@ -3745,7 +3744,7 @@ phy_PathA_IQK_5G_Normal(
 	bool		configPathB
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u32	regEAC, regE94, regE9C, regEA4;
 	u8	result = 0x00;
@@ -3927,7 +3926,7 @@ phy_PathB_IQK_5G_Normal(
 	struct rtw_adapter *	pAdapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u32	regEAC, regEB4, regEBC, regEC4, regECC;
 	u8	result = 0x00;
@@ -4048,7 +4047,7 @@ phy_PathAFillIQKMatrix(
 {
 	u32	Oldval_0, X, TX0_A, reg;
 	int	Y, TX0_C;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 
 	//DBG_8192D("Path A IQ Calibration %s !\n",(bIQKOK)?"Success":"Failed");
 
@@ -4115,7 +4114,7 @@ phy_PathAFillIQKMatrix_5G_Normal(
 {
 	u32	X, reg;
 	int	Y;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	//bool		is2T =  IS_92D_SINGLEPHY(pHalData->VersionID) ||
 	//				pHalData->MacPhyMode92D == DUALMAC_DUALPHY;
 
@@ -4183,7 +4182,7 @@ phy_PathBFillIQKMatrix(
 {
 	u32	Oldval_1, X, TX1_A, reg;
 	int	Y, TX1_C;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 
 	//DBG_8192D("Path B IQ Calibration %s !\n",(bIQKOK)?"Success":"Failed");
 
@@ -4244,7 +4243,7 @@ phy_PathBFillIQKMatrix_5G_Normal(
 {
 	u32	X, reg;
 	int	Y;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 
 	//DBG_8192D("Path B IQ Calibration %s !\n",(bIQKOK)?"Success":"Failed");
 
@@ -4368,7 +4367,7 @@ phy_PathADDAOn(
 	bool		is2T
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	u32	pathOn;
 	u32	i;
 
@@ -4441,7 +4440,7 @@ phy_SimularityCompare_92D(
 	)
 {
 	u32	i, j, diff, SimularityBitMap, bound = 0, u4temp = 0;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	u8	final_candidate[2] = {0xFF, 0xFF};	//for path A and path B
 	bool		bResult = true;
 	bool		is2T = IS_92D_SINGLEPHY(pHalData->VersionID);
@@ -4543,7 +4542,7 @@ phy_IQCalibrate(
 	bool		is2T
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u32			i;
 	u8			PathAOK, PathBOK;
@@ -4771,7 +4770,7 @@ phy_IQCalibrate_5G(
 	int		result[][8]
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u32			extPAon, REG0xe5c, RX0REG0xe40, REG0xe40, REG0xe94, REG0xe9c;
 	u32			REG0xeac, RX1REG0xe40, REG0xeb4, REG0xea4,REG0xec4;
@@ -5153,7 +5152,7 @@ phy_IQCalibrate_5G_Normal(
 	u8		t
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u32			PathAOK, PathBOK;
 	u32			ADDA_REG[IQK_ADDA_REG_NUM] = {
@@ -5566,7 +5565,7 @@ phy_LCCalibrate92DSW(
 #if (TESTFLAG == 0)
 	u32	tmpu4Byte[2];
 #endif //(TESTFLAG == 0)
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	u8	u1bTmp=0,path = is2T?2:1;
 	u32	i, u4tmp, offset;
 	u32	curveCountVal[CV_CURVE_CNT*2]={0};
@@ -5733,7 +5732,7 @@ phy_APCalibrate(
 	bool		is2T
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u32			regD[PATH_NUM];
 	u32			tmpReg, index, offset, path, i, pathbound = PATH_NUM, apkbound;
@@ -6150,7 +6149,7 @@ phy_APCalibrate(
 
 static void phy_SetRFPathSwitch(
 	struct rtw_adapter *	pAdapter,
-	bool		bMain,
+	bool		main,
 	bool		is2T
 	)
 {
@@ -6161,7 +6160,7 @@ static void phy_SetRFPathSwitch(
 		PHY_SetBBReg(pAdapter, rFPGA0_XAB_RFParameter, BIT13, 0x01);
 	}
 
-	if(bMain)
+	if(main)
 		PHY_SetBBReg(pAdapter, rFPGA0_XA_RFInterfaceOE, 0x300, 0x2);
 	else
 		PHY_SetBBReg(pAdapter, rFPGA0_XA_RFInterfaceOE, 0x300, 0x1);
@@ -6175,7 +6174,7 @@ rtl8192d_PHY_IQCalibrate(
 	struct rtw_adapter *	pAdapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	int			result[4][8];	//last is final result
 	u8			i, final_candidate, Indexforchannel;
@@ -6344,7 +6343,7 @@ rtl8192d_PHY_IQCalibrate(
 #ifdef CONFIG_CONCURRENT_MODE
 		if (rtw_buddy_adapter_up(pAdapter)) {
 			struct rtw_adapter * pbuddy_adapter = pAdapter->pbuddy_adapter;
-			PHAL_DATA_TYPE	pbuddy_HalData = GET_HAL_DATA(pbuddy_adapter);
+			struct hal_data_8192du *pbuddy_HalData = GET_HAL_DATA(pbuddy_adapter);
 
 			for(i = 0; i < IQK_Matrix_REG_NUM; i++)
 			{
@@ -6365,7 +6364,7 @@ rtl8192d_PHY_LCCalibrate(
 	struct rtw_adapter *	pAdapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct mlme_ext_priv	*pmlmeext = &pAdapter->mlmeextpriv;
 	bool		bStartContTx = false, bSingleTone = false, bCarrierSuppression = false;
 	u32			timeout = 2000, timecount = 0;
@@ -6429,7 +6428,7 @@ rtl8192d_PHY_APCalibrate(
 	char		delta
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
 #if DISABLE_BB_RF
@@ -6457,7 +6456,7 @@ PHY_UpdateBBRFConfiguration8192D(
 	bool bisBandSwitch
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u8	eRFPath = 0;
 	bool			bInternalPA;
@@ -6793,7 +6792,7 @@ void PHY_ReadMacPhyMode92D(
 		bool		AutoloadFail
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	MacPhyCrValue = 0;
 
 	if(AutoloadFail)
@@ -6835,7 +6834,7 @@ void PHY_ConfigMacPhyMode92D(
 		struct rtw_adapter *			Adapter
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	offset = REG_MAC_PHY_CTRL_NORMAL, temp;
 
 	temp = rtw_read8(Adapter, offset);
@@ -6870,14 +6869,12 @@ void PHY_ConfigMacPhyMode92D(
 //		1. Boot from EEPROM and CR9346 regiser has verified.
 //		2. PASSIVE_LEVEL (USB interface)
 //
-void PHY_ConfigMacPhyModeInfo92D(
-		struct rtw_adapter *			Adapter
-)
+void PHY_ConfigMacPhyModeInfo92D(struct rtw_adapter *Adapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 #ifdef CONFIG_DUALMAC_CONCURRENT
-	struct rtw_adapter *		BuddyAdapter = Adapter->pbuddy_adapter;
-	HAL_DATA_TYPE	*pHalDataBuddyAdapter;
+	struct rtw_adapter *BuddyAdapter = Adapter->pbuddy_adapter;
+	struct hal_data_8192du *pHalDataBuddyAdapter;
 #endif
 
 	switch(pHalData->MacPhyMode92D){
@@ -7020,7 +7017,7 @@ void PHY_ConfigMacCoexist_RFPage92D(
 		struct rtw_adapter *			Adapter
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	switch(pHalData->MacPhyMode92D)
 	{
@@ -7049,7 +7046,7 @@ rtl8192d_PHY_InitRxSetting(
 	struct rtw_adapter * Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 #if MP_DRIVER != 1
 	return;
@@ -7068,55 +7065,41 @@ rtl8192d_PHY_InitRxSetting(
 }
 
 
-void
-rtl8192d_PHY_ResetIQKResult(
-	struct rtw_adapter * Adapter
-)
+void rtl8192d_PHY_ResetIQKResult(struct rtw_adapter *Adapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8			i;
 
-	//RT_TRACE(COMP_INIT, DBG_LOUD, ("PHY_ResetIQKResult interface %d settings regs %d default regs %d\n", Adapter->interfaceIndex, sizeof(pHalData->IQKMatrixRegSetting)/sizeof(IQK_MATRIX_REGS_SETTING), IQK_Matrix_Settings_NUM));
-	//0xe94, 0xe9c, 0xea4, 0xeac, 0xeb4, 0xebc, 0xec4, 0xecc
-
-	for(i = 0; i < IQK_Matrix_Settings_NUM; i++)
-	{
-		{
-			pHalData->IQKMatrixRegSetting[i].Value[0][0] =
-				pHalData->IQKMatrixRegSetting[i].Value[0][2] =
-				pHalData->IQKMatrixRegSetting[i].Value[0][4] =
-				pHalData->IQKMatrixRegSetting[i].Value[0][6] = 0x100;
+	for(i = 0; i < IQK_Matrix_Settings_NUM; i++) {
+		pHalData->IQKMatrixRegSetting[i].Value[0][0] = 0x100;
+		pHalData->IQKMatrixRegSetting[i].Value[0][2] = 0x100;
+		pHalData->IQKMatrixRegSetting[i].Value[0][4] = 0x100;
+		pHalData->IQKMatrixRegSetting[i].Value[0][6] = 0x100;
 
-			pHalData->IQKMatrixRegSetting[i].Value[0][1] =
-				pHalData->IQKMatrixRegSetting[i].Value[0][3] =
-				pHalData->IQKMatrixRegSetting[i].Value[0][5] =
-				pHalData->IQKMatrixRegSetting[i].Value[0][7] = 0x0;
+		pHalData->IQKMatrixRegSetting[i].Value[0][1] = 0;
+		pHalData->IQKMatrixRegSetting[i].Value[0][3] = 0;
+		pHalData->IQKMatrixRegSetting[i].Value[0][5] = 0;
+		pHalData->IQKMatrixRegSetting[i].Value[0][7] = 0;
 
-			pHalData->IQKMatrixRegSetting[i].bIQKDone = false;
-
-		}
+		pHalData->IQKMatrixRegSetting[i].bIQKDone = false;
 	}
 }
 
-void rtl8192d_PHY_SetRFPathSwitch(
-	struct rtw_adapter *	pAdapter,
-	bool		bMain
-	)
+void rtl8192d_PHY_SetRFPathSwitch(struct rtw_adapter *pAdapter, bool main)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 
 #if DISABLE_BB_RF
 	return ;
-#endif
+#else
 
-	if (IS_92D_SINGLEPHY(pHalData->VersionID))
-	{
-		phy_SetRFPathSwitch(pAdapter, bMain, true);
-	}
-	else{
+	if (IS_92D_SINGLEPHY(pHalData->VersionID)) {
+		phy_SetRFPathSwitch(pAdapter, main, true);
+	} else {
 		// For 88C 1T1R
-		phy_SetRFPathSwitch(pAdapter, bMain, false);
+		phy_SetRFPathSwitch(pAdapter, main, false);
 	}
+#endif
 }
 
 void
@@ -7126,7 +7109,7 @@ HalChangeCCKStatus8192D(
 )
 {
 	//struct rtw_adapter *	BuddyAdapter = Adapter->BuddyAdapter;
-	PHAL_DATA_TYPE	pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	i;
 
 	//DBG_8192D("MAC %d: =====> ChangeCCKStatus8192D \n",pHalData->interfaceIndex);
@@ -7205,7 +7188,7 @@ void
 PHY_InitPABias92D(struct rtw_adapter * Adapter)
 {
 	u8	tmpU1b;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	bool		is92 = IS_92D_SINGLEPHY(pHalData->VersionID);
 	enum RF_RADIO_PATH_E eRFPath = RF_PATH_A;
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_rf6052.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_rf6052.c
@@ -121,7 +121,7 @@ rtl8192d_PHY_RF6052SetBandwidth(
 	enum HT_CHANNEL_WIDTH		Bandwidth)	//20M or 40M
 {
 	u8			eRFPath;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	switch(Bandwidth)
 	{
@@ -174,7 +174,7 @@ rtl8192d_PHY_RF6052SetCckTxPower(
 	struct rtw_adapter *		Adapter,
 	u8*			pPowerlevel)
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct mlme_ext_priv	*pmlmeext = &Adapter->mlmeextpriv;
 	u32			TxAGC[2]={0, 0}, tmpval=0;
 	bool		TurboScanOff = false;
@@ -270,7 +270,7 @@ static void getPowerBase(
 	u32	*MCSBase
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u32	powerBase0, powerBase1;
 	u8	Legacy_pwrdiff=0;
 	s8	HT20_pwrdiff=0;
@@ -336,7 +336,7 @@ static void getTxPowerWriteValByRegulato
 		u32*		pOutWriteVal
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u8	i, chnlGroup=0, pwr_diff_limit[4], customer_pwr_limit;
 	s8	pwr_diff=0;
@@ -470,13 +470,13 @@ static void writeOFDMPowerReg(
 		u32			*pValue
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
-	u16	RegOffset_A[6] = {	rTxAGC_A_Rate18_06, rTxAGC_A_Rate54_24,
-							rTxAGC_A_Mcs03_Mcs00, rTxAGC_A_Mcs07_Mcs04,
-							rTxAGC_A_Mcs11_Mcs08, rTxAGC_A_Mcs15_Mcs12};
-	u16	RegOffset_B[6] = {	rTxAGC_B_Rate18_06, rTxAGC_B_Rate54_24,
-							rTxAGC_B_Mcs03_Mcs00, rTxAGC_B_Mcs07_Mcs04,
-							rTxAGC_B_Mcs11_Mcs08, rTxAGC_B_Mcs15_Mcs12};
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
+	u16	RegOffset_A[6] = {rTxAGC_A_Rate18_06, rTxAGC_A_Rate54_24,
+				  rTxAGC_A_Mcs03_Mcs00, rTxAGC_A_Mcs07_Mcs04,
+				  rTxAGC_A_Mcs11_Mcs08, rTxAGC_A_Mcs15_Mcs12};
+	u16	RegOffset_B[6] = {rTxAGC_B_Rate18_06, rTxAGC_B_Rate54_24,
+				  rTxAGC_B_Mcs03_Mcs00, rTxAGC_B_Mcs07_Mcs04,
+				  rTxAGC_B_Mcs11_Mcs08, rTxAGC_B_Mcs15_Mcs12};
 	u8	i, rf, pwr_val[4];
 	u32	writeVal;
 	u16	RegOffset;
@@ -631,7 +631,7 @@ phy_RF6052_Config_ParaFile(
 	u8	eRFPath;
 	struct bb_register_def *pPhyReg;
 	int	rtStatus = _SUCCESS;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du	*pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	u8	*pszRadioAFile = NULL, *pszRadioBFile = NULL;
 	static s8		sz92DRadioAFile[] = RTL8192D_PHY_RADIO_A;
@@ -842,8 +842,8 @@ int
 PHY_RF6052_Config8192D(
 	struct rtw_adapter *		Adapter)
 {
-	HAL_DATA_TYPE				*pHalData = GET_HAL_DATA(Adapter);
-	int					rtStatus = _SUCCESS;
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
+	int rtStatus = _SUCCESS;
 
 	//
 	// Initialize general global value
--- a/drivers/staging/rtl8192du/hal/rtl8192d_rxdesc.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_rxdesc.c
@@ -97,7 +97,7 @@ static void query_rx_phy_status(union re
 	u8	bcck_rate=0, rf_rx_num = 0, cck_highpwr = 0;
 	struct rtw_adapter				*padapter = prframe->u.hdr.adapter;
 	struct rx_pkt_attrib	*pattrib = &prframe->u.hdr.attrib;
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	u8	tmp_rxsnr;
 	s8	rx_snrX;
 	struct	mlme_priv	*pmlmepriv = &padapter->mlmepriv;
@@ -429,7 +429,7 @@ static void process_rssi(struct rtw_adap
 static void process_PWDB(struct rtw_adapter *padapter, union recv_frame *prframe)
 {
 	int	UndecoratedSmoothedPWDB;
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	struct dm_priv		*pdmpriv = &pHalData->dmpriv;
 	struct rx_pkt_attrib	*pattrib= &prframe->u.hdr.attrib;
 	struct sta_info		*psta = prframe->u.hdr.psta;
--- a/drivers/staging/rtl8192du/hal/rtl8192du_led.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_led.c
@@ -369,7 +369,7 @@ SwLedBlink1(
 	)
 {
 	struct rtw_adapter				*padapter = pLed->padapter;
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du 		*pHalData = GET_HAL_DATA(padapter);
 	struct led_priv		*ledpriv = &(padapter->ledpriv);
 	struct mlme_priv		*pmlmepriv = &(padapter->mlmepriv);
 	struct LED_871X *			pLed1 = &(ledpriv->SwLed1);
@@ -1423,7 +1423,7 @@ SwLedControlMode1(
 	enum LED_CTL_MODE		LedAction
 )
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du 		*pHalData = GET_HAL_DATA(padapter);
 	struct led_priv		*ledpriv = &(padapter->ledpriv);
 	struct LED_871X *			pLed = &(ledpriv->SwLed0);
 	struct mlme_priv		*pmlmepriv = &(padapter->mlmepriv);
@@ -2390,7 +2390,7 @@ SwLedControlMode5(
 	enum LED_CTL_MODE		LedAction
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(padapter);
 	struct led_priv	*ledpriv = &(padapter->ledpriv);
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct LED_871X *		pLed = &(ledpriv->SwLed0);
--- a/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
@@ -243,7 +243,7 @@ static s32 update_txdesc(struct xmit_fra
 	int	pull=0;
 	uint	qsel;
 	struct rtw_adapter				*padapter = pxmitframe->padapter;
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du 		*pHalData = GET_HAL_DATA(padapter);
 	struct dm_priv		*pdmpriv = &pHalData->dmpriv;
 #ifdef CONFIG_AP_MODE
 	struct mlme_priv		*pmlmepriv = &padapter->mlmepriv;
@@ -647,7 +647,7 @@ void UpdateEarlyModeInfo8192D(struct rtw
 #define IDEA_CONDITION 1	// check all packets before enqueue
 s32 rtl8192du_xmitframe_complete(struct rtw_adapter *padapter, struct xmit_priv *pxmitpriv, struct xmit_buf *pxmitbuf)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(padapter);
 	struct xmit_frame *pxmitframe = NULL;
 	struct xmit_frame *pfirstframe = NULL;
 
@@ -1045,7 +1045,7 @@ s32 rtl8192du_hostap_mgnt_xmit_entry(str
 	struct rtw_ieee80211_hdr *tx_hdr;
 	struct hostapd_priv *phostapdpriv = padapter->phostapdpriv;
 	struct net_device *pnetdev = padapter->pnetdev;
-	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du  *pHalData = GET_HAL_DATA(padapter);
 	struct dvobj_priv *pdvobj = adapter_to_dvobj(padapter);
 
 
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -63,7 +63,7 @@ extern bool GlobalFirstConfigurationForN
 
 static void
 _OneOutEpMapping(
-	HAL_DATA_TYPE	*pHalData
+	struct hal_data_8192du *pHalData
 	)
 {
 	//only endpoint number 0x02
@@ -82,7 +82,7 @@ _OneOutEpMapping(
 
 static void
 _TwoOutEpMapping(
-	HAL_DATA_TYPE	*pHalData,
+	struct hal_data_8192du	*pHalData,
 	bool			bWIFICfg
 	)
 {
@@ -127,7 +127,7 @@ _TwoOutEpMapping(
 
 
 static void _ThreeOutEpMapping(
-	HAL_DATA_TYPE	*pHalData,
+	struct hal_data_8192du *pHalData,
 	bool			bWIFICfg
 	)
 {
@@ -174,7 +174,7 @@ _MappingOutEP(
 	u8		NumOutPipe
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	struct registry_priv *pregistrypriv = &pAdapter->registrypriv;
 
 	bool	 bWIFICfg = (pregistrypriv->wifi_spec) ?true:false;
@@ -208,7 +208,7 @@ _ConfigChipOutEP(
 	)
 {
 	u8			value8;
-	HAL_DATA_TYPE	*pHalData	= GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 
 	pHalData->OutEpQueueSel = 0;
 	pHalData->OutEpNumber = 0;
@@ -269,7 +269,7 @@ static bool HalUsbSetQueuePipeMapping819
 	u8		NumOutPipe
 	)
 {
-	HAL_DATA_TYPE	*pHalData	= GET_HAL_DATA(pAdapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(pAdapter);
 	bool			result		= false;
 
 	_ConfigChipOutEP(pAdapter, NumOutPipe);
@@ -290,7 +290,7 @@ static bool HalUsbSetQueuePipeMapping819
 void rtl8192du_interface_configure(struct rtw_adapter *padapter);
 void rtl8192du_interface_configure(struct rtw_adapter *padapter)
 {
-	HAL_DATA_TYPE	*pHalData	= GET_HAL_DATA(padapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	struct dvobj_priv	*pdvobjpriv = adapter_to_dvobj(padapter);
 
 	if (pdvobjpriv->ishighspeed == true)
@@ -333,7 +333,7 @@ static u8 _InitPowerOn(struct rtw_adapte
 	u8	ret = _SUCCESS;
 	u16	value16=0;
 	u8	value8 = 0;
-//	HAL_DATA_TYPE    *pHalData = GET_HAL_DATA(padapter);
+//	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 
 	// polling autoload done.
 	u32	pollingCount = 0;
@@ -729,7 +729,7 @@ static u8 InitLLTTable(
 	u32		i;
 	u32		txpktbuf_bndy = boundary;
 	u32		Last_Entry_Of_TxPktBuf = LAST_ENTRY_OF_TX_PKT_BUFFER;
-	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 
 	if(pHalData->MacPhyMode92D !=SINGLEMAC_SINGLEPHY){
@@ -836,7 +836,7 @@ _InitQueueReservedPage(
 	struct rtw_adapter * Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData	= GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct registry_priv *pregistrypriv = &Adapter->registrypriv;
 
 	u32			outEPNum	= (u32)pHalData->OutEpNumber;
@@ -926,7 +926,7 @@ _InitTxBufferBoundary(
 	)
 {
 	struct registry_priv *pregistrypriv = &Adapter->registrypriv;
-	HAL_DATA_TYPE	*pHalData	= GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData	= GET_HAL_DATA(Adapter);
 
 	//u16	txdmactrl;
 	u8	txpktbuf_bndy;
@@ -974,7 +974,7 @@ _InitNormalChipOneOutEpPriority(
 	struct rtw_adapter * Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData	= GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData	= GET_HAL_DATA(Adapter);
 
 	u16	value = 0;
 	switch(pHalData->OutEpQueueSel)
@@ -1009,7 +1009,7 @@ _InitNormalChipTwoOutEpPriority(
 	struct rtw_adapter * Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData	= GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData	= GET_HAL_DATA(Adapter);
 	struct registry_priv *pregistrypriv = &Adapter->registrypriv;
 	u16			beQ,bkQ,viQ,voQ,mgtQ,hiQ;
 
@@ -1089,7 +1089,7 @@ _InitQueuePriority(
 	struct rtw_adapter * Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData	= GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData	= GET_HAL_DATA(Adapter);
 
 	switch(pHalData->OutEpNumber)
 	{
@@ -1165,7 +1165,7 @@ _InitWMACSetting(
 {
 	//u4Byte			value32;
 	//u16			value16;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	//pHalData->ReceiveConfig = AAP | APM | AM | AB | APP_ICV | ADF | AMF | APP_FCS | HTC_LOC_CTRL | APP_MIC | APP_PHYSTS;
 	//pHalData->ReceiveConfig = AAP | APM | AM | AB | CBSSID |CBSSID_BCN | APP_ICV | AMF | HTC_LOC_CTRL | APP_MIC | APP_PHYSTS;
@@ -1203,7 +1203,7 @@ _InitAdaptiveCtrl(
 {
 	u16	value16;
 	u32	value32;
-	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	// Response Rate Set
 	value32 = rtw_read32(Adapter, REG_RRSR);
@@ -1306,7 +1306,7 @@ _InitAMPDUAggregation(
 	struct rtw_adapter * Adapter
 	)
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 	//rtw_write32(Adapter, REG_AGGLEN_LMT, 0x99997631);
 
@@ -1366,7 +1366,7 @@ _InitUsbAggregationSetting(
 {
 #ifdef CONFIG_USB_TX_AGGREGATION
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u32			value32;
 
 	if(Adapter->registrypriv.wifi_spec)
@@ -1388,7 +1388,7 @@ _InitUsbAggregationSetting(
 	// Rx aggregation setting
 #ifdef CONFIG_USB_RX_AGGREGATION
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8		valueDMA;
 	u8		valueUSB;
 
@@ -1480,9 +1480,9 @@ _InitOperationMode(
 	struct rtw_adapter *			Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
-	u8				regBwOpMode = 0, MinSpaceCfg=0;
-	u32				regRATR = 0, regRRSR = 0;
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
+	u8 regBwOpMode = 0, MinSpaceCfg = 0;
+	u32 regRATR = 0, regRRSR = 0;
 
 	//1 This part need to modified according to the rate set we filtered!!
 	//
@@ -1578,7 +1578,7 @@ _InitBeaconParameters(
 	struct rtw_adapter * Adapter
 	)
 {
-//	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+//	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 
 	rtw_write16(Adapter, REG_BCN_CTRL, 0x1010);
 
@@ -1602,7 +1602,7 @@ _InitRFType(
 	struct rtw_adapter * Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 
 #if (DISABLE_BB_RF==1)
 	pHalData->rf_chip	= RF_PSEUDO_11N;
@@ -1624,7 +1624,7 @@ _InitRFType(
 #if RTL8192CU_ADHOC_WORKAROUND_SETTING
 static void _InitAdhocWorkaroundParams(struct rtw_adapter * Adapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 	pHalData->RegBcnCtrlVal = rtw_read8(Adapter, REG_BCN_CTRL);
 	pHalData->RegTxPause = rtw_read8(Adapter, REG_TXPAUSE);
 	pHalData->RegFwHwTxQCtrl = rtw_read8(Adapter, REG_FWHW_TXQ_CTRL+2);
@@ -1655,7 +1655,7 @@ static void _BBTurnOnBlock(
 	struct rtw_adapter *		Adapter
 	)
 {
-	HAL_DATA_TYPE		*pHalData	= GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 		*pHalData	= GET_HAL_DATA(Adapter);
 #if (DISABLE_BB_RF)
 	return;
 #endif
@@ -1670,7 +1670,7 @@ static void _RfPowerSave(
 	struct rtw_adapter *		Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData	= GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData	= GET_HAL_DATA(Adapter);
 	struct pwrctrl_priv		*pwrctrlpriv = &Adapter->pwrctrlpriv;
 	u8			eRFPath;
 
@@ -1759,7 +1759,7 @@ u32 rtl8192du_hal_init(struct rtw_adapte
 #if SWLCK == 0
 	u32	j;
 #endif //SWLCK == 0
-	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du  *pHalData = GET_HAL_DATA(padapter);
 	struct pwrctrl_priv		*pwrctrlpriv = &padapter->pwrctrlpriv;
 	struct registry_priv	*pregistrypriv = &padapter->registrypriv;
 #ifdef CONFIG_DUALMAC_CONCURRENT
@@ -2563,7 +2563,7 @@ c.	APSD_CTRL 0x600[7:0] = 0x40
 d.	SYS_FUNC_EN 0x02[7:0] = 0x16		//reset BB state machine
 e.	SYS_FUNC_EN 0x02[7:0] = 0x14		//reset BB state machine
 ***************************************/
-       HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+       struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 	u8	eRFPath = 0,value8 = 0;
 
 	PHY_SetBBReg(Adapter, rFPGA0_AnalogParameter4, 0x00f00000,  0xf);
@@ -2612,7 +2612,7 @@ _ResetDigitalProcedure1(
 	)
 {
 
-	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du  *pHalData = GET_HAL_DATA(Adapter);
 
 	u8 retry_cnts = 0;
 	// 2010/08/12 MH For USB SS, we can not stop 8051 when we are trying to
@@ -2738,7 +2738,7 @@ CanGotoPowerOff92D(
 	struct rtw_adapter *			Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 	u8 u1bTmp;
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	struct rtw_adapter *	BuddyAdapter = Adapter->pbuddy_adapter;
@@ -2803,7 +2803,7 @@ CardDisableHWSM( // HW Auto state machin
 	bool			resetMCU
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 	int		rtStatus = _SUCCESS;
 	u8		value;
 
@@ -2854,7 +2854,7 @@ CardDisableWithoutHWSM( // without HW Au
 	struct rtw_adapter *		Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 	int		rtStatus = _SUCCESS;
 	u8		value;
 
@@ -2922,7 +2922,7 @@ u32 rtl8192du_hal_deinit(struct rtw_adap
  {
 	u8	u1bTmp;
 	u8	OpMode;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(padapter);
 	struct pwrctrl_priv	*pwrpriv = &padapter->pwrctrlpriv;
 
 _func_enter_;
@@ -3052,7 +3052,7 @@ _ReadPROMVersion(
 	bool		AutoloadFail
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 
 	if(AutoloadFail){
 		pHalData->EEPROMVersion = EEPROM_Default_Version;
@@ -3090,7 +3090,7 @@ _ReadIDs(
 	bool		AutoloadFail
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 
 
 	if(false == AutoloadFail){
@@ -3148,7 +3148,7 @@ _ReadMACAddress(
 	bool		AutoloadFail
 	)
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 		*pHalData = GET_HAL_DATA(Adapter);
 	struct eeprom_priv *pEEPROM = GET_EEPROM_EFUSE_PRIV(Adapter);
 
 	// Dual MAC should assign diffrent MAC address ,or, it is wil cause hang in single phy mode  zhiyuan 04/07/2010
@@ -3201,7 +3201,7 @@ hal_ReadMacPhyModeFromPROM92DU(
 	u8*		PROMContent
 )
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 	u8	MacPhyCrValue = 0;
 
 
@@ -3246,7 +3246,7 @@ hal_ReadMacPhyMode_92D(
 )
 {
 #ifdef CONFIG_DUALMAC_CONCURRENT
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 #endif //CONFIG_DUALMAC_CONCURRENT
 	u8	Mac1EnableValue = 0;
 
@@ -3297,7 +3297,7 @@ _ReadBoardType(
 	bool		AutoloadFail
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 	u8			boardType;
 
 	if(AutoloadFail){
@@ -3320,7 +3320,7 @@ _ReadLEDSetting(
 	bool		AutoloadFail
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 	struct led_priv		*pledpriv = &(Adapter->ledpriv);
 
 	// Led mode
@@ -3445,7 +3445,7 @@ _InitOtherVariable(
 	struct rtw_adapter *		Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 
 	//if(Adapter->bInHctTest){
 	//	pMgntInfo->PowerSaveControl.bInactivePs = false;
@@ -3471,7 +3471,7 @@ _ReadRFType(
 	struct rtw_adapter *	Adapter
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 
 #if DISABLE_BB_RF
 	pHalData->rf_chip = RF_PSEUDO_11N;
@@ -3528,7 +3528,7 @@ StopTxBeacon(
 	struct rtw_adapter *	Adapter
 	)
 {
-	HAL_DATA_TYPE*	pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *	pHalData = GET_HAL_DATA(Adapter);
 
 	//PlatformScheduleWorkItem(&pHalData->StopTxBeaconWorkItem);
 
@@ -3547,7 +3547,7 @@ ResumeTxBeacon(
 	struct rtw_adapter *	Adapter
 	)
 {
-	HAL_DATA_TYPE*	pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *	pHalData = GET_HAL_DATA(Adapter);
 
 	//PlatformScheduleWorkItem(&pHalData->ResumeTxBeaconWorkItem);
 
@@ -3688,8 +3688,8 @@ SetRTSRateWorkItemCallback(
 	void *			pContext
 )
 {
-	struct rtw_adapter *		Adapter =  (struct rtw_adapter *)pContext;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct rtw_adapter *Adapter =  (struct rtw_adapter *)pContext;
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	u8	NewRTSInitRate = 0;
 
 	NewRTSInitRate = SelectRTSInitialRate(Adapter);
@@ -3706,7 +3706,7 @@ static void hw_var_set_opmode(struct rtw
 {
 	u8	val8;
 	u8	mode = *((u8 *)val);
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 #ifdef CONFIG_CONCURRENT_MODE
 	if(Adapter->iface_type == IFACE_PORT1)
@@ -4045,7 +4045,7 @@ static void hw_var_set_correct_tsf(struc
 static void hw_var_set_mlme_disconnect(struct rtw_adapter * Adapter, u8 variable, u8* val)
 {
 #ifdef CONFIG_CONCURRENT_MODE
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct rtw_adapter * pbuddy_adapter = Adapter->pbuddy_adapter;
 
 
@@ -4144,7 +4144,7 @@ static void hw_var_set_mlme_sitesurvey(s
 {
 	u32	value_rcr, rcr_clear_bit, reg_bcn_ctl;
 	u16	value_rxfltmap2;
-	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct mlme_priv *pmlmepriv=&(Adapter->mlmepriv);
 
 
@@ -4251,7 +4251,7 @@ static void hw_var_set_mlme_join(struct
 #ifdef CONFIG_CONCURRENT_MODE
 	u8	RetryLimit = 0x30;
 	u8	type = *((u8 *)val);
-	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct mlme_priv	*pmlmepriv = &Adapter->mlmepriv;
 
 	if(type == 0) // prepare to join
@@ -4328,8 +4328,8 @@ static void hw_var_set_mlme_join(struct
 #ifdef CONFIG_DUALMAC_CONCURRENT
 static void dc_hw_var_mlme_sitesurvey(struct rtw_adapter * Adapter, u8 sitesurvey_state)
 {
-	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(Adapter);
-	struct rtw_adapter * BuddyAdapter = Adapter->pbuddy_adapter;
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
+	struct rtw_adapter *BuddyAdapter = Adapter->pbuddy_adapter;
 	struct mlme_priv *pbuddy_mlmepriv;
 	struct mlme_ext_priv *pbuddy_mlmeext;
 
@@ -4362,7 +4362,7 @@ static void dc_hw_var_mlme_sitesurvey(st
 
 static void dc_hw_var_mlme_join(struct rtw_adapter * Adapter, u8 join_state)
 {
-	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct mlme_ext_priv	*pmlmeext = &Adapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct rtw_adapter * BuddyAdapter = Adapter->pbuddy_adapter;
@@ -4404,7 +4404,7 @@ static void dc_hw_var_mlme_join(struct r
 void SetHwReg8192DU(struct rtw_adapter * Adapter, u8 variable, u8* val);
 void SetHwReg8192DU(struct rtw_adapter * Adapter, u8 variable, u8* val)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
 _func_enter_;
@@ -5328,7 +5328,7 @@ _func_exit_;
 void GetHwReg8192DU(struct rtw_adapter * Adapter, u8 variable, u8* val);
 void GetHwReg8192DU(struct rtw_adapter * Adapter, u8 variable, u8* val)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
 
 _func_enter_;
 
@@ -5394,8 +5394,8 @@ _func_exit_;
 //
 u8 GetHalDefVar8192DUsb(struct rtw_adapter * Adapter, enum HAL_DEF_VARIABLE eVariable, void  *pValue)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
-	u8			bResult = true;
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
+	u8 bResult = true;
 
 	switch(eVariable) {
 	case HAL_DEF_UNDERCORATEDSMOOTHEDPWDB:
@@ -5437,11 +5437,10 @@ SetHalDefVar8192DUsb(
 	void *pValue
 	)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
-	u8			bResult = true;
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(Adapter);
+	u8 bResult = true;
 
-	switch(eVariable)
-	{
+	switch(eVariable) {
 		case HAL_DEF_DBG_DM_FUNC:
 			{
 				u8 dm_func = *(( u8*)pValue);
@@ -5493,7 +5492,7 @@ SetHalDefVar8192DUsb(
 
 u32  _update_92cu_basic_rate(struct rtw_adapter *padapter, unsigned int mask)
 {
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 #ifdef CONFIG_BT_COEXIST
 	struct btcoexist_priv	*pbtpriv = &(pHalData->bt_coexist);
 #endif
@@ -5547,7 +5546,7 @@ void UpdateHalRAMask8192DUsb(struct rtw_
 	u8	shortGIrate = false;
 	int	supportRateNum = 0;
 	struct sta_info	*psta;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
@@ -5673,7 +5672,7 @@ void UpdateHalRAMask8192DUsb(struct rtw_
 void SetBeaconRelatedRegisters8192DUsb(struct rtw_adapter * padapter)
 {
 	u32	value32;
-//	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+//	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 
@@ -5717,7 +5716,7 @@ void SetBeaconRelatedRegisters8192DUsb(s
 
 static void rtl8192du_init_default_value(struct rtw_adapter * padapter)
 {
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du *pHalData = GET_HAL_DATA(padapter);
 	struct pwrctrl_priv *pwrctrlpriv = &padapter->pwrctrlpriv;
 	struct dm_priv	*pdmpriv = &pHalData->dmpriv;
 
@@ -5747,12 +5746,12 @@ void rtl8192du_set_hal_ops(struct rtw_ad
 
 _func_enter_;
 
-	padapter->HalData = rtw_zmalloc(sizeof(HAL_DATA_TYPE));
+	padapter->HalData = rtw_zmalloc(sizeof(struct hal_data_8192du));
 	if(padapter->HalData == NULL){
 		DBG_8192D("cant not alloc memory for HAL DATA \n");
 	}
-	//_rtw_memset(padapter->HalData, 0, sizeof(HAL_DATA_TYPE));
-	padapter->hal_data_sz = sizeof(HAL_DATA_TYPE);
+	//_rtw_memset(padapter->HalData, 0, sizeof(struct hal_data_8192du));
+	padapter->hal_data_sz = sizeof(struct hal_data_8192du);
 
 	pHalFunc->hal_init = &rtl8192du_hal_init;
 	pHalFunc->hal_deinit = &rtl8192du_hal_deinit;
--- a/drivers/staging/rtl8192du/hal/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/hal/usb_ops_linux.c
@@ -136,7 +136,7 @@ static int usbctrl_vendorreq(struct intf
 				} else {
 					#ifdef DBG_CONFIG_ERROR_DETECT
 					{
-						HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+						struct hal_data_8192du 	*pHalData = GET_HAL_DATA(padapter);
 						pHalData->srestpriv.Wifi_Error_Status = USB_VEN_REQ_CMD_FAIL;
 					}
 					#endif
@@ -184,7 +184,7 @@ static void usb_read_reg_rf_byfw(struct
 	u16	wPage = 0x0000, offset;
 	u32	BufferLengthRead;
 	struct rtw_adapter *	Adapter = pintfhdl->padapter;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(Adapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(Adapter);
 	u8	RFPath=0,nPHY=0;
 
 	RFPath =(u8) ((registerIndex&0xff0000)>>16);
@@ -214,7 +214,7 @@ static void usb_read_reg_rf_byfw(struct
 static void usb_read_reg(struct intf_hdl *pintfhdl, u16 value, void *pdata, u16 len)
 {
 	struct rtw_adapter		*padapter = pintfhdl->padapter;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(padapter);
 	u8	request;
 	u8	requesttype;
 	u16	index;
@@ -237,7 +237,7 @@ static void usb_read_reg(struct intf_hdl
 static int usb_write_reg(struct intf_hdl *pintfhdl, u16 value, void *pdata, u16 len)
 {
 	struct rtw_adapter		*padapter = pintfhdl->padapter;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(padapter);
 	u8	request;
 	u8	requesttype;
 	u16	index;
@@ -625,7 +625,7 @@ static int recvbuf2recvframe(struct rtw_
 	struct sk_buff *pkt_copy = NULL;
 	union recv_frame	*precvframe = NULL;
 	struct rx_pkt_attrib	*pattrib = NULL;
-	HAL_DATA_TYPE		*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du 		*pHalData = GET_HAL_DATA(padapter);
 	struct recv_priv	*precvpriv = &padapter->recvpriv;
 	struct __queue *pfree_recv_queue = &precvpriv->free_recv_queue;
 
@@ -960,7 +960,7 @@ static int recvbuf2recvframe(struct rtw_
 	struct sk_buff *pkt_copy = NULL;
 	union recv_frame	*precvframe = NULL;
 	struct rx_pkt_attrib	*pattrib = NULL;
-	HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du 	*pHalData = GET_HAL_DATA(padapter);
 	struct recv_priv	*precvpriv = &padapter->recvpriv;
 	struct __queue *pfree_recv_queue = &precvpriv->free_recv_queue;
 
--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -36,8 +36,6 @@ enum {
 	DOWN_LINK,
 };
 
-// typedef struct _ADAPTER _adapter, ADAPTER,*PADAPTER;
-
 #ifdef CONFIG_80211N_HT
 #include <rtw_ht.h>
 #endif
--- a/drivers/staging/rtl8192du/include/rtl8192d_cmd.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_cmd.h
@@ -112,13 +112,13 @@ int reset_tsf(struct rtw_adapter * Adapt
 #endif	// CONFIG_TSF_RESET_OFFLOAD
 
 #ifdef CONFIG_WOWLAN
-typedef struct _SETWOWLAN_PARM{
+struct set_wowlan_parm {
 	u8	mode;
 	u8	gpio_index;
 	u8	gpio_duration;
 	u8  second_mode;
 	u8  reserve;
-}SETWOWLAN_PARM, *PSETWOWLAN_PARM;
+};
 
 #define FW_WOWLAN_FUN_EN			BIT(0)
 #define FW_WOWLAN_PATTERN_MATCH		BIT(1)
--- a/drivers/staging/rtl8192du/include/rtl8192d_hal.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_hal.h
@@ -270,7 +270,7 @@ struct RT_FIRMWARE_92D {
 // This structure must be cared byte-ordering
 //
 // Added by tynli. 2009.12.04.
-typedef struct _RT_8192D_FIRMWARE_HDR {//8-byte alinment required
+struct rt_8192d_firmware_hdr { //8-byte alinment required
 
 	//--- LONG WORD 0 ----
 	u16		Signature;	// 92C0: test chip; 92C, 88C0: test chip; 88C1: MP A-cut; 92C1: MP A-cut
@@ -296,67 +296,16 @@ typedef struct _RT_8192D_FIRMWARE_HDR {/
 	//--- LONG WORD 3 ----
 	u32		Rsvd4;
 	u32		Rsvd5;
-
-}RT_8192D_FIRMWARE_HDR, *PRT_8192D_FIRMWARE_HDR;
+};
 
 #define DRIVER_EARLY_INT_TIME		0x05
 #define BCN_DMA_ATIME_INT_TIME		0x02
 
-typedef	enum _BT_CoType{
-	BT_2Wire			= 0,
-	BT_ISSC_3Wire	= 1,
-	BT_Accel			= 2,
-	BT_CSR			= 3,
-	BT_CSR_ENHAN	= 4,
-	BT_RTL8756		= 5,
-} BT_CoType, *PBT_CoType;
-
-typedef	enum _BT_CurState{
-	BT_OFF		= 0,
-	BT_ON		= 1,
-} BT_CurState, *PBT_CurState;
-
-typedef	enum _BT_ServiceType{
-	BT_SCO			= 0,
-	BT_A2DP			= 1,
-	BT_HID			= 2,
-	BT_HID_Idle		= 3,
-	BT_Scan			= 4,
-	BT_Idle			= 5,
-	BT_OtherAction	= 6,
-	BT_Busy			= 7,
-	BT_OtherBusy		= 8,
-} BT_ServiceType, *PBT_ServiceType;
-
-typedef	enum _BT_RadioShared{
-	BT_Radio_Shared		= 0,
-	BT_Radio_Individual	= 1,
-} BT_RadioShared, *PBT_RadioShared;
-
-typedef struct _BT_COEXIST_STR{
-	u8					BluetoothCoexist;
-	u8					BT_Ant_Num;
-	u8					BT_CoexistType;
-	u8					BT_State;
-	u8					BT_CUR_State;		//0:on, 1:off
-	u8					BT_Ant_isolation;	//0:good, 1:bad
-	u8					BT_PapeCtrl;		//0:SW, 1:SW/HW dynamic
-	u8					BT_Service;
-	u8					BT_RadioSharedType;
-	u8					Ratio_Tx;
-	u8					Ratio_PRI;
-}BT_COEXIST_STR, *PBT_COEXIST_STR;
-
 //Added for 92D IQK setting.
-typedef struct _IQK_MATRIX_REGS_SETTING{
+struct iqk_matrix_regs_setting {
 	bool		bIQKDone;
-#if 1
 	int		Value[1][IQK_Matrix_REG_NUM];
-#else
-	u32		Mark[IQK_Matrix_REG_NUM];
-	u32		Value[IQK_Matrix_REG_NUM];
-#endif
-}IQK_MATRIX_REGS_SETTING,*PIQK_MATRIX_REGS_SETTING;
+};
 
 #ifdef CONFIG_USB_RX_AGGREGATION
 
@@ -539,7 +488,7 @@ enum ChannelPlan{
 	CHPL_WORLD	= 10,
 };
 
-typedef struct _TxPowerInfo{
+struct tx_power_info {
 	u8 CCKIndex[RF_PATH_MAX][CHANNEL_GROUP_MAX];
 	u8 HT40_1SIndex[RF_PATH_MAX][CHANNEL_GROUP_MAX];
 	u8 HT40_2SIndexDiff[RF_PATH_MAX][CHANNEL_GROUP_MAX];
@@ -551,7 +500,7 @@ typedef struct _TxPowerInfo{
 	u8 TSSI_B[3];
 	u8 TSSI_A_5G[3];		//5GL/5GM/5GH
 	u8 TSSI_B_5G[3];
-}TxPowerInfo, *PTxPowerInfo;
+};
 
 #define EFUSE_REAL_CONTENT_LEN	1024
 #define EFUSE_MAP_LEN				256
@@ -587,17 +536,14 @@ enum c2h_id_8192d {
 
 
 //should be renamed and moved to another file
-typedef	enum _INTERFACE_SELECT_8192DUSB{
-	INTF_SEL0_USB			= 0,		// USB
+enum INTERFACE_SELECT_8192DUSB {
+	INTF_SEL0_USB		= 0,		// USB
 	INTF_SEL1_MINICARD	= 1,		// Minicard
-	INTF_SEL2_EKB_PRO		= 2,		// Eee keyboard proprietary
-	INTF_SEL3_PRO			= 3,		// Customized proprietary
-} INTERFACE_SELECT_8192DUSB, *PINTERFACE_SELECT_8192DUSB;
-
-typedef INTERFACE_SELECT_8192DUSB INTERFACE_SELECT_USB;
+	INTF_SEL2_EKB_PRO	= 2,		// Eee keyboard proprietary
+	INTF_SEL3_PRO		= 3,		// Customized proprietary
+};
 
-struct hal_data_8192du
-{
+struct hal_data_8192du {
 	enum VERSION_8192D	VersionID;
 
 	// add for 92D Phy mode/mac/Band mode
@@ -629,7 +575,7 @@ struct hal_data_8192du
 	u8	nCur40MhzPrimeSC;// Control channel sub-carrier
 	u16	BasicRateSet;
 
-	INTERFACE_SELECT_8192DUSB	InterfaceSel;
+	struct tx_power_info InterfaceSel;
 
 	//rf_ctrl
 	u8	rf_chip;
@@ -718,7 +664,7 @@ struct hal_data_8192du
 
 	bool		bEarlyModeEnable;
 
-	IQK_MATRIX_REGS_SETTING IQKMatrixRegSetting[IQK_Matrix_Settings_NUM];
+	struct iqk_matrix_regs_setting IQKMatrixRegSetting[IQK_Matrix_Settings_NUM];
 
 	//for host message to fw
 	u8	LastHMEBoxNum;
@@ -776,9 +722,7 @@ struct hal_data_8192du
 #endif //CONFIG_P2P
 };
 
-typedef struct hal_data_8192du HAL_DATA_TYPE, *PHAL_DATA_TYPE;
-
-#define GET_HAL_DATA(__pAdapter)	((HAL_DATA_TYPE *)((__pAdapter)->HalData))
+#define GET_HAL_DATA(__pAdapter)	((struct hal_data_8192du *)((__pAdapter)->HalData))
 #define GET_RF_TYPE(priv)	(GET_HAL_DATA(priv)->rf_type)
 
 int FirmwareDownload92D(struct rtw_adapter * Adapter,bool  bUsedWoWLANFw);
--- a/drivers/staging/rtl8192du/include/sta_info.h
+++ b/drivers/staging/rtl8192du/include/sta_info.h
@@ -48,13 +48,13 @@ struct wlan_acl_pool {
 	struct __queue acl_node_q;
 };
 
-typedef struct _RSSI_STA{
+struct rssi_sta {
 	s32	UndecoratedSmoothedPWDB;
 	s32	UndecoratedSmoothedCCK;
 	s32	UndecoratedSmoothedOFDM;
 	u64	PacketMap;
 	u8	ValidBit;
-}RSSI_STA, *PRSSI_STA;
+};
 
 struct	stainfo_stats	{
 
@@ -254,7 +254,7 @@ struct sta_info {
 #endif
 
 	//for DM
-	RSSI_STA	 rssi_stat;
+	struct rssi_sta	 rssi_stat;
 
         /* To store the sequence number of received management frame */
 	u16 RxMgmtFrameSeqNum;
--- a/drivers/staging/rtl8192du/os_dep/usb_ops_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/usb_ops_linux.c
@@ -164,7 +164,7 @@ unsigned int ffaddr2pipehdl(struct dvobj
 	int ep_num=0;
 	struct rtw_adapter *padapter = pdvobj->if1;
 	struct usb_device *pusbd = pdvobj->pusbdev;
-	HAL_DATA_TYPE *pHalData = GET_HAL_DATA(padapter);
+	struct hal_data_8192du  *pHalData = GET_HAL_DATA(padapter);
 
 	if (addr == RECV_BULK_IN_ADDR) {
 		pipe=usb_rcvbulkpipe(pusbd, pHalData->RtBulkInPipe);
@@ -437,7 +437,7 @@ _func_enter_;
 
 	#ifdef DBG_CONFIG_ERROR_DETECT
 	{
-		HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+		struct hal_data_8192du 	*pHalData = GET_HAL_DATA(padapter);
 		pHalData->srestpriv.last_tx_complete_time = rtw_get_current_time();
 	}
 	#endif
@@ -575,7 +575,7 @@ _func_enter_;
 	if (!status) {
 		#ifdef DBG_CONFIG_ERROR_DETECT
 		{
-			HAL_DATA_TYPE	*pHalData = GET_HAL_DATA(padapter);
+			struct hal_data_8192du 	*pHalData = GET_HAL_DATA(padapter);
 			pHalData->srestpriv.last_tx_time = rtw_get_current_time();
 		}
 		#endif
