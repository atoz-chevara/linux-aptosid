From 83f111cacc08d49fa5da45ce223ef1c9bad0c37e Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Mon, 13 May 2013 14:36:08 -0500
Subject: [PATCH 149/210] Fix checkfile ERROR and CHECK problems with
 core/rtw_io.c

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_io.c | 123 +++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 71 insertions(+), 52 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_io.c
+++ b/drivers/staging/rtl8192du/core/rtw_io.c
@@ -50,7 +50,6 @@ jackson@realtek.com.tw
 u8 _rtw_read8(struct rtw_adapter *adapter, u32 addr)
 {
 	u8 r_val;
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
 	struct io_priv *pio_priv = &adapter->iopriv;
 	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
 	u8 (*_read8)(struct intf_hdl *pintfhdl, u32 addr);
@@ -65,7 +64,6 @@ u8 _rtw_read8(struct rtw_adapter *adapte
 u16 _rtw_read16(struct rtw_adapter *adapter, u32 addr)
 {
 	u16 r_val;
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
 	struct io_priv *pio_priv = &adapter->iopriv;
 	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
 	u16	(*_read16)(struct intf_hdl *pintfhdl, u32 addr);
@@ -80,7 +78,6 @@ u16 _rtw_read16(struct rtw_adapter *adap
 u32 _rtw_read32(struct rtw_adapter *adapter, u32 addr)
 {
 	u32 r_val;
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
 	struct io_priv *pio_priv = &adapter->iopriv;
 	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
 	u32	(*_read32)(struct intf_hdl *pintfhdl, u32 addr);
@@ -94,9 +91,8 @@ u32 _rtw_read32(struct rtw_adapter *adap
 
 int _rtw_write8(struct rtw_adapter *adapter, u32 addr, u8 val)
 {
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
 	struct io_priv *pio_priv = &adapter->iopriv;
-	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
+	struct	intf_hdl *pintfhdl = &(pio_priv->intf);
 	int (*_write8)(struct intf_hdl *pintfhdl, u32 addr, u8 val);
 	int ret;
 	_func_enter_;
@@ -107,9 +103,9 @@ int _rtw_write8(struct rtw_adapter *adap
 
 	return RTW_STATUS_CODE(ret);
 }
+
 int _rtw_write16(struct rtw_adapter *adapter, u32 addr, u16 val)
 {
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
 	struct io_priv *pio_priv = &adapter->iopriv;
 	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
 	int (*_write16)(struct intf_hdl *pintfhdl, u32 addr, u16 val);
@@ -124,7 +120,6 @@ int _rtw_write16(struct rtw_adapter *ada
 }
 int _rtw_write32(struct rtw_adapter *adapter, u32 addr, u32 val)
 {
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
 	struct io_priv *pio_priv = &adapter->iopriv;
 	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
 	int (*_write32)(struct intf_hdl *pintfhdl, u32 addr, u32 val);
@@ -138,24 +133,23 @@ int _rtw_write32(struct rtw_adapter *ada
 	return RTW_STATUS_CODE(ret);
 }
 
-int _rtw_writeN(struct rtw_adapter *adapter, u32 addr ,u32 length , u8 *pdata)
+int _rtw_writeN(struct rtw_adapter *adapter, u32 addr, u32 length, u8 *pdata)
 {
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
 	struct io_priv *pio_priv = &adapter->iopriv;
-        struct	intf_hdl	*pintfhdl = (struct intf_hdl*)(&(pio_priv->intf));
-	int (*_writeN)(struct intf_hdl *pintfhdl, u32 addr,u32 length, u8 *pdata);
+	struct intf_hdl *pintfhdl = (struct intf_hdl *)(&(pio_priv->intf));
+	int (*_writeN)(struct intf_hdl *pintfhdl, u32 addr,
+		       u32 length, u8 *pdata);
 	int ret;
 	_func_enter_;
 	_writeN = pintfhdl->io_ops._writeN;
 
-	ret = _writeN(pintfhdl, addr,length,pdata);
+	ret = _writeN(pintfhdl, addr, length, pdata);
 	_func_exit_;
 
 	return RTW_STATUS_CODE(ret);
 }
 int _rtw_write8_async(struct rtw_adapter *adapter, u32 addr, u8 val)
 {
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
 	struct io_priv *pio_priv = &adapter->iopriv;
 	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
 	int (*_write8_async)(struct intf_hdl *pintfhdl, u32 addr, u8 val);
@@ -170,9 +164,8 @@ int _rtw_write8_async(struct rtw_adapter
 }
 int _rtw_write16_async(struct rtw_adapter *adapter, u32 addr, u16 val)
 {
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
 	struct io_priv *pio_priv = &adapter->iopriv;
-	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
+	struct	intf_hdl *pintfhdl = &(pio_priv->intf);
 	int (*_write16_async)(struct intf_hdl *pintfhdl, u32 addr, u16 val);
 	int ret;
 	_func_enter_;
@@ -185,9 +178,8 @@ int _rtw_write16_async(struct rtw_adapte
 }
 int _rtw_write32_async(struct rtw_adapter *adapter, u32 addr, u32 val)
 {
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
 	struct io_priv *pio_priv = &adapter->iopriv;
-	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
+	struct	intf_hdl *pintfhdl = &(pio_priv->intf);
 	int (*_write32_async)(struct intf_hdl *pintfhdl, u32 addr, u32 val);
 	int ret;
 	_func_enter_;
@@ -198,18 +190,21 @@ int _rtw_write32_async(struct rtw_adapte
 
 	return RTW_STATUS_CODE(ret);
 }
+
 void _rtw_read_mem(struct rtw_adapter *adapter, u32 addr, u32 cnt, u8 *pmem)
 {
-	void (*_read_mem)(struct intf_hdl *pintfhdl, u32 addr, u32 cnt, u8 *pmem);
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
+	void (*_read_mem)(struct intf_hdl *pintfhdl, u32 addr,
+			  u32 cnt, u8 *pmem);
 	struct io_priv *pio_priv = &adapter->iopriv;
 	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
 
 	_func_enter_;
 
-	if ((adapter->bDriverStopped ==true) || (adapter->bSurpriseRemoved == true))
-	{
-	     RT_TRACE(_module_rtl871x_io_c_, _drv_info_, ("rtw_read_mem:bDriverStopped(%d) OR bSurpriseRemoved(%d)", adapter->bDriverStopped, adapter->bSurpriseRemoved));
+	if ((adapter->bDriverStopped == true) ||
+	    (adapter->bSurpriseRemoved == true)) {
+		RT_TRACE(_module_rtl871x_io_c_, _drv_info_,
+			 ("rtw_read_mem:bDriverStopped(%d) OR bSurpriseRemoved(%d)",
+			 adapter->bDriverStopped, adapter->bSurpriseRemoved));
 	     return;
 	}
 
@@ -222,10 +217,10 @@ void _rtw_read_mem(struct rtw_adapter *a
 
 void _rtw_write_mem(struct rtw_adapter *adapter, u32 addr, u32 cnt, u8 *pmem)
 {
-	void (*_write_mem)(struct intf_hdl *pintfhdl, u32 addr, u32 cnt, u8 *pmem);
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
+	void (*_write_mem)(struct intf_hdl *pintfhdl, u32 addr,
+			   u32 cnt, u8 *pmem);
 	struct io_priv *pio_priv = &adapter->iopriv;
-	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
+	struct	intf_hdl *pintfhdl = &(pio_priv->intf);
 
 	_func_enter_;
 
@@ -238,16 +233,18 @@ void _rtw_write_mem(struct rtw_adapter *
 
 void _rtw_read_port(struct rtw_adapter *adapter, u32 addr, u32 cnt, u8 *pmem)
 {
-	u32 (*_read_port)(struct intf_hdl *pintfhdl, u32 addr, u32 cnt, u8 *pmem);
-	/* struct	io_queue	*pio_queue = (struct io_queue *)adapter->pio_queue; */
+	u32 (*_read_port)(struct intf_hdl *pintfhdl, u32 addr,
+			  u32 cnt, u8 *pmem);
 	struct io_priv *pio_priv = &adapter->iopriv;
-	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
+	struct	intf_hdl *pintfhdl = &(pio_priv->intf);
 
 	_func_enter_;
 
-	if ((adapter->bDriverStopped ==true) || (adapter->bSurpriseRemoved == true))
-	{
-	     RT_TRACE(_module_rtl871x_io_c_, _drv_info_, ("rtw_read_port:bDriverStopped(%d) OR bSurpriseRemoved(%d)", adapter->bDriverStopped, adapter->bSurpriseRemoved));
+	if ((adapter->bDriverStopped == true) ||
+	    (adapter->bSurpriseRemoved == true)) {
+		RT_TRACE(_module_rtl871x_io_c_, _drv_info_,
+			 ("rtw_read_port:bDriverStopped(%d) OR bSurpriseRemoved(%d)",
+			 adapter->bDriverStopped, adapter->bSurpriseRemoved));
 	     return;
 	}
 
@@ -272,7 +269,8 @@ void _rtw_read_port_cancel(struct rtw_ad
 
 u32 _rtw_write_port(struct rtw_adapter *adapter, u32 addr, u32 cnt, u8 *pmem)
 {
-	u32 (*_write_port)(struct intf_hdl *pintfhdl, u32 addr, u32 cnt, u8 *pmem);
+	u32 (*_write_port)(struct intf_hdl *pintfhdl, u32 addr,
+			   u32 cnt, u8 *pmem);
 	struct io_priv *pio_priv = &adapter->iopriv;
 	struct	intf_hdl		*pintfhdl = &(pio_priv->intf);
 	u32 ret = _SUCCESS;
@@ -288,7 +286,8 @@ u32 _rtw_write_port(struct rtw_adapter *
 	return ret;
 }
 
-u32 _rtw_write_port_and_wait(struct rtw_adapter *adapter, u32 addr, u32 cnt, u8 *pmem, int timeout_ms)
+u32 _rtw_write_port_and_wait(struct rtw_adapter *adapter, u32 addr, u32 cnt,
+			     u8 *pmem, int timeout_ms)
 {
 	int ret = _SUCCESS;
 	struct xmit_buf *pxmitbuf = (struct xmit_buf *)pmem;
@@ -317,7 +316,8 @@ void _rtw_write_port_cancel(struct rtw_a
 		_write_port_cancel(pintfhdl);
 }
 
-int rtw_init_io_priv(struct rtw_adapter *padapter, void (*set_intf_ops)(struct _io_ops *pops))
+int rtw_init_io_priv(struct rtw_adapter *padapter,
+		     void (*set_intf_ops)(struct _io_ops *pops))
 {
 	struct io_priv	*piopriv = &padapter->iopriv;
 	struct intf_hdl *pintf = &piopriv->intf;
@@ -351,8 +351,9 @@ int write_sniff_num = sizeof(write_sniff
 bool match_read_sniff_ranges(u16 addr, u16 len)
 {
 	int i;
-	for (i = 0; i<read_sniff_num; i++) {
-		if (addr + len > read_sniff_ranges[i][0] && addr <= read_sniff_ranges[i][1])
+	for (i = 0; i < read_sniff_num; i++) {
+		if (addr + len > read_sniff_ranges[i][0] &&
+		    addr <= read_sniff_ranges[i][1])
 			return true;
 	}
 
@@ -362,69 +363,87 @@ bool match_read_sniff_ranges(u16 addr, u
 bool match_write_sniff_ranges(u16 addr, u16 len)
 {
 	int i;
-	for (i = 0; i<write_sniff_num; i++) {
-		if (addr + len > write_sniff_ranges[i][0] && addr <= write_sniff_ranges[i][1])
+	for (i = 0; i < write_sniff_num; i++) {
+		if (addr + len > write_sniff_ranges[i][0] &&
+		    addr <= write_sniff_ranges[i][1])
 			return true;
 	}
 
 	return false;
 }
 
-u8 dbg_rtw_read8(struct rtw_adapter *adapter, u32 addr, const char *caller, const int line)
+u8 dbg_rtw_read8(struct rtw_adapter *adapter, u32 addr,
+		 const char *caller, const int line)
 {
 	u8 val = _rtw_read8(adapter, addr);
 
 	if (match_read_sniff_ranges(addr, 1))
-		DBG_871X("DBG_IO %s:%d rtw_read8(0x%04x) return 0x%02x\n", caller, line, addr, val);
+		DBG_871X("DBG_IO %s:%d rtw_read8(0x%04x) return 0x%02x\n",
+			 caller, line, addr, val);
 
 	return val;
 }
 
-u16 dbg_rtw_read16(struct rtw_adapter *adapter, u32 addr, const char *caller, const int line)
+u16 dbg_rtw_read16(struct rtw_adapter *adapter, u32 addr,
+		   const char *caller, const int line)
 {
 	u16 val = _rtw_read16(adapter, addr);
 
 	if (match_read_sniff_ranges(addr, 2))
-		DBG_871X("DBG_IO %s:%d rtw_read16(0x%04x) return 0x%04x\n", caller, line, addr, val);
+		DBG_871X("DBG_IO %s:%d rtw_read16(0x%04x) return 0x%04x\n",
+			 caller, line, addr, val);
 
 	return val;
 }
 
-u32 dbg_rtw_read32(struct rtw_adapter *adapter, u32 addr, const char *caller, const int line)
+u32 dbg_rtw_read32(struct rtw_adapter *adapter, u32 addr,
+		   const char *caller, const int line)
 {
 	u32 val = _rtw_read32(adapter, addr);
 
 	if (match_read_sniff_ranges(addr, 4))
-		DBG_871X("DBG_IO %s:%d rtw_read32(0x%04x) return 0x%08x\n", caller, line, addr, val);
+		DBG_871X("DBG_IO %s:%d rtw_read32(0x%04x) return 0x%08x\n",
+			 caller, line, addr, val);
 
 	return val;
 }
 
-int dbg_rtw_write8(struct rtw_adapter *adapter, u32 addr, u8 val, const char *caller, const int line)
+int dbg_rtw_write8(struct rtw_adapter *adapter, u32 addr, u8 val,
+		   const char *caller, const int line)
 {
 	if (match_write_sniff_ranges(addr, 1))
-		DBG_871X("DBG_IO %s:%d rtw_write8(0x%04x, 0x%02x)\n", caller, line, addr, val);
+		DBG_871X("DBG_IO %s:%d rtw_write8(0x%04x, 0x%02x)\n", caller,
+			 line, addr, val);
 
 	return _rtw_write8(adapter, addr, val);
 }
-int dbg_rtw_write16(struct rtw_adapter *adapter, u32 addr, u16 val, const char *caller, const int line)
+
+int dbg_rtw_write16(struct rtw_adapter *adapter, u32 addr, u16 val,
+		    const char *caller, const int line)
 {
 	if (match_write_sniff_ranges(addr, 2))
-		DBG_871X("DBG_IO %s:%d rtw_write16(0x%04x, 0x%04x)\n", caller, line, addr, val);
+		DBG_871X("DBG_IO %s:%d rtw_write16(0x%04x, 0x%04x)\n", caller,
+			 line, addr, val);
 
 	return _rtw_write16(adapter, addr, val);
 }
-int dbg_rtw_write32(struct rtw_adapter *adapter, u32 addr, u32 val, const char *caller, const int line)
+
+int dbg_rtw_write32(struct rtw_adapter *adapter, u32 addr, u32 val,
+		    const char *caller, const int line)
 {
 	if (match_write_sniff_ranges(addr, 4))
-		DBG_871X("DBG_IO %s:%d rtw_write32(0x%04x, 0x%08x)\n", caller, line, addr, val);
+		DBG_871X("DBG_IO %s:%d rtw_write32(0x%04x, 0x%08x)\n", caller,
+			 line, addr, val);
 
 	return _rtw_write32(adapter, addr, val);
 }
-int dbg_rtw_writeN(struct rtw_adapter *adapter, u32 addr ,u32 length , u8 *data, const char *caller, const int line)
+
+int dbg_rtw_writeN(struct rtw_adapter *adapter, u32 addr, u32 length, u8 *data,
+		   const char *caller, const int line)
 {
 	if (match_write_sniff_ranges(addr, length))
-		DBG_871X("DBG_IO %s:%d rtw_writeN(0x%04x, %u)\n", caller, line, addr, length);
+		DBG_871X("DBG_IO %s:%d rtw_writeN(0x%04x, %u)\n", caller,
+			 line, addr, length);
 
 	return _rtw_writeN(adapter, addr, length, data);
 }
