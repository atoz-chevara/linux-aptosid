From c929575137e58c84279aae0b8f3c9fc2e86b199d Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Sun, 28 Apr 2013 13:15:53 -0500
Subject: [PATCH 080/210] Convert typedef for _nic_hdl

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 include/drv_types.h     |  4 ++--
 include/osdep_intf.h    |  2 +-
 include/osdep_service.h |  5 +----
 include/recv_osdep.h    |  2 +-
 include/rtw_ioctl.h     | 24 ++++++++++++------------
 include/xmit_osdep.h    |  2 +-
 os_dep/os_intfs.c       |  5 ++---
 os_dep/xmit_linux.c     |  2 +-
 8 files changed, 21 insertions(+), 25 deletions(-)

--- a/drivers/staging/rtl8192du/include/drv_types.h
+++ b/drivers/staging/rtl8192du/include/drv_types.h
@@ -378,11 +378,11 @@ struct _ADAPTER {
 	void (*intf_start)(_adapter * adapter);
 	void (*intf_stop)(_adapter * adapter);
 
-	_nic_hdl pnetdev;
+	struct net_device *pnetdev;
 
 	// used by rtw_rereg_nd_name related function
 	struct rereg_nd_name_data {
-		_nic_hdl old_pnetdev;
+		struct net_device *old_pnetdev;
 		char old_ifname[IFNAMSIZ];
 		u8 old_ips_mode;
 		u8 old_bRegUseLed;
--- a/drivers/staging/rtl8192du/include/osdep_intf.h
+++ b/drivers/staging/rtl8192du/include/osdep_intf.h
@@ -111,6 +111,6 @@ void rtw_drv_free_vir_ifaces(struct dvob
 #endif //CONFIG_MULTI_VIR_IFACES
 #endif
 
-void rtw_ndev_destructor(_nic_hdl ndev);
+void rtw_ndev_destructor(struct net_device *ndev);
 
 #endif	//_OSDEP_INTF_H_
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -99,12 +99,9 @@
 		spinlock_t	lock;
 	};
 
-//	typedef unsigned char	_buffer;
-
 	typedef struct	__queue	_queue;
 	typedef struct	list_head	_list;
 	typedef	int	_OS_STATUS;
-	typedef	struct	net_device * _nic_hdl;
 
 	typedef void*		_thread_hdl_;
 	typedef int		thread_return;
@@ -181,7 +178,7 @@ static inline void rtw_list_delete(_list
 	list_del_init(plist);
 }
 
-static inline void _init_timer(struct timer_list *timer,_nic_hdl nic_hdl,void *pfunc,void* cntx)
+static inline void _init_timer(struct timer_list *timer, struct net_device * nic_hdl, void *pfunc, void *cntx)
 {
 	timer->function = pfunc;
 	timer->data = (unsigned long)cntx;
--- a/drivers/staging/rtl8192du/include/recv_osdep.h
+++ b/drivers/staging/rtl8192du/include/recv_osdep.h
@@ -29,7 +29,7 @@ extern void _rtw_free_recv_priv (struct
 
 extern s32  rtw_recv_entry(union recv_frame *precv_frame);
 extern int rtw_recv_indicatepkt(_adapter *adapter, union recv_frame *precv_frame);
-extern void rtw_recv_returnpacket(_nic_hdl cnxt, struct sk_buff *preturnedpkt);
+extern void rtw_recv_returnpacket(struct net_device *cnxt, struct sk_buff *preturnedpkt);
 
 extern void rtw_hostapd_mlme_rx(_adapter *padapter, union recv_frame *precv_frame);
 extern void rtw_handle_tkip_mic_err(_adapter *padapter, u8 bgroup);
--- a/drivers/staging/rtl8192du/include/rtw_ioctl.h
+++ b/drivers/staging/rtl8192du/include/rtw_ioctl.h
@@ -117,21 +117,21 @@ extern struct iw_handler_def  rtw_handle
 #endif
 
 extern	uint drv_query_info(
-	_nic_hdl		MiniportAdapterContext,
-	uint		Oid,
-	void *			InformationBuffer,
-	u32			InformationBufferLength,
-	u32*			BytesWritten,
-	u32*			BytesNeeded
+		struct net_device *MiniportAdapterContext,
+		uint		Oid,
+		void *InformationBuffer,
+		u32 InformationBufferLength,
+		u32 *BytesWritten,
+		u32 *BytesNeeded
 	);
 
 extern	uint	drv_set_info(
-	_nic_hdl		MiniportAdapterContext,
-	uint		Oid,
-	void *			InformationBuffer,
-	u32			InformationBufferLength,
-	u32*			BytesRead,
-	u32*			BytesNeeded
+		struct net_device *MiniportAdapterContext,
+		uint		Oid,
+		void *InformationBuffer,
+		u32	InformationBufferLength,
+		u32 *BytesRead,
+		u32 *BytesNeeded
 	);
 
 #endif // #ifndef __INC_CEINFO_
--- a/drivers/staging/rtl8192du/include/xmit_osdep.h
+++ b/drivers/staging/rtl8192du/include/xmit_osdep.h
@@ -41,7 +41,7 @@ struct sta_xmit_priv;
 struct xmit_frame;
 struct xmit_buf;
 
-extern int rtw_xmit_entry(struct sk_buff *pkt, _nic_hdl pnetdev);
+extern int rtw_xmit_entry(struct sk_buff *pkt, struct net_device *pnetdev);
 
 void rtw_os_xmit_schedule(_adapter *padapter);
 
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -239,7 +239,7 @@ static uint rtw_notch_filter = RTW_NOTCH
 module_param(rtw_notch_filter, uint, 0644);
 MODULE_PARM_DESC(rtw_notch_filter, "0:Disable, 1:Enable, 2:Enable only for P2P");
 
-static uint loadparam( _adapter *padapter,  _nic_hdl	pnetdev);
+static uint loadparam( _adapter *padapter, struct net_device *pnetdev);
 int _netdev_open(struct net_device *pnetdev);
 int netdev_open (struct net_device *pnetdev);
 static int netdev_close (struct net_device *pnetdev);
@@ -671,8 +671,7 @@ void rtw_proc_remove_one(struct net_devi
 }
 #endif
 
-uint loadparam( _adapter *padapter,  _nic_hdl	pnetdev);
-uint loadparam( _adapter *padapter,  _nic_hdl	pnetdev)
+uint loadparam( _adapter *padapter, struct net_device *pnetdev)
 {
 
 	uint status = _SUCCESS;
--- a/drivers/staging/rtl8192du/os_dep/xmit_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/xmit_linux.c
@@ -292,7 +292,7 @@ int rtw_mlcst2unicst(_adapter *padapter,
 	return true;
 }
 
-int rtw_xmit_entry(struct sk_buff *pkt, _nic_hdl pnetdev)
+int rtw_xmit_entry(struct sk_buff *pkt, struct net_device *pnetdev)
 {
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(pnetdev);
 	struct xmit_priv *pxmitpriv = &padapter->xmitpriv;
