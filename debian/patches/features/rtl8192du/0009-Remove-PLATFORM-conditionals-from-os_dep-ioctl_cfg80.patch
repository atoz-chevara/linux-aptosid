From 20df20f207278472cb0d3d6ccfa55f781c768d3a Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Wed, 17 Apr 2013 11:40:24 -0500
Subject: [PATCH 009/210] Remove PLATFORM conditionals from
 os_dep/ioctl_cfg80211.c and os_dep/ioctl_linux.c

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 os_dep/ioctl_cfg80211.c |  19 ---------
 os_dep/ioctl_linux.c    | 100 ++++--------------------------------------------
 2 files changed, 7 insertions(+), 112 deletions(-)

--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -2401,22 +2401,6 @@ static int cfg80211_rtw_connect(struct w
 		goto exit;
 	}
 
-#ifdef CONFIG_PLATFORM_MSTAR_TITANIA12
-	printk("MStar Android!\n");
-	if((wdev_to_priv(padapter->rtw_wdev))->bandroid_scan == _FALSE)
-	{
-#ifdef CONFIG_P2P
-		struct wifidirect_info *pwdinfo= &(padapter->wdinfo);
-		if(rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
-#endif //CONFIG_P2P
-		{
-			ret = -EBUSY;
-			printk("Android hasn't attached yet!\n");
-			goto exit;
-		}
-	}
-#endif
-
 	if(_FAIL == rtw_pwr_wakeup(padapter)) {
 		ret= -EPERM;
 		goto exit;
@@ -2890,14 +2874,11 @@ void rtw_cfg80211_indicate_sta_assoc(_ad
 	#else //COMPAT_KERNEL_RELEASE
 	{
 		//to avoid WARN_ON(wdev->iftype != NL80211_IFTYPE_STATION)  when calling cfg80211_send_rx_assoc()
-		#ifndef CONFIG_PLATFORM_MSTAR_TITANIA12
 		pwdev->iftype = NL80211_IFTYPE_STATION;
-		#endif //CONFIG_PLATFORM_MSTAR_TITANIA12
 		DBG_8192C("iftype=%d before call cfg80211_send_rx_assoc()\n", pwdev->iftype);
 		rtw_cfg80211_send_rx_assoc(padapter, NULL, pmgmt_frame, frame_len);
 		DBG_8192C("iftype=%d after call cfg80211_send_rx_assoc()\n", pwdev->iftype);
 		pwdev->iftype = NL80211_IFTYPE_AP;
-		//cfg80211_rx_action(padapter->pnetdev, freq, pmgmt_frame, frame_len, GFP_ATOMIC);
 	}
 	#endif //COMPAT_KERNEL_RELEASE
 #endif /* defined(RTW_USE_CFG80211_STA_EVENT) */
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -616,13 +616,7 @@ static char *translate_scan(_adapter *pa
 
 	iwe.u.qual.qual = (u8)sq;   // signal quality
 
-	#ifdef CONFIG_PLATFORM_ROCKCHIPS
-	iwe.u.qual.noise = -100; // noise level suggest by zhf@rockchips
-	#else
 	iwe.u.qual.noise = 0; // noise level
-	#endif //CONFIG_PLATFORM_ROCKCHIPS
-
-	//DBG_871X("iqual=%d, ilevel=%d, inoise=%d, iupdated=%d\n", iwe.u.qual.qual, iwe.u.qual.level , iwe.u.qual.noise, iwe.u.qual.updated);
 
 	start = iwe_stream_add_event(info, start, stop, &iwe, IW_EV_QUAL_LEN);
 }
@@ -635,41 +629,23 @@ static int wpa_set_auth_algs(struct net_
 	_adapter *padapter = (_adapter *) rtw_netdev_priv(dev);
 	int ret = 0;
 
-	if ((value & AUTH_ALG_SHARED_KEY)&&(value & AUTH_ALG_OPEN_SYSTEM))
-	{
+	if ((value & AUTH_ALG_SHARED_KEY)&&(value & AUTH_ALG_OPEN_SYSTEM)) {
 		DBG_871X("wpa_set_auth_algs, AUTH_ALG_SHARED_KEY and  AUTH_ALG_OPEN_SYSTEM [value:0x%x]\n",value);
 		padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
 		padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeAutoSwitch;
 		padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_Auto;
-	}
-	else if (value & AUTH_ALG_SHARED_KEY)
-	{
+	} else if (value & AUTH_ALG_SHARED_KEY) {
 		DBG_871X("wpa_set_auth_algs, AUTH_ALG_SHARED_KEY  [value:0x%x]\n",value);
 		padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
 
-#ifdef CONFIG_PLATFORM_MT53XX
-		padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeAutoSwitch;
-		padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_Auto;
-#else
 		padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeShared;
 		padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_Shared;
-#endif
-	}
-	else if(value & AUTH_ALG_OPEN_SYSTEM)
-	{
+	} else if(value & AUTH_ALG_OPEN_SYSTEM) {
 		DBG_871X("wpa_set_auth_algs, AUTH_ALG_OPEN_SYSTEM\n");
-		//padapter->securitypriv.ndisencryptstatus = Ndis802_11EncryptionDisabled;
-		if(padapter->securitypriv.ndisauthtype < Ndis802_11AuthModeWPAPSK)
-		{
-#ifdef CONFIG_PLATFORM_MT53XX
-			padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeAutoSwitch;
-			padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_Auto;
-#else
+		if(padapter->securitypriv.ndisauthtype < Ndis802_11AuthModeWPAPSK) {
 			padapter->securitypriv.ndisauthtype = Ndis802_11AuthModeOpen;
 			padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_Open;
-#endif
 		}
-
 	}
 	else if(value & AUTH_ALG_LEAP)
 	{
@@ -1397,26 +1373,9 @@ static int rtw_wx_get_sens(struct net_de
 			     struct iw_request_info *info,
 			     union iwreq_data *wrqu, char *extra)
 {
-	#ifdef CONFIG_PLATFORM_ROCKCHIPS
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
-	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
-
-	/*
-	*  20110311 Commented by Jeff
-	*  For rockchip platform's wpa_driver_wext_get_rssi
-	*/
-	if(check_fwstate(pmlmepriv, _FW_LINKED) == _TRUE) {
-		//wrqu->sens.value=-padapter->recvpriv.signal_strength;
-		wrqu->sens.value=-padapter->recvpriv.rssi;
-		//DBG_871X("%s: %d\n", __FUNCTION__, wrqu->sens.value);
-		wrqu->sens.fixed = 0; /* no auto select */
-	} else
-	#endif
-	{
-		wrqu->sens.value = 0;
-		wrqu->sens.fixed = 0;	/* no auto select */
-		wrqu->sens.disabled = 1;
-	}
+	wrqu->sens.value = 0;
+	wrqu->sens.fixed = 0;	/* no auto select */
+	wrqu->sens.disabled = 1;
 	return 0;
 }
 
@@ -2619,11 +2578,7 @@ static int rtw_wx_set_enc(struct net_dev
 		DBG_871X("rtw_wx_set_enc():IW_ENCODE_OPEN\n");
 		padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;//Ndis802_11EncryptionDisabled;
 
-#ifdef CONFIG_PLATFORM_MT53XX
-		padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_Auto;
-#else
 		padapter->securitypriv.dot11AuthAlgrthm= dot11AuthAlgrthm_Open;
-#endif
 
 		padapter->securitypriv.dot11PrivacyAlgrthm=_NO_PRIVACY_;
 		padapter->securitypriv.dot118021XGrpPrivacy=_NO_PRIVACY_;
@@ -2635,11 +2590,7 @@ static int rtw_wx_set_enc(struct net_dev
 		DBG_871X("rtw_wx_set_enc():IW_ENCODE_RESTRICTED\n");
 		padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
 
-#ifdef CONFIG_PLATFORM_MT53XX
-		padapter->securitypriv.dot11AuthAlgrthm = dot11AuthAlgrthm_Auto;
-#else
 		padapter->securitypriv.dot11AuthAlgrthm= dot11AuthAlgrthm_Shared;
-#endif
 
 		padapter->securitypriv.dot11PrivacyAlgrthm=_WEP40_;
 		padapter->securitypriv.dot118021XGrpPrivacy=_WEP40_;
@@ -3227,14 +3178,6 @@ static int rtw_wx_set_mtk_wps_probe_ie(s
 		struct iw_request_info *a,
 		union iwreq_data *wrqu, char *b)
 {
-#ifdef CONFIG_PLATFORM_MT53XX
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
-	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
-
-	RT_TRACE(_module_rtl871x_ioctl_os_c, _drv_notice_,
-		 ("WLAN IOCTL: cmd_code=%x, fwstate=0x%x\n",
-		  a->cmd, get_fwstate(pmlmepriv)));
-#endif
 	return 0;
 }
 
@@ -3242,14 +3185,6 @@ static int rtw_wx_get_sensitivity(struct
 				struct iw_request_info *info,
 				union iwreq_data *wrqu, char *buf)
 {
-#ifdef CONFIG_PLATFORM_MT53XX
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
-
-	//	Modified by Albert 20110914
-	//	This is in dbm format for MTK platform.
-	wrqu->qual.level = padapter->recvpriv.rssi;
-	DBG_871X(" level = %u\n",  wrqu->qual.level );
-#endif
 	return 0;
 }
 
@@ -3257,20 +3192,10 @@ static int rtw_wx_set_mtk_wps_ie(struct
 				struct iw_request_info *info,
 				union iwreq_data *wrqu, char *extra)
 {
-#ifdef CONFIG_PLATFORM_MT53XX
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
-
-	return rtw_set_wpa_ie(padapter, wrqu->data.pointer, wrqu->data.length);
-#else
 	return 0;
-#endif
 }
 
 /*
-typedef int (*iw_handler)(struct net_device *dev, struct iw_request_info *info,
-			  union iwreq_data *wrqu, char *extra);
-*/
-/*
  *	For all data larger than 16 octets, we need to use a
  *	pointer to memory allocated in user space.
  */
@@ -11242,7 +11167,6 @@ static const struct iw_priv_args rtw_pri
 		SIOCIWFIRSTPRIV + 0x6,
 		IW_PRIV_TYPE_INT | IW_PRIV_SIZE_FIXED | 1, 0, "wps_start"
 	},
-//for PLATFORM_MT53XX
 	{
 		SIOCIWFIRSTPRIV + 0x7,
 		IW_PRIV_TYPE_INT | IW_PRIV_SIZE_FIXED | 1, 0, "get_sensitivity"
@@ -11256,7 +11180,6 @@ static const struct iw_priv_args rtw_pri
 		IW_PRIV_TYPE_INT | IW_PRIV_SIZE_FIXED | 1, 0, "wps_assoc_req_ie"
 	},
 
-//for RTK_DMP_PLATFORM
 	{
 		SIOCIWFIRSTPRIV + 0xA,
 		IW_PRIV_TYPE_INT | IW_PRIV_SIZE_FIXED | 1, 0, "channel_plan"
@@ -11340,12 +11263,10 @@ static iw_handler rtw_private_handler[]
 	rtw_set_pid,						//0x05
 	rtw_wps_start,					//0x06
 
-// for PLATFORM_MT53XX
 	rtw_wx_get_sensitivity,			//0x07
 	rtw_wx_set_mtk_wps_probe_ie,	//0x08
 	rtw_wx_set_mtk_wps_ie,			//0x09
 
-// for RTK_DMP_PLATFORM
 // Set Channel depend on the country code
 	rtw_wx_set_channel_plan,		//0x0A
 
@@ -11419,13 +11340,6 @@ static struct iw_statistics *rtw_get_wir
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,14))
 	piwstats->qual.updated = IW_QUAL_ALL_UPDATED ;//|IW_QUAL_DBM;
 #else
-#ifdef RTK_DMP_PLATFORM
-	//IW_QUAL_DBM= 0x8, if driver use this flag, wireless extension will show value of dbm.
-	//remove this flag for show percentage 0~100
-	piwstats->qual.updated = 0x07;
-#else
-	piwstats->qual.updated = 0x0f;
-#endif
 #endif
 
 	#ifdef CONFIG_SIGNAL_DISPLAY_DBM
