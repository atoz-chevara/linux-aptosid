From d892bfd61f75ff11c99bd3cfeb9491199562d624 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Wed, 15 May 2013 17:20:28 -0500
Subject: [PATCH 160/210] rtl8192du: Convert endian selection to that of the
 architecture

Now this is done in the Makefile.

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 Makefile                |  5 -----
 core/rtw_recv.c         | 13 -------------
 include/ieee80211_ext.h |  4 ++--
 include/rtl8192d_recv.h |  4 ++--
 include/rtw_io.h        |  4 ++--
 include/rtw_mlme_ext.h  |  4 ++--
 include/rtw_security.h  |  5 ++---
 7 files changed, 10 insertions(+), 29 deletions(-)

--- a/drivers/staging/rtl8192du/Makefile
+++ b/drivers/staging/rtl8192du/Makefile
@@ -112,11 +112,6 @@ endif
 
 SUBARCH := $(shell uname -m | sed -e s/i.86/i386/ | sed -e s/ppc/powerpc/)
 ARCH ?= $(SUBARCH)
-ifeq ($(ARCH), "powerpc")
-EXTRA_CFLAGS += -DCONFIG_BIG_ENDIAN
-else
-EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN
-endif
 CROSS_COMPILE ?=
 KVER  := $(shell uname -r)
 KSRC := /lib/modules/$(KVER)/build
--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -2164,8 +2164,6 @@ union recv_frame *recvframe_chk_defrag(s
 	return prtnframe;
 }
 
-#define ENDIAN_FREE 1
-
 int amsdu_to_msdu(struct rtw_adapter *padapter, union recv_frame *prframe)
 {
 	int a_len, padding_len;
@@ -2193,16 +2191,10 @@ int amsdu_to_msdu(struct rtw_adapter *pa
 
 	while (a_len > ETH_HLEN) {
 		/* Offset 12 denote 2 mac address */
-#ifdef ENDIAN_FREE
-		/* nSubframe_Length = ntohs(*((u16*)(pdata + 12))); */
-		nSubframe_Length = RTW_GET_BE16(pdata + 12);
-#else /*  ENDIAN_FREE */
 		nSubframe_Length = *((u16 *)(pdata + 12));
 		/* m==>change the length order */
 		nSubframe_Length =
 		    (nSubframe_Length >> 8) + (nSubframe_Length << 8);
-		/* ntohs(nSubframe_Length); */
-#endif /*  ENDIAN_FREE */
 
 		if (a_len < (ETHERNET_HEADER_SIZE + nSubframe_Length)) {
 			DBG_8192D
@@ -2262,12 +2254,7 @@ int amsdu_to_msdu(struct rtw_adapter *pa
 	for (i = 0; i < nr_subframes; i++) {
 		sub_skb = subframes[i];
 		/* convert hdr + possible LLC headers into Ethernet header */
-#ifdef ENDIAN_FREE
-		/* eth_type = ntohs(*(u16*)&sub_skb->data[6]); */
 		eth_type = RTW_GET_BE16(&sub_skb->data[6]);
-#else /*  ENDIAN_FREE */
-		eth_type = (sub_skb->data[6] << 8) | sub_skb->data[7];
-#endif /*  ENDIAN_FREE */
 		if (sub_skb->len >= 8 &&
 		    ((_rtw_memcmp(sub_skb->data, rtw_rfc1042_header, SNAP_SIZE) &&
 		     eth_type != ETH_P_AARP && eth_type != ETH_P_IPX) ||
--- a/drivers/staging/rtl8192du/include/ieee80211_ext.h
+++ b/drivers/staging/rtl8192du/include/ieee80211_ext.h
@@ -60,7 +60,7 @@ struct rsn_ie_hdr {
 }__attribute__ ((packed));
 
 struct wme_ac_parameter {
-#if defined(CONFIG_LITTLE_ENDIAN)
+#if defined(__LITTLE_ENDIAN)
 	/* byte 1 */
 	u8	aifsn:4,
 		acm:1,
@@ -70,7 +70,7 @@ struct wme_ac_parameter {
 	/* byte 2 */
 	u8	eCWmin:4,
 		eCWmax:4;
-#elif defined(CONFIG_BIG_ENDIAN)
+#elif defined(__BIG_ENDIAN)
 	/* byte 1 */
 	u8	reserved:1,
 		aci:2,
--- a/drivers/staging/rtl8192du/include/rtl8192d_recv.h
+++ b/drivers/staging/rtl8192du/include/rtl8192d_recv.h
@@ -67,7 +67,7 @@ struct phy_ofdm_rx_status_report_8192cd
 	unsigned char	csi_target_X[2];
 	unsigned char	sigevm;
 	unsigned char	max_ex_pwr;
-#ifdef CONFIG_LITTLE_ENDIAN
+#ifdef __LITTLE_ENDIAN
 	unsigned char ex_intf_flg:1;
 	unsigned char sgi_en:1;
 	unsigned char rxsc:2;
@@ -75,7 +75,7 @@ struct phy_ofdm_rx_status_report_8192cd
 	unsigned char r_ant_train_en:1;
 	unsigned char ANTSELB:1;
 	unsigned char ANTSEL:1;
-#else	/*  _BIG_ENDIAN_ */
+#else	/*  __BIG_ENDIAN */
 	unsigned char ANTSEL:1;
 	unsigned char ANTSELB:1;
 	unsigned char r_ant_train_en:1;
--- a/drivers/staging/rtl8192du/include/rtw_io.h
+++ b/drivers/staging/rtl8192du/include/rtw_io.h
@@ -171,7 +171,7 @@ struct	intf_hdl {
 
 struct reg_protocol_rd {
 
-#ifdef CONFIG_LITTLE_ENDIAN
+#ifdef __LITTLE_ENDIAN
 
 	/* DW1 */
 	u32		NumOfTrans:4;
@@ -227,7 +227,7 @@ struct reg_protocol_rd {
 struct reg_protocol_wt {
 
 
-#ifdef CONFIG_LITTLE_ENDIAN
+#ifdef __LITTLE_ENDIAN
 
 	/* DW1 */
 	u32		NumOfTrans:4;
--- a/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme_ext.h
@@ -809,13 +809,13 @@ struct cmd_hdl wlancmds[] =
 struct C2HEvent_Header
 {
 
-#ifdef CONFIG_LITTLE_ENDIAN
+#ifdef __LITTLE_ENDIAN
 
 	unsigned int len:16;
 	unsigned int ID:8;
 	unsigned int seq:8;
 
-#elif defined(CONFIG_BIG_ENDIAN)
+#elif defined(__BIG_ENDIAN)
 
 	unsigned int seq:8;
 	unsigned int ID:8;
--- a/drivers/staging/rtl8192du/include/rtw_security.h
+++ b/drivers/staging/rtl8192du/include/rtw_security.h
@@ -47,10 +47,9 @@
 #define NDIS802_11AUTHMODEWPA2PSK (NDIS802_11AUTHMODEWPANONE + 2)
 
 union pn48	{
-
 	u64	val;
 
-#ifdef CONFIG_LITTLE_ENDIAN
+#ifdef __LITTLE_ENDIAN
 
 struct {
   u8 TSC0;
@@ -63,7 +62,7 @@ struct {
   u8 TSC7;
 } _byte_;
 
-#elif defined(CONFIG_BIG_ENDIAN)
+#elif defined(__BIG_ENDIAN)
 
 struct {
   u8 TSC7;
