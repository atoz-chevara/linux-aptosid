From cd1498f5c6f35c9c9e92b84b07636080babcd768 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Mon, 10 Mar 2014 15:34:20 -0500
Subject: [PATCH 247/390] rtl8192du: Start fixes to use cfg80211

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_p2p.c           |  5 ++---
 include/autoconf.h       |  2 +-
 include/ioctl_cfg80211.h |  9 ---------
 os_dep/ioctl_cfg80211.c  | 31 +++++++++++++++++--------------
 4 files changed, 20 insertions(+), 27 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_p2p.c
+++ b/drivers/staging/rtl8192du/core/rtw_p2p.c
@@ -1740,11 +1740,10 @@ static void ro_ch_handler(struct rtw_ada
 
 	DBG_8192D("cfg80211_remain_on_channel_expired\n");
 
-	rtw_cfg80211_remain_on_channel_expired(padapter,
+	cfg80211_remain_on_channel_expired(padapter->rtw_wdev,
 		pcfg80211_wdinfo->remain_on_ch_cookie,
 		&pcfg80211_wdinfo->remain_on_ch_channel,
-		pcfg80211_wdinfo->remain_on_ch_type, GFP_KERNEL);
-
+		GFP_KERNEL);
 }
 
 static void ro_ch_timer_process (void *FunctionContext)
--- a/drivers/staging/rtl8192du/include/autoconf.h
+++ b/drivers/staging/rtl8192du/include/autoconf.h
@@ -52,7 +52,7 @@
 	#endif
 #endif
 
-/* define CONFIG_IOCTL_CFG80211 */
+//#define CONFIG_IOCTL_CFG80211
 
 #define RTW_NOTCH_FILTER 0 /* 0:Disable, 1:Enable,*/
 
--- a/drivers/staging/rtl8192du/include/ioctl_cfg80211.h
+++ b/drivers/staging/rtl8192du/include/ioctl_cfg80211.h
@@ -103,13 +103,4 @@ int rtw_cfg80211_set_mgnt_wpsp2pie(struc
 
 bool rtw_cfg80211_pwr_mgmt(struct rtw_adapter *adapter);
 
-#define rtw_cfg80211_rx_mgmt(adapter, freq, sig_dbm, buf, len, gfp) cfg80211_rx_mgmt((adapter)->rtw_wdev, freq, sig_dbm, buf, len, gfp)
-
-#define rtw_cfg80211_send_rx_assoc(adapter, bss, buf, len) cfg80211_send_rx_assoc((adapter)->pnetdev, bss, buf, len)
-
-#define rtw_cfg80211_mgmt_tx_status(adapter, cookie, buf, len, ack, gfp) cfg80211_mgmt_tx_status((adapter)->rtw_wdev, cookie, buf, len, ack, gfp)
-
-#define rtw_cfg80211_ready_on_channel(adapter, cookie, chan, channel_type, duration, gfp)  cfg80211_ready_on_channel((adapter)->rtw_wdev, cookie, chan, duration, gfp)
-#define rtw_cfg80211_remain_on_channel_expired(adapter, cookie, chan, chan_type, gfp) cfg80211_remain_on_channel_expired((adapter)->rtw_wdev, cookie, chan, gfp)
-
 #endif /* __IOCTL_CFG80211_H__ */
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -2268,7 +2268,7 @@ static int cfg80211_rtw_connect(struct w
 	)
 	{
 		u32 wep_key_idx, wep_key_len,wep_total_len;
-		NDIS_802_11_WEP	 *pwep = NULL;
+		struct ndis_802_11_wep *pwep = NULL;
 		DBG_8192D("%s(): Shared/Auto WEP\n",__func__);
 
 		wep_key_idx = sme->key_idx;
@@ -2282,8 +2282,8 @@ static int cfg80211_rtw_connect(struct w
 		if (wep_key_len > 0)
 		{
 			wep_key_len = wep_key_len <= 5 ? 5 : 13;
-			wep_total_len = wep_key_len + FIELD_OFFSET(NDIS_802_11_WEP, KeyMaterial);
-			pwep =(NDIS_802_11_WEP	 *) kmalloc(wep_total_len, GFP_KERNEL);
+			wep_total_len = wep_key_len + FIELD_OFFSET(struct ndis_802_11_wep, KeyMaterial);
+			pwep =(struct ndis_802_11_wep *) kmalloc(wep_total_len, GFP_KERNEL);
 			if (pwep == NULL) {
 				DBG_8192D(" wpa_set_encryption: pwep allocate fail !!!\n");
 				ret = -ENOMEM;
@@ -2547,9 +2547,9 @@ void rtw_cfg80211_indicate_sta_assoc(str
 		freq = rtw_ieee80211_channel_to_frequency(channel, IEEE80211_BAND_5GHZ);
 
 	#ifdef COMPAT_KERNEL_RELEASE
-	rtw_cfg80211_rx_mgmt(padapter, freq, 0, pmgmt_frame, frame_len, GFP_ATOMIC);
+	cfg80211_rx_mgmt(padapter, freq, 0, pmgmt_frame, frame_len, GFP_ATOMIC);
 	#elif !defined(CONFIG_IOCTL_CFG80211)
-	rtw_cfg80211_rx_mgmt(padapter, freq, 0, pmgmt_frame, frame_len, GFP_ATOMIC);
+	cfg80211_rx_mgmt(padapter, freq, 0, pmgmt_frame, frame_len, GFP_ATOMIC);
 	#else /* COMPAT_KERNEL_RELEASE */
 	{
 		/* to avoid WARN_ON(wdev->iftype != NL80211_IFTYPE_STATION)  when calling cfg80211_send_rx_assoc() */
@@ -2579,9 +2579,9 @@ void rtw_cfg80211_indicate_sta_disassoc(
 	DBG_8192D("%s(padapter=%p,%s)\n", __func__, padapter, ndev->name);
 
 #if defined(RTW_USE_CFG80211_STA_EVENT) || defined(COMPAT_KERNEL_RELEASE)
-	xcfg80211_del_sta(ndev, da, GFP_ATOMIC);
+	cfg80211_del_sta(ndev, da, GFP_ATOMIC);
 #else /* defined(RTW_USE_CFG80211_STA_EVENT) */
-	ychannel = pmlmeext->cur_channel;
+	channel = pmlmeext->cur_channel;
 	if (channel <= RTW_CH_MAX_2G_CHANNEL)
 		freq = rtw_ieee80211_channel_to_frequency(channel, IEEE80211_BAND_2GHZ);
 	else
@@ -2608,9 +2608,9 @@ void rtw_cfg80211_indicate_sta_disassoc(
 	pmgmt_frame = rtw_set_fixed_ie(pmgmt_frame, _RSON_CODE_ , (unsigned char *)&reason, &frame_len);
 
 	#ifdef COMPAT_KERNEL_RELEASE
-	rtw_cfg80211_rx_mgmt(padapter, freq, 0, mgmt_buf, frame_len, GFP_ATOMIC);
+	cfg80211_rx_mgmt(padapter->rtw_wdev, freq, 0, mgmt_buf, frame_len, flags, GFP_ATOMIC);
 	#elif !defined(CONFIG_IOCTL_CFG80211)
-	rtw_cfg80211_rx_mgmt(padapter, freq, 0, mgmt_buf, frame_len, GFP_ATOMIC);
+	cfg80211_rx_mgmt(padapter->rtw_wdev, freq, 0, mgmt_buf, frame_len, flags, GFP_ATOMIC);
 	#else /* COMPAT_KERNEL_RELEASE */
 	cfg80211_send_disassoc(padapter->pnetdev, mgmt_buf, frame_len);
 	#endif /* COMPAT_KERNEL_RELEASE */
@@ -3220,6 +3220,7 @@ void rtw_cfg80211_rx_action_p2p(struct r
 	int channel;
 	struct mlme_ext_priv *pmlmeext = &(padapter->mlmeextpriv);
 	u8 category, action;
+	u32 flags = 0;		/* FIX ME */
 
 	channel = rtw_get_oper_ch(padapter);
 
@@ -3238,7 +3239,7 @@ indicate:
 	else
 		freq = rtw_ieee80211_channel_to_frequency(channel, IEEE80211_BAND_5GHZ);
 
-	rtw_cfg80211_rx_mgmt(padapter, freq, 0, pmgmt_frame, frame_len, GFP_ATOMIC);
+	cfg80211_rx_mgmt(padapter->rtw_wdev, freq, 0, pmgmt_frame, frame_len, flags, GFP_ATOMIC);
 }
 
 void rtw_cfg80211_rx_p2p_action_public(struct rtw_adapter *padapter, u8 *pmgmt_frame, uint frame_len)
@@ -3248,6 +3249,7 @@ void rtw_cfg80211_rx_p2p_action_public(s
 	int channel;
 	struct mlme_ext_priv *pmlmeext = &(padapter->mlmeextpriv);
 	u8 category, action;
+	u32 flags = 0; /*FIX ME */
 
 	channel = rtw_get_oper_ch(padapter);
 
@@ -3272,7 +3274,7 @@ indicate:
 	else
 		freq = rtw_ieee80211_channel_to_frequency(channel, IEEE80211_BAND_5GHZ);
 
-	rtw_cfg80211_rx_mgmt(padapter, freq, 0, pmgmt_frame, frame_len, GFP_ATOMIC);
+	cfg80211_rx_mgmt(padapter->rtw_wdev, freq, 0, pmgmt_frame, frame_len, flags, GFP_ATOMIC);
 }
 
 void rtw_cfg80211_rx_action(struct rtw_adapter *adapter, u8 *frame, uint frame_len, const char*msg)
@@ -3282,6 +3284,7 @@ void rtw_cfg80211_rx_action(struct rtw_a
 	struct mlme_ext_priv *pmlmeext = &(adapter->mlmeextpriv);
 	struct rtw_wdev_priv *pwdev_priv = wdev_to_priv(adapter->rtw_wdev);
 	u8 category, action;
+	u32 flags = 0;		/* FIX ME */
 
 	channel = rtw_get_oper_ch(adapter);
 
@@ -3298,7 +3301,7 @@ void rtw_cfg80211_rx_action(struct rtw_a
 	else
 		freq = rtw_ieee80211_channel_to_frequency(channel, IEEE80211_BAND_5GHZ);
 
-	rtw_cfg80211_rx_mgmt(adapter, freq, 0, frame, frame_len, GFP_ATOMIC);
+	cfg80211_rx_mgmt(adapter->rtw_wdev, freq, 0, frame, frame_len, flags, GFP_ATOMIC);
 }
 
 #ifdef CONFIG_P2P
@@ -3627,7 +3630,7 @@ static s32 cfg80211_rtw_remain_on_channe
 	}
 #endif
 
-	rtw_cfg80211_ready_on_channel(padapter, *cookie, channel, channel_type, duration, GFP_KERNEL);
+	cfg80211_ready_on_channel(padapter->rtw_wdev, *cookie, channel, duration, GFP_KERNEL);
 
 	pwdinfo->listen_channel = pmlmeext->cur_channel;
 
@@ -3824,7 +3827,7 @@ static int cfg80211_rtw_mgmt_tx(struct w
 #endif /* CONFIG_DEBUG_CFG80211 */
 
 	/* indicate ack before issue frame to avoid racing with rsp frame */
-	rtw_cfg80211_mgmt_tx_status(padapter, *cookie, buf, len, ack, GFP_KERNEL);
+	cfg80211_mgmt_tx_status(padapter->rtw_wdev, *cookie, buf, len, ack, GFP_KERNEL);
 
 	if (rtw_action_frame_parse(buf, len, &category, &action) == false) {
 		DBG_8192D(FUNC_ADPT_FMT" frame_control:0x%x\n", FUNC_ADPT_ARG(padapter),
