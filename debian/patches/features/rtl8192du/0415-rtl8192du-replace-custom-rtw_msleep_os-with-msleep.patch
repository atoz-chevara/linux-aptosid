From f2d1b12ef5bb98d366b02c0b69e9d0a4d9124263 Mon Sep 17 00:00:00 2001
From: Stefan Lippers-Hollmann <s.l-h@gmx.de>
Date: Sat, 22 Mar 2014 03:03:13 +0100
Subject: [PATCH 415/456] rtl8192du: replace custom rtw_msleep_os() with
 msleep()

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
---
 core/rtw_cmd.c          |  2 +-
 core/rtw_mlme.c         |  2 +-
 core/rtw_mlme_ext.c     | 16 ++++++++--------
 core/rtw_pwrctrl.c      |  4 ++--
 core/rtw_xmit.c         |  4 ++--
 hal/rtl8192d_cmd.c      |  4 ++--
 hal/rtl8192d_dm.c       |  2 +-
 hal/rtl8192d_phycfg.c   |  2 +-
 hal/usb_halinit.c       |  6 +++---
 include/osdep_service.h |  1 -
 os_dep/ioctl_linux.c    |  6 +++---
 os_dep/osdep_service.c  |  5 -----
 12 files changed, 24 insertions(+), 30 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -1765,7 +1765,7 @@ static void rtw_chk_hi_queue_hdl(struct
 
 	if (psta_bmc->sleepq_len == 0) {
 		while ((rtw_read32(padapter, 0x414)&0x00ffff00) != 0) {
-			rtw_msleep_os(100);
+			msleep(100);
 			cnt++;
 			if (cnt > 10)
 				break;
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -1173,7 +1173,7 @@ void rtw_scan_abort(struct rtw_adapter *
 
 		DBG_8192D(FUNC_NDEV_FMT "fw_state=_FW_UNDER_SURVEY!\n",
 			  FUNC_NDEV_ARG(adapter->pnetdev));
-		rtw_msleep_os(20);
+		msleep(20);
 	}
 
 	if (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY)) {
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -4676,7 +4676,7 @@ int issue_probereq_p2p_ex(struct rtw_ada
 			break;
 
 		if (i < try_cnt && wait_ms > 0 && ret == _FAIL)
-			rtw_msleep_os(wait_ms);
+			msleep(wait_ms);
 
 	} while ((i < try_cnt) && ((ret == _FAIL) || (wait_ms == 0)));
 
@@ -6302,7 +6302,7 @@ int issue_probereq_ex(struct rtw_adapter
 			break;
 
 		if (i < try_cnt && wait_ms > 0 && ret == _FAIL)
-			rtw_msleep_os(wait_ms);
+			msleep(wait_ms);
 
 	} while ((i < try_cnt) && ((ret == _FAIL) || (wait_ms == 0)));
 
@@ -7225,7 +7225,7 @@ int issue_nulldata(struct rtw_adapter *a
 			break;
 
 		if (i < try_cnt && wait_ms > 0 && ret == _FAIL)
-			rtw_msleep_os(wait_ms);
+			msleep(wait_ms);
 
 	} while ((i < try_cnt) && ((ret == _FAIL) || (wait_ms == 0)));
 
@@ -7358,7 +7358,7 @@ int issue_qos_nulldata(struct rtw_adapte
 			break;
 
 		if (i < try_cnt && wait_ms > 0 && ret == _FAIL)
-			rtw_msleep_os(wait_ms);
+			msleep(wait_ms);
 
 	} while ((i < try_cnt) && ((ret == _FAIL) || (wait_ms == 0)));
 
@@ -7482,7 +7482,7 @@ int issue_deauth_ex(struct rtw_adapter *
 			break;
 
 		if (i < try_cnt && wait_ms > 0 && ret == _FAIL)
-			rtw_msleep_os(wait_ms);
+			msleep(wait_ms);
 
 	} while ((i < try_cnt) && ((ret == _FAIL) || (wait_ms == 0)));
 
@@ -8117,7 +8117,7 @@ void site_survey(struct rtw_adapter *ada
 								 sitesurvey_res.
 								 ssid[i]),
 							       NULL);
-						/* rtw_msleep_os(SURVEY_TO>>1); */
+						/* msleep(SURVEY_TO>>1); */
 						issue_probereq(adapt,
 							       &(pmlmeext->
 								 sitesurvey_res.
@@ -8132,7 +8132,7 @@ void site_survey(struct rtw_adapter *ada
 				    SCAN_ACTIVE) {
 					/* todo: to issue two probe req??? */
 					issue_probereq(adapt, NULL, NULL);
-					/* rtw_msleep_os(SURVEY_TO>>1); */
+					/* msleep(SURVEY_TO>>1); */
 					issue_probereq(adapt, NULL, NULL);
 				}
 			}
@@ -10533,7 +10533,7 @@ u8 tx_beacon_hdl(struct rtw_adapter *ada
 			return H2C_SUCCESS;
 
 		if ((pstapriv->tim_bitmap & BIT(0)) && (psta_bmc->sleepq_len > 0)) {
-			rtw_msleep_os(10);	/*  10ms, ATIM(HIQ) Windows */
+			msleep(10);	/*  10ms, ATIM(HIQ) Windows */
 			spin_lock_bh(&psta_bmc->sleep_q.lock);
 
 			xmitframe_phead = get_list_head(&psta_bmc->sleep_q);
--- a/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
+++ b/drivers/staging/rtl8192du/core/rtw_pwrctrl.c
@@ -515,7 +515,7 @@ int _rtw_pwr_wakeup(struct rtw_adapter *
 		DBG_8192D("%s wait ps_processing...\n", __func__);
 		while (pwrpriv->ps_processing &&
 		       rtw_get_passing_time_ms(start) <= 3000)
-			rtw_msleep_os(10);
+			msleep(10);
 		if (pwrpriv->ps_processing)
 			DBG_8192D("%s wait ps_processing timeout\n", __func__);
 		else
@@ -526,7 +526,7 @@ int _rtw_pwr_wakeup(struct rtw_adapter *
 		DBG_8192D("%s wait bInSuspend...\n", __func__);
 		while (pwrpriv->bInSuspend &&
 		       ((rtw_get_passing_time_ms(start) <= 3000)))
-			rtw_msleep_os(10);
+			msleep(10);
 		if (pwrpriv->bInSuspend)
 			DBG_8192D("%s wait bInSuspend timeout\n", __func__);
 		else
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -645,7 +645,7 @@ static s32 xmitframe_addmic(struct rtw_a
 			} else {
 				if (_rtw_memcmp(&stainfo->dot11tkiptxmickey.skey[0], null_key, 16) == true) {
 					/* DbgPrint("\nxmitframe_addmic:stainfo->dot11tkiptxmickey == 0\n"); */
-					/* rtw_msleep_os(10); */
+					/* msleep(10); */
 					return _FAIL;
 				}
 				/* start to calculate the mic code */
@@ -2139,7 +2139,7 @@ static int rtw_ack_tx_polling(struct xmi
 			break;
 		}
 
-		rtw_msleep_os(10);
+		msleep(10);
 	} while (rtw_get_passing_time_ms(pack_tx_ops->submit_time) < timeout_ms);
 
 	if (pack_tx_ops->status == RTW_SCTX_SUBMITTED) {
--- a/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_cmd.c
@@ -848,7 +848,7 @@ int reset_tsf(struct rtw_adapter * adapt
 	rtl8192d_reset_tsf(adapter, reset_port);
 
 	while ((reset_cnt_after == reset_cnt_before) && (loop_cnt < 10)) {
-		rtw_msleep_os(100);
+		msleep(100);
 		loop_cnt++;
 		reset_cnt_after = rtw_read8(adapter, reg_reset_tsf_cnt);
 	}
@@ -887,7 +887,7 @@ void rtl8192d_set_wowlan_cmd(struct rtw_
 		{
 			tasklet_schedule(&precvpriv->recv_tasklet);
 			test = rtw_read8(padapter, REG_RXPKT_NUM+2) & BIT(1);
-			rtw_msleep_os(10);
+			msleep(10);
 		}
 		/* mask usb se0 reset by Alex and DD */
 		test = rtw_read8(padapter, 0xf8);
--- a/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_dm.c
@@ -2091,7 +2091,7 @@ static void	dm_CheckPbcGPIO(struct rtw_a
 		bPbcPressed = true;
 
 		if (i<=3)
-			rtw_msleep_os(50);
+			msleep(50);
 	}
 	}while (i<=3 && bPbcPressed == true);
 
--- a/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192d_phycfg.c
@@ -4758,7 +4758,7 @@ rtl8192d_PHY_LCCalibrate(
 		pmlmeprivBuddyadapter = &Buddyadapter->mlmepriv;
 		while ((check_fwstate(pmlmeprivBuddyadapter, _FW_UNDER_LINKING|_FW_UNDER_SURVEY) == true) && timecount < timeout)
 		{
-			rtw_msleep_os(50);
+			msleep(50);
 			timecount += 50;
 		}
 	}
--- a/drivers/staging/rtl8192du/hal/usb_halinit.c
+++ b/drivers/staging/rtl8192du/hal/usb_halinit.c
@@ -4283,13 +4283,13 @@ static void SetHwReg8192DU(struct rtw_ad
 						if (adapter->pwrctrlpriv.wowlan_pattern == true)
 							rtw_wowlan_reload_pattern(adapter);
 						rtl8192d_set_wowlan_cmd(adapter);
-						rtw_msleep_os(10);
+						msleep(10);
 						break;
 
 					case WOWLAN_DISABLE:
 						adapter->pwrctrlpriv.wowlan_mode = false;
 						rtl8192d_set_wowlan_cmd(adapter);
-						rtw_msleep_os(10);
+						msleep(10);
 						break;
 
 					case WOWLAN_STATUS:
@@ -4343,7 +4343,7 @@ static void SetHwReg8192DU(struct rtw_ad
 				{
 					if (rtw_read32(adapter, 0x200) != rtw_read32(adapter, 0x204))
 					{
-						rtw_msleep_os(10);
+						msleep(10);
 					}
 					else
 					{
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -204,7 +204,6 @@ s32	rtw_get_time_interval_ms(u32 start,
 
 void	rtw_sleep_schedulable(int ms);
 
-void	rtw_msleep_os(int ms);
 void	rtw_usleep_os(int us);
 
 u32	rtw_atoi(u8* s);
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -1466,7 +1466,7 @@ static int rtw_wx_get_scan(struct net_de
 #ifdef CONFIG_DUALMAC_CONCURRENT
 	while (dc_check_fwstate(padapter, wait_status) == true)
 	{
-		rtw_msleep_os(30);
+		msleep(30);
 		cnt++;
 		if (cnt > wait_for_surveydone)
 			break;
@@ -1475,7 +1475,7 @@ static int rtw_wx_get_scan(struct net_de
 
 	while (check_fwstate(pmlmepriv, wait_status) == true)
 	{
-		rtw_msleep_os(30);
+		msleep(30);
 		cnt++;
 		if (cnt > wait_for_surveydone)
 			break;
@@ -2657,7 +2657,7 @@ static int rtw_get_ap_info(struct net_de
 	}
 
 	while (check_fwstate(pmlmepriv, (_FW_UNDER_SURVEY|_FW_UNDER_LINKING))) {
-		rtw_msleep_os(30);
+		msleep(30);
 		cnt++;
 		if (cnt > 100)
 			break;
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -193,11 +193,6 @@ void rtw_sleep_schedulable(int ms)
     return;
 }
 
-void rtw_msleep_os(int ms)
-{
-	msleep((unsigned int)ms);
-}
-
 void rtw_usleep_os(int us)
 {
       if (1 < (us/1000))
