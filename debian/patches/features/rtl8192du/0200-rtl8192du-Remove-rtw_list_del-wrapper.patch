From 291cd45b9d3df97ddedc7bf98852277512e79dcb Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Mon, 17 Feb 2014 16:28:20 -0600
Subject: [PATCH 200/390] rtl8192du: Remove rtw_list_del wrapper

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c           | 12 ++++++------
 core/rtw_cmd.c          |  4 ++--
 core/rtw_mlme.c         | 10 +++++-----
 core/rtw_mlme_ext.c     | 10 +++++-----
 core/rtw_recv.c         | 18 +++++++++---------
 core/rtw_sta_mgt.c      | 16 ++++++++--------
 core/rtw_tdls.c         |  2 +-
 core/rtw_xmit.c         | 38 +++++++++++++++++++-------------------
 hal/rtl8192du_xmit.c    |  4 ++--
 include/osdep_service.h |  6 ------
 os_dep/ioctl_cfg80211.c |  2 +-
 os_dep/ioctl_linux.c    |  2 +-
 os_dep/osdep_service.c  |  4 +---
 13 files changed, 60 insertions(+), 68 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -297,7 +297,7 @@ void	expire_timeout_chk(struct rtw_adapt
 		if (psta->expire_to > 0) {
 			psta->expire_to--;
 			if (psta->expire_to == 0) {
-				rtw_list_delete(&psta->auth_list);
+				list_del_init(&psta->auth_list);
 				pstapriv->auth_list_cnt--;
 
 				DBG_8192D("auth expire %02X%02X%02X%02X%02X%02X\n",
@@ -393,7 +393,7 @@ void	expire_timeout_chk(struct rtw_adapt
 			}
 			#endif /* CONFIG_ACTIVE_KEEP_ALIVE_CHECK */
 
-			rtw_list_delete(&psta->asoc_list);
+			list_del_init(&psta->asoc_list);
 			pstapriv->asoc_list_cnt--;
 
 			DBG_8192D("asoc expire %pM, state = 0x%x\n", psta->hwaddr, psta->state);
@@ -451,7 +451,7 @@ void	expire_timeout_chk(struct rtw_adapt
 
 			DBG_8192D("asoc expire %pM, state = 0x%x\n", psta->hwaddr, psta->state);
 			spin_lock_bh(&pstapriv->asoc_list_lock);
-			rtw_list_delete(&psta->asoc_list);
+			list_del_init(&psta->asoc_list);
 			pstapriv->asoc_list_cnt--;
 			updated = ap_free_sta(padapter, psta, true, WLAN_REASON_DEAUTH_LEAVING);
 			spin_unlock_bh(&pstapriv->asoc_list_lock);
@@ -1364,7 +1364,7 @@ int rtw_acl_remove_sta(struct rtw_adapte
 			if (paclnode->valid) {
 				paclnode->valid = false;
 
-				rtw_list_delete(&paclnode->list);
+				list_del_init(&paclnode->list);
 
 				pacl_list->num--;
 			}
@@ -2002,7 +2002,7 @@ int rtw_sta_flush(struct rtw_adapter *pa
 
 		plist = plist->next;
 
-		rtw_list_delete(&psta->asoc_list);
+		list_del_init(&psta->asoc_list);
 		pstapriv->asoc_list_cnt--;
 
 		ap_free_sta(padapter, psta, true, WLAN_REASON_DEAUTH_LEAVING);
@@ -2133,7 +2133,7 @@ void stop_ap_mode(struct rtw_adapter *pa
 		if (paclnode->valid) {
 			paclnode->valid = false;
 
-			rtw_list_delete(&paclnode->list);
+			list_del_init(&paclnode->list);
 
 			pacl_list->num--;
 		}
--- a/drivers/staging/rtl8192du/core/rtw_cmd.c
+++ b/drivers/staging/rtl8192du/core/rtw_cmd.c
@@ -191,7 +191,7 @@ struct cmd_obj *_rtw_dequeue_cmd(struct
 		obj = NULL;
 	} else {
 		obj = container_of((&queue->queue)->next, struct cmd_obj, list);
-		rtw_list_delete(&obj->list);
+		list_del_init(&obj->list);
 	}
 
 	spin_unlock_irqrestore(&queue->lock, flags);
@@ -472,7 +472,7 @@ struct evt_obj *rtw_dequeue_evt(_queue *
 		pevtobj = NULL;
 	} else {
 		pevtobj = container_of(&(queue->queue->next; struct evt_obj, list);
-		rtw_list_delete(&pevtobj->list);
+		list_del_init(&pevtobj->list);
 	}
 
 	spin_unlock_bh(&queue->lock);
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -195,7 +195,7 @@ struct wlan_network *_rtw_dequeue_networ
 		    container_of((&queue->queue)->next, struct wlan_network,
 				   list);
 
-		rtw_list_delete(&(pnetwork->list));
+		list_del_init(&(pnetwork->list));
 	}
 
 	spin_unlock_bh(&queue->lock);
@@ -219,7 +219,7 @@ struct wlan_network *_rtw_alloc_network(
 
 	pnetwork = container_of(plist, struct wlan_network, list);
 
-	rtw_list_delete(&pnetwork->list);
+	list_del_init(&pnetwork->list);
 
 	RT_TRACE(_module_rtl871x_mlme_c_, _drv_info_,
 		 ("_rtw_alloc_network: ptr=%p\n", plist));
@@ -265,7 +265,7 @@ void _rtw_free_network(struct mlme_priv
 
 	spin_lock_bh(&free_queue->lock);
 
-	rtw_list_delete(&(pnetwork->list));
+	list_del_init(&(pnetwork->list));
 
 	rtw_list_insert_tail(&(pnetwork->list), &(free_queue->queue));
 
@@ -285,7 +285,7 @@ void _rtw_free_network_nolock(struct mlm
 	if (pnetwork->fixed == true)
 		return;
 
-	rtw_list_delete(&(pnetwork->list));
+	list_del_init(&(pnetwork->list));
 
 	rtw_list_insert_tail(&(pnetwork->list), get_list_head(free_queue));
 
@@ -1134,7 +1134,7 @@ static void free_scanqueue(struct mlme_p
 
 	while (plist != phead) {
 		ptemp = plist->next;
-		rtw_list_delete(plist);
+		list_del_init(plist);
 		rtw_list_insert_tail(plist, &free_queue->queue);
 		plist = ptemp;
 		pmlmepriv->num_of_scanned--;
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -1139,7 +1139,7 @@ unsigned int OnAuth(struct rtw_adapter *
 	} else {
 		spin_lock_bh(&pstapriv->asoc_list_lock);
 		if (rtw_is_list_empty(&pstat->asoc_list) == false) {
-			rtw_list_delete(&pstat->asoc_list);
+			list_del_init(&pstat->asoc_list);
 			pstapriv->asoc_list_cnt--;
 			if (pstat->expire_to > 0) {
 				/* TODO: STA re_auth within expire_to */
@@ -1826,7 +1826,7 @@ unsigned int OnAssocReq(struct rtw_adapt
 
 	spin_lock_bh(&pstapriv->auth_list_lock);
 	if (!rtw_is_list_empty(&pstat->auth_list)) {
-		rtw_list_delete(&pstat->auth_list);
+		list_del_init(&pstat->auth_list);
 		pstapriv->auth_list_cnt--;
 	}
 	spin_unlock_bh(&pstapriv->auth_list_lock);
@@ -2063,7 +2063,7 @@ unsigned int OnDeAuth(struct rtw_adapter
 
 			spin_lock_bh(&pstapriv->asoc_list_lock);
 			if (rtw_is_list_empty(&psta->asoc_list) == false) {
-				rtw_list_delete(&psta->asoc_list);
+				list_del_init(&psta->asoc_list);
 				pstapriv->asoc_list_cnt--;
 				updated =
 				    ap_free_sta(adapt, psta, false, reason);
@@ -2128,7 +2128,7 @@ unsigned int OnDisassoc(struct rtw_adapt
 
 			spin_lock_bh(&pstapriv->asoc_list_lock);
 			if (rtw_is_list_empty(&psta->asoc_list) == false) {
-				rtw_list_delete(&psta->asoc_list);
+				list_del_init(&psta->asoc_list);
 				pstapriv->asoc_list_cnt--;
 				updated =
 				    ap_free_sta(adapt, psta, false, reason);
@@ -11390,7 +11390,7 @@ u8 tx_beacon_hdl(struct rtw_adapter *ada
 
 				xmitframe_plist = xmitframe_plist->next;
 
-				rtw_list_delete(&pxmitframe->list);
+				list_del_init(&pxmitframe->list);
 
 				psta_bmc->sleepq_len--;
 				if (psta_bmc->sleepq_len > 0)
--- a/drivers/staging/rtl8192du/core/rtw_recv.c
+++ b/drivers/staging/rtl8192du/core/rtw_recv.c
@@ -237,7 +237,7 @@ int rtw_free_recvframe(struct recv_frame
 
 	spin_lock_bh(&pfree_recv_queue->lock);
 
-	rtw_list_delete(&(precvframe->list));
+	list_del_init(&(precvframe->list));
 
 	rtw_list_insert_tail(&(precvframe->list),
 			     get_list_head(pfree_recv_queue));
@@ -262,7 +262,7 @@ int _rtw_enqueue_recvframe(struct recv_f
 
 
 	/* INIT_LIST_HEAD(&(precvframe->list)); */
-	rtw_list_delete(&(precvframe->list));
+	list_del_init(&(precvframe->list));
 
 	rtw_list_insert_tail(&(precvframe->list), get_list_head(queue));
 
@@ -343,7 +343,7 @@ int rtw_enqueue_recvbuf_to_head(struct r
 
 	spin_lock_irqsave(&queue->lock, irqL);
 
-	rtw_list_delete(&precvbuf->list);
+	list_del_init(&precvbuf->list);
 	rtw_list_insert_head(&precvbuf->list, get_list_head(queue));
 
 	spin_unlock_irqrestore(&queue->lock, irqL);
@@ -357,7 +357,7 @@ int rtw_enqueue_recvbuf(struct recv_buf
 
 	spin_lock_irqsave(&queue->lock, irqL);
 
-	rtw_list_delete(&precvbuf->list);
+	list_del_init(&precvbuf->list);
 
 	rtw_list_insert_tail(&precvbuf->list, get_list_head(queue));
 
@@ -383,7 +383,7 @@ struct recv_buf *rtw_dequeue_recvbuf(str
 
 		precvbuf = container_of(plist, struct recv_buf, list);
 
-		rtw_list_delete(&precvbuf->list);
+		list_del_init(&precvbuf->list);
 	}
 	spin_unlock_irqrestore(&queue->lock, irqL);
 	return precvbuf;
@@ -1515,7 +1515,7 @@ static int validate_recv_ctrl_frame(stru
 
 				xmitframe_plist = xmitframe_plist->next;
 
-				rtw_list_delete(&pxmitframe->list);
+				list_del_init(&pxmitframe->list);
 
 				psta->sleepq_len--;
 
@@ -1972,7 +1972,7 @@ static struct recv_frame_hdr *recvframe_
 	plist = phead->next;
 	prframe = container_of(plist, struct recv_frame_hdr, list);
 	pfhdr = prframe;
-	rtw_list_delete(&(prframe->list));
+	list_del_init(&(prframe->list));
 
 	if (curfragnum != pfhdr->attrib.frag_num) {
 		/* the first fragment number must be 0 */
@@ -2402,7 +2402,7 @@ static int enqueue_reorder_recvframe(str
 		else
 			break;
 	}
-	rtw_list_delete(&(prframe->list));
+	list_del_init(&(prframe->list));
 	rtw_list_insert_tail(&(prframe->list), plist);
 	return true;
 }
@@ -2453,7 +2453,7 @@ static int recv_indicatepkts_in_order(st
 				  pattrib->amsdu));
 
 			plist = plist->next;
-			rtw_list_delete(&(prframe->list));
+			list_del_init(&(prframe->list));
 
 			if (SN_EQUAL
 			    (preorder_ctrl->indicate_seq, pattrib->seq_num)) {
--- a/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
+++ b/drivers/staging/rtl8192du/core/rtw_sta_mgt.c
@@ -282,7 +282,7 @@ struct	sta_info *rtw_alloc_stainfo(struc
 		psta = container_of((&pfree_sta_queue->queue)->next,
 				    struct sta_info, list);
 
-		rtw_list_delete(&(psta->list));
+		list_del_init(&(psta->list));
 
 		spin_unlock_bh(&(pfree_sta_queue->lock));
 
@@ -394,23 +394,23 @@ u32	rtw_free_stainfo(struct rtw_adapter
 
 	rtw_free_xmitframe_queue(pxmitpriv, &pstaxmitpriv->vo_q.sta_pending);
 
-	rtw_list_delete(&(pstaxmitpriv->vo_q.tx_pending));
+	list_del_init(&(pstaxmitpriv->vo_q.tx_pending));
 
 	rtw_free_xmitframe_queue(pxmitpriv, &pstaxmitpriv->vi_q.sta_pending);
 
-	rtw_list_delete(&(pstaxmitpriv->vi_q.tx_pending));
+	list_del_init(&(pstaxmitpriv->vi_q.tx_pending));
 
 	rtw_free_xmitframe_queue(pxmitpriv, &pstaxmitpriv->bk_q.sta_pending);
 
-	rtw_list_delete(&(pstaxmitpriv->bk_q.tx_pending));
+	list_del_init(&(pstaxmitpriv->bk_q.tx_pending));
 
 	rtw_free_xmitframe_queue(pxmitpriv, &pstaxmitpriv->be_q.sta_pending);
 
-	rtw_list_delete(&(pstaxmitpriv->be_q.tx_pending));
+	list_del_init(&(pstaxmitpriv->be_q.tx_pending));
 
 	spin_unlock_bh(&pxmitpriv->lock);
 
-	rtw_list_delete(&psta->hash_list);
+	list_del_init(&psta->hash_list);
 	RT_TRACE(_module_rtl871x_sta_mgt_c_, _drv_err_,
 		 ("\n free number_%d stainfo  with hwaddr = 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x\n",
 		 pstapriv->asoc_sta_count, psta->hwaddr[0], psta->hwaddr[1],
@@ -456,7 +456,7 @@ u32	rtw_free_stainfo(struct rtw_adapter
 
 			plist = plist->next;
 
-			rtw_list_delete(&(prframe->list));
+			list_del_init(&(prframe->list));
 
 			rtw_free_recvframe(prframe, free_recv_q);
 		}
@@ -467,7 +467,7 @@ u32	rtw_free_stainfo(struct rtw_adapter
 
 	spin_lock_bh(&pstapriv->auth_list_lock);
 	if (!rtw_is_list_empty(&psta->auth_list)) {
-		rtw_list_delete(&psta->auth_list);
+		list_del_init(&psta->auth_list);
 		pstapriv->auth_list_cnt--;
 	}
 	spin_unlock_bh(&pstapriv->auth_list_lock);
--- a/drivers/staging/rtl8192du/core/rtw_tdls.c
+++ b/drivers/staging/rtl8192du/core/rtw_tdls.c
@@ -1557,7 +1557,7 @@ int On_TDLS_Peer_Traffic_Rsp(_adapter *a
 			while ((rtw_end_of_queue_search(xmitframe_phead, xmitframe_plist)) == false) {
 				pxmitframe = container_of(xmitframe_plist, struct xmit_frame, list);
 				xmitframe_plist = xmitframe_plist->next;
-				rtw_list_delete(&pxmitframe->list);
+				list_del_init(&pxmitframe->list);
 
 				ptdls_sta->sleepq_len--;
 				if (ptdls_sta->sleepq_len > 0) {
--- a/drivers/staging/rtl8192du/core/rtw_xmit.c
+++ b/drivers/staging/rtl8192du/core/rtw_xmit.c
@@ -1566,7 +1566,7 @@ struct xmit_buf *rtw_alloc_xmitbuf_ext(s
 
 		pxmitbuf = container_of(plist, struct xmit_buf, list);
 
-		rtw_list_delete(&(pxmitbuf->list));
+		list_del_init(&(pxmitbuf->list));
 	}
 	if (pxmitbuf !=  NULL) {
 		pxmitpriv->free_xmit_extbuf_cnt--;
@@ -1594,7 +1594,7 @@ s32 rtw_free_xmitbuf_ext(struct xmit_pri
 
 	spin_lock_irqsave(&pfree_queue->lock, flags);
 
-	rtw_list_delete(&pxmitbuf->list);
+	list_del_init(&pxmitbuf->list);
 
 	rtw_list_insert_tail(&(pxmitbuf->list), get_list_head(pfree_queue));
 	pxmitpriv->free_xmit_extbuf_cnt++;
@@ -1627,7 +1627,7 @@ struct xmit_buf *rtw_alloc_xmitbuf(struc
 
 		pxmitbuf = container_of(plist, struct xmit_buf, list);
 
-		rtw_list_delete(&(pxmitbuf->list));
+		list_del_init(&(pxmitbuf->list));
 	}
 
 	if (pxmitbuf !=  NULL) {
@@ -1672,7 +1672,7 @@ s32 rtw_free_xmitbuf(struct xmit_priv *p
 	} else {
 		spin_lock_irqsave(&pfree_xmitbuf_queue->lock, flags);
 
-		rtw_list_delete(&pxmitbuf->list);
+		list_del_init(&pxmitbuf->list);
 
 		rtw_list_insert_tail(&(pxmitbuf->list), get_list_head(pfree_xmitbuf_queue));
 
@@ -1724,7 +1724,7 @@ struct xmit_frame *rtw_alloc_xmitframe(s
 
 		pxframe = container_of(plist, struct xmit_frame, list);
 
-		rtw_list_delete(&(pxframe->list));
+		list_del_init(&(pxframe->list));
 	}
 
 	if (pxframe !=  NULL) {
@@ -1776,7 +1776,7 @@ s32 rtw_free_xmitframe(struct xmit_priv
 
 	spin_lock_bh(&pfree_xmit_queue->lock);
 
-	rtw_list_delete(&pxmitframe->list);
+	list_del_init(&pxmitframe->list);
 
 	if (pxmitframe->pkt) {
 		pndis_pkt = pxmitframe->pkt;
@@ -1844,7 +1844,7 @@ static struct xmit_frame *dequeue_one_xm
 
 		xmitframe_plist = xmitframe_plist->next;
 
-		rtw_list_delete(&pxmitframe->list);
+		list_del_init(&pxmitframe->list);
 
 		ptxservq->qcnt--;
 	}
@@ -1907,7 +1907,7 @@ struct xmit_frame *rtw_dequeue_xframe(st
 
 				/* Remove sta node when there is no pending packets. */
 				if (_rtw_queue_empty(pframe_queue)) /* must be done after and before break */
-					rtw_list_delete((&ptxservq->tx_pending)->next);
+					list_del_init((&ptxservq->tx_pending)->next);
 				goto exit;
 			}
 			sta_plist = sta_plist->next;
@@ -2280,7 +2280,7 @@ int xmitframe_enqueue_for_tdls_sleeping_
 		spin_lock_bh(&ptdls_sta->sleep_q.lock);
 
 		if (ptdls_sta->state&WIFI_SLEEP_STATE) {
-			rtw_list_delete(&pxmitframe->list);
+			list_del_init(&pxmitframe->list);
 
 			rtw_list_insert_tail(&pxmitframe->list, get_list_head(&ptdls_sta->sleep_q));
 
@@ -2359,7 +2359,7 @@ int xmitframe_enqueue_for_sleeping_sta(s
 		spin_lock_bh(&psta->sleep_q.lock);
 
 		if (pstapriv->sta_dz_bitmap) {/* if anyone sta is in ps mode */
-			rtw_list_delete(&pxmitframe->list);
+			list_del_init(&pxmitframe->list);
 
 			rtw_list_insert_tail(&pxmitframe->list, get_list_head(&psta->sleep_q));
 
@@ -2380,7 +2380,7 @@ int xmitframe_enqueue_for_sleeping_sta(s
 		u8 wmmps_ac = 0;
 
 		if (pstapriv->sta_dz_bitmap&BIT(psta->aid)) {
-			rtw_list_delete(&pxmitframe->list);
+			list_del_init(&pxmitframe->list);
 
 			rtw_list_insert_tail(&pxmitframe->list, get_list_head(&psta->sleep_q));
 
@@ -2472,13 +2472,13 @@ void stop_sta_xmit(struct rtw_adapter *p
 #endif /* CONFIG_TDLS */
 		pstapriv->sta_dz_bitmap |= BIT(psta->aid);
 	dequeue_xmitframes_to_sleeping_queue(padapter, psta, &pstaxmitpriv->vo_q.sta_pending);
-	rtw_list_delete(&(pstaxmitpriv->vo_q.tx_pending));
+	list_del_init(&(pstaxmitpriv->vo_q.tx_pending));
 	dequeue_xmitframes_to_sleeping_queue(padapter, psta, &pstaxmitpriv->vi_q.sta_pending);
-	rtw_list_delete(&(pstaxmitpriv->vi_q.tx_pending));
+	list_del_init(&(pstaxmitpriv->vi_q.tx_pending));
 	dequeue_xmitframes_to_sleeping_queue(padapter, psta, &pstaxmitpriv->be_q.sta_pending);
-	rtw_list_delete(&(pstaxmitpriv->be_q.tx_pending));
+	list_del_init(&(pstaxmitpriv->be_q.tx_pending));
 	dequeue_xmitframes_to_sleeping_queue(padapter, psta, &pstaxmitpriv->bk_q.sta_pending);
-	rtw_list_delete(&(pstaxmitpriv->bk_q.tx_pending));
+	list_del_init(&(pstaxmitpriv->bk_q.tx_pending));
 
 #ifdef CONFIG_TDLS
 	if (!(psta->tdls_sta_state & TDLS_LINKED_STATE)) {
@@ -2487,7 +2487,7 @@ void stop_sta_xmit(struct rtw_adapter *p
 			/* for BC/MC Frames */
 			pstaxmitpriv = &psta_bmc->sta_xmitpriv;
 			dequeue_xmitframes_to_sleeping_queue(padapter, psta_bmc, &pstaxmitpriv->be_q.sta_pending);
-			rtw_list_delete(&(pstaxmitpriv->be_q.tx_pending));
+			list_del_init(&(pstaxmitpriv->be_q.tx_pending));
 #ifdef CONFIG_TDLS
 		}
 	}
@@ -2513,7 +2513,7 @@ void wakeup_sta_to_xmit(struct rtw_adapt
 
 		xmitframe_plist = xmitframe_plist->next;
 
-		rtw_list_delete(&pxmitframe->list);
+		list_del_init(&pxmitframe->list);
 
 		switch (pxmitframe->attrib.priority) {
 		case 1:
@@ -2602,7 +2602,7 @@ void wakeup_sta_to_xmit(struct rtw_adapt
 
 			xmitframe_plist = xmitframe_plist->next;
 
-			rtw_list_delete(&pxmitframe->list);
+			list_del_init(&pxmitframe->list);
 
 			psta_bmc->sleepq_len--;
 			if (psta_bmc->sleepq_len > 0)
@@ -2663,7 +2663,7 @@ void xmit_delivery_enabled_frames(struct
 		}
 		if (!wmmps_ac)
 			continue;
-		rtw_list_delete(&pxmitframe->list);
+		list_del_init(&pxmitframe->list);
 		psta->sleepq_len--;
 		psta->sleepq_ac_len--;
 		if (psta->sleepq_ac_len > 0) {
--- a/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
+++ b/drivers/staging/rtl8192du/hal/rtl8192du_xmit.c
@@ -686,13 +686,13 @@ s32 rtl8192du_xmitframe_complete(struct
 				}
 				else
 				{
-					rtw_list_delete(&pxmitframe->list);
+					list_del_init(&pxmitframe->list);
 					ptxservq->qcnt--;
 					phwxmit[ac_index].accnt--;
 
 					/* Remove sta node when there is no pending packets. */
 					if (_rtw_queue_empty(&ptxservq->sta_pending) == true)
-						rtw_list_delete(&ptxservq->tx_pending);
+						list_del_init(&ptxservq->tx_pending);
 				}
 			}
 			else
--- a/drivers/staging/rtl8192du/include/osdep_service.h
+++ b/drivers/staging/rtl8192du/include/osdep_service.h
@@ -144,11 +144,6 @@ static inline void _exit_critical_mutex(
 #endif
 }
 
-static inline void rtw_list_delete(struct list_head *plist)
-{
-	list_del_init(plist);
-}
-
 static inline void _init_timer(struct timer_list *timer, struct net_device * nic_hdl, void *pfunc, void *cntx)
 {
 	timer->function = pfunc;
@@ -285,7 +280,6 @@ extern int	_rtw_memcmp(void *dst, void *
 extern u32	rtw_is_list_empty(struct list_head *phead);
 extern void	rtw_list_insert_head(struct list_head *plist, struct list_head *phead);
 extern void	rtw_list_insert_tail(struct list_head *plist, struct list_head *phead);
-extern void	rtw_list_delete(struct list_head *plist);
 
 extern void	_rtw_init_sema(struct  semaphore *sema, int init_val);
 extern void	_rtw_free_sema(struct  semaphore *sema);
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -3451,7 +3451,7 @@ static int	cfg80211_rtw_del_station(stru
 			{
 				DBG_8192C("free psta=%p, aid=%d\n", psta, psta->aid);
 
-				rtw_list_delete(&psta->asoc_list);
+				list_del_init(&psta->asoc_list);
 				pstapriv->asoc_list_cnt--;
 
 				updated = ap_free_sta(padapter, psta, true, WLAN_REASON_DEAUTH_LEAVING);
--- a/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_linux.c
@@ -6597,7 +6597,7 @@ static int rtw_del_sta(struct net_device
 		spin_lock_bh(&pstapriv->asoc_list_lock);
 		if (rtw_is_list_empty(&psta->asoc_list) == false)
 		{
-			rtw_list_delete(&psta->asoc_list);
+			list_del_init(&psta->asoc_list);
 			pstapriv->asoc_list_cnt--;
 			updated = ap_free_sta(padapter, psta, true, WLAN_REASON_DEAUTH_LEAVING);
 
--- a/drivers/staging/rtl8192du/os_dep/osdep_service.c
+++ b/drivers/staging/rtl8192du/os_dep/osdep_service.c
@@ -98,9 +98,7 @@ void rtw_list_insert_tail(struct list_he
 	list_add_tail(plist, phead);
 }
 
-/*
-Caller must check if the list is empty before calling rtw_list_delete
-*/
+/* Caller must check if the list is empty before calling list_del_init */
 
 void _rtw_init_sema(struct  semaphore *sema, int init_val)
 {
