From 9a171ecc3e1bd791a14cc7dcc1857000f02e6365 Mon Sep 17 00:00:00 2001
From: Larry Finger <Larry.Finger@lwfinger.net>
Date: Thu, 20 Feb 2014 10:45:34 -0600
Subject: [PATCH 222/390] rtl8192du: Partial implementation of
 CONFIG_IOCTL_CFG80211

Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
---
 core/rtw_ap.c            |   2 +-
 core/rtw_mlme.c          |  10 +-
 core/rtw_mlme_ext.c      |   6 +-
 core/rtw_p2p.c           |   2 +-
 include/autoconf.h       |   9 +-
 include/ioctl_cfg80211.h |   2 +-
 include/rtw_mlme.h       |   4 +-
 os_dep/ioctl_cfg80211.c  | 680 ++++++++++++++++++++++-------------------------
 os_dep/mlme_linux.c      |   4 +-
 os_dep/os_intfs.c        |   2 +-
 10 files changed, 339 insertions(+), 382 deletions(-)

--- a/drivers/staging/rtl8192du/core/rtw_ap.c
+++ b/drivers/staging/rtl8192du/core/rtw_ap.c
@@ -1879,7 +1879,7 @@ u8 ap_free_sta(struct rtw_adapter *padap
 	if (1) {
 		#ifdef COMPAT_KERNEL_RELEASE
 		rtw_cfg80211_indicate_sta_disassoc(padapter, psta->hwaddr, reason);
-		#elif !defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER)
+		#elif !defined(CONFIG_IOCTL_CFG80211)
 		rtw_cfg80211_indicate_sta_disassoc(padapter, psta->hwaddr,
 						   reason);
 		#endif
--- a/drivers/staging/rtl8192du/core/rtw_mlme.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme.c
@@ -1773,7 +1773,7 @@ void rtw_stassoc_event_callback(struct r
 #ifdef CONFIG_IOCTL_CFG80211
 #ifdef COMPAT_KERNEL_RELEASE
 
-#elif defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER)
+#elif defined(CONFIG_IOCTL_CFG80211)
 			u8 *passoc_req = NULL;
 			u32 assoc_req_len;
 
@@ -1799,7 +1799,7 @@ void rtw_stassoc_event_callback(struct r
 
 				kfree(passoc_req);
 			}
-#endif /* defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER) */
+#endif /* defined(CONFIG_IOCTL_CFG80211) */
 #endif /* CONFIG_IOCTL_CFG80211 */
 
 			ap_sta_info_defer_update(adapter, psta);
@@ -1873,10 +1873,10 @@ void rtw_stadel_event_callback(struct rt
 #ifdef CONFIG_IOCTL_CFG80211
 #ifdef COMPAT_KERNEL_RELEASE
 
-#elif defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER)
+#elif defined(CONFIG_IOCTL_CFG80211)
 		rtw_cfg80211_indicate_sta_disassoc(adapter, pstadel->macaddr,
 						   *(u16 *)pstadel->rsvd);
-#endif /* defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER) */
+#endif /* defined(CONFIG_IOCTL_CFG80211) */
 #endif /* CONFIG_IOCTL_CFG80211 */
 
 		return;
@@ -2170,7 +2170,7 @@ void rtw_dynamic_check_timer_handlder(st
 #endif /*  CONFIG_BR_EXT */
 }
 
-#ifdef CONFIG_SET_SCAN_DENY_TIMER
+#ifdef CONFIG_IOCTL_CFG80211
 inline bool rtw_is_scan_deny(struct rtw_adapter *adapter)
 {
 	struct mlme_priv *mlmepriv = &adapter->mlmepriv;
--- a/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
+++ b/drivers/staging/rtl8192du/core/rtw_mlme_ext.c
@@ -1855,10 +1855,10 @@ unsigned int OnAssocReq(struct rtw_adapt
 #ifdef COMPAT_KERNEL_RELEASE
 			rtw_cfg80211_indicate_sta_assoc(adapt, pframe,
 							pkt_len);
-#elif !defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER)
+#elif !defined(CONFIG_IOCTL_CFG80211)
 			rtw_cfg80211_indicate_sta_assoc(adapt, pframe,
 							pkt_len);
-#else /* !defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER) */
+#else /* !defined(CONFIG_IOCTL_CFG80211) */
 			spin_lock_bh(&pstat->lock);
 			kfree(pstat->passoc_req);
 			pstat->passoc_req = NULL;
@@ -1870,7 +1870,7 @@ unsigned int OnAssocReq(struct rtw_adapt
 				pstat->assoc_req_len = pkt_len;
 			}
 			spin_unlock_bh(&pstat->lock);
-#endif /* !defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER) */
+#endif /* !defined(CONFIG_IOCTL_CFG80211) */
 		} else
 #endif /* CONFIG_IOCTL_CFG80211 */
 		{
--- a/drivers/staging/rtl8192du/core/rtw_p2p.c
+++ b/drivers/staging/rtl8192du/core/rtw_p2p.c
@@ -3383,7 +3383,7 @@ int rtw_p2p_check_frames(struct rtw_adap
 						pwdev_priv->provdisc_req_issued = true;/* case: p2p_devices connection before Nego req. */
 					}
 				}
-				break;
+				break; }
 			case P2P_PROVISION_DISC_RESP:
 				DBG_8192D("RTW_%s:P2P_PROVISION_DISC_RESP, dialogToken =%d\n",
 					  tx ? "Tx" : "Rx", dialogToken);
--- a/drivers/staging/rtl8192du/include/autoconf.h
+++ b/drivers/staging/rtl8192du/include/autoconf.h
@@ -21,12 +21,7 @@
 #define DRV_NAME "r8192du"
 #define DRIVERVERSION	"v4.2.1_7122.20130408"
 
-/* define CONFIG_IOCTL_CFG80211 1 */
-
-#ifdef CONFIG_IOCTL_CFG80211
-	#define CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER
-	#define CONFIG_SET_SCAN_DENY_TIMER
-#endif
+//#define CONFIG_IOCTL_CFG80211 1
 
 /*
  * Internal  General Config
@@ -64,7 +59,7 @@
 
 #define CONFIG_LAYER2_ROAMING
 #define CONFIG_LAYER2_ROAMING_RESUME
-/* define CONFIG_SET_SCAN_DENY_TIMER */
+/* define CONFIG_IOCTL_CFG80211 */
 #define RTW_NOTCH_FILTER 0 /* 0:Disable, 1:Enable,*/
 
 #define CONFIG_BR_EXT	1	/*  Enable NAT2.5 support for STA mode interface with a L2 Bridge */
--- a/drivers/staging/rtl8192du/include/ioctl_cfg80211.h
+++ b/drivers/staging/rtl8192du/include/ioctl_cfg80211.h
@@ -21,7 +21,7 @@
 #endif
 
 #if defined(RTW_USE_CFG80211_STA_EVENT)
-	#undef CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER
+	#undef CONFIG_IOCTL_CFG80211
 #endif
 
 struct rtw_wdev_invit_info {
--- a/drivers/staging/rtl8192du/include/rtw_mlme.h
+++ b/drivers/staging/rtl8192du/include/rtw_mlme.h
@@ -393,7 +393,7 @@ struct mlme_priv {
 	struct timer_list scan_to_timer; /*  driver itself handles scan_timeout status. */
 	u32 scan_start_time; /*  used to evaluate the time spent in scanning */
 
-	#ifdef CONFIG_SET_SCAN_DENY_TIMER
+	#ifdef CONFIG_IOCTL_CFG80211
 	struct timer_list set_scan_deny_timer;
 	atomic_t set_scan_deny; /* 0: allowed, 1: deny */
 	#endif
@@ -652,7 +652,7 @@ extern void _rtw_join_timeout_handler(st
 extern void rtw_scan_timeout_handler(struct rtw_adapter *adapter);
 
 extern void rtw_dynamic_check_timer_handlder(struct rtw_adapter *adapter);
-#ifdef CONFIG_SET_SCAN_DENY_TIMER
+#ifdef CONFIG_IOCTL_CFG80211
 bool rtw_is_scan_deny(struct rtw_adapter *adapter);
 void rtw_clear_scan_deny(struct rtw_adapter *adapter);
 void rtw_set_scan_deny_timer_hdl(struct rtw_adapter *adapter);
--- a/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
+++ b/drivers/staging/rtl8192du/os_dep/ioctl_cfg80211.c
@@ -179,7 +179,7 @@ struct ieee80211_supported_band *rtw_spt
 		goto exit;
 	}
 
-	len = sizeof(struct ieee80211_supported_ban, GFP_KERNEL) +
+	len = sizeof(struct ieee80211_supported_band) +
 	      sizeof(struct ieee80211_channel) * n_channels +
 	      sizeof(struct ieee80211_rate) * n_bitrates;
 	spt_band = (struct ieee80211_supported_band *)kzalloc(len, GFP_KERNEL);
@@ -306,7 +306,7 @@ static int rtw_ieee80211_channel_to_freq
 }
 
 #define MAX_BSSINFO_LEN 1000
-static int rtw_cfg80211_inform_bss(_adapter *padapter, struct wlan_network *pnetwork)
+static int rtw_cfg80211_inform_bss(struct rtw_adapter *padapter, struct wlan_network *pnetwork)
 {
 	int ret=0;
 	struct ieee80211_channel *notify_channel;
@@ -331,7 +331,7 @@ static int rtw_cfg80211_inform_bss(_adap
 
 	bssinf_len = pnetwork->network.IELength+sizeof (struct rtw_ieee80211_hdr_3addr);
 	if (bssinf_len > MAX_BSSINFO_LEN) {
-		DBG_871X("%s IE Length too long > %d byte\n",__func__,MAX_BSSINFO_LEN);
+		DBG_8192D("%s IE Length too long > %d byte\n",__func__,MAX_BSSINFO_LEN);
 		goto exit;
 	}
 
@@ -358,18 +358,6 @@ static int rtw_cfg80211_inform_bss(_adap
 	} else {
 		notify_signal = 100*translate_percentage_to_dbm(pnetwork->network.PhyInfo.SignalStrength);/* dbm */
 	}
-
-/*
-	DBG_8192C("bssid: %2.2X:%2.2X:%2.2X:%2.2X:%2.2X:%2.2X\n",
-                        pnetwork->network.MacAddress[0], pnetwork->network.MacAddress[1], pnetwork->network.MacAddress[2],
-                        pnetwork->network.MacAddress[3], pnetwork->network.MacAddress[4], pnetwork->network.MacAddress[5]);
-	DBG_8192C("Channel: %d(%d)\n", channel, freq);
-	DBG_8192C("Capability: %X\n", notify_capability);
-	DBG_8192C("Beacon interval: %d\n", notify_interval);
-	DBG_8192C("Signal: %d\n", notify_signal);
-	DBG_8192C("notify_timestamp: %#018llx\n", notify_timestamp);
-*/
-
 	pbuf = buf;
 
 	pwlanhdr = (struct rtw_ieee80211_hdr *)pbuf;
@@ -400,7 +388,7 @@ static int rtw_cfg80211_inform_bss(_adap
 	bss = cfg80211_inform_bss_frame(wiphy, notify_channel, (struct ieee80211_mgmt *)buf,
 		len, notify_signal, GFP_ATOMIC);
 	if (unlikely(!bss)) {
-		DBG_8192C("rtw_cfg80211_inform_bss error\n");
+		DBG_8192D("rtw_cfg80211_inform_bss error\n");
 		return -EINVAL;
 	}
 
@@ -409,7 +397,7 @@ exit:
 	return ret;
 }
 
-void rtw_cfg80211_indicate_connect(_adapter *padapter)
+void rtw_cfg80211_indicate_connect(struct rtw_adapter *padapter)
 {
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct wlan_network  *cur_network = &(pmlmepriv->cur_network);
@@ -418,7 +406,7 @@ void rtw_cfg80211_indicate_connect(_adap
 	struct wifidirect_info *pwdinfo= &(padapter->wdinfo);
 #endif
 
-	DBG_8192C("%s(padapter=%p)\n", __func__, padapter);
+	DBG_8192D("%s(padapter=%p)\n", __func__, padapter);
 
 	if (pwdev->iftype != NL80211_IFTYPE_STATION &&
 	    pwdev->iftype != NL80211_IFTYPE_P2P_CLIENT)
@@ -433,7 +421,7 @@ void rtw_cfg80211_indicate_connect(_adap
 		rtw_p2p_set_pre_state(pwdinfo, rtw_p2p_state(pwdinfo));
 		rtw_p2p_set_role(pwdinfo, P2P_ROLE_CLIENT);
 		rtw_p2p_set_state(pwdinfo, P2P_STATE_GONEGO_OK);
-		DBG_8192C("%s, role=%d, p2p_state=%d, pre_p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo), rtw_p2p_pre_state(pwdinfo));
+		DBG_8192D("%s, role=%d, p2p_state=%d, pre_p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo), rtw_p2p_pre_state(pwdinfo));
 	}
 #endif /* CONFIG_P2P */
 
@@ -451,7 +439,7 @@ void rtw_cfg80211_indicate_connect(_adap
 
 		notify_channel = ieee80211_get_channel(wiphy, freq);
 
-		DBG_871X("%s call cfg80211_roamed\n", __func__);
+		DBG_8192D("%s call cfg80211_roamed\n", __func__);
 		cfg80211_roamed(padapter->pnetdev, notify_channel,
 				cur_network->network.MacAddress,
 				pmlmepriv->assoc_req +
@@ -466,18 +454,18 @@ void rtw_cfg80211_indicate_connect(_adap
 	} else
 	#endif
 	{
-		DBG_8192C("pwdev->sme_state(b)=%d\n", pwdev->sme_state);
+		DBG_8192D("pwdev->sme_state(b)=%d\n", pwdev->sme_state);
 		cfg80211_connect_result(padapter->pnetdev, cur_network->network.MacAddress
 			, pmlmepriv->assoc_req+sizeof(struct rtw_ieee80211_hdr_3addr)+2
 			, pmlmepriv->assoc_req_len-sizeof(struct rtw_ieee80211_hdr_3addr)-2
 			, pmlmepriv->assoc_rsp+sizeof(struct rtw_ieee80211_hdr_3addr)+6
 			, pmlmepriv->assoc_rsp_len-sizeof(struct rtw_ieee80211_hdr_3addr)-6
 			, WLAN_STATUS_SUCCESS, GFP_ATOMIC);
-		DBG_8192C("pwdev->sme_state(a)=%d\n", pwdev->sme_state);
+		DBG_8192D("pwdev->sme_state(a)=%d\n", pwdev->sme_state);
 	}
 }
 
-void rtw_cfg80211_indicate_disconnect(_adapter *padapter)
+void rtw_cfg80211_indicate_disconnect(struct rtw_adapter *padapter)
 {
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct wireless_dev *pwdev = padapter->rtw_wdev;
@@ -485,7 +473,7 @@ void rtw_cfg80211_indicate_disconnect(_a
 	struct wifidirect_info *pwdinfo= &(padapter->wdinfo);
 #endif
 
-	DBG_8192C("%s(padapter=%p)\n", __func__, padapter);
+	DBG_8192D("%s(padapter=%p)\n", __func__, padapter);
 
 	if (pwdev->iftype != NL80211_IFTYPE_STATION &&
 	    pwdev->iftype != NL80211_IFTYPE_P2P_CLIENT)
@@ -504,12 +492,12 @@ void rtw_cfg80211_indicate_disconnect(_a
 		rtw_p2p_set_state(pwdinfo, rtw_p2p_pre_state(pwdinfo));
 		rtw_p2p_set_role(pwdinfo, P2P_ROLE_DEVICE);
 
-		DBG_8192C("%s, role=%d, p2p_state=%d, pre_p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo), rtw_p2p_pre_state(pwdinfo));
+		DBG_8192D("%s, role=%d, p2p_state=%d, pre_p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo), rtw_p2p_pre_state(pwdinfo));
 	}
 #endif /* CONFIG_P2P */
 
 	if (!padapter->mlmepriv.not_indic_disco) {
-		DBG_8192C("pwdev->sme_state(b)=%d\n", pwdev->sme_state);
+		DBG_8192D("pwdev->sme_state(b)=%d\n", pwdev->sme_state);
 
 		if (pwdev->sme_state==CFG80211_SME_CONNECTING)
 			cfg80211_connect_result(padapter->pnetdev, NULL, NULL, 0, NULL, 0,
@@ -517,12 +505,12 @@ void rtw_cfg80211_indicate_disconnect(_a
 		else if (pwdev->sme_state==CFG80211_SME_CONNECTED)
 			cfg80211_disconnected(padapter->pnetdev, 0, NULL, 0, GFP_ATOMIC);
 
-		DBG_8192C("pwdev->sme_state(a)=%d\n", pwdev->sme_state);
+		DBG_8192D("pwdev->sme_state(a)=%d\n", pwdev->sme_state);
 	}
 }
 
 #ifdef CONFIG_92D_AP_MODE
-static u8 set_pairwise_key(_adapter *padapter, struct sta_info *psta)
+static u8 set_pairwise_key(struct rtw_adapter *padapter, struct sta_info *psta)
 {
 	struct cmd_obj*			ph2c;
 	struct set_stakey_parm	*psetstakey_para;
@@ -542,7 +530,7 @@ static u8 set_pairwise_key(_adapter *pad
 		goto exit;
 	}
 
-	init_h2fwcmd_w_parm_no_rsp(ph2c, psetstakey_para, _SetStaKey_CMD_);
+	init_h2fwcmd_w_parm_no_rsp(ph2c, psetstakey_para, _SETSTAKEY_CMD_);
 
 	psetstakey_para->algorithm = (u8)psta->dot118021XPrivacy;
 
@@ -557,7 +545,7 @@ exit:
 	return res;
 }
 
-static int set_group_key(_adapter *padapter, u8 *key, u8 alg, int keyid)
+static int set_group_key(struct rtw_adapter *padapter, u8 *key, u8 alg, int keyid)
 {
 	u8 keylen;
 	struct cmd_obj* pcmd;
@@ -565,7 +553,7 @@ static int set_group_key(_adapter *padap
 	struct cmd_priv	*pcmdpriv=&(padapter->cmdpriv);
 	int res=_SUCCESS;
 
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 
 	pcmd = (struct cmd_obj*)kzalloc(sizeof(struct cmd_obj), GFP_KERNEL);
 	if (pcmd==NULL) {
@@ -621,7 +609,7 @@ exit:
 
 }
 
-static int set_wep_key(_adapter *padapter, u8 *key, u8 keylen, int keyid)
+static int set_wep_key(struct rtw_adapter *padapter, u8 *key, u8 keylen, int keyid)
 {
 	u8 alg;
 
@@ -645,12 +633,12 @@ static int rtw_cfg80211_ap_set_encryptio
 	int ret = 0;
 	u32 wep_key_idx, wep_key_len,wep_total_len;
 	struct sta_info *psta = NULL, *pbcmc_sta = NULL;
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
+	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct security_priv* psecuritypriv=&(padapter->securitypriv);
 	struct sta_priv *pstapriv = &padapter->stapriv;
 
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 
 	param->u.crypt.err = 0;
 	param->u.crypt.alg[IEEE_CRYPT_ALG_NAME_LEN - 1] = '\0';
@@ -677,7 +665,7 @@ static int rtw_cfg80211_ap_set_encryptio
 		psta = rtw_get_stainfo(pstapriv, param->sta_addr);
 		if (!psta)
 		{
-			DBG_8192C("rtw_set_encryption(), sta has already been removed or never been added\n");
+			DBG_8192D("rtw_set_encryption(), sta has already been removed or never been added\n");
 			goto exit;
 		}
 	}
@@ -686,19 +674,19 @@ static int rtw_cfg80211_ap_set_encryptio
 	{
 		/* todo:clear default encryption keys */
 
-		DBG_8192C("clear default encryption keys, keyid=%d\n", param->u.crypt.idx);
+		DBG_8192D("clear default encryption keys, keyid=%d\n", param->u.crypt.idx);
 
 		goto exit;
 	}
 
 	if (strcmp(param->u.crypt.alg, "WEP") == 0 && (psta==NULL))
 	{
-		DBG_8192C("r871x_set_encryption, crypt.alg = WEP\n");
+		DBG_8192D("r871x_set_encryption, crypt.alg = WEP\n");
 
 		wep_key_idx = param->u.crypt.idx;
 		wep_key_len = param->u.crypt.key_len;
 
-		DBG_8192C("r871x_set_encryption, wep_key_idx=%d, len=%d\n", wep_key_idx, wep_key_len);
+		DBG_8192D("r871x_set_encryption, wep_key_idx=%d, len=%d\n", wep_key_idx, wep_key_len);
 
 		if ((wep_key_idx >= WEP_KEYS) || (wep_key_len<=0))
 		{
@@ -715,7 +703,7 @@ static int rtw_cfg80211_ap_set_encryptio
 		{
 			/* wep default key has not been set, so use this key index as default key. */
 
-			psecuritypriv->ndisencryptstatus = Ndis802_11Encryption1Enabled;
+			psecuritypriv->ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 			psecuritypriv->dot11PrivacyAlgrthm=_WEP40_;
 			psecuritypriv->dot118021XGrpPrivacy=_WEP40_;
 
@@ -744,7 +732,7 @@ static int rtw_cfg80211_ap_set_encryptio
 		{
 			if (strcmp(param->u.crypt.alg, "WEP") == 0)
 			{
-				DBG_8192C("%s, set group_key, WEP\n", __func__);
+				DBG_8192D("%s, set group_key, WEP\n", __func__);
 
 				memcpy(psecuritypriv->dot118021XGrpKey[param->u.crypt.idx].skey,  param->u.crypt.key, (param->u.crypt.key_len>16 ?16:param->u.crypt.key_len));
 
@@ -757,7 +745,7 @@ static int rtw_cfg80211_ap_set_encryptio
 			}
 			else if (strcmp(param->u.crypt.alg, "TKIP") == 0)
 			{
-				DBG_8192C("%s, set group_key, TKIP\n", __func__);
+				DBG_8192D("%s, set group_key, TKIP\n", __func__);
 
 				psecuritypriv->dot118021XGrpPrivacy = _TKIP_;
 
@@ -772,7 +760,7 @@ static int rtw_cfg80211_ap_set_encryptio
 			}
 			else if (strcmp(param->u.crypt.alg, "CCMP") == 0)
 			{
-				DBG_8192C("%s, set group_key, CCMP\n", __func__);
+				DBG_8192D("%s, set group_key, CCMP\n", __func__);
 
 				psecuritypriv->dot118021XGrpPrivacy = _AES_;
 
@@ -780,7 +768,7 @@ static int rtw_cfg80211_ap_set_encryptio
 			}
 			else
 			{
-				DBG_8192C("%s, set group_key, none\n", __func__);
+				DBG_8192D("%s, set group_key, none\n", __func__);
 
 				psecuritypriv->dot118021XGrpPrivacy = _NO_PRIVACY_;
 			}
@@ -816,7 +804,7 @@ static int rtw_cfg80211_ap_set_encryptio
 
 				if (strcmp(param->u.crypt.alg, "WEP") == 0)
 				{
-					DBG_8192C("%s, set pairwise key, WEP\n", __func__);
+					DBG_8192D("%s, set pairwise key, WEP\n", __func__);
 
 					psta->dot118021XPrivacy = _WEP40_;
 					if (param->u.crypt.key_len==13)
@@ -826,7 +814,7 @@ static int rtw_cfg80211_ap_set_encryptio
 				}
 				else if (strcmp(param->u.crypt.alg, "TKIP") == 0)
 				{
-					DBG_8192C("%s, set pairwise key, TKIP\n", __func__);
+					DBG_8192D("%s, set pairwise key, TKIP\n", __func__);
 
 					psta->dot118021XPrivacy = _TKIP_;
 
@@ -840,13 +828,13 @@ static int rtw_cfg80211_ap_set_encryptio
 				else if (strcmp(param->u.crypt.alg, "CCMP") == 0)
 				{
 
-					DBG_8192C("%s, set pairwise key, CCMP\n", __func__);
+					DBG_8192D("%s, set pairwise key, CCMP\n", __func__);
 
 					psta->dot118021XPrivacy = _AES_;
 				}
 				else
 				{
-					DBG_8192C("%s, set pairwise key, none\n", __func__);
+					DBG_8192D("%s, set pairwise key, none\n", __func__);
 
 					psta->dot118021XPrivacy = _NO_PRIVACY_;
 				}
@@ -925,14 +913,14 @@ static int rtw_cfg80211_set_encryption(s
 {
 	int ret = 0;
 	u32 wep_key_idx, wep_key_len,wep_total_len;
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
+	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(dev);
 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 #ifdef CONFIG_P2P
 	struct wifidirect_info* pwdinfo = &padapter->wdinfo;
 #endif /* CONFIG_P2P */
 
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 
 	param->u.crypt.err = 0;
 	param->u.crypt.alg[IEEE_CRYPT_ALG_NAME_LEN - 1] = '\0';
@@ -960,7 +948,7 @@ static int rtw_cfg80211_set_encryption(s
 	if (strcmp(param->u.crypt.alg, "WEP") == 0)
 	{
 		RT_TRACE(_module_rtl871x_ioctl_os_c,_drv_err_,("wpa_set_encryption, crypt.alg = WEP\n"));
-		DBG_8192C("wpa_set_encryption, crypt.alg = WEP\n");
+		DBG_8192D("wpa_set_encryption, crypt.alg = WEP\n");
 
 		wep_key_idx = param->u.crypt.idx;
 		wep_key_len = param->u.crypt.key_len;
@@ -977,7 +965,7 @@ static int rtw_cfg80211_set_encryption(s
 
 			wep_key_len = wep_key_len <= 5 ? 5 : 13;
 
-		psecuritypriv->ndisencryptstatus = Ndis802_11Encryption1Enabled;
+		psecuritypriv->ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 			psecuritypriv->dot11PrivacyAlgrthm = _WEP40_;
 			psecuritypriv->dot118021XGrpPrivacy = _WEP40_;
 
@@ -1008,7 +996,7 @@ static int rtw_cfg80211_set_encryption(s
 		{
 			psta = rtw_get_stainfo(pstapriv, get_bssid(pmlmepriv));
 			if (psta == NULL) {
-				DBG_8192C("%s, : Obtain Sta_info fail\n", __func__);
+				DBG_8192D("%s, : Obtain Sta_info fail\n", __func__);
 			}
 			else
 			{
@@ -1016,8 +1004,8 @@ static int rtw_cfg80211_set_encryption(s
 				if (strcmp(param->u.crypt.alg, "none") != 0)
 					psta->ieee8021x_blocked = false;
 
-				if ((padapter->securitypriv.ndisencryptstatus == Ndis802_11Encryption2Enabled)||
-						(padapter->securitypriv.ndisencryptstatus ==  Ndis802_11Encryption3Enabled))
+				if ((padapter->securitypriv.ndisencryptstatus == NDIS802_11ENCRYPTION2ENABLED)||
+						(padapter->securitypriv.ndisencryptstatus ==  NDIS802_11ENCRYPTION2ENABLED))
 				{
 					psta->dot118021XPrivacy = padapter->securitypriv.dot11PrivacyAlgrthm;
 				}
@@ -1025,7 +1013,7 @@ static int rtw_cfg80211_set_encryption(s
 				if (param->u.crypt.set_tx ==1)/* pairwise key */
 				{
 
-					DBG_8192C("%s, : param->u.crypt.set_tx ==1\n", __func__);
+					DBG_8192D("%s, : param->u.crypt.set_tx ==1\n", __func__);
 
 					memcpy(psta->dot118021x_UncstKey.skey,  param->u.crypt.key, (param->u.crypt.key_len>16 ?16:param->u.crypt.key_len));
 
@@ -1037,7 +1025,7 @@ static int rtw_cfg80211_set_encryption(s
 						padapter->securitypriv.busetkipkey=false;
 					}
 
-					DBG_871X(" ~~~~set sta key:unicastkey\n");
+					DBG_8192D(" ~~~~set sta key:unicastkey\n");
 
 					rtw_setstakey_cmd(padapter, (unsigned char *)psta, true);
 				}
@@ -1047,7 +1035,7 @@ static int rtw_cfg80211_set_encryption(s
 					memcpy(padapter->securitypriv.dot118021XGrptxmickey[param->u.crypt.idx].skey,&(param->u.crypt.key[16]),8);
 					memcpy(padapter->securitypriv.dot118021XGrprxmickey[param->u.crypt.idx].skey,&(param->u.crypt.key[24]),8);
                                         padapter->securitypriv.binstallGrpkey = true;
-					DBG_871X(" ~~~~set sta key:groupkey\n");
+					DBG_8192D(" ~~~~set sta key:groupkey\n");
 
 					padapter->securitypriv.dot118021XGrpKeyid = param->u.crypt.idx;
 
@@ -1072,8 +1060,8 @@ static int rtw_cfg80211_set_encryption(s
 				if (strcmp(param->u.crypt.alg, "none") != 0)
 					pbcmc_sta->ieee8021x_blocked = false;
 
-				if ((padapter->securitypriv.ndisencryptstatus == Ndis802_11Encryption2Enabled)||
-						(padapter->securitypriv.ndisencryptstatus ==  Ndis802_11Encryption3Enabled))
+				if ((padapter->securitypriv.ndisencryptstatus == NDIS802_11ENCRYPTION2ENABLED)||
+						(padapter->securitypriv.ndisencryptstatus ==  NDIS802_11ENCRYPTION2ENABLED))
 				{
 					pbcmc_sta->dot118021XPrivacy = padapter->securitypriv.dot11PrivacyAlgrthm;
 				}
@@ -1086,7 +1074,7 @@ static int rtw_cfg80211_set_encryption(s
 
 exit:
 
-	DBG_8192C("%s, ret=%d\n", __func__, ret);
+	DBG_8192D("%s, ret=%d\n", __func__, ret);
 
 	return ret;
 }
@@ -1100,15 +1088,15 @@ static int cfg80211_rtw_add_key(struct w
 	struct ieee_param *param = NULL;
 	int ret=0;
 	struct wireless_dev *rtw_wdev = wiphy_to_wdev(wiphy);
-	_adapter *padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 
-	DBG_871X(FUNC_NDEV_FMT" adding key for %pM\n", FUNC_NDEV_ARG(ndev), mac_addr);
-	DBG_871X("cipher=0x%x\n", params->cipher);
-	DBG_871X("key_len=0x%x\n", params->key_len);
-	DBG_871X("seq_len=0x%x\n", params->seq_len);
-	DBG_871X("key_index=%d\n", key_index);
-	DBG_871X("pairwise=%d\n", pairwise);
+	DBG_8192D(FUNC_NDEV_FMT" adding key for %pM\n", FUNC_NDEV_ARG(ndev), mac_addr);
+	DBG_8192D("cipher=0x%x\n", params->cipher);
+	DBG_8192D("key_len=0x%x\n", params->key_len);
+	DBG_8192D("seq_len=0x%x\n", params->seq_len);
+	DBG_8192D("key_index=%d\n", key_index);
+	DBG_8192D("pairwise=%d\n", pairwise);
 
 	param_len = sizeof(struct ieee_param) + params->key_len;
 	param = (struct ieee_param *)kmalloc(param_len, GFP_KERNEL);
@@ -1175,7 +1163,7 @@ static int cfg80211_rtw_add_key(struct w
 		ret = rtw_cfg80211_ap_set_encryption(ndev, param, param_len);
 #endif
 	} else {
-		DBG_8192C("error! fw_state=0x%x, iftype=%d\n", pmlmepriv->fw_state, rtw_wdev->iftype);
+		DBG_8192D("error! fw_state=0x%x, iftype=%d\n", pmlmepriv->fw_state, rtw_wdev->iftype);
 	}
 
 	if (param)
@@ -1190,17 +1178,17 @@ static int cfg80211_rtw_get_key(struct w
 				void (*callback)(void *cookie,
 						 struct key_params*))
 {
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 	return 0;
 }
 
 static int cfg80211_rtw_del_key(struct wiphy *wiphy, struct net_device *ndev,
 				u8 key_index, bool pairwise, const u8 *mac_addr)
 {
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(ndev);
+	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(ndev);
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 
-	DBG_871X(FUNC_NDEV_FMT" key_index=%d\n", FUNC_NDEV_ARG(ndev), key_index);
+	DBG_8192D(FUNC_NDEV_FMT" key_index=%d\n", FUNC_NDEV_ARG(ndev), key_index);
 
 	if (key_index == psecuritypriv->dot11PrivacyKeyIndex)
 	{
@@ -1215,15 +1203,15 @@ static int cfg80211_rtw_set_default_key(
 					struct net_device *ndev, u8 key_index,
 					bool unicast, bool multicast)
 {
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(ndev);
+	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(ndev);
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
 
-	DBG_871X(FUNC_NDEV_FMT" key_index=%d, unicast=%d, multicast=%d.\n",
+	DBG_8192D(FUNC_NDEV_FMT" key_index=%d, unicast=%d, multicast=%d.\n",
 		 FUNC_NDEV_ARG(ndev), key_index, unicast, multicast);
 
 	if ((key_index < WEP_KEYS) && ((psecuritypriv->dot11PrivacyAlgrthm == _WEP40_) || (psecuritypriv->dot11PrivacyAlgrthm == _WEP104_))) /* set wep default key */
 	{
-		psecuritypriv->ndisencryptstatus = Ndis802_11Encryption1Enabled;
+		psecuritypriv->ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 
 		psecuritypriv->dot11PrivacyKeyIndex = key_index;
 
@@ -1246,7 +1234,7 @@ static int cfg80211_rtw_get_station(stru
 				    u8 *mac, struct station_info *sinfo)
 {
 	int ret = 0;
-	_adapter *padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct sta_info *psta = NULL;
 	struct sta_priv *pstapriv = &padapter->stapriv;
@@ -1254,20 +1242,20 @@ static int cfg80211_rtw_get_station(stru
 	sinfo->filled = 0;
 
 	if (!mac) {
-		DBG_871X(FUNC_NDEV_FMT" mac==%p\n", FUNC_NDEV_ARG(ndev), mac);
+		DBG_8192D(FUNC_NDEV_FMT" mac==%p\n", FUNC_NDEV_ARG(ndev), mac);
 		ret = -ENOENT;
 		goto exit;
 	}
 
 	psta = rtw_get_stainfo(pstapriv, mac);
 	if (psta == NULL) {
-		DBG_8192C("%s, sta_info is null\n", __func__);
+		DBG_8192D("%s, sta_info is null\n", __func__);
 		ret = -ENOENT;
 		goto exit;
 	}
 
 #ifdef CONFIG_DEBUG_CFG80211
-	DBG_871X(FUNC_NDEV_FMT" mac=%pM\n", FUNC_NDEV_ARG(ndev), mac);
+	DBG_8192D(FUNC_NDEV_FMT" mac=%pM\n", FUNC_NDEV_ARG(ndev), mac);
 #endif
 
 	/* for infra./P2PClient mode */
@@ -1278,7 +1266,7 @@ static int cfg80211_rtw_get_station(stru
 		struct wlan_network  *cur_network = &(pmlmepriv->cur_network);
 
 		if (_rtw_memcmp(mac, cur_network->network.MacAddress, ETH_ALEN) == false) {
-			DBG_871X("%s, mismatch bssid=%pM\n", __func__, cur_network->network.MacAddress);
+			DBG_8192D("%s, mismatch bssid=%pM\n", __func__, cur_network->network.MacAddress);
 			ret = -ENOENT;
 			goto exit;
 		}
@@ -1323,11 +1311,11 @@ static int cfg80211_rtw_change_iface(str
 {
 	enum nl80211_iftype old_type;
 	NDIS_802_11_NETWORK_INFRASTRUCTURE networkType ;
-	_adapter *padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
 	struct wireless_dev *rtw_wdev = wiphy_to_wdev(wiphy);
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
-	_queue *queue = &pmlmepriv->scanned_queue;
+	struct __queue *queue = &pmlmepriv->scanned_queue;
 #ifdef CONFIG_P2P
 	struct wifidirect_info *pwdinfo= &(padapter->wdinfo);
 #endif
@@ -1335,18 +1323,16 @@ static int cfg80211_rtw_change_iface(str
 	u8 change = false;
 
 #ifdef CONFIG_CONCURRENT_MODE
-	if (padapter->adapter_type == SECONDARY_ADAPTER)
-	{
-		DBG_871X(FUNC_NDEV_FMT" call netdev_if2_open\n", FUNC_NDEV_ARG(ndev));
+	if (padapter->adapter_type == SECONDARY_ADAPTER) {
+		DBG_8192D(FUNC_NDEV_FMT" call netdev_if2_open\n", FUNC_NDEV_ARG(ndev));
 		if (netdev_if2_open(ndev) != 0) {
 			ret= -EPERM;
 			goto exit;
 		}
-	}
-	else if (padapter->adapter_type == PRIMARY_ADAPTER)
+	} else if (padapter->adapter_type == PRIMARY_ADAPTER)
 #endif /* CONFIG_CONCURRENT_MODE */
 	{
-		DBG_871X(FUNC_NDEV_FMT" call netdev_open\n", FUNC_NDEV_ARG(ndev));
+		DBG_8192D(FUNC_NDEV_FMT" call netdev_open\n", FUNC_NDEV_ARG(ndev));
 		if (netdev_open(ndev) != 0) {
 			ret= -EPERM;
 			goto exit;
@@ -1359,11 +1345,10 @@ static int cfg80211_rtw_change_iface(str
 	}
 
 	old_type = rtw_wdev->iftype;
-	DBG_871X(FUNC_NDEV_FMT" old_iftype=%d, new_iftype=%d\n",
+	DBG_8192D(FUNC_NDEV_FMT" old_iftype=%d, new_iftype=%d\n",
 		FUNC_NDEV_ARG(ndev), old_type, type);
 
-	if (old_type != type)
-	{
+	if (old_type != type) {
 		change = true;
 		pmlmeext->action_public_rxseq = 0xffff;
 		pmlmeext->action_public_dialog_token = 0xff;
@@ -1377,8 +1362,7 @@ static int cfg80211_rtw_change_iface(str
 	case NL80211_IFTYPE_STATION:
 		networkType = Ndis802_11Infrastructure;
 		#ifdef CONFIG_P2P
-		if (change && rtw_p2p_chk_role(pwdinfo, P2P_ROLE_GO))
-		{
+		if (change && rtw_p2p_chk_role(pwdinfo, P2P_ROLE_GO)) {
 			_cancel_timer_ex(&pwdinfo->find_phase_timer);
 			_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
 			_cancel_timer_ex(&pwdinfo->pre_tx_scan_timer);
@@ -1387,7 +1371,7 @@ static int cfg80211_rtw_change_iface(str
 			rtw_p2p_set_role(pwdinfo, P2P_ROLE_DEVICE);
 			rtw_p2p_set_state(pwdinfo, rtw_p2p_pre_state(pwdinfo));
 
-			DBG_8192C("%s, role=%d, p2p_state=%d, pre_p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo), rtw_p2p_pre_state(pwdinfo));
+			DBG_8192D("%s, role=%d, p2p_state=%d, pre_p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo), rtw_p2p_pre_state(pwdinfo));
 		}
 		#endif /* CONFIG_P2P */
 		break;
@@ -1395,8 +1379,7 @@ static int cfg80211_rtw_change_iface(str
 	case NL80211_IFTYPE_AP:
 		networkType = Ndis802_11APMode;
 		#ifdef CONFIG_P2P
-		if (change && !rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
-		{
+		if (change && !rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE)) {
 			/* it means P2P Group created, we will be GO and change mode from  P2P DEVICE to AP(GO) */
 			rtw_p2p_set_role(pwdinfo, P2P_ROLE_GO);
 		}
@@ -1411,8 +1394,7 @@ static int cfg80211_rtw_change_iface(str
 	spin_lock_bh(&pmlmepriv->lock);
 	spin_lock_bh(&queue->lock);
 
-	if (rtw_set_802_11_infrastructure_mode(padapter, networkType) ==false)
-	{
+	if (rtw_set_802_11_infrastructure_mode(padapter, networkType) == false) {
 		rtw_wdev->iftype = old_type;
 		ret = -EPERM;
 		spin_unlock_bh(&queue->lock);
@@ -1423,9 +1405,7 @@ static int cfg80211_rtw_change_iface(str
 	spin_unlock_bh(&pmlmepriv->lock);
 
 	rtw_setopmode_cmd(padapter, networkType);
-
 exit:
-
 	return ret;
 }
 
@@ -1433,37 +1413,30 @@ void rtw_cfg80211_indicate_scan_done(str
 {
 
 	spin_lock_bh(&pwdev_priv->scan_req_lock);
-	if (pwdev_priv->scan_request != NULL)
-	{
+	if (pwdev_priv->scan_request != NULL) {
 		#ifdef CONFIG_DEBUG_CFG80211
-		DBG_871X("%s with scan req\n", __func__);
+		DBG_8192D("%s with scan req\n", __func__);
 		#endif
 
 		/* avoid WARN_ON(request != wiphy_to_dev(request->wiphy)->scan_req); */
 		if (pwdev_priv->scan_request->wiphy != pwdev_priv->rtw_wdev->wiphy)
-		{
-			DBG_8192C("error wiphy compare\n");
-		}
+			DBG_8192D("error wiphy compare\n");
 		else
-		{
 			cfg80211_scan_done(pwdev_priv->scan_request, aborted);
-		}
-
 		pwdev_priv->scan_request = NULL;
-
 	} else {
 		#ifdef CONFIG_DEBUG_CFG80211
-		DBG_871X("%s without scan req\n", __func__);
+		DBG_8192D("%s without scan req\n", __func__);
 		#endif
 	}
 	spin_unlock_bh(&pwdev_priv->scan_req_lock);
 }
 
-void rtw_cfg80211_surveydone_event_callback(_adapter *padapter)
+void rtw_cfg80211_surveydone_event_callback(struct rtw_adapter *padapter)
 {
-	_list					*plist, *phead;
+	struct list_head	*plist, *phead;
 	struct	mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
-	_queue				*queue	= &(pmlmepriv->scanned_queue);
+	struct __queue		*queue	= &(pmlmepriv->scanned_queue);
 	struct	wlan_network	*pnetwork = NULL;
 	u32 cnt=0;
 	u32 wait_for_surveydone;
@@ -1475,7 +1448,7 @@ void rtw_cfg80211_surveydone_event_callb
 	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
 
 #ifdef CONFIG_DEBUG_CFG80211
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 #endif
 
 	spin_lock_bh(&(pmlmepriv->scanned_queue.lock));
@@ -1511,7 +1484,7 @@ void rtw_cfg80211_surveydone_event_callb
 	rtw_cfg80211_indicate_scan_done(wdev_to_priv(padapter->rtw_wdev), false);
 }
 
-static int rtw_cfg80211_set_probe_req_wpsp2pie(_adapter *padapter, char *buf, int len)
+static int rtw_cfg80211_set_probe_req_wpsp2pie(struct rtw_adapter *padapter, char *buf, int len)
 {
 	int ret = 0;
 	uint wps_ielen = 0;
@@ -1523,7 +1496,7 @@ static int rtw_cfg80211_set_probe_req_wp
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 
 #ifdef CONFIG_DEBUG_CFG80211
-	DBG_8192C("%s, ielen=%d\n", __func__, len);
+	DBG_8192D("%s, ielen=%d\n", __func__, len);
 #endif
 
 	if (len>0)
@@ -1531,7 +1504,7 @@ static int rtw_cfg80211_set_probe_req_wp
 		if ((wps_ie = rtw_get_wps_ie(buf, len, NULL, &wps_ielen)))
 		{
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("probe_req_wps_ielen=%d\n", wps_ielen);
+			DBG_8192D("probe_req_wps_ielen=%d\n", wps_ielen);
 			#endif
 
 			if (pmlmepriv->wps_probe_req_ie)
@@ -1544,7 +1517,7 @@ static int rtw_cfg80211_set_probe_req_wp
 
 			pmlmepriv->wps_probe_req_ie = kmalloc(wps_ielen, GFP_KERNEL);
 			if (pmlmepriv->wps_probe_req_ie == NULL) {
-				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -1556,7 +1529,7 @@ static int rtw_cfg80211_set_probe_req_wp
 		if ((p2p_ie=rtw_get_p2p_ie(buf, len, NULL, &p2p_ielen)))
 		{
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("probe_req_p2p_ielen=%d\n", p2p_ielen);
+			DBG_8192D("probe_req_p2p_ielen=%d\n", p2p_ielen);
 			#endif
 
 			if (pmlmepriv->p2p_probe_req_ie)
@@ -1569,7 +1542,7 @@ static int rtw_cfg80211_set_probe_req_wp
 
 			pmlmepriv->p2p_probe_req_ie = kmalloc(p2p_ielen, GFP_KERNEL);
 			if (pmlmepriv->p2p_probe_req_ie == NULL) {
-				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -ENOMEM;
 
 			}
@@ -1582,7 +1555,7 @@ static int rtw_cfg80211_set_probe_req_wp
 		if (rtw_get_wfd_ie(buf, len, NULL, &wfd_ielen))
 		{
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("probe_req_wfd_ielen=%d\n", wfd_ielen);
+			DBG_8192D("probe_req_wfd_ielen=%d\n", wfd_ielen);
 			#endif
 
 			if (pmlmepriv->wfd_probe_req_ie)
@@ -1595,7 +1568,7 @@ static int rtw_cfg80211_set_probe_req_wp
 
 			pmlmepriv->wfd_probe_req_ie = kmalloc(wfd_ielen, GFP_KERNEL);
 			if (pmlmepriv->wfd_probe_req_ie == NULL) {
-				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -1614,7 +1587,7 @@ static int cfg80211_rtw_scan(struct wiph
 	int i;
 	u8 _status = false;
 	int ret = 0;
-	_adapter *padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct mlme_priv *pmlmepriv= &padapter->mlmepriv;
 	struct ndis_802_11_ssid ssid[RTW_SSID_SCAN_AMOUNT];
 	struct rtw_ieee80211_channel ch[RTW_CHANNEL_SCAN_AMOUNT];
@@ -1630,12 +1603,12 @@ static int cfg80211_rtw_scan(struct wiph
 	int social_channel = 0, j = 0;
 	bool need_indicate_scan_done = false;
 #ifdef CONFIG_CONCURRENT_MODE
-	PADAPTER pbuddy_adapter = NULL;
+	struct rtw_adapter *pbuddy_adapter = NULL;
 	struct mlme_priv *pbuddy_mlmepriv = NULL;
 #endif /* CONFIG_CONCURRENT_MODE */
 
 #ifdef CONFIG_DEBUG_CFG80211
-	DBG_871X(FUNC_ADPT_FMT"\n", FUNC_ADPT_ARG(padapter));
+	DBG_8192D(FUNC_ADPT_FMT"\n", FUNC_ADPT_ARG(padapter));
 #endif
 
 #ifdef CONFIG_CONCURRENT_MODE
@@ -1654,7 +1627,7 @@ static int cfg80211_rtw_scan(struct wiph
 	{
 
 #ifdef CONFIG_DEBUG_CFG80211
-		DBG_871X("%s under WIFI_AP_STATE\n", __func__);
+		DBG_8192D("%s under WIFI_AP_STATE\n", __func__);
 #endif
 	}
 
@@ -1678,7 +1651,7 @@ static int cfg80211_rtw_scan(struct wiph
 		{
 			rtw_p2p_set_pre_state(pwdinfo, rtw_p2p_state(pwdinfo));
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("%s, role=%d, p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo));
+			DBG_8192D("%s, role=%d, p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo));
 			#endif
 		}
 		rtw_p2p_set_state(pwdinfo, P2P_STATE_LISTEN);
@@ -1701,12 +1674,12 @@ static int cfg80211_rtw_scan(struct wiph
 
 	if (pmlmepriv->LinkDetectInfo.bBusyTraffic == true)
 	{
-		DBG_8192C("%s, bBusyTraffic == true\n", __func__);
+		DBG_8192D("%s, bBusyTraffic == true\n", __func__);
 		need_indicate_scan_done = true;
 		goto check_need_indicate_scan_done;
 	}
 	if (rtw_is_scan_deny(padapter)) {
-		DBG_871X(FUNC_ADPT_FMT  ": scan deny\n", FUNC_ADPT_ARG(padapter));
+		DBG_8192D(FUNC_ADPT_FMT  ": scan deny\n", FUNC_ADPT_ARG(padapter));
 		need_indicate_scan_done = true;
 		goto check_need_indicate_scan_done;
 	}
@@ -1714,7 +1687,7 @@ static int cfg80211_rtw_scan(struct wiph
 #ifdef CONFIG_CONCURRENT_MODE
 	if (pbuddy_mlmepriv && (pbuddy_mlmepriv->LinkDetectInfo.bBusyTraffic == true))
 	{
-		DBG_8192C("%s, bBusyTraffic == true at buddy_intf\n", __func__);
+		DBG_8192D("%s, bBusyTraffic == true at buddy_intf\n", __func__);
 		need_indicate_scan_done = true;
 		goto check_need_indicate_scan_done;
 	}
@@ -1722,7 +1695,7 @@ static int cfg80211_rtw_scan(struct wiph
 
 	if (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY|_FW_UNDER_LINKING) == true)
 	{
-		DBG_8192C("%s, fwstate=0x%x\n", __func__, pmlmepriv->fw_state);
+		DBG_8192D("%s, fwstate=0x%x\n", __func__, pmlmepriv->fw_state);
 		need_indicate_scan_done = true;
 		goto check_need_indicate_scan_done;
 	}
@@ -1733,11 +1706,11 @@ static int cfg80211_rtw_scan(struct wiph
 	{
 		if (check_buddy_fwstate(padapter, _FW_UNDER_SURVEY))
 		{
-			DBG_8192C("scanning_via_buddy_intf\n");
+			DBG_8192D("scanning_via_buddy_intf\n");
 			pmlmepriv->scanning_via_buddy_intf = true;
 		}
 
-		DBG_8192C("buddy_intf's mlme state:0x%x\n", pbuddy_mlmepriv->fw_state);
+		DBG_8192D("buddy_intf's mlme state:0x%x\n", pbuddy_mlmepriv->fw_state);
 
 		need_indicate_scan_done = true;
 		goto check_need_indicate_scan_done;
@@ -1761,7 +1734,7 @@ static int cfg80211_rtw_scan(struct wiph
 	/* parsing request ssids, n_ssids */
 	for (i = 0; i < request->n_ssids && i < RTW_SSID_SCAN_AMOUNT; i++) {
 		#ifdef CONFIG_DEBUG_CFG80211
-		DBG_8192C("ssid=%s, len=%d\n", ssids[i].ssid, ssids[i].ssid_len);
+		DBG_8192D("ssid=%s, len=%d\n", ssids[i].ssid, ssids[i].ssid_len);
 		#endif
 		memcpy(ssid[i].Ssid, ssids[i].ssid, ssids[i].ssid_len);
 		ssid[i].SsidLength = ssids[i].ssid_len;
@@ -1772,7 +1745,7 @@ static int cfg80211_rtw_scan(struct wiph
 	if (request->n_channels == 1)
 	for (i=0;i<request->n_channels && i<RTW_CHANNEL_SCAN_AMOUNT;i++) {
 		#ifdef CONFIG_DEBUG_CFG80211
-		DBG_871X(FUNC_ADPT_FMT CHAN_FMT"\n", FUNC_ADPT_ARG(padapter), CHAN_ARG(request->channels[i]));
+		DBG_8192D(FUNC_ADPT_FMT CHAN_FMT"\n", FUNC_ADPT_ARG(padapter), CHAN_ARG(request->channels[i]));
 		#endif
 		ch[i].hw_value = request->channels[i]->hw_value;
 		ch[i].flags = request->channels[i]->flags;
@@ -1804,26 +1777,26 @@ exit:
 
 static int cfg80211_rtw_set_wiphy_params(struct wiphy *wiphy, u32 changed)
 {
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 	return 0;
 }
 
 static int cfg80211_rtw_join_ibss(struct wiphy *wiphy, struct net_device *ndev,
 				  struct cfg80211_ibss_params *params)
 {
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 	return 0;
 }
 
 static int cfg80211_rtw_leave_ibss(struct wiphy *wiphy, struct net_device *ndev)
 {
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 	return 0;
 }
 
 static int rtw_cfg80211_set_wpa_version(struct security_priv *psecuritypriv, u32 wpa_version)
 {
-	DBG_8192C("%s, wpa_version=%d\n", __func__, wpa_version);
+	DBG_8192D("%s, wpa_version=%d\n", __func__, wpa_version);
 
 	if (!wpa_version) {
 		psecuritypriv->ndisauthtype = Ndis802_11AuthModeOpen;
@@ -1848,7 +1821,7 @@ static int rtw_cfg80211_set_wpa_version(
 static int rtw_cfg80211_set_auth_type(struct security_priv *psecuritypriv,
 			     enum nl80211_auth_type sme_auth_type)
 {
-	DBG_8192C("%s, nl80211_auth_type=%d\n", __func__, sme_auth_type);
+	DBG_8192D("%s, nl80211_auth_type=%d\n", __func__, sme_auth_type);
 
 	switch (sme_auth_type) {
 	case NL80211_AUTHTYPE_AUTOMATIC:
@@ -1868,7 +1841,7 @@ static int rtw_cfg80211_set_auth_type(st
 
 		psecuritypriv->dot11AuthAlgrthm = dot11AuthAlgrthm_Shared;
 
-		psecuritypriv->ndisencryptstatus = Ndis802_11Encryption1Enabled;
+		psecuritypriv->ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 
 		break;
 	default:
@@ -1886,7 +1859,7 @@ static int rtw_cfg80211_set_cipher(struc
 	u32 *profile_cipher = ucast ? &psecuritypriv->dot11PrivacyAlgrthm :
 		&psecuritypriv->dot118021XGrpPrivacy;
 
-	DBG_8192C("%s, ucast=%d, cipher=0x%x\n", __func__, ucast, cipher);
+	DBG_8192D("%s, ucast=%d, cipher=0x%x\n", __func__, ucast, cipher);
 
 	if (!cipher) {
 		*profile_cipher = _NO_PRIVACY_;
@@ -1901,22 +1874,22 @@ static int rtw_cfg80211_set_cipher(struc
 		break;
 	case WLAN_CIPHER_SUITE_WEP40:
 		*profile_cipher = _WEP40_;
-		ndisencryptstatus = Ndis802_11Encryption1Enabled;
+		ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 		break;
 	case WLAN_CIPHER_SUITE_WEP104:
 		*profile_cipher = _WEP104_;
-		ndisencryptstatus = Ndis802_11Encryption1Enabled;
+		ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 		break;
 	case WLAN_CIPHER_SUITE_TKIP:
 		*profile_cipher = _TKIP_;
-		ndisencryptstatus = Ndis802_11Encryption2Enabled;
+		ndisencryptstatus = NDIS802_11ENCRYPTION2ENABLED;
 		break;
 	case WLAN_CIPHER_SUITE_CCMP:
 		*profile_cipher = _AES_;
-		ndisencryptstatus = Ndis802_11Encryption3Enabled;
+		ndisencryptstatus = NDIS802_11ENCRYPTION2ENABLED;
 		break;
 	default:
-		DBG_8192C("Unsupported cipher: 0x%x\n", cipher);
+		DBG_8192D("Unsupported cipher: 0x%x\n", cipher);
 		return -ENOTSUPP;
 	}
 
@@ -1928,20 +1901,20 @@ static int rtw_cfg80211_set_cipher(struc
 
 static int rtw_cfg80211_set_key_mgt(struct security_priv *psecuritypriv, u32 key_mgt)
 {
-	DBG_8192C("%s, key_mgt=0x%x\n", __func__, key_mgt);
+	DBG_8192D("%s, key_mgt=0x%x\n", __func__, key_mgt);
 
 	if (key_mgt == WLAN_AKM_SUITE_8021X)
 		psecuritypriv->dot11AuthAlgrthm = dot11AuthAlgrthm_8021X;
 	else if (key_mgt == WLAN_AKM_SUITE_PSK) {
 		psecuritypriv->dot11AuthAlgrthm = dot11AuthAlgrthm_8021X;
 	} else {
-		DBG_8192C("Invalid key mgt: 0x%x\n", key_mgt);
+		DBG_8192D("Invalid key mgt: 0x%x\n", key_mgt);
 	}
 
 	return 0;
 }
 
-static int rtw_cfg80211_set_wpa_ie(_adapter *padapter, u8 *pie, size_t ielen)
+static int rtw_cfg80211_set_wpa_ie(struct rtw_adapter *padapter, u8 *pie, size_t ielen)
 {
 	u8 *buf=NULL, *pos=NULL;
 	u32 left;
@@ -1974,9 +1947,9 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 	/* dump */
 	{
 		int i;
-		DBG_8192C("set wpa_ie(length:%zu):\n", ielen);
+		DBG_8192D("set wpa_ie(length:%zu):\n", ielen);
 		for (i=0;i<ielen;i=i+8)
-			DBG_8192C("0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x\n",buf[i],buf[i+1],buf[i+2],buf[i+3],buf[i+4],buf[i+5],buf[i+6],buf[i+7]);
+			DBG_8192D("0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x 0x%.2x\n",buf[i],buf[i+1],buf[i+2],buf[i+3],buf[i+4],buf[i+5],buf[i+6],buf[i+7]);
 	}
 
 	pos = buf;
@@ -1995,7 +1968,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 			padapter->securitypriv.ndisauthtype=Ndis802_11AuthModeWPAPSK;
 			memcpy(padapter->securitypriv.supplicant_ie, &pwpa[0], wpa_ielen+2);
 
-			DBG_8192C("got wpa_ie, wpa_ielen:%u\n", wpa_ielen);
+			DBG_8192D("got wpa_ie, wpa_ielen:%u\n", wpa_ielen);
 		}
 	}
 
@@ -2008,7 +1981,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 			padapter->securitypriv.ndisauthtype=Ndis802_11AuthModeWPA2PSK;
 			memcpy(padapter->securitypriv.supplicant_ie, &pwpa2[0], wpa2_ielen+2);
 
-			DBG_8192C("got wpa2_ie, wpa2_ielen:%u\n", wpa2_ielen);
+			DBG_8192D("got wpa2_ie, wpa2_ielen:%u\n", wpa2_ielen);
 		}
 	}
 
@@ -2029,19 +2002,19 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 			break;
 		case WPA_CIPHER_WEP40:
 			padapter->securitypriv.dot118021XGrpPrivacy=_WEP40_;
-			padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+			padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 			break;
 		case WPA_CIPHER_TKIP:
 			padapter->securitypriv.dot118021XGrpPrivacy=_TKIP_;
-			padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption2Enabled;
+			padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION2ENABLED;
 			break;
 		case WPA_CIPHER_CCMP:
 			padapter->securitypriv.dot118021XGrpPrivacy=_AES_;
-			padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption3Enabled;
+			padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION2ENABLED;
 			break;
 		case WPA_CIPHER_WEP104:
 			padapter->securitypriv.dot118021XGrpPrivacy=_WEP104_;
-			padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+			padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 			break;
 	}
 
@@ -2053,19 +2026,19 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 			break;
 		case WPA_CIPHER_WEP40:
 			padapter->securitypriv.dot11PrivacyAlgrthm=_WEP40_;
-			padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+			padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 			break;
 		case WPA_CIPHER_TKIP:
 			padapter->securitypriv.dot11PrivacyAlgrthm=_TKIP_;
-			padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption2Enabled;
+			padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION2ENABLED;
 			break;
 		case WPA_CIPHER_CCMP:
 			padapter->securitypriv.dot11PrivacyAlgrthm=_AES_;
-			padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption3Enabled;
+			padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION2ENABLED;
 			break;
 		case WPA_CIPHER_WEP104:
 			padapter->securitypriv.dot11PrivacyAlgrthm=_WEP104_;
-			padapter->securitypriv.ndisencryptstatus = Ndis802_11Encryption1Enabled;
+			padapter->securitypriv.ndisencryptstatus = NDIS802_11ENCRYPTION1ENABLED;
 			break;
 	}
 
@@ -2075,7 +2048,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 
 		wps_ie = rtw_get_wps_ie(buf, ielen, NULL, &wps_ielen);
 		if (wps_ie && wps_ielen > 0) {
-			DBG_8192C("got wps_ie, wps_ielen:%u\n", wps_ielen);
+			DBG_8192D("got wps_ie, wps_ielen:%u\n", wps_ielen);
 			padapter->securitypriv.wps_ie_len = wps_ielen<MAX_WPS_IE_LEN?wps_ielen:MAX_WPS_IE_LEN;
 			memcpy(padapter->securitypriv.wps_ie, wps_ie, padapter->securitypriv.wps_ie_len);
 			set_fwstate(&padapter->mlmepriv, WIFI_UNDER_WPS);
@@ -2093,7 +2066,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 		if ((p2p_ie=rtw_get_p2p_ie(buf, ielen, NULL, &p2p_ielen)))
 		{
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("%s p2p_assoc_req_ielen=%d\n", __func__, p2p_ielen);
+			DBG_8192D("%s p2p_assoc_req_ielen=%d\n", __func__, p2p_ielen);
 			#endif
 
 			if (pmlmepriv->p2p_assoc_req_ie)
@@ -2106,7 +2079,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 
 			pmlmepriv->p2p_assoc_req_ie = kmalloc(p2p_ielen, GFP_KERNEL);
 			if (pmlmepriv->p2p_assoc_req_ie == NULL) {
-				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				goto exit;
 			}
 			memcpy(pmlmepriv->p2p_assoc_req_ie, p2p_ie, p2p_ielen);
@@ -2124,7 +2097,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 		if (rtw_get_wfd_ie(buf, ielen, NULL, &wfd_ielen))
 		{
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("%s wfd_assoc_req_ielen=%d\n", __func__, wfd_ielen);
+			DBG_8192D("%s wfd_assoc_req_ielen=%d\n", __func__, wfd_ielen);
 			#endif
 
 			if (pmlmepriv->wfd_assoc_req_ie)
@@ -2137,7 +2110,7 @@ static int rtw_cfg80211_set_wpa_ie(_adap
 
 			pmlmepriv->wfd_assoc_req_ie = kmalloc(wfd_ielen, GFP_KERNEL);
 			if (pmlmepriv->wfd_assoc_req_ie == NULL) {
-				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				goto exit;
 			}
 			rtw_get_wfd_ie(buf, ielen, pmlmepriv->wfd_assoc_req_ie, &pmlmepriv->wfd_assoc_req_ie_len);
@@ -2168,26 +2141,26 @@ static int cfg80211_rtw_connect(struct w
 				 struct cfg80211_connect_params *sme)
 {
 	int ret=0;
-	_list *phead;
+	struct list_head *phead;
 	struct wlan_network *pnetwork = NULL;
 	NDIS_802_11_AUTHENTICATION_MODE authmode;
 	struct ndis_802_11_ssid ndis_ssid;
 	u8 *dst_ssid, *src_ssid;
 	u8 *dst_bssid, *src_bssid;
 	u8 matched=false;
-	_adapter *padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct mlme_priv *pmlmepriv = &padapter->mlmepriv;
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
-	_queue *queue = &pmlmepriv->scanned_queue;
+	struct __queue *queue = &pmlmepriv->scanned_queue;
 
-	DBG_871X("=>"FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
-	DBG_871X("privacy=%d, key=%p, key_len=%d, key_idx=%d\n",
+	DBG_8192D("=>"FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D("privacy=%d, key=%p, key_len=%d, key_idx=%d\n",
 		sme->privacy, sme->key, sme->key_len, sme->key_idx);
 
 	if (wdev_to_priv(padapter->rtw_wdev)->block == true)
 	{
 		ret = -EBUSY;
-		DBG_871X("%s wdev_priv.block is set\n", __func__);
+		DBG_8192D("%s wdev_priv.block is set\n", __func__);
 		goto exit;
 	}
 
@@ -2203,7 +2176,7 @@ static int cfg80211_rtw_connect(struct w
 
 #ifdef CONFIG_CONCURRENT_MODE
 	if (check_buddy_fwstate(padapter, _FW_UNDER_LINKING) == true) {
-		DBG_8192C("%s, but buddy_intf is under linking\n", __func__);
+		DBG_8192D("%s, but buddy_intf is under linking\n", __func__);
 		ret = -EINVAL;
 		goto exit;
 	}
@@ -2228,14 +2201,14 @@ static int cfg80211_rtw_connect(struct w
 	ndis_ssid.SsidLength = sme->ssid_len;
 	memcpy(ndis_ssid.Ssid, sme->ssid, sme->ssid_len);
 
-	DBG_8192C("ssid=%s, len=%zu\n", ndis_ssid.Ssid, sme->ssid_len);
+	DBG_8192D("ssid=%s, len=%zu\n", ndis_ssid.Ssid, sme->ssid_len);
 
 	if (sme->bssid)
-		DBG_8192C("bssid=%pM\n", sme->bssid);
+		DBG_8192D("bssid=%pM\n", sme->bssid);
 
 	if (check_fwstate(pmlmepriv, _FW_UNDER_LINKING) == true) {
 		ret = -EBUSY;
-		DBG_8192C("%s, fw_state=0x%x, goto exit\n", __func__, pmlmepriv->fw_state);
+		DBG_8192D("%s, fw_state=0x%x, goto exit\n", __func__, pmlmepriv->fw_state);
 		goto exit;
 	}
 	if (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY) == true) {
@@ -2279,7 +2252,7 @@ static int cfg80211_rtw_connect(struct w
 
 			if ((_rtw_memcmp(dst_bssid, src_bssid, ETH_ALEN)) == true)
 			{
-				DBG_8192C("matched by bssid\n");
+				DBG_8192D("matched by bssid\n");
 
 				ndis_ssid.SsidLength = pnetwork->network.Ssid.SsidLength;
 				memcpy(ndis_ssid.Ssid, pnetwork->network.Ssid.Ssid, pnetwork->network.Ssid.SsidLength);
@@ -2296,7 +2269,7 @@ static int cfg80211_rtw_connect(struct w
 			if ((_rtw_memcmp(dst_ssid, src_ssid, ndis_ssid.SsidLength) == true) &&
 				(pnetwork->network.Ssid.SsidLength==ndis_ssid.SsidLength))
 			{
-				DBG_8192C("matched by ssid\n");
+				DBG_8192D("matched by ssid\n");
 				matched=true;
 				break;
 			}
@@ -2307,7 +2280,7 @@ static int cfg80211_rtw_connect(struct w
 	if ((matched == false) || (pnetwork== NULL))
 	{
 		ret = -ENOENT;
-		DBG_8192C("connect, matched == false, goto exit\n");
+		DBG_8192D("connect, matched == false, goto exit\n");
 		spin_unlock_bh(&queue->lock);
 		spin_unlock_bh(&pmlmepriv->lock);
 		goto exit;
@@ -2337,7 +2310,7 @@ static int cfg80211_rtw_connect(struct w
 	if (ret < 0)
 		goto exit;
 
-	DBG_8192C("%s, ie_len=%zu\n", __func__, sme->ie_len);
+	DBG_8192D("%s, ie_len=%zu\n", __func__, sme->ie_len);
 
 	ret = rtw_cfg80211_set_wpa_ie(padapter, sme->ie, sme->ie_len);
 	if (ret < 0)
@@ -2356,7 +2329,7 @@ static int cfg80211_rtw_connect(struct w
 	{
 		u32 wep_key_idx, wep_key_len,wep_total_len;
 		NDIS_802_11_WEP	 *pwep = NULL;
-		DBG_871X("%s(): Shared/Auto WEP\n",__func__);
+		DBG_8192D("%s(): Shared/Auto WEP\n",__func__);
 
 		wep_key_idx = sme->key_idx;
 		wep_key_len = sme->key_len;
@@ -2372,7 +2345,7 @@ static int cfg80211_rtw_connect(struct w
 			wep_total_len = wep_key_len + FIELD_OFFSET(NDIS_802_11_WEP, KeyMaterial);
 			pwep =(NDIS_802_11_WEP	 *) kmalloc(wep_total_len, GFP_KERNEL);
 			if (pwep == NULL) {
-				DBG_871X(" wpa_set_encryption: pwep allocate fail !!!\n");
+				DBG_8192D(" wpa_set_encryption: pwep allocate fail !!!\n");
 				ret = -ENOMEM;
 				goto exit;
 			}
@@ -2426,11 +2399,11 @@ static int cfg80211_rtw_connect(struct w
 		goto exit;
 	}
 
-	DBG_8192C("set ssid:dot11AuthAlgrthm=%d, dot11PrivacyAlgrthm=%d, dot118021XGrpPrivacy=%d\n", psecuritypriv->dot11AuthAlgrthm, psecuritypriv->dot11PrivacyAlgrthm, psecuritypriv->dot118021XGrpPrivacy);
+	DBG_8192D("set ssid:dot11AuthAlgrthm=%d, dot11PrivacyAlgrthm=%d, dot118021XGrpPrivacy=%d\n", psecuritypriv->dot11AuthAlgrthm, psecuritypriv->dot11PrivacyAlgrthm, psecuritypriv->dot118021XGrpPrivacy);
 
 exit:
 
-	DBG_8192C("<=%s, ret %d\n",__func__, ret);
+	DBG_8192D("<=%s, ret %d\n",__func__, ret);
 
 	return ret;
 }
@@ -2438,9 +2411,9 @@ exit:
 static int cfg80211_rtw_disconnect(struct wiphy *wiphy, struct net_device *ndev,
 				   u16 reason_code)
 {
-	_adapter *padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	rtw_set_roaming(padapter, 0);
 
@@ -2450,7 +2423,7 @@ static int cfg80211_rtw_disconnect(struc
 		LeaveAllPowerSaveMode(padapter);
 		rtw_disassoc_cmd(padapter, 500, false);
 
-		DBG_871X("%s...call rtw_indicate_disconnect\n", __func__);
+		DBG_8192D("%s...call rtw_indicate_disconnect\n", __func__);
 
 		padapter->mlmepriv.not_indic_disco = true;
 		rtw_indicate_disconnect(padapter);
@@ -2466,19 +2439,19 @@ static int cfg80211_rtw_set_txpower(stru
 				    struct wireless_dev *wdev,
 				    enum nl80211_tx_power_setting type, int mbm)
 {
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 	return 0;
 }
 
 static int cfg80211_rtw_get_txpower(struct wiphy *wiphy,
 				    struct wireless_dev *wdev, int *dbm)
 {
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 	*dbm = (12);
 	return 0;
 }
 
-inline bool rtw_cfg80211_pwr_mgmt(_adapter *adapter)
+inline bool rtw_cfg80211_pwr_mgmt(struct rtw_adapter *adapter)
 {
 	struct rtw_wdev_priv *rtw_wdev_priv = wdev_to_priv(adapter->rtw_wdev);
 	return rtw_wdev_priv->power_mgmt;
@@ -2488,10 +2461,10 @@ static int cfg80211_rtw_set_power_mgmt(s
 				       struct net_device *ndev,
 				       bool enabled, int timeout)
 {
-	_adapter *padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct rtw_wdev_priv *rtw_wdev_priv = wdev_to_priv(padapter->rtw_wdev);
 
-	DBG_871X(FUNC_NDEV_FMT" enabled:%u, timeout:%d\n", FUNC_NDEV_ARG(ndev),
+	DBG_8192D(FUNC_NDEV_FMT" enabled:%u, timeout:%d\n", FUNC_NDEV_ARG(ndev),
 		enabled, timeout);
 
 	rtw_wdev_priv->power_mgmt = enabled;
@@ -2506,11 +2479,11 @@ static int cfg80211_rtw_set_pmksa(struct
 				  struct cfg80211_pmksa *pmksa)
 {
 	u8	index,blInserted = false;
-	_adapter	*padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct security_priv	*psecuritypriv = &padapter->securitypriv;
 	u8	strZeroMacAddress[ETH_ALEN] = { 0x00 };
 
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(netdev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(netdev));
 
 	if (_rtw_memcmp(pmksa->bssid, strZeroMacAddress, ETH_ALEN) == true)
 	{
@@ -2524,7 +2497,7 @@ static int cfg80211_rtw_set_pmksa(struct
 	{
 		if (_rtw_memcmp(psecuritypriv->PMKIDList[index].Bssid, pmksa->bssid, ETH_ALEN) ==true)
 		{ /*  BSSID is matched, the same AP => rewrite with new PMKID. */
-			DBG_871X(FUNC_NDEV_FMT" BSSID exists in the PMKList.\n", FUNC_NDEV_ARG(netdev));
+			DBG_8192D(FUNC_NDEV_FMT" BSSID exists in the PMKList.\n", FUNC_NDEV_ARG(netdev));
 
 			memcpy(psecuritypriv->PMKIDList[index].PMKID, pmksa->pmkid, WLAN_PMKID_LEN);
 			psecuritypriv->PMKIDList[index].bUsed = true;
@@ -2537,7 +2510,7 @@ static int cfg80211_rtw_set_pmksa(struct
 	if (!blInserted)
 	{
 		/*  Find a new entry */
-		DBG_871X(FUNC_NDEV_FMT" Use the new entry index = %d for this PMKID.\n",
+		DBG_8192D(FUNC_NDEV_FMT" Use the new entry index = %d for this PMKID.\n",
 			FUNC_NDEV_ARG(netdev), psecuritypriv->PMKIDIndex);
 
 		memcpy(psecuritypriv->PMKIDList[psecuritypriv->PMKIDIndex].Bssid, pmksa->bssid, ETH_ALEN);
@@ -2559,10 +2532,10 @@ static int cfg80211_rtw_del_pmksa(struct
 				  struct cfg80211_pmksa *pmksa)
 {
 	u8	index, bMatched = false;
-	_adapter	*padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct security_priv	*psecuritypriv = &padapter->securitypriv;
 
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(netdev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(netdev));
 
 	for (index=0 ; index<NUM_PMKID_CACHE; index++)
 	{
@@ -2578,7 +2551,7 @@ static int cfg80211_rtw_del_pmksa(struct
 
 	if (false == bMatched)
 	{
-		DBG_871X(FUNC_NDEV_FMT" do not have matched BSSID\n"
+		DBG_8192D(FUNC_NDEV_FMT" do not have matched BSSID\n"
 			, FUNC_NDEV_ARG(netdev));
 		return -EINVAL;
 	}
@@ -2589,10 +2562,10 @@ static int cfg80211_rtw_del_pmksa(struct
 static int cfg80211_rtw_flush_pmksa(struct wiphy *wiphy,
 				    struct net_device *netdev)
 {
-	_adapter	*padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct security_priv	*psecuritypriv = &padapter->securitypriv;
 
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(netdev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(netdev));
 
 	memset(&psecuritypriv->PMKIDList[0], 0x00, sizeof(RT_PMKID_LIST) * NUM_PMKID_CACHE);
 	psecuritypriv->PMKIDIndex = 0;
@@ -2601,7 +2574,7 @@ static int cfg80211_rtw_flush_pmksa(stru
 }
 
 #ifdef CONFIG_92D_AP_MODE
-void rtw_cfg80211_indicate_sta_assoc(_adapter *padapter, u8 *pmgmt_frame, uint frame_len)
+void rtw_cfg80211_indicate_sta_assoc(struct rtw_adapter *padapter, u8 *pmgmt_frame, uint frame_len)
 {
 	s32 freq;
 	int channel;
@@ -2609,7 +2582,7 @@ void rtw_cfg80211_indicate_sta_assoc(_ad
 	struct mlme_ext_priv *pmlmeext = &(padapter->mlmeextpriv);
 	struct net_device *ndev = padapter->pnetdev;
 
-	DBG_8192C("%s(padapter=%p,%s)\n", __func__, padapter, ndev->name);
+	DBG_8192D("%s(padapter=%p,%s)\n", __func__, padapter, ndev->name);
 
 #if defined(RTW_USE_CFG80211_STA_EVENT) || defined(COMPAT_KERNEL_RELEASE)
 	{
@@ -2635,22 +2608,22 @@ void rtw_cfg80211_indicate_sta_assoc(_ad
 
 	#ifdef COMPAT_KERNEL_RELEASE
 	rtw_cfg80211_rx_mgmt(padapter, freq, 0, pmgmt_frame, frame_len, GFP_ATOMIC);
-	#elif !defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER)
+	#elif !defined(CONFIG_IOCTL_CFG80211)
 	rtw_cfg80211_rx_mgmt(padapter, freq, 0, pmgmt_frame, frame_len, GFP_ATOMIC);
 	#else /* COMPAT_KERNEL_RELEASE */
 	{
 		/* to avoid WARN_ON(wdev->iftype != NL80211_IFTYPE_STATION)  when calling cfg80211_send_rx_assoc() */
 		pwdev->iftype = NL80211_IFTYPE_STATION;
-		DBG_8192C("iftype=%d before call cfg80211_send_rx_assoc()\n", pwdev->iftype);
+		DBG_8192D("iftype=%d before call cfg80211_send_rx_assoc()\n", pwdev->iftype);
 		rtw_cfg80211_send_rx_assoc(padapter, NULL, pmgmt_frame, frame_len);
-		DBG_8192C("iftype=%d after call cfg80211_send_rx_assoc()\n", pwdev->iftype);
+		DBG_8192D("iftype=%d after call cfg80211_send_rx_assoc()\n", pwdev->iftype);
 		pwdev->iftype = NL80211_IFTYPE_AP;
 	}
 	#endif /* COMPAT_KERNEL_RELEASE */
 #endif /* defined(RTW_USE_CFG80211_STA_EVENT) */
 }
 
-void rtw_cfg80211_indicate_sta_disassoc(_adapter *padapter, unsigned char *da, unsigned short reason)
+void rtw_cfg80211_indicate_sta_disassoc(struct rtw_adapter *padapter, unsigned char *da, unsigned short reason)
 {
 	s32 freq;
 	int channel;
@@ -2663,7 +2636,7 @@ void rtw_cfg80211_indicate_sta_disassoc(
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct net_device *ndev = padapter->pnetdev;
 
-	DBG_8192C("%s(padapter=%p,%s)\n", __func__, padapter, ndev->name);
+	DBG_8192D("%s(padapter=%p,%s)\n", __func__, padapter, ndev->name);
 
 #if defined(RTW_USE_CFG80211_STA_EVENT) || defined(COMPAT_KERNEL_RELEASE)
 	xcfg80211_del_sta(ndev, da, GFP_ATOMIC);
@@ -2696,7 +2669,7 @@ void rtw_cfg80211_indicate_sta_disassoc(
 
 	#ifdef COMPAT_KERNEL_RELEASE
 	rtw_cfg80211_rx_mgmt(padapter, freq, 0, mgmt_buf, frame_len, GFP_ATOMIC);
-	#elif !defined(CONFIG_CFG80211_FORCE_COMPATIBLE_2_6_37_UNDER)
+	#elif !defined(CONFIG_IOCTL_CFG80211)
 	rtw_cfg80211_rx_mgmt(padapter, freq, 0, mgmt_buf, frame_len, GFP_ATOMIC);
 	#else /* COMPAT_KERNEL_RELEASE */
 	cfg80211_send_disassoc(padapter->pnetdev, mgmt_buf, frame_len);
@@ -2708,7 +2681,7 @@ static int rtw_cfg80211_monitor_if_open(
 {
 	int ret = 0;
 
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 
 	return ret;
 }
@@ -2717,7 +2690,7 @@ static int rtw_cfg80211_monitor_if_close
 {
 	int ret = 0;
 
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 
 	return ret;
 }
@@ -2735,9 +2708,9 @@ static int rtw_cfg80211_monitor_if_xmit_
 	unsigned char dst_mac_addr[6];
 	struct ieee80211_hdr *dot11_hdr;
 	struct ieee80211_radiotap_header *rtap_hdr;
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(ndev);
+	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(ndev);
 
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	if (unlikely(skb->len < sizeof(struct ieee80211_radiotap_header)))
 		goto fail;
@@ -2752,7 +2725,7 @@ static int rtw_cfg80211_monitor_if_xmit_
 
 	if (rtap_len != 14)
 	{
-		DBG_8192C("radiotap len (should be 14): %d\n", rtap_len);
+		DBG_8192D("radiotap len (should be 14): %d\n", rtap_len);
 		goto fail;
 	}
 
@@ -2782,7 +2755,7 @@ static int rtw_cfg80211_monitor_if_xmit_
 		memcpy(pdata, dst_mac_addr, sizeof(dst_mac_addr));
 		memcpy(pdata + sizeof(dst_mac_addr), src_mac_addr, sizeof(src_mac_addr));
 
-		DBG_8192C("should be eapol packet\n");
+		DBG_8192D("should be eapol packet\n");
 
 		/* Use the real net device to transmit the packet */
 		ret =  rtw_xmit_entry(skb, padapter->pnetdev);
@@ -2807,21 +2780,21 @@ static int rtw_cfg80211_monitor_if_xmit_
 		int type = -1;
 
 		if (rtw_action_frame_parse(buf, len, &category, &action) == false) {
-			DBG_8192C(FUNC_NDEV_FMT" frame_control:0x%x\n", FUNC_NDEV_ARG(ndev),
+			DBG_8192D(FUNC_NDEV_FMT" frame_control:0x%x\n", FUNC_NDEV_ARG(ndev),
 				le16_to_cpu(((struct rtw_ieee80211_hdr_3addr *)buf)->frame_ctl));
 			goto fail;
 		}
 
-		DBG_8192C("RTW_Tx:da=%pM via "FUNC_NDEV_FMT"\n",
+		DBG_8192D("RTW_Tx:da=%pM via "FUNC_NDEV_FMT"\n",
 			GetAddr1Ptr(buf), FUNC_NDEV_ARG(ndev));
 		#ifdef CONFIG_P2P
 		if ((type = rtw_p2p_check_frames(padapter, buf, len, true)) >= 0)
 			goto dump;
 		#endif
 		if (category == RTW_WLAN_CATEGORY_PUBLIC)
-			DBG_871X("RTW_Tx:%s\n", action_public_str(action));
+			DBG_8192D("RTW_Tx:%s\n", action_public_str(action));
 		else
-			DBG_871X("RTW_Tx:category(%u), action(%u)\n", category, action);
+			DBG_8192D("RTW_Tx:category(%u), action(%u)\n", category, action);
 
 dump:
 		/* starting alloc mgmt frame to dump it */
@@ -2868,7 +2841,7 @@ dump:
 	}
 	else
 	{
-		DBG_8192C("frame_ctl=0x%x\n", frame_ctl & (RTW_IEEE80211_FCTL_FTYPE|RTW_IEEE80211_FCTL_STYPE));
+		DBG_8192D("frame_ctl=0x%x\n", frame_ctl & (RTW_IEEE80211_FCTL_FTYPE|RTW_IEEE80211_FCTL_STYPE));
 	}
 
 fail:
@@ -2880,14 +2853,14 @@ fail:
 
 static void rtw_cfg80211_monitor_if_set_multicast_list(struct net_device *ndev)
 {
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 }
 
 static int rtw_cfg80211_monitor_if_set_mac_address(struct net_device *ndev, void *addr)
 {
 	int ret = 0;
 
-	DBG_8192C("%s\n", __func__);
+	DBG_8192D("%s\n", __func__);
 
 	return ret;
 }
@@ -2899,7 +2872,7 @@ static const struct net_device_ops rtw_c
        .ndo_set_mac_address = rtw_cfg80211_monitor_if_set_mac_address,
 };
 
-static int rtw_cfg80211_add_monitor_if (_adapter *padapter, char *name, struct net_device **ndev)
+static int rtw_cfg80211_add_monitor_if(struct rtw_adapter *padapter, char *name, struct net_device **ndev)
 {
 	int ret = 0;
 	struct net_device* mon_ndev = NULL;
@@ -2908,13 +2881,13 @@ static int rtw_cfg80211_add_monitor_if (
 	struct rtw_wdev_priv *pwdev_priv = wdev_to_priv(padapter->rtw_wdev);
 
 	if (!name) {
-		DBG_871X(FUNC_ADPT_FMT" without specific name\n", FUNC_ADPT_ARG(padapter));
+		DBG_8192D(FUNC_ADPT_FMT" without specific name\n", FUNC_ADPT_ARG(padapter));
 		ret = -EINVAL;
 		goto out;
 	}
 
 	if (pwdev_priv->pmon_ndev) {
-		DBG_871X(FUNC_ADPT_FMT" monitor interface exist: "NDEV_FMT"\n",
+		DBG_8192D(FUNC_ADPT_FMT" monitor interface exist: "NDEV_FMT"\n",
 			FUNC_ADPT_ARG(padapter), NDEV_ARG(pwdev_priv->pmon_ndev));
 		ret = -EBUSY;
 		goto out;
@@ -2922,7 +2895,7 @@ static int rtw_cfg80211_add_monitor_if (
 
 	mon_ndev = alloc_etherdev(sizeof(struct rtw_netdev_priv_indicator));
 	if (!mon_ndev) {
-		DBG_871X(FUNC_ADPT_FMT" allocate ndev fail\n", FUNC_ADPT_ARG(padapter));
+		DBG_8192D(FUNC_ADPT_FMT" allocate ndev fail\n", FUNC_ADPT_ARG(padapter));
 		ret = -ENOMEM;
 		goto out;
 	}
@@ -2936,12 +2909,12 @@ static int rtw_cfg80211_add_monitor_if (
 
 	pnpi = netdev_priv(mon_ndev);
 	pnpi->priv = padapter;
-	pnpi->sizeof_priv = sizeof(_adapter);
+	pnpi->sizeof_priv = sizeof(struct rtw_adapter);
 
 	/*  wdev */
 	mon_wdev = (struct wireless_dev *)kzalloc(sizeof(struct wireless_dev), GFP_KERNEL);
 	if (!mon_wdev) {
-		DBG_871X(FUNC_ADPT_FMT" allocate mon_wdev fail\n", FUNC_ADPT_ARG(padapter));
+		DBG_8192D(FUNC_ADPT_FMT" allocate mon_wdev fail\n", FUNC_ADPT_ARG(padapter));
 		ret = -ENOMEM;
 		goto out;
 	}
@@ -2981,9 +2954,9 @@ static struct wireless_dev *add_virtual_
 {
 	int ret = 0;
 	struct net_device* ndev = NULL;
-	_adapter *padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 
-	DBG_871X(FUNC_ADPT_FMT " wiphy:%s, name:%s, type:%d\n",
+	DBG_8192D(FUNC_ADPT_FMT " wiphy:%s, name:%s, type:%d\n",
 		FUNC_ADPT_ARG(padapter), wiphy_name(wiphy), name, type);
 
 	switch (type) {
@@ -3006,11 +2979,11 @@ static struct wireless_dev *add_virtual_
 		break;
 	default:
 		ret = -ENODEV;
-		DBG_871X("Unsupported interface type\n");
+		DBG_8192D("Unsupported interface type\n");
 		break;
 	}
 
-	DBG_871X(FUNC_ADPT_FMT" ndev:%p, ret:%d\n", FUNC_ADPT_ARG(padapter), ndev, ret);
+	DBG_8192D(FUNC_ADPT_FMT" ndev:%p, ret:%d\n", FUNC_ADPT_ARG(padapter), ndev, ret);
 
 	return ndev ? ndev->ieee80211_ptr : ERR_PTR(ret);
 }
@@ -3030,14 +3003,14 @@ static int cfg80211_rtw_del_virtual_intf
 	if (ndev == pwdev_priv->pmon_ndev) {
 		pwdev_priv->pmon_ndev = NULL;
 		pwdev_priv->ifname_mon[0] = '\0';
-		DBG_871X(FUNC_NDEV_FMT" remove monitor interface\n", FUNC_NDEV_ARG(ndev));
+		DBG_8192D(FUNC_NDEV_FMT" remove monitor interface\n", FUNC_NDEV_ARG(ndev));
 	}
 
 exit:
 	return 0;
 }
 
-static int rtw_add_beacon(_adapter *adapter, const u8 *head, size_t head_len, const u8 *tail, size_t tail_len)
+static int rtw_add_beacon(struct rtw_adapter *adapter, const u8 *head, size_t head_len, const u8 *tail, size_t tail_len)
 {
 	int ret=0;
 	u8 *pbuf = NULL;
@@ -3047,7 +3020,7 @@ static int rtw_add_beacon(_adapter *adap
 	u8 got_p2p_ie = false;
 	struct mlme_priv *pmlmepriv = &(adapter->mlmepriv);
 
-	DBG_8192C("%s beacon_head_len=%zu, beacon_tail_len=%zu\n", __func__, head_len, tail_len);
+	DBG_8192D("%s beacon_head_len=%zu, beacon_tail_len=%zu\n", __func__, head_len, tail_len);
 
 	if (check_fwstate(pmlmepriv, WIFI_AP_STATE) != true)
 		return -EINVAL;
@@ -3066,13 +3039,13 @@ static int rtw_add_beacon(_adapter *adap
 
 	/* check wps ie if inclued */
 	if (rtw_get_wps_ie(pbuf+_FIXED_IE_LENGTH_, len-_FIXED_IE_LENGTH_, NULL, &wps_ielen))
-		DBG_8192C("add bcn, wps_ielen=%d\n", wps_ielen);
+		DBG_8192D("add bcn, wps_ielen=%d\n", wps_ielen);
 
 #ifdef CONFIG_P2P
 	/* check p2p ie if inclued */
 	if (rtw_get_p2p_ie(pbuf+_FIXED_IE_LENGTH_, len-_FIXED_IE_LENGTH_, NULL, &p2p_ielen))
 	{
-		DBG_8192C("got p2p_ie, len=%d\n", p2p_ielen);
+		DBG_8192D("got p2p_ie, len=%d\n", p2p_ielen);
 		got_p2p_ie = true;
 	}
 #endif
@@ -3091,7 +3064,7 @@ static int rtw_add_beacon(_adapter *adap
 
 			if (rtw_p2p_chk_state(pwdinfo, P2P_STATE_NONE))
 			{
-				DBG_8192C("Enable P2P function for the first time\n");
+				DBG_8192D("Enable P2P function for the first time\n");
 				rtw_p2p_enable(adapter, P2P_ROLE_GO);
 				wdev_to_priv(adapter->rtw_wdev)->p2p_enabled = true;
 			}
@@ -3101,7 +3074,7 @@ static int rtw_add_beacon(_adapter *adap
 				_cancel_timer_ex(&pwdinfo->restore_p2p_state_timer);
 				_cancel_timer_ex(&pwdinfo->pre_tx_scan_timer);
 
-				DBG_8192C("enter GO Mode, p2p_ielen=%d\n", p2p_ielen);
+				DBG_8192D("enter GO Mode, p2p_ielen=%d\n", p2p_ielen);
 
 				rtw_p2p_set_role(pwdinfo, P2P_ROLE_GO);
 				rtw_p2p_set_state(pwdinfo, P2P_STATE_GONEGO_OK);
@@ -3130,9 +3103,9 @@ static int cfg80211_rtw_start_ap(struct
 								struct cfg80211_ap_settings *settings)
 {
 	int ret = 0;
-	_adapter *adapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *adapter = wiphy_to_adapter(wiphy);
 
-	DBG_871X(FUNC_NDEV_FMT" hidden_ssid:%d, auth_type:%d\n", FUNC_NDEV_ARG(ndev),
+	DBG_8192D(FUNC_NDEV_FMT" hidden_ssid:%d, auth_type:%d\n", FUNC_NDEV_ARG(ndev),
 		settings->hidden_ssid, settings->auth_type);
 
 	ret = rtw_add_beacon(adapter, settings->beacon.head, settings->beacon.head_len,
@@ -3157,9 +3130,9 @@ static int cfg80211_rtw_change_beacon(st
                                 struct cfg80211_beacon_data *info)
 {
 	int ret = 0;
-	_adapter *adapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *adapter = wiphy_to_adapter(wiphy);
 
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	ret = rtw_add_beacon(adapter, info->head, info->head_len, info->tail, info->tail_len);
 
@@ -3168,14 +3141,14 @@ static int cfg80211_rtw_change_beacon(st
 
 static int cfg80211_rtw_stop_ap(struct wiphy *wiphy, struct net_device *ndev)
 {
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 	return 0;
 }
 
 static int cfg80211_rtw_add_station(struct wiphy *wiphy, struct net_device *ndev,
 			       u8 *mac, struct station_parameters *params)
 {
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	return 0;
 }
@@ -3184,24 +3157,24 @@ static int	cfg80211_rtw_del_station(stru
 			       u8 *mac)
 {
 	int ret=0;
-	_list	*phead, *plist;
+	struct list_head *phead, *plist;
 	u8 updated;
 	struct sta_info *psta = NULL;
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(ndev);
+	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(ndev);
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 	struct sta_priv *pstapriv = &padapter->stapriv;
 
-	DBG_871X("+"FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D("+"FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	if (check_fwstate(pmlmepriv, (_FW_LINKED|WIFI_AP_STATE)) != true)
 	{
-		DBG_8192C("%s, fw_state != FW_LINKED|WIFI_AP_STATE\n", __func__);
+		DBG_8192D("%s, fw_state != FW_LINKED|WIFI_AP_STATE\n", __func__);
 		return -EINVAL;
 	}
 
 	if (!mac)
 	{
-		DBG_8192C("flush all sta, and cam_entry\n");
+		DBG_8192D("flush all sta, and cam_entry\n");
 
 		flush_all_cam_entry(padapter);	/* clear CAM */
 
@@ -3210,7 +3183,7 @@ static int	cfg80211_rtw_del_station(stru
 		return ret;
 	}
 
-	DBG_8192C("free sta macaddr = %pM\n", mac);
+	DBG_8192D("free sta macaddr = %pM\n", mac);
 
 	if (mac[0] == 0xff && mac[1] == 0xff &&
 	    mac[2] == 0xff && mac[3] == 0xff &&
@@ -3231,15 +3204,11 @@ static int	cfg80211_rtw_del_station(stru
 
 		plist = plist->next;
 
-		if (_rtw_memcmp(mac, psta->hwaddr, ETH_ALEN))
-		{
-			if (psta->dot8021xalg == 1 && psta->bpairwise_key_installed == false)
-			{
-				DBG_8192C("%s, sta's dot8021xalg = 1 and key_installed = false\n", __func__);
-			}
-			else
-			{
-				DBG_8192C("free psta=%p, aid=%d\n", psta, psta->aid);
+		if (_rtw_memcmp(mac, psta->hwaddr, ETH_ALEN)) {
+			if (psta->dot8021xalg == 1 && psta->bpairwise_key_installed == false) {
+				DBG_8192D("%s, sta's dot8021xalg = 1 and key_installed = false\n", __func__);
+			} else {
+				DBG_8192D("free psta=%p, aid=%d\n", psta, psta->aid);
 
 				list_del_init(&psta->asoc_list);
 				pstapriv->asoc_list_cnt--;
@@ -3259,7 +3228,7 @@ static int	cfg80211_rtw_del_station(stru
 
 	associated_clients_update(padapter, updated);
 
-	DBG_871X("-"FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D("-"FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	return ret;
 }
@@ -3267,7 +3236,7 @@ static int	cfg80211_rtw_del_station(stru
 static int	cfg80211_rtw_change_station(struct wiphy *wiphy, struct net_device *ndev,
 				  u8 *mac, struct station_parameters *params)
 {
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	return 0;
 }
@@ -3275,7 +3244,7 @@ static int	cfg80211_rtw_change_station(s
 static int	cfg80211_rtw_dump_station(struct wiphy *wiphy, struct net_device *ndev,
 			       int idx, u8 *mac, struct station_info *sinfo)
 {
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	/* TODO: dump scanned queue */
 
@@ -3287,7 +3256,7 @@ static int	cfg80211_rtw_change_bss(struc
 {
 	u8 i;
 
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 	return 0;
 }
 
@@ -3295,7 +3264,7 @@ static int rtw_set_channel(struct wiphy
 			   struct ieee80211_channel *chan,
 			   enum nl80211_channel_type channel_type)
 {
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	return 0;
 }
@@ -3303,7 +3272,7 @@ static int rtw_set_channel(struct wiphy
 static int	cfg80211_rtw_auth(struct wiphy *wiphy, struct net_device *ndev,
 			struct cfg80211_auth_request *req)
 {
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	return 0;
 }
@@ -3311,13 +3280,13 @@ static int	cfg80211_rtw_auth(struct wiph
 static int	cfg80211_rtw_assoc(struct wiphy *wiphy, struct net_device *ndev,
 			 struct cfg80211_assoc_request *req)
 {
-	DBG_871X(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
+	DBG_8192D(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
 	return 0;
 }
 #endif /* CONFIG_92D_AP_MODE */
 
-void rtw_cfg80211_rx_action_p2p(_adapter *padapter, u8 *pmgmt_frame, uint frame_len)
+void rtw_cfg80211_rx_action_p2p(struct rtw_adapter *padapter, u8 *pmgmt_frame, uint frame_len)
 {
 	int type;
 	s32 freq;
@@ -3327,14 +3296,14 @@ void rtw_cfg80211_rx_action_p2p(_adapter
 
 	channel = rtw_get_oper_ch(padapter);
 
-	DBG_8192C("RTW_Rx:cur_ch=%d\n", channel);
+	DBG_8192D("RTW_Rx:cur_ch=%d\n", channel);
 	#ifdef CONFIG_P2P
 	type = rtw_p2p_check_frames(padapter, pmgmt_frame, frame_len, false);
 	if (type >= 0)
 		goto indicate;
 	#endif
 	rtw_action_frame_parse(pmgmt_frame, frame_len, &category, &action);
-	DBG_871X("RTW_Rx:category(%u), action(%u)\n", category, action);
+	DBG_8192D("RTW_Rx:category(%u), action(%u)\n", category, action);
 
 indicate:
 	if (channel <= RTW_CH_MAX_2G_CHANNEL)
@@ -3345,7 +3314,7 @@ indicate:
 	rtw_cfg80211_rx_mgmt(padapter, freq, 0, pmgmt_frame, frame_len, GFP_ATOMIC);
 }
 
-void rtw_cfg80211_rx_p2p_action_public(_adapter *padapter, u8 *pmgmt_frame, uint frame_len)
+void rtw_cfg80211_rx_p2p_action_public(struct rtw_adapter *padapter, u8 *pmgmt_frame, uint frame_len)
 {
 	int type;
 	s32 freq;
@@ -3355,7 +3324,7 @@ void rtw_cfg80211_rx_p2p_action_public(_
 
 	channel = rtw_get_oper_ch(padapter);
 
-	DBG_8192C("RTW_Rx:cur_ch=%d\n", channel);
+	DBG_8192D("RTW_Rx:cur_ch=%d\n", channel);
 	#ifdef CONFIG_P2P
 	type = rtw_p2p_check_frames(padapter, pmgmt_frame, frame_len, false);
 	if (type >= 0) {
@@ -3368,7 +3337,7 @@ void rtw_cfg80211_rx_p2p_action_public(_
 	}
 	#endif
 	rtw_action_frame_parse(pmgmt_frame, frame_len, &category, &action);
-	DBG_871X("RTW_Rx:category(%u), action(%u)\n", category, action);
+	DBG_8192D("RTW_Rx:category(%u), action(%u)\n", category, action);
 
 indicate:
 	if (channel <= RTW_CH_MAX_2G_CHANNEL)
@@ -3379,7 +3348,7 @@ indicate:
 	rtw_cfg80211_rx_mgmt(padapter, freq, 0, pmgmt_frame, frame_len, GFP_ATOMIC);
 }
 
-void rtw_cfg80211_rx_action(_adapter *adapter, u8 *frame, uint frame_len, const char*msg)
+void rtw_cfg80211_rx_action(struct rtw_adapter *adapter, u8 *frame, uint frame_len, const char*msg)
 {
 	s32 freq;
 	int channel;
@@ -3391,11 +3360,11 @@ void rtw_cfg80211_rx_action(_adapter *ad
 
 	rtw_action_frame_parse(frame, frame_len, &category, &action);
 
-	DBG_8192C("RTW_Rx:cur_ch=%d\n", channel);
+	DBG_8192D("RTW_Rx:cur_ch=%d\n", channel);
 	if (msg)
-		DBG_871X("RTW_Rx:%s\n", msg);
+		DBG_8192D("RTW_Rx:%s\n", msg);
 	else
-		DBG_871X("RTW_Rx:category(%u), action(%u)\n", category, action);
+		DBG_8192D("RTW_Rx:category(%u), action(%u)\n", category, action);
 
 	if (channel <= RTW_CH_MAX_2G_CHANNEL)
 		freq = rtw_ieee80211_channel_to_frequency(channel, IEEE80211_BAND_2GHZ);
@@ -3406,7 +3375,7 @@ void rtw_cfg80211_rx_action(_adapter *ad
 }
 
 #ifdef CONFIG_P2P
-void rtw_cfg80211_issue_p2p_provision_request(_adapter *padapter, const u8 *buf, size_t len)
+void rtw_cfg80211_issue_p2p_provision_request(struct rtw_adapter *padapter, const u8 *buf, size_t len)
 {
 	u16	wps_devicepassword_id = 0x0000;
 	uint	wps_devicepassword_id_len = 0;
@@ -3441,7 +3410,7 @@ void rtw_cfg80211_issue_p2p_provision_re
 	u8 *frame_body = (unsigned char *)(buf + sizeof(struct rtw_ieee80211_hdr_3addr));
 	size_t frame_body_len = len - sizeof(struct rtw_ieee80211_hdr_3addr);
 
-	DBG_871X("[%s] In\n", __func__);
+	DBG_8192D("[%s] In\n", __func__);
 
 	/* prepare for building provision_request frame */
 	memcpy(pwdinfo->tx_prov_disc_info.peerIFAddr, GetAddr1Ptr(buf), ETH_ALEN);
@@ -3608,7 +3577,7 @@ void rtw_cfg80211_issue_p2p_provision_re
 	pattrib->last_txcmdsz = pattrib->pktlen;
 
 	if (dump_mgntframe_and_wait_ack(padapter, pmgntframe) != _SUCCESS)
-		DBG_8192C("%s, ack to\n", __func__);
+		DBG_8192D("%s, ack to\n", __func__);
 
 }
 
@@ -3618,7 +3587,7 @@ static s32 cfg80211_rtw_remain_on_channe
 	unsigned int duration, u64 *cookie)
 {
 	s32 err = 0;
-	_adapter *padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct rtw_wdev_priv *pwdev_priv = wdev_to_priv(padapter->rtw_wdev);
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
 	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
@@ -3626,11 +3595,11 @@ static s32 cfg80211_rtw_remain_on_channe
 	u8 remain_ch = (u8) ieee80211_frequency_to_channel(channel->center_freq);
 	u8 ready_on_channel = false;
 
-	DBG_871X(FUNC_ADPT_FMT" ch:%u duration:%d\n", FUNC_ADPT_ARG(padapter), remain_ch, duration);
+	DBG_8192D(FUNC_ADPT_FMT" ch:%u duration:%d\n", FUNC_ADPT_ARG(padapter), remain_ch, duration);
 
 	if (pcfg80211_wdinfo->is_ro_ch == true)
 	{
-		DBG_8192C("%s, cancel ro ch timer\n", __func__);
+		DBG_8192D("%s, cancel ro ch timer\n", __func__);
 
 		_cancel_timer_ex(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
 
@@ -3666,7 +3635,7 @@ static s32 cfg80211_rtw_remain_on_channe
 	{
 		rtw_p2p_set_pre_state(pwdinfo, rtw_p2p_state(pwdinfo));
 #ifdef CONFIG_DEBUG_CFG80211
-		DBG_8192C("%s, role=%d, p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo));
+		DBG_8192D("%s, role=%d, p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo));
 #endif
 	}
 
@@ -3677,32 +3646,27 @@ static s32 cfg80211_rtw_remain_on_channe
 
 #ifdef	CONFIG_CONCURRENT_MODE
 	if (check_buddy_fwstate(padapter, _FW_LINKED) &&
-		(duration<pwdinfo->ext_listen_interval))
-	{
+	    (duration<pwdinfo->ext_listen_interval))
 		duration = duration +	pwdinfo->ext_listen_interval;
-	}
 #endif
 
 	pcfg80211_wdinfo->restore_channel = pmlmeext->cur_channel;
 
 	if (rtw_ch_set_search_ch(pmlmeext->channel_set, remain_ch) >= 0) {
 #ifdef	CONFIG_CONCURRENT_MODE
-		if (check_buddy_fwstate(padapter, _FW_LINKED))
-		{
-			PADAPTER pbuddy_adapter = padapter->pbuddy_adapter;
+		if (check_buddy_fwstate(padapter, _FW_LINKED)) {
+			struct rtw_adapter *pbuddy_adapter = padapter->pbuddy_adapter;
 			struct mlme_ext_priv *pbuddy_mlmeext = &pbuddy_adapter->mlmeextpriv;
 
-			if (remain_ch != pbuddy_mlmeext->cur_channel)
-			{
+			if (remain_ch != pbuddy_mlmeext->cur_channel) {
 				if (atomic_read(&pwdev_priv->switch_ch_to)==1 ||
-					(remain_ch != pmlmeext->cur_channel))
-				{
-					DBG_8192C("%s, issue nulldata pwrbit=1\n", __func__);
+				    (remain_ch != pmlmeext->cur_channel)) {
+					DBG_8192D("%s, issue nulldata pwrbit=1\n", __func__);
 					issue_nulldata(padapter->pbuddy_adapter, NULL, 1, 3, 500);
 
 					atomic_set(&pwdev_priv->switch_ch_to, 0);
 
-					DBG_8192C("%s, set switch ch timer, duration=%d\n", __func__, duration-pwdinfo->ext_listen_interval);
+					DBG_8192D("%s, set switch ch timer, duration=%d\n", __func__, duration-pwdinfo->ext_listen_interval);
 					_set_timer(&pwdinfo->ap_p2p_switch_timer, duration-pwdinfo->ext_listen_interval);
 				}
 			}
@@ -3715,7 +3679,7 @@ static s32 cfg80211_rtw_remain_on_channe
 			ready_on_channel = true;
 		}
 	} else {
-		DBG_871X("%s remain_ch:%u not in channel plan!!!!\n", __func__, remain_ch);
+		DBG_8192D("%s remain_ch:%u not in channel plan!!!!\n", __func__, remain_ch);
 	}
 
 	/* call this after other things have been done */
@@ -3740,7 +3704,7 @@ static s32 cfg80211_rtw_remain_on_channe
 				set_channel_bwmode(padapter, remain_ch, HAL_PRIME_CHNL_OFFSET_DONT_CARE, HT_CHANNEL_WIDTH_20);
 		}
 
-		DBG_8192C("%s, set ro ch timer, duration=%d\n", __func__, duration);
+		DBG_8192D("%s, set ro ch timer, duration=%d\n", __func__, duration);
 		_set_timer(&pcfg80211_wdinfo->remain_on_ch_timer, duration);
 
 #ifdef	CONFIG_CONCURRENT_MODE
@@ -3763,16 +3727,16 @@ static s32 cfg80211_rtw_cancel_remain_on
 	u64 cookie)
 {
 	s32 err = 0;
-	_adapter *padapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = wiphy_to_adapter(wiphy);
 	struct rtw_wdev_priv *pwdev_priv = wdev_to_priv(padapter->rtw_wdev);
 	struct wifidirect_info *pwdinfo = &padapter->wdinfo;
 	struct pwrctrl_priv *pwrpriv = &padapter->pwrctrlpriv;
 	struct cfg80211_wifidirect_info *pcfg80211_wdinfo = &padapter->cfg80211_wdinfo;
 
-	DBG_871X(FUNC_ADPT_FMT"\n", FUNC_ADPT_ARG(padapter));
+	DBG_8192D(FUNC_ADPT_FMT"\n", FUNC_ADPT_ARG(padapter));
 
 	if (pcfg80211_wdinfo->is_ro_ch == true) {
-		DBG_8192C("%s, cancel ro ch timer\n", __func__);
+		DBG_8192D("%s, cancel ro ch timer\n", __func__);
 		_cancel_timer_ex(&padapter->cfg80211_wdinfo.remain_on_ch_timer);
 		#ifdef CONFIG_CONCURRENT_MODE
 		atomic_set(&pwdev_priv->ro_ch_to, 1);
@@ -3782,7 +3746,7 @@ static s32 cfg80211_rtw_cancel_remain_on
 
 	 rtw_p2p_set_state(pwdinfo, rtw_p2p_pre_state(pwdinfo));
 #ifdef CONFIG_DEBUG_CFG80211
-	 DBG_8192C("%s, role=%d, p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo));
+	 DBG_8192D("%s, role=%d, p2p_state=%d\n", __func__, rtw_p2p_role(pwdinfo), rtw_p2p_state(pwdinfo));
 #endif
 	pcfg80211_wdinfo->is_ro_ch = false;
 
@@ -3791,7 +3755,7 @@ static s32 cfg80211_rtw_cancel_remain_on
 
 #endif /* CONFIG_P2P */
 
-static int _cfg80211_rtw_mgmt_tx(_adapter *padapter, u8 tx_ch, const u8 *buf, size_t len)
+static int _cfg80211_rtw_mgmt_tx(struct rtw_adapter *padapter, u8 tx_ch, const u8 *buf, size_t len)
 {
 	struct xmit_frame	*pmgntframe;
 	struct pkt_attrib	*pattrib;
@@ -3820,7 +3784,7 @@ static int _cfg80211_rtw_mgmt_tx(_adapte
 
 	if (padapter->cfg80211_wdinfo.is_ro_ch == true) {
 		#ifdef CONFIG_CONCURRENT_MODE
-		DBG_8192C("%s, extend ro ch time\n", __func__);
+		DBG_8192D("%s, extend ro ch time\n", __func__);
 		_set_timer(&padapter->cfg80211_wdinfo.remain_on_ch_timer, pwdinfo->ext_listen_period);
 		#endif /* CONFIG_CONCURRENT_MODE */
 	}
@@ -3835,14 +3799,14 @@ static int _cfg80211_rtw_mgmt_tx(_adapte
 
 		if (tx_ch != pbuddy_mlmeext->cur_channel) {
 			if (atomic_read(&pwdev_priv->switch_ch_to)==1) {
-				DBG_8192C("%s, issue nulldata pwrbit=1\n", __func__);
+				DBG_8192D("%s, issue nulldata pwrbit=1\n", __func__);
 				issue_nulldata(padapter->pbuddy_adapter, NULL, 1, 3, 500);
 
 				atomic_set(&pwdev_priv->switch_ch_to, 0);
 
 			}
 
-			DBG_8192C("%s, set switch ch timer, period=%d\n", __func__, pwdinfo->ext_listen_period);
+			DBG_8192D("%s, set switch ch timer, period=%d\n", __func__, pwdinfo->ext_listen_period);
 			_set_timer(&pwdinfo->ap_p2p_switch_timer, pwdinfo->ext_listen_period);
 		}
 
@@ -3906,13 +3870,13 @@ static int _cfg80211_rtw_mgmt_tx(_adapte
 		ret = _FAIL;
 
 		#ifdef CONFIG_DEBUG_CFG80211
-		DBG_8192C("%s, ack == _FAIL\n", __func__);
+		DBG_8192D("%s, ack == _FAIL\n", __func__);
 		#endif
 	}
 	else
 	{
 		#ifdef CONFIG_DEBUG_CFG80211
-		DBG_8192C("%s, ack=%d, ok!\n", __func__, ack);
+		DBG_8192D("%s, ack=%d, ok!\n", __func__, ack);
 		#endif
 		ret = _SUCCESS;
 	}
@@ -3920,7 +3884,7 @@ static int _cfg80211_rtw_mgmt_tx(_adapte
 exit:
 
 	#ifdef CONFIG_DEBUG_CFG80211
-	DBG_8192C("%s, ret=%d\n", __func__, ret);
+	DBG_8192D("%s, ret=%d\n", __func__, ret);
 	#endif
 
 	return ret;
@@ -3936,7 +3900,7 @@ static int cfg80211_rtw_mgmt_tx(struct w
 	bool dont_wait_for_ack,
 	u64 *cookie)
 {
-	_adapter *padapter = (_adapter *)wiphy_to_adapter(wiphy);
+	struct rtw_adapter *padapter = (struct rtw_adapter *)wiphy_to_adapter(wiphy);
 	struct rtw_wdev_priv *pwdev_priv = wdev_to_priv(padapter->rtw_wdev);
 	int ret = 0;
 	int tx_ret;
@@ -3952,7 +3916,7 @@ static int cfg80211_rtw_mgmt_tx(struct w
 	*cookie = (unsigned long) buf;
 
 #ifdef CONFIG_DEBUG_CFG80211
-	DBG_871X(FUNC_ADPT_FMT" len=%zu, ch=%d\n",
+	DBG_8192D(FUNC_ADPT_FMT" len=%zu, ch=%d\n",
 		 FUNC_ADPT_ARG(padapter), len, tx_ch);
 #endif /* CONFIG_DEBUG_CFG80211 */
 
@@ -3960,20 +3924,20 @@ static int cfg80211_rtw_mgmt_tx(struct w
 	rtw_cfg80211_mgmt_tx_status(padapter, *cookie, buf, len, ack, GFP_KERNEL);
 
 	if (rtw_action_frame_parse(buf, len, &category, &action) == false) {
-		DBG_8192C(FUNC_ADPT_FMT" frame_control:0x%x\n", FUNC_ADPT_ARG(padapter),
+		DBG_8192D(FUNC_ADPT_FMT" frame_control:0x%x\n", FUNC_ADPT_ARG(padapter),
 			le16_to_cpu(((struct rtw_ieee80211_hdr_3addr *)buf)->frame_ctl));
 		goto exit;
 	}
 
-	DBG_8192C("RTW_Tx:tx_ch=%d, da=%pM\n", tx_ch, GetAddr1Ptr(buf));
+	DBG_8192D("RTW_Tx:tx_ch=%d, da=%pM\n", tx_ch, GetAddr1Ptr(buf));
 	#ifdef CONFIG_P2P
 	if ((type = rtw_p2p_check_frames(padapter, buf, len, true)) >= 0)
 		goto dump;
 	#endif
 	if (category == RTW_WLAN_CATEGORY_PUBLIC)
-		DBG_871X("RTW_Tx:%s\n", action_public_str(action));
+		DBG_8192D("RTW_Tx:%s\n", action_public_str(action));
 	else
-		DBG_871X("RTW_Tx:category(%u), action(%u)\n", category, action);
+		DBG_8192D("RTW_Tx:category(%u), action(%u)\n", category, action);
 
 dump:
 	do {
@@ -3982,7 +3946,7 @@ dump:
 	} while (dump_cnt < dump_limit && tx_ret != _SUCCESS);
 
 	if (tx_ret != _SUCCESS || dump_cnt > 1) {
-		DBG_871X(FUNC_ADPT_FMT" %s (%d/%d) in %d ms\n", FUNC_ADPT_ARG(padapter),
+		DBG_8192D(FUNC_ADPT_FMT" %s (%d/%d) in %d ms\n", FUNC_ADPT_ARG(padapter),
 			tx_ret==_SUCCESS?"OK":"FAIL", dump_cnt, dump_limit, rtw_get_passing_time_ms(start));
 	}
 
@@ -3994,7 +3958,7 @@ dump:
 		if (pwdev_priv->invit_info.flags & BIT(0)
 			&& pwdev_priv->invit_info.status == 0)
 		{
-			DBG_871X(FUNC_ADPT_FMT" agree with invitation of persistent group\n",
+			DBG_8192D(FUNC_ADPT_FMT" agree with invitation of persistent group\n",
 				FUNC_ADPT_ARG(padapter));
 			rtw_set_scan_deny(padapter, 5000);
 			rtw_pwr_wakeup_ex(padapter, 5000);
@@ -4011,10 +3975,10 @@ static void cfg80211_rtw_mgmt_frame_regi
 	struct wireless_dev *wdev,
 	u16 frame_type, bool reg)
 {
-	_adapter *adapter = wiphy_to_adapter(wiphy);
+	struct rtw_adapter *adapter = wiphy_to_adapter(wiphy);
 
 #ifdef CONFIG_DEBUG_CFG80211
-	DBG_871X(FUNC_ADPT_FMT" frame_type:%x, reg:%d\n", FUNC_ADPT_ARG(adapter),
+	DBG_8192D(FUNC_ADPT_FMT" frame_type:%x, reg:%d\n", FUNC_ADPT_ARG(adapter),
 		frame_type, reg);
 #endif
 
@@ -4034,18 +3998,16 @@ static int rtw_cfg80211_set_beacon_wpsp2
 	u8 *p2p_ie;
 	u32	wfd_ielen = 0;
 	u8 *wfd_ie;
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(ndev);
+	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(ndev);
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 	struct mlme_ext_priv *pmlmeext = &(padapter->mlmeextpriv);
 
-	DBG_871X(FUNC_NDEV_FMT" ielen=%d\n", FUNC_NDEV_ARG(ndev), len);
+	DBG_8192D(FUNC_NDEV_FMT" ielen=%d\n", FUNC_NDEV_ARG(ndev), len);
 
-	if (len>0)
-	{
-		if ((wps_ie = rtw_get_wps_ie(buf, len, NULL, &wps_ielen)))
-		{
+	if (len > 0) {
+		if ((wps_ie = rtw_get_wps_ie(buf, len, NULL, &wps_ielen))) {
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("bcn_wps_ielen=%d\n", wps_ielen);
+			DBG_8192D("bcn_wps_ielen=%d\n", wps_ielen);
 			#endif
 
 			if (pmlmepriv->wps_beacon_ie)
@@ -4058,7 +4020,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 
 			pmlmepriv->wps_beacon_ie = kmalloc(wps_ielen, GFP_KERNEL);
 			if (pmlmepriv->wps_beacon_ie == NULL) {
-				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -4074,7 +4036,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 		if ((p2p_ie=rtw_get_p2p_ie(buf, len, NULL, &p2p_ielen)))
 		{
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("bcn_p2p_ielen=%d\n", p2p_ielen);
+			DBG_8192D("bcn_p2p_ielen=%d\n", p2p_ielen);
 			#endif
 
 			if (pmlmepriv->p2p_beacon_ie)
@@ -4087,7 +4049,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 
 			pmlmepriv->p2p_beacon_ie = kmalloc(p2p_ielen, GFP_KERNEL);
 			if (pmlmepriv->p2p_beacon_ie == NULL) {
-				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -4102,7 +4064,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 		if (rtw_get_wfd_ie(buf, len, NULL, &wfd_ielen))
 		{
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("bcn_wfd_ielen=%d\n", wfd_ielen);
+			DBG_8192D("bcn_wfd_ielen=%d\n", wfd_ielen);
 			#endif
 
 			if (pmlmepriv->wfd_beacon_ie)
@@ -4115,7 +4077,7 @@ static int rtw_cfg80211_set_beacon_wpsp2
 
 			pmlmepriv->wfd_beacon_ie = kmalloc(wfd_ielen, GFP_KERNEL);
 			if (pmlmepriv->wfd_beacon_ie == NULL) {
-				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -4139,11 +4101,11 @@ static int rtw_cfg80211_set_probe_resp_w
 	u8 *p2p_ie;
 	u32	wfd_ielen = 0;
 	u8 *wfd_ie;
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(net);
+	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(net);
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 
 #ifdef CONFIG_DEBUG_CFG80211
-	DBG_8192C("%s, ielen=%d\n", __func__, len);
+	DBG_8192D("%s, ielen=%d\n", __func__, len);
 #endif
 
 	if (len>0)
@@ -4154,7 +4116,7 @@ static int rtw_cfg80211_set_probe_resp_w
 			u16	uconfig_method, *puconfig_method = NULL;
 
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("probe_resp_wps_ielen=%d\n", wps_ielen);
+			DBG_8192D("probe_resp_wps_ielen=%d\n", wps_ielen);
 			#endif
 
 			if (pmlmepriv->wps_probe_resp_ie)
@@ -4167,7 +4129,7 @@ static int rtw_cfg80211_set_probe_resp_w
 
 			pmlmepriv->wps_probe_resp_ie = kmalloc(wps_ielen, GFP_KERNEL);
 			if (pmlmepriv->wps_probe_resp_ie == NULL) {
-				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -4194,7 +4156,7 @@ static int rtw_cfg80211_set_probe_resp_w
 			u16 cap_attr=0;
 
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("probe_resp_p2p_ielen=%d\n", p2p_ielen);
+			DBG_8192D("probe_resp_p2p_ielen=%d\n", p2p_ielen);
 			#endif
 
 			/* Check P2P Capability ATTR */
@@ -4207,7 +4169,7 @@ static int rtw_cfg80211_set_probe_resp_w
 				is_GO = (grp_cap&BIT(0)) ? true:false;
 
 				if (is_GO)
-					DBG_8192C("Got P2P Capability Attr, grp_cap=0x%x, is_GO\n", grp_cap);
+					DBG_8192D("Got P2P Capability Attr, grp_cap=0x%x, is_GO\n", grp_cap);
 			}
 
 			if (is_GO == false)
@@ -4222,7 +4184,7 @@ static int rtw_cfg80211_set_probe_resp_w
 
 				pmlmepriv->p2p_probe_resp_ie = kmalloc(p2p_ielen, GFP_KERNEL);
 				if (pmlmepriv->p2p_probe_resp_ie == NULL) {
-					DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+					DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 					return -EINVAL;
 
 				}
@@ -4241,7 +4203,7 @@ static int rtw_cfg80211_set_probe_resp_w
 
 				pmlmepriv->p2p_go_probe_resp_ie = kmalloc(p2p_ielen, GFP_KERNEL);
 				if (pmlmepriv->p2p_go_probe_resp_ie == NULL) {
-					DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+					DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 					return -EINVAL;
 
 				}
@@ -4256,7 +4218,7 @@ static int rtw_cfg80211_set_probe_resp_w
 		if (rtw_get_wfd_ie(buf, len, NULL, &wfd_ielen))
 		{
 			#ifdef CONFIG_DEBUG_CFG80211
-			DBG_8192C("probe_resp_wfd_ielen=%d\n", wfd_ielen);
+			DBG_8192D("probe_resp_wfd_ielen=%d\n", wfd_ielen);
 			#endif
 
 			if (pmlmepriv->wfd_probe_resp_ie)
@@ -4269,7 +4231,7 @@ static int rtw_cfg80211_set_probe_resp_w
 
 			pmlmepriv->wfd_probe_resp_ie = kmalloc(wfd_ielen, GFP_KERNEL);
 			if (pmlmepriv->wfd_probe_resp_ie == NULL) {
-				DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+				DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 				return -EINVAL;
 
 			}
@@ -4285,10 +4247,10 @@ static int rtw_cfg80211_set_probe_resp_w
 static int rtw_cfg80211_set_assoc_resp_wpsp2pie(struct net_device *net, char *buf, int len)
 {
 	int ret = 0;
-	_adapter *padapter = (_adapter *)rtw_netdev_priv(net);
+	struct rtw_adapter *padapter = (struct rtw_adapter *)rtw_netdev_priv(net);
 	struct mlme_priv *pmlmepriv = &(padapter->mlmepriv);
 
-	DBG_8192C("%s, ielen=%d\n", __func__, len);
+	DBG_8192D("%s, ielen=%d\n", __func__, len);
 
 	if (len>0)
 	{
@@ -4300,9 +4262,9 @@ static int rtw_cfg80211_set_assoc_resp_w
 			pmlmepriv->wps_assoc_resp_ie = NULL;
 		}
 
-		pmlmepriv->wps_assoc_resp_ie = kmalloc(len, GFP_KERNEL, GFP_KERNEL);
+		pmlmepriv->wps_assoc_resp_ie = kmalloc(len, GFP_KERNEL);
 		if (pmlmepriv->wps_assoc_resp_ie == NULL) {
-			DBG_8192C("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
+			DBG_8192D("%s()-%d: kmalloc() ERROR!\n", __func__, __LINE__);
 			return -EINVAL;
 
 		}
@@ -4321,7 +4283,7 @@ int rtw_cfg80211_set_mgnt_wpsp2pie(struc
 	u32	p2p_ielen = 0;
 
 #ifdef CONFIG_DEBUG_CFG80211
-	DBG_8192C("%s, ielen=%d\n", __func__, len);
+	DBG_8192D("%s, ielen=%d\n", __func__, len);
 #endif
 
 	if (	(rtw_get_wps_ie(buf, len, NULL, &wps_ielen) && (wps_ielen>0))
@@ -4451,11 +4413,11 @@ static void rtw_cfg80211_init_ht_capab(s
 	}
 	else
 	{
-		DBG_8192C("%s, error rf_type=%d\n", __func__, rf_type);
+		DBG_8192D("%s, error rf_type=%d\n", __func__, rf_type);
 	}
 }
 
-void rtw_cfg80211_init_wiphy(_adapter *padapter)
+void rtw_cfg80211_init_wiphy(struct rtw_adapter *padapter)
 {
 	u8 rf_type;
 	struct ieee80211_supported_band *bands;
@@ -4464,7 +4426,7 @@ void rtw_cfg80211_init_wiphy(_adapter *p
 
 	rtw_hal_get_hwreg(padapter, HW_VAR_RF_TYPE, (u8 *)(&rf_type));
 
-	DBG_8192C("%s:rf_type=%d\n", __func__, rf_type);
+	DBG_8192D("%s:rf_type=%d\n", __func__, rf_type);
 
 	/* if (padapter->registrypriv.wireless_mode & WIRELESS_11G) */
 	{
@@ -4481,7 +4443,7 @@ void rtw_cfg80211_init_wiphy(_adapter *p
 	}
 }
 
-static void rtw_cfg80211_preinit_wiphy(_adapter *padapter, struct wiphy *wiphy)
+static void rtw_cfg80211_preinit_wiphy(struct rtw_adapter *padapter, struct wiphy *wiphy)
 {
 
 	wiphy->signal_type = CFG80211_SIGNAL_TYPE_MBM;
@@ -4532,7 +4494,7 @@ static void rtw_cfg80211_preinit_wiphy(_
 		wiphy->flags &= ~WIPHY_FLAG_PS_ON_BY_DEFAULT;
 }
 
-int rtw_wdev_alloc(_adapter *padapter, struct device *dev)
+int rtw_wdev_alloc(struct rtw_adapter *padapter, struct device *dev)
 {
 	int ret = 0;
 	struct wiphy *wiphy;
@@ -4540,12 +4502,12 @@ int rtw_wdev_alloc(_adapter *padapter, s
 	struct rtw_wdev_priv *pwdev_priv;
 	struct net_device *pnetdev = padapter->pnetdev;
 
-	DBG_8192C("%s(padapter=%p)\n", __func__, padapter);
+	DBG_8192D("%s(padapter=%p)\n", __func__, padapter);
 
 	/* wiphy */
 	wiphy = wiphy_new(&rtw_cfg80211_ops, sizeof(struct rtw_wdev_priv));
 	if (!wiphy) {
-		DBG_8192C("Couldn't allocate wiphy device\n");
+		DBG_8192D("Couldn't allocate wiphy device\n");
 		ret = -ENOMEM;
 		goto exit;
 	}
@@ -4554,14 +4516,14 @@ int rtw_wdev_alloc(_adapter *padapter, s
 
 	ret = wiphy_register(wiphy);
 	if (ret < 0) {
-		DBG_8192C("Couldn't register wiphy device\n");
+		DBG_8192D("Couldn't register wiphy device\n");
 		goto free_wiphy;
 	}
 
 	/*  wdev */
 	wdev = (struct wireless_dev *)kzalloc(sizeof(struct wireless_dev), GFP_KERNEL);
 	if (!wdev) {
-		DBG_8192C("Couldn't allocate wireless device\n");
+		DBG_8192D("Couldn't allocate wireless device\n");
 		ret = -ENOMEM;
 		goto unregister_wiphy;
 	}
@@ -4611,7 +4573,7 @@ void rtw_wdev_free(struct wireless_dev *
 {
 	struct rtw_wdev_priv *pwdev_priv;
 
-	DBG_8192C("%s(wdev=%p)\n", __func__, wdev);
+	DBG_8192D("%s(wdev=%p)\n", __func__, wdev);
 
 	if (!wdev)
 		return;
@@ -4630,7 +4592,7 @@ void rtw_wdev_unregister(struct wireless
 {
 	struct rtw_wdev_priv *pwdev_priv;
 
-	DBG_8192C("%s(wdev=%p)\n", __func__, wdev);
+	DBG_8192D("%s(wdev=%p)\n", __func__, wdev);
 
 	if (!wdev)
 		return;
@@ -4640,7 +4602,7 @@ void rtw_wdev_unregister(struct wireless
 	rtw_cfg80211_indicate_scan_done(pwdev_priv, true);
 
 	if (pwdev_priv->pmon_ndev) {
-		DBG_8192C("%s, unregister monitor interface\n", __func__);
+		DBG_8192D("%s, unregister monitor interface\n", __func__);
 		unregister_netdev(pwdev_priv->pmon_ndev);
 	}
 
--- a/drivers/staging/rtl8192du/os_dep/mlme_linux.c
+++ b/drivers/staging/rtl8192du/os_dep/mlme_linux.c
@@ -42,7 +42,7 @@ static void _dynamic_check_timer_handlde
 	_set_timer(&adapter->mlmepriv.dynamic_chk_timer, 2000);
 }
 
-#ifdef CONFIG_SET_SCAN_DENY_TIMER
+#ifdef CONFIG_IOCTL_CFG80211
 void _rtw_set_scan_deny_timer_hdl(void *FunctionContext)
 {
 	struct rtw_adapter *adapter = (struct rtw_adapter *)FunctionContext;
@@ -59,7 +59,7 @@ void rtw_init_mlme_timer(struct rtw_adap
 
 	_init_timer(&(pmlmepriv->dynamic_chk_timer), padapter->pnetdev, _dynamic_check_timer_handlder, padapter);
 
-	#ifdef CONFIG_SET_SCAN_DENY_TIMER
+	#ifdef CONFIG_IOCTL_CFG80211
 	_init_timer(&(pmlmepriv->set_scan_deny_timer), padapter->pnetdev, _rtw_set_scan_deny_timer_hdl, padapter);
 	#endif
 }
--- a/drivers/staging/rtl8192du/os_dep/os_intfs.c
+++ b/drivers/staging/rtl8192du/os_dep/os_intfs.c
@@ -1223,7 +1223,7 @@ void rtw_cancel_all_timer(struct rtw_ada
 #endif /* CONFIG_P2P */
 #endif /* CONFIG_IOCTL_CFG80211 */
 
-#ifdef CONFIG_SET_SCAN_DENY_TIMER
+#ifdef CONFIG_IOCTL_CFG80211
 	_cancel_timer_ex(&padapter->mlmepriv.set_scan_deny_timer);
 	rtw_clear_scan_deny(padapter);
 	RT_TRACE(_module_os_intfs_c_, _drv_info_, ("rtw_cancel_all_timer:cancel set_scan_deny_timer!\n"));
