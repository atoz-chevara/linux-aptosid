--- a/drivers/net/wireless/ath/ath5k/base.c
+++ b/drivers/net/wireless/ath/ath5k/base.c
@@ -64,6 +64,10 @@ static int modparam_nohwcrypt;
 module_param_named(nohwcrypt, modparam_nohwcrypt, bool, S_IRUGO);
 MODULE_PARM_DESC(nohwcrypt, "Disable hardware encryption.");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 static int modparam_all_channels;
 module_param_named(all_channels, modparam_all_channels, bool, S_IRUGO);
 MODULE_PARM_DESC(all_channels, "Expose all channels the device can use.");
@@ -606,6 +610,9 @@ ath5k_pci_probe(struct pci_dev *pdev,
 		goto err_free_ah;
 	}
 
+	if (modparam_override_countrycode != -1)
+		sc->ah->ah_capabilities.cap_eeprom.ee_regdomain = modparam_override_countrycode;
+
 	/* set up multi-rate retry capabilities */
 	if (sc->ah->ah_version == AR5K_AR5212) {
 		hw->max_rates = 4;
--- a/drivers/net/wireless/ath/ath9k/main.c
+++ b/drivers/net/wireless/ath/ath9k/main.c
@@ -33,6 +33,10 @@ static unsigned int ath9k_debug = ATH_DB
 module_param_named(debug, ath9k_debug, uint, 0);
 MODULE_PARM_DESC(debug, "Debugging mask");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 /* We use the hw_value as an index into our private channel structure */
 
 #define CHAN2G(_freq, _idx)  { \
@@ -1912,6 +1916,9 @@ int ath_init_device(u16 devid, struct at
 	ah = sc->sc_ah;
 	common = ath9k_hw_common(ah);
 
+	if (modparam_override_countrycode != -1)
+		ath9k_hw_regulatory(sc->sc_ah)->current_rd = modparam_override_countrycode;
+
 	/* get mac address from hardware and set in mac80211 */
 
 	SET_IEEE80211_PERM_ADDR(hw, common->macaddr);
--- a/drivers/net/wireless/ath/ar9170/main.c
+++ b/drivers/net/wireless/ath/ar9170/main.c
@@ -53,6 +53,10 @@ static int modparam_ht;
 module_param_named(ht, modparam_ht, bool, S_IRUGO);
 MODULE_PARM_DESC(ht, "enable MPDU aggregation.");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 #define RATE(_bitrate, _hw_rate, _txpidx, _flags) {	\
 	.bitrate	= (_bitrate),			\
 	.flags		= (_flags),			\
@@ -2699,6 +2703,9 @@ int ar9170_register(struct ar9170 *ar, s
 	if (err)
 		goto err_out;
 
+	if (modparam_override_countrycode != -1)
+		regulatory->current_rd = modparam_override_countrycode;
+
 	err = ath_regd_init(regulatory, ar->hw->wiphy,
 			    ar9170_reg_notifier);
 	if (err)
