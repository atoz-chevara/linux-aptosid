--- a/drivers/net/wireless/ath/ath5k/base.c
+++ b/drivers/net/wireless/ath/ath5k/base.c
@@ -65,6 +65,10 @@ int ath5k_modparam_nohwcrypt;
 module_param_named(nohwcrypt, ath5k_modparam_nohwcrypt, bool, S_IRUGO);
 MODULE_PARM_DESC(nohwcrypt, "Disable hardware encryption.");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 static int modparam_all_channels;
 module_param_named(all_channels, modparam_all_channels, bool, S_IRUGO);
 MODULE_PARM_DESC(all_channels, "Expose all channels the device can use.");
@@ -2414,6 +2418,9 @@ ath5k_init_softc(struct ath5k_softc *sc,
 	if (ret)
 		goto err_free_ah;
 
+	if (modparam_override_countrycode != -1)
+		sc->ah->ah_capabilities.cap_eeprom.ee_regdomain = modparam_override_countrycode;
+
 	/* set up multi-rate retry capabilities */
 	if (sc->ah->ah_version == AR5K_AR5212) {
 		hw->max_rates = 4;
--- a/drivers/net/wireless/ath/ar9170/main.c
+++ b/drivers/net/wireless/ath/ar9170/main.c
@@ -50,6 +50,10 @@ static int modparam_nohwcrypt;
 module_param_named(nohwcrypt, modparam_nohwcrypt, bool, S_IRUGO);
 MODULE_PARM_DESC(nohwcrypt, "Disable hardware encryption.");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 #define RATE(_bitrate, _hw_rate, _txpidx, _flags) {	\
 	.bitrate	= (_bitrate),			\
 	.flags		= (_flags),			\
@@ -2140,6 +2144,9 @@ int ar9170_register(struct ar9170 *ar, s
 	if (err)
 		goto err_out;
 
+	if (modparam_override_countrycode != -1)
+		regulatory->current_rd = modparam_override_countrycode;
+
 	err = ath_regd_init(regulatory, ar->hw->wiphy,
 			    ar9170_reg_notifier);
 	if (err)
--- a/drivers/net/wireless/ath/ath9k/init.c
+++ b/drivers/net/wireless/ath/ath9k/init.c
@@ -41,6 +41,10 @@ static int ath9k_btcoex_enable;
 module_param_named(btcoex_enable, ath9k_btcoex_enable, int, 0444);
 MODULE_PARM_DESC(btcoex_enable, "Enable wifi-BT coexistence");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 bool is_ath9k_unloaded;
 /* We use the hw_value as an index into our private channel structure */
 
@@ -707,6 +711,10 @@ int ath9k_init_device(u16 devid, struct
 		goto error_init;
 
 	ah = sc->sc_ah;
+
+	if (modparam_override_countrycode != -1)
+		ath9k_hw_regulatory(ah)->current_rd = modparam_override_countrycode;
+
 	common = ath9k_hw_common(ah);
 	ath9k_set_hw_capab(sc, hw);
 
--- a/drivers/net/wireless/ath/ath9k/htc_drv_init.c
+++ b/drivers/net/wireless/ath/ath9k/htc_drv_init.c
@@ -28,6 +28,10 @@ int htc_modparam_nohwcrypt;
 module_param_named(nohwcrypt, htc_modparam_nohwcrypt, int, 0444);
 MODULE_PARM_DESC(nohwcrypt, "Disable hardware encryption");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 #define CHAN2G(_freq, _idx)  { \
 	.center_freq = (_freq), \
 	.hw_value = (_idx), \
@@ -765,6 +769,10 @@ static int ath9k_init_device(struct ath9
 		goto err_init;
 
 	ah = priv->ah;
+
+	if (modparam_override_countrycode != -1)
+		ath9k_hw_regulatory(ah)->current_rd = modparam_override_countrycode;
+
 	common = ath9k_hw_common(ah);
 	ath9k_set_hw_capab(priv, hw);
 
--- a/drivers/net/wireless/ath/carl9170/main.c
+++ b/drivers/net/wireless/ath/carl9170/main.c
@@ -56,6 +56,10 @@ int modparam_noht;
 module_param_named(noht, modparam_noht, int, S_IRUGO);
 MODULE_PARM_DESC(noht, "Disable MPDU aggregation.");
 
+static int modparam_override_countrycode = -1;
+module_param_named(override_countrycode, modparam_override_countrycode, int, S_IRUGO);
+MODULE_PARM_DESC(override_countrycode, "Override countrycode hardcoded in EEPROM with this value (DANGEROUS).");
+
 #define RATE(_bitrate, _hw_rate, _txpidx, _flags) {	\
 	.bitrate	= (_bitrate),			\
 	.flags		= (_flags),			\
@@ -1809,6 +1813,9 @@ int carl9170_register(struct ar9170 *ar)
 	if (err)
 		return err;
 
+	if (modparam_override_countrycode != -1)
+		regulatory->current_rd = modparam_override_countrycode;
+
 	err = ath_regd_init(regulatory, ar->hw->wiphy,
 			    carl9170_reg_notifier);
 	if (err)
