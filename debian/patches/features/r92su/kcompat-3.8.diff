r92su: backport to kernel <= v3.8

Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>

--- a/drivers/net/wireless/r92su/main.c
+++ b/drivers/net/wireless/r92su/main.c
@@ -34,6 +34,7 @@
 #include <linux/etherdevice.h>
 #include <linux/if_arp.h>
 #include <net/cfg80211.h>
+#include <linux/version.h>
 
 #include "r92su.h"
 #include "reg.h"
@@ -455,7 +456,11 @@ out:
 		r92su->want_connect_bss = NULL;
 
 		if (bss)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 9, 0)
 			cfg80211_put_bss(wiphy, bss);
+#else
+			cfg80211_put_bss(bss);
+#endif
 	}
 
 	mutex_unlock(&r92su->lock);
@@ -491,7 +496,11 @@ static void r92su_bss_free(struct r92su
 	r92su_sta_del(r92su, BSS_MACID);
 	rcu_read_unlock();
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 9, 0)
 	cfg80211_put_bss(r92su->wdev.wiphy, bss);
+#else
+	cfg80211_put_bss(bss);
+#endif
 }
 
 static void r92su_bss_free_connected(struct r92su *r92su)
@@ -613,7 +622,11 @@ static void r92su_bss_add_work(struct wo
 
 		if (bss) {
 			r92su_bss_init(r92su, bss, c2h_bss);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 9, 0)
 			cfg80211_put_bss(r92su->wdev.wiphy, bss);
+#else
+			cfg80211_put_bss(bss);
+#endif
 		}
 next:
 		node = ACCESS_ONCE(node->next);
@@ -1205,7 +1218,11 @@ out:
 		r92su->want_connect_bss = NULL;
 
 		if (bss)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 9, 0)
 			cfg80211_put_bss(wiphy, bss);
+#else
+			cfg80211_put_bss(bss);
+#endif
 	}
 
 	mutex_unlock(&r92su->lock);
--- a/drivers/net/wireless/r92su/sta.c
+++ b/drivers/net/wireless/r92su/sta.c
@@ -31,6 +31,7 @@
 #include <linux/kernel.h>
 #include <linux/workqueue.h>
 #include <linux/random.h>
+#include <linux/version.h>
 #include "r92su.h"
 #include "sta.h"
 #include "rx.h"
@@ -273,12 +274,20 @@ void r92su_sta_set_sinfo(struct r92su *r
 	else
 		sinfo->rxrate.legacy = sta->last_rx_rate;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
 	sinfo->sta_flags.mask = BIT(NL80211_STA_FLAG_ASSOCIATED) |
 				BIT(NL80211_STA_FLAG_AUTHENTICATED) |
+#else
+	sinfo->sta_flags.mask = BIT(NL80211_STA_FLAG_AUTHENTICATED) |
+#endif
 				BIT(NL80211_STA_FLAG_WME);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
 	sinfo->sta_flags.set = BIT(NL80211_STA_FLAG_ASSOCIATED) |
 			       BIT(NL80211_STA_FLAG_AUTHENTICATED);
+#else
+	sinfo->sta_flags.set = BIT(NL80211_STA_FLAG_AUTHENTICATED);
+#endif
 
 	if (sta->qos_sta)
 		sinfo->sta_flags.set |= BIT(NL80211_STA_FLAG_WME);
