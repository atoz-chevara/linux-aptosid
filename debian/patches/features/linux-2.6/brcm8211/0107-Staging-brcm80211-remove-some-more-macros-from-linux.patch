commit 1a3bf7471e8acaab0e66a6304212218025fe1ec2
Author: Greg Kroah-Hartman <gregkh@suse.de>
Date:   Thu Oct 7 16:34:51 2010 -0700

    Staging: brcm80211: remove some more macros from linuxver.h
    
    These aren't needed anymore, and now we are down to just one broken one,
    and a whole bunch of #include files here.  This can be further factored
    by moving the proper #includes into the different .c files, and not
    leaving them in this one large one.
    
    Cc: Brett Rudley <brudley@broadcom.com>
    Cc: Henry Ptasinski <henryp@broadcom.com>
    Cc: Nohee Ko <noheek@broadcom.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

--- a/drivers/staging/brcm80211/include/linux_osl.h
+++ b/drivers/staging/brcm80211/include/linux_osl.h
@@ -404,7 +404,7 @@ osl_pkt_tonative(osl_pubinfo_t *osh, voi
 #define	PKTSETLINK(skb, x)		(((struct sk_buff *)(skb))->prev = (struct sk_buff*)(x))
 #define	PKTPRIO(skb)			(((struct sk_buff *)(skb))->priority)
 #define	PKTSETPRIO(skb, x)		(((struct sk_buff *)(skb))->priority = (x))
-#define PKTSUMNEEDED(skb)		(((struct sk_buff *)(skb))->ip_summed == CHECKSUM_HW)
+#define PKTSUMNEEDED(skb)		(((struct sk_buff *)(skb))->ip_summed == CHECKSUM_PARTIAL)
 #define PKTSETSUMGOOD(skb, x)		(((struct sk_buff *)(skb))->ip_summed = \
 						((x) ? CHECKSUM_UNNECESSARY : CHECKSUM_NONE))
 /* PKTSETSUMNEEDED and PKTSUMGOOD are not possible because skb->ip_summed is overloaded */
--- a/drivers/staging/brcm80211/include/linuxver.h
+++ b/drivers/staging/brcm80211/include/linuxver.h
@@ -17,11 +17,8 @@
 #ifndef _linuxver_h_
 #define _linuxver_h_
 
-#include <linux/version.h>
 #include <linux/module.h>
-
 #include <linux/slab.h>
-
 #include <linux/types.h>
 #include <linux/init.h>
 #include <linux/mm.h>
@@ -29,18 +26,15 @@
 #include <linux/pci.h>
 #include <linux/interrupt.h>
 #include <linux/netdevice.h>
-#undef IP_TOS
-#include <asm/io.h>
-
 #include <linux/workqueue.h>
 #include <linux/sched.h>
 #include <linux/ieee80211.h>
-
-#define CHECKSUM_HW	CHECKSUM_PARTIAL
-
 #include <linux/time.h>
 #include <linux/wait.h>
 
+#undef IP_TOS
+#include <asm/io.h>
+
 #define KILL_PROC(nr, sig) \
 	do { \
 		struct task_struct *tsk; \
@@ -51,6 +45,4 @@
 			send_sig(sig, tsk, 1); \
 	} while (0)
 
-#define WL_DEV_IF(dev)          ((wl_if_t *)netdev_priv(dev))
-
 #endif				/* _linuxver_h_ */
--- a/drivers/staging/brcm80211/sys/wl_mac80211.c
+++ b/drivers/staging/brcm80211/sys/wl_mac80211.c
@@ -135,6 +135,7 @@ struct ieee80211_tkip_data {
 };
 
 #ifndef WLC_HIGH_ONLY
+#define WL_DEV_IF(dev)		((wl_if_t *)netdev_priv(dev))
 #define	WL_INFO(dev)		((wl_info_t *)(WL_DEV_IF(dev)->wl))	/* points to wl */
 static int wl_request_fw(wl_info_t *wl, struct pci_dev *pdev);
 static void wl_release_fw(wl_info_t *wl);
