commit 9927fc2eab153cf3c39d505733b1d534d818c2bb
Author: Jason Cooper <jason@lakedaemon.net>
Date:   Mon Oct 11 10:02:59 2010 -0400

    staging: brcm80211: remove BCMUNINITFN() macro.
    
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

--- a/drivers/staging/brcm80211/include/bcmdefs.h
+++ b/drivers/staging/brcm80211/include/bcmdefs.h
@@ -34,7 +34,6 @@
  * The following macros specify special linker sections that can be reclaimed
  * after a system is considered 'up'.
  */
-#define BCMUNINITFN(_fn)	_fn
 #define	BCMNMIATTACHFN(_fn)	_fn
 #ifdef mips
 #define BCMFASTPATH		__attribute__ ((__section__(".text.fastpath")))
--- a/drivers/staging/brcm80211/phy/wlc_phy_cmn.c
+++ b/drivers/staging/brcm80211/phy/wlc_phy_cmn.c
@@ -1047,7 +1047,7 @@ void wlc_phy_cal_init(wlc_phy_t *pih)
 	}
 }
 
-int BCMUNINITFN(wlc_phy_down) (wlc_phy_t *pih)
+int wlc_phy_down(wlc_phy_t *pih)
 {
 	phy_info_t *pi = (phy_info_t *) pih;
 	int callbacks = 0;
--- a/drivers/staging/brcm80211/sys/wlc_bmac.c
+++ b/drivers/staging/brcm80211/sys/wlc_bmac.c
@@ -1249,7 +1249,7 @@ int wlc_bmac_up_finish(wlc_hw_info_t *wl
 	return 0;
 }
 
-int BCMUNINITFN(wlc_bmac_down_prep) (wlc_hw_info_t *wlc_hw)
+int wlc_bmac_down_prep(wlc_hw_info_t *wlc_hw)
 {
 	bool dev_gone;
 	uint callbacks = 0;
@@ -1277,7 +1277,7 @@ int BCMUNINITFN(wlc_bmac_down_prep) (wlc
 	return callbacks;
 }
 
-int BCMUNINITFN(wlc_bmac_down_finish) (wlc_hw_info_t *wlc_hw)
+int wlc_bmac_down_finish(wlc_hw_info_t *wlc_hw)
 {
 	uint callbacks = 0;
 	bool dev_gone;
--- a/drivers/staging/brcm80211/sys/wlc_event.c
+++ b/drivers/staging/brcm80211/sys/wlc_event.c
@@ -99,7 +99,7 @@ int wlc_eventq_detach(wlc_eventq_t *eq)
 	return 0;
 }
 
-int BCMUNINITFN(wlc_eventq_down) (wlc_eventq_t *eq)
+int wlc_eventq_down(wlc_eventq_t *eq)
 {
 	int callbacks = 0;
 	if (eq->tpending && !eq->workpending) {
--- a/drivers/staging/brcm80211/sys/wlc_mac80211.c
+++ b/drivers/staging/brcm80211/sys/wlc_mac80211.c
@@ -2846,7 +2846,7 @@ static void wlc_tx_prec_map_init(wlc_inf
 	}
 }
 
-static uint BCMUNINITFN(wlc_down_del_timer) (wlc_info_t *wlc)
+static uint wlc_down_del_timer(wlc_info_t *wlc)
 {
 	uint callbacks = 0;
 
@@ -2858,7 +2858,7 @@ static uint BCMUNINITFN(wlc_down_del_tim
  * disable the hardware, free any transient buffer state.
  * Return a count of the number of driver callbacks still pending.
  */
-uint BCMUNINITFN(wlc_down) (wlc_info_t *wlc)
+uint wlc_down(wlc_info_t *wlc)
 {
 
 	uint callbacks = 0;
--- a/drivers/staging/brcm80211/util/nvram/nvram_ro.c
+++ b/drivers/staging/brcm80211/util/nvram/nvram_ro.c
@@ -106,7 +106,7 @@ int nvram_append(void *si, char *varlst,
 	return BCME_OK;
 }
 
-void BCMUNINITFN(nvram_exit) (void *si)
+void nvram_exit(void *si)
 {
 	vars_t *this, *next;
 	si_t *sih;
--- a/drivers/staging/brcm80211/util/siutils.c
+++ b/drivers/staging/brcm80211/util/siutils.c
@@ -1631,7 +1631,7 @@ void si_pci_up(si_t *sih)
 }
 
 /* Unconfigure and/or apply various WARs when system is going to sleep mode */
-void BCMUNINITFN(si_pci_sleep) (si_t *sih)
+void si_pci_sleep(si_t *sih)
 {
 	si_info_t *sii;
 
