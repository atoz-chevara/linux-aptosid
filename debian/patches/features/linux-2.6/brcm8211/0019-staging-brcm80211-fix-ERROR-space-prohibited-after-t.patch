commit 29c4275adbe15e95db54ce04a3137a6ff40c890c
Author: Jason Cooper <jason@lakedaemon.net>
Date:   Tue Sep 14 09:45:43 2010 -0400

    staging: brcm80211: fix "ERROR: space prohibited after that ..."
    
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

--- a/drivers/staging/brcm80211/phy/wlc_phy_cmn.c
+++ b/drivers/staging/brcm80211/phy/wlc_phy_cmn.c
@@ -2408,8 +2408,8 @@ wlc_phy_txpower_get_current(wlc_phy_t *p
 				power->flags &=
 				    ~(WL_TX_POWER_F_HW | WL_TX_POWER_F_ENABLED);
 
-			wlc_lcnphy_get_tssi(pi, (int8 *) & power->est_Pout[0],
-					    (int8 *) & power->est_Pout_cck);
+			wlc_lcnphy_get_tssi(pi, (int8 *) &power->est_Pout[0],
+					    (int8 *) &power->est_Pout_cck);
 		}
 		wlc_phyreg_exit(ppi);
 	}
--- a/drivers/staging/brcm80211/phy/wlc_phy_lcn.c
+++ b/drivers/staging/brcm80211/phy/wlc_phy_lcn.c
@@ -2691,7 +2691,7 @@ wlc_lcnphy_run_samples(phy_info_t *pi,
 
 	if (iqcalmode) {
 
-		and_phy_reg(pi, 0x453, (uint16) ~ (0x1 << 15));
+		and_phy_reg(pi, 0x453, (uint16) ~(0x1 << 15));
 		or_phy_reg(pi, 0x453, (0x1 << 15));
 	} else {
 		write_phy_reg(pi, 0x63f, 1);
@@ -2824,7 +2824,7 @@ void wlc_lcnphy_stop_tx_tone(phy_info_t
 static void wlc_lcnphy_clear_trsw_override(phy_info_t *pi)
 {
 
-	and_phy_reg(pi, 0x44c, (uint16) ~ ((0x1 << 1) | (0x1 << 0)));
+	and_phy_reg(pi, 0x44c, (uint16) ~((0x1 << 1) | (0x1 << 0)));
 }
 
 void wlc_lcnphy_get_tx_iqcc(phy_info_t *pi, uint16 *a, uint16 *b)
--- a/drivers/staging/brcm80211/phy/wlc_phy_n.c
+++ b/drivers/staging/brcm80211/phy/wlc_phy_n.c
@@ -21554,7 +21554,7 @@ wlc_phy_rfctrlintc_override_nphy(phy_inf
 						   (0x1 << 10));
 
 					and_phy_reg(pi, 0x2ff, (uint16)
-						    ~ (0x3 << 14));
+						    ~(0x3 << 14));
 					or_phy_reg(pi, 0x2ff, (0x1 << 13));
 					or_phy_reg(pi, 0x2ff, (0x1 << 0));
 				} else {
@@ -22535,10 +22535,10 @@ void wlc_phy_stopplayback_nphy(phy_info_
 	} else if (playback_status & 0x2) {
 
 		and_phy_reg(pi, 0xc2,
-			    (uint16) ~ NPHY_iqloCalCmdGctl_IQLO_CAL_EN);
+			    (uint16) ~NPHY_iqloCalCmdGctl_IQLO_CAL_EN);
 	}
 
-	and_phy_reg(pi, 0xc3, (uint16) ~ (0x1 << 2));
+	and_phy_reg(pi, 0xc3, (uint16) ~(0x1 << 2));
 
 	if ((pi->nphy_bb_mult_save & BB_MULT_VALID_MASK) != 0) {
 
--- a/drivers/staging/brcm80211/sys/wlc_mac80211.c
+++ b/drivers/staging/brcm80211/sys/wlc_mac80211.c
@@ -1459,7 +1459,7 @@ void wlc_wme_setparams(wlc_info_t *wlc,
 		acp_shm.status |= WME_STATUS_NEWAC;
 
 		/* Fill in shm acparam table */
-		shm_entry = (uint16 *) & acp_shm;
+		shm_entry = (uint16 *) &acp_shm;
 		for (i = 0; i < (int)sizeof(shm_acparams_t); i += 2)
 			wlc_write_shm(wlc,
 				      M_EDCF_QINFO +
@@ -1497,7 +1497,7 @@ void wlc_edcf_setparams(wlc_bsscfg_t *cf
 	 * STA uses AC params from wme_param_ie.
 	 */
 
-	edcf_acp = (edcf_acparam_t *) & wlc->wme_param_ie.acparam[0];
+	edcf_acp = (edcf_acparam_t *) &wlc->wme_param_ie.acparam[0];
 
 	wlc->wme_admctl = 0;
 
@@ -1546,7 +1546,7 @@ void wlc_edcf_setparams(wlc_bsscfg_t *cf
 		acp_shm.status |= WME_STATUS_NEWAC;
 
 		/* Fill in shm acparam table */
-		shm_entry = (uint16 *) & acp_shm;
+		shm_entry = (uint16 *) &acp_shm;
 		for (j = 0; j < (int)sizeof(shm_acparams_t); j += 2)
 			wlc_write_shm(wlc,
 				      M_EDCF_QINFO +
@@ -3653,7 +3653,7 @@ _wlc_ioctl(wlc_info_t *wlc, int cmd, voi
 			}
 
 			rxstatus = R_REG(wlc->osh, &wlc->regs->phyrxstatus0);
-			if (rxstatus == 0xdead || rxstatus == (uint16) - 1) {
+			if (rxstatus == 0xdead || rxstatus == (uint16) -1) {
 				bcmerror = BCME_ERROR;
 				break;
 			}
@@ -3915,7 +3915,7 @@ _wlc_ioctl(wlc_info_t *wlc, int cmd, voi
 			wl_rateset_t *ret_rs = (wl_rateset_t *) arg;
 
 			bzero(&rs, sizeof(wlc_rateset_t));
-			wlc_default_rateset(wlc, (wlc_rateset_t *) & rs);
+			wlc_default_rateset(wlc, (wlc_rateset_t *) &rs);
 
 			if (len < (int)(rs.count + sizeof(rs.count))) {
 				bcmerror = BCME_BUFTOOSHORT;
@@ -5402,12 +5402,12 @@ void wlc_print_txdesc(d11txh_t *txh)
 
 	bcm_format_hex(hexbuf, rtsph, sizeof(txh->RTSPhyHeader));
 	printf("RTS PLCP: %s ", hexbuf);
-	bcm_format_hex(hexbuf, (uint8 *) & rts, sizeof(txh->rts_frame));
+	bcm_format_hex(hexbuf, (uint8 *) &rts, sizeof(txh->rts_frame));
 	printf("RTS Frame: %s", hexbuf);
 	printf("\n");
 
 	if (mtcl & TXC_SENDRTS) {
-		wlc_print_dot11_mac_hdr((uint8 *) & rts,
+		wlc_print_dot11_mac_hdr((uint8 *) &rts,
 					sizeof(txh->rts_frame));
 	}
 }
@@ -6869,7 +6869,7 @@ void wlc_tbtt(wlc_info_t *wlc, d11regs_t
 
 			cur = OSL_SYSUPTIME();
 			delta = cur > wlc->WDlast ? cur - wlc->WDlast :
-			    (uint32) ~ 0 - wlc->WDlast + cur + 1;
+			    (uint32) ~0 - wlc->WDlast + cur + 1;
 			if (delta >= TIMER_INTERVAL_WATCHDOG) {
 				wlc_watchdog((void *)wlc);
 				wlc->WDlast = cur;
--- a/drivers/staging/brcm80211/sys/wlc_stf.c
+++ b/drivers/staging/brcm80211/sys/wlc_stf.c
@@ -116,7 +116,7 @@ wlc_stf_ss_algo_channel_get(wlc_info_t *
 	*ss_algo_channel = 0;
 
 	if (!wlc->pub->up) {
-		*ss_algo_channel = (uint16) - 1;
+		*ss_algo_channel = (uint16) -1;
 		return;
 	}
 
@@ -378,7 +378,7 @@ int wlc_stf_ss_update(wlc_info_t *wlc, w
 	/* NOTE: opmode can only be SISO or CDD as STBC is decided on a per-packet basis */
 	if (WLC_STBC_CAP_PHY(wlc) &&
 	    wlc->stf->ss_algosel_auto
-	    && (wlc->stf->ss_algo_channel != (uint16) - 1)) {
+	    && (wlc->stf->ss_algo_channel != (uint16) -1)) {
 		ASSERT(isset(&wlc->stf->ss_algo_channel, PHY_TXC1_MODE_CDD)
 		       || isset(&wlc->stf->ss_algo_channel,
 				PHY_TXC1_MODE_SISO));
@@ -420,7 +420,7 @@ int BCMATTACHFN(wlc_stf_attach) (wlc_inf
 
 	if (WLC_STBC_CAP_PHY(wlc)) {
 		wlc->stf->ss_algosel_auto = TRUE;
-		wlc->stf->ss_algo_channel = (uint16) - 1;	/* Init the default value */
+		wlc->stf->ss_algo_channel = (uint16) -1;	/* Init the default value */
 	}
 	return 0;
 }
--- a/drivers/staging/brcm80211/util/bcmotp.c
+++ b/drivers/staging/brcm80211/util/bcmotp.c
@@ -805,7 +805,7 @@ static int hndotp_nvread(void *oh, char
 			/* Bad length, try to find another chunk anyway */
 			rsz = 6;
 		}
-		if (hndcrc16((uint8 *) & rawotp[i], rsz,
+		if (hndcrc16((uint8 *) &rawotp[i], rsz,
 			     CRC16_INIT_VALUE) == CRC16_GOOD_VALUE) {
 			/* Good crc, copy the vars */
 			gchunks++;
--- a/drivers/staging/brcm80211/util/bcmutils.c
+++ b/drivers/staging/brcm80211/util/bcmutils.c
@@ -578,7 +578,7 @@ ulong BCMROMFN(bcm_strtoul) (char *cp, c
 		result = result * base + value;
 		/* Detected overflow */
 		if (result < last_result && !minus)
-			return (ulong) - 1;
+			return (ulong) -1;
 		last_result = result;
 		cp++;
 	}
--- a/drivers/staging/brcm80211/util/hnddma.c
+++ b/drivers/staging/brcm80211/util/hnddma.c
@@ -1372,7 +1372,7 @@ static uint _dma_ctrlflags(dma_info_t *d
 static uintptr _dma_getvar(dma_info_t *di, const char *name)
 {
 	if (!strcmp(name, "&txavail"))
-		return (uintptr) & (di->hnddma.txavail);
+		return (uintptr) &(di->hnddma.txavail);
 	else {
 		ASSERT(0);
 	}
--- a/drivers/staging/brcm80211/util/hndpmu.c
+++ b/drivers/staging/brcm80211/util/hndpmu.c
@@ -1924,7 +1924,7 @@ BCMINITFN(si_sdiod_drive_strength_init)
 
 	switch (SDIOD_DRVSTR_KEY(sih->chip, sih->pmurev)) {
 	case SDIOD_DRVSTR_KEY(BCM4336_CHIP_ID, 8):
-		str_tab = (sdiod_drive_str_t *) & sdiod_drive_strength_tab3;
+		str_tab = (sdiod_drive_str_t *) &sdiod_drive_strength_tab3;
 		str_mask = 0x00003800;
 		str_shift = 11;
 		break;
--- a/drivers/staging/brcm80211/util/qmath.c
+++ b/drivers/staging/brcm80211/util/qmath.c
@@ -593,7 +593,7 @@ void qm_log10(int32 N, int16 qN, int16 *
 	/* adjust for the qformat of the N as
 	 * log2(mag * 2^x) = log2(mag) + x
 	 */
-	s32log = qm_add32(s32log, ((int32) - qN) << 15);	/* q.15 format */
+	s32log = qm_add32(s32log, ((int32) -qN) << 15);	/* q.15 format */
 
 	/* normalize the result. */
 	s16norm = qm_norm32(s32log);
