commit 16e53729b799dce572557022952d63cc19f47a7b
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Mon Aug 30 20:43:44 2010 -0500

    staging: r8712u: Fix sparse warnings
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

--- a/drivers/staging/rtl8712/hal_init.c
+++ b/drivers/staging/rtl8712/hal_init.c
@@ -32,6 +32,7 @@
 #include "drv_types.h"
 #include "rtl871x_byteorder.h"
 #include "farray.h"
+#include "usb_osintf.h"
 
 #define FWBUFF_ALIGN_SZ 512
 #define MAX_DUMP_FWSZ	49152 /*default = 49152 (48k)*/
--- a/drivers/staging/rtl8712/rtl8712_recv.c
+++ b/drivers/staging/rtl8712/rtl8712_recv.c
@@ -139,20 +139,6 @@ int r8712_init_recvbuf(struct _adapter *
 	return res;
 }
 
-void init_recvframe(union recv_frame *precvframe, struct recv_priv *precvpriv)
-{
-	struct recv_buf *precvbuf = precvframe->u.hdr.precvbuf;
-
-	/* Perry: This can be removed */
-	_init_listhead(&precvframe->u.hdr.list);
-	precvframe->u.hdr.len = 0;
-	if (precvbuf) {
-		if (precvbuf->pskb)
-			precvframe->u.hdr.pkt = skb_clone(precvbuf->pskb,
-						GFP_ATOMIC);
-	}
-}
-
 int r8712_free_recvframe(union recv_frame *precvframe,
 		   struct  __queue *pfree_recv_queue)
 {
@@ -217,7 +203,7 @@ static void update_recvframe_attrib_from
 }
 
 /*perform defrag*/
-union recv_frame *recvframe_defrag(struct _adapter *adapter,
+static union recv_frame *recvframe_defrag(struct _adapter *adapter,
 				   struct  __queue *defrag_q)
 {
 	struct list_head *plist, *phead;
@@ -351,7 +337,7 @@ union recv_frame *r8712_recvframe_chk_de
 	return prtnframe;
 }
 
-int amsdu_to_msdu(struct _adapter *padapter, union recv_frame *prframe)
+static int amsdu_to_msdu(struct _adapter *padapter, union recv_frame *prframe)
 {
 	int	a_len, padding_len;
 	u16	eth_type, nSubframe_Length;
--- a/drivers/staging/rtl8712/rtl871x_mp.c
+++ b/drivers/staging/rtl8712/rtl871x_mp.c
@@ -207,7 +207,7 @@ static u32 bitshift(u32 bitmask)
 	return i;
 }
 
-u32 get_bb_reg(struct _adapter *pAdapter, u16 offset, u32 bitmask)
+static u32 get_bb_reg(struct _adapter *pAdapter, u16 offset, u32 bitmask)
 {
 	u32 org_value, bit_shift, new_value;
 
@@ -217,7 +217,7 @@ u32 get_bb_reg(struct _adapter *pAdapter
 	return new_value;
 }
 
-u8 set_bb_reg(struct _adapter *pAdapter, u16 offset, u32 bitmask, u32 value)
+static u8 set_bb_reg(struct _adapter *pAdapter, u16 offset, u32 bitmask, u32 value)
 {
 	u32 org_value, bit_shift, new_value;
 
--- a/drivers/staging/rtl8712/rtl871x_recv.c
+++ b/drivers/staging/rtl8712/rtl871x_recv.c
@@ -126,28 +126,6 @@ union recv_frame *r8712_alloc_recvframe(
 	return precvframe;
 }
 
-union recv_frame *dequeue_recvframe(struct  __queue *queue)
-{
-	return r8712_alloc_recvframe(queue);
-}
-
-sint enqueue_recvframe(union recv_frame *precvframe, struct  __queue *queue)
-{
-	unsigned long irqL;
-	struct _adapter *padapter = precvframe->u.hdr.adapter;
-	struct recv_priv *precvpriv = &padapter->recvpriv;
-
-	 spin_lock_irqsave(&queue->lock, irqL);
-	list_delete(&(precvframe->u.hdr.list));
-	list_insert_tail(&(precvframe->u.hdr.list), get_list_head(queue));
-	if (padapter != NULL) {
-		if (queue == &precvpriv->free_recv_queue)
-			precvpriv->free_recvframe_cnt++;
-	}
-	 spin_unlock_irqrestore(&queue->lock, irqL);
-	return _SUCCESS;
-}
-
 /*
 caller : defrag; recvframe_chk_defrag in recv_thread  (passive)
 pframequeue: defrag_queue : will be accessed in recv_thread  (passive)
@@ -314,7 +292,7 @@ union recv_frame *r8712_portctrl(struct
 	return prtnframe;
 }
 
-sint recv_decache(union recv_frame *precv_frame, u8 bretry,
+static sint recv_decache(union recv_frame *precv_frame, u8 bretry,
 		  struct stainfo_rxcache *prxcache)
 {
 	sint tid = precv_frame->u.hdr.attrib.priority;
@@ -329,7 +307,7 @@ sint recv_decache(union recv_frame *prec
 	return _SUCCESS;
 }
 
-sint sta2sta_data_frame(struct _adapter *adapter, union recv_frame *precv_frame,
+static sint sta2sta_data_frame(struct _adapter *adapter, union recv_frame *precv_frame,
 			struct sta_info **psta
 )
 {
@@ -395,7 +373,7 @@ sint sta2sta_data_frame(struct _adapter
 	return ret;
 }
 
-sint ap2sta_data_frame(struct _adapter *adapter, union recv_frame *precv_frame,
+static sint ap2sta_data_frame(struct _adapter *adapter, union recv_frame *precv_frame,
 		       struct sta_info **psta)
 {
 	u8 *ptr = precv_frame->u.hdr.rx_data;
@@ -453,7 +431,7 @@ sint ap2sta_data_frame(struct _adapter *
 	return _SUCCESS;
 }
 
-sint sta2ap_data_frame(struct _adapter *adapter, union recv_frame *precv_frame,
+static sint sta2ap_data_frame(struct _adapter *adapter, union recv_frame *precv_frame,
 		       struct sta_info **psta)
 {
 	struct rx_pkt_attrib *pattrib = &precv_frame->u.hdr.attrib;
@@ -474,20 +452,20 @@ sint sta2ap_data_frame(struct _adapter *
 	return _SUCCESS;
 }
 
-sint validate_recv_ctrl_frame(struct _adapter *adapter,
+static sint validate_recv_ctrl_frame(struct _adapter *adapter,
 			      union recv_frame *precv_frame)
 {
 	return _FAIL;
 }
 
-sint validate_recv_mgnt_frame(struct _adapter *adapter,
+static sint validate_recv_mgnt_frame(struct _adapter *adapter,
 			      union recv_frame *precv_frame)
 {
 	return _FAIL;
 }
 
 
-sint validate_recv_data_frame(struct _adapter *adapter,
+static sint validate_recv_data_frame(struct _adapter *adapter,
 			      union recv_frame *precv_frame)
 {
 	int res;
