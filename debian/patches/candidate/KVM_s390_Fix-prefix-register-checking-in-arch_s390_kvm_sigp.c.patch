Gitweb:     http://git.kernel.org/linus/f50146bd7bdb75435638e60d4960edd9bcdf88b8
Commit:     f50146bd7bdb75435638e60d4960edd9bcdf88b8
Parent:     3548bab501887a698a887639b54d5ecaf35c387b
Author:     Carsten Otte <carsteno@de.ibm.com>
AuthorDate: Mon Nov 30 17:14:41 2009 +0100
Committer:  Avi Kivity <avi@redhat.com>
CommitDate: Thu Dec 3 09:32:26 2009 +0200

    KVM: s390: Fix prefix register checking in arch/s390/kvm/sigp.c
    
    This patch corrects the checking of the new address for the prefix register.
    On s390, the prefix register is used to address the cpu's lowcore (address
    0...8k). This check is supposed to verify that the memory is readable and
    present.
    copy_from_guest is a helper function, that can be used to read from guest
    memory. It applies prefixing, adds the start address of the guest memory in
    user, and then calls copy_from_user. Previous code was obviously broken for
    two reasons:
    - prefixing should not be applied here. The current prefix register is
      going to be updated soon, and the address we're looking for will be
      0..8k after we've updated the register
    - we're adding the guest origin (gmsor) twice: once in subject code
      and once in copy_from_guest
    
    With kuli, we did not hit this problem because (a) we were lucky with
    previous prefix register content, and (b) our guest memory was mmaped
    very low into user address space.
    
    Cc: stable@kernel.org
    Signed-off-by: Carsten Otte <cotte@de.ibm.com>
    Reported-by: Alexander Graf <agraf@suse.de>
    Signed-off-by: Avi Kivity <avi@redhat.com>
---
 arch/s390/kvm/sigp.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

--- a/arch/s390/kvm/sigp.c
+++ b/arch/s390/kvm/sigp.c
@@ -188,9 +188,9 @@ static int __sigp_set_prefix(struct kvm_
 
 	/* make sure that the new value is valid memory */
 	address = address & 0x7fffe000u;
-	if ((copy_from_guest(vcpu, &tmp,
-		(u64) (address + vcpu->arch.sie_block->gmsor) , 1)) ||
-	   (copy_from_guest(vcpu, &tmp, (u64) (address +
+	if ((copy_from_user(&tmp, (void __user *)
+		(address + vcpu->arch.sie_block->gmsor) , 1)) ||
+	   (copy_from_user(&tmp, (void __user *)(address +
 			vcpu->arch.sie_block->gmsor + PAGE_SIZE), 1))) {
 		*reg |= SIGP_STAT_INVALID_PARAMETER;
 		return 1; /* invalid parameter */
