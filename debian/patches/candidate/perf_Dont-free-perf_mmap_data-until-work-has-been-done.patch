Gitweb:     http://git.kernel.org/linus/ec70ccd806111ba3caf596def91a8580138b12db
Commit:     ec70ccd806111ba3caf596def91a8580138b12db
Parent:     bdad0db7dbdb37d0bb3c7d0f65cd3ff599ea6ecb
Author:     Kristian Høgsberg <krh@bitplanet.net>
AuthorDate: Tue Dec 1 15:05:01 2009 -0500
Committer:  Ingo Molnar <mingo@elte.hu>
CommitDate: Wed Dec 2 09:30:18 2009 +0100

    perf: Don't free perf_mmap_data until work has been done
    
    In the CONFIG_PERF_USE_VMALLOC case, perf_mmap_data_free() only
    schedules the cleanup of the perf_mmap_data struct.  In that
    case we have to wait until the work has been done before we free
    data.
    
    Signed-off-by: Kristian Høgsberg <krh@bitplanet.net>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: <stable@kernel.org>
    LKML-Reference: <1259697901-1747-1-git-send-email-krh@bitplanet.net>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
---
 kernel/perf_event.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/kernel/perf_event.c b/kernel/perf_event.c
index 040ee51..6b7ddba 100644
--- a/kernel/perf_event.c
+++ b/kernel/perf_event.c
@@ -2210,6 +2210,7 @@ static void perf_mmap_data_free(struct perf_mmap_data *data)
 	perf_mmap_free_page((unsigned long)data->user_page);
 	for (i = 0; i < data->nr_pages; i++)
 		perf_mmap_free_page((unsigned long)data->data_pages[i]);
+	kfree(data);
 }
 
 #else
@@ -2250,6 +2251,7 @@ static void perf_mmap_data_free_work(struct work_struct *work)
 		perf_mmap_unmark_page(base + (i * PAGE_SIZE));
 
 	vfree(base);
+	kfree(data);
 }
 
 static void perf_mmap_data_free(struct perf_mmap_data *data)
@@ -2355,7 +2357,6 @@ static void perf_mmap_data_free_rcu(struct rcu_head *rcu_head)
 
 	data = container_of(rcu_head, struct perf_mmap_data, rcu_head);
 	perf_mmap_data_free(data);
-	kfree(data);
 }
 
 static void perf_mmap_data_release(struct perf_event *event)
