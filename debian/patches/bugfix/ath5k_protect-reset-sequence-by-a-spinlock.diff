From 6c87c46c0a51f680410f1ae43270c636e43dddac Mon Sep 17 00:00:00 2001
From: Bob Copeland <me@bobcopeland.com>
Date: Wed, 24 Dec 2008 12:20:02 -0500
Subject: [PATCH] ath5k: protect reset sequence by a spinlock

ath5k_reset is called by softirq context through ath5k_tasklet_reset and
ath5k_calibrate, and also in process context by ath5k_config_interface,
ath5k_config, and ath5k_init.  Writing the wrong thing at reset time has
a tendency to lock up pcie interfaces, so prevent it from happening
concurrently.

Changes to phy.c
Changes-licensed-under: ISC

Changes to base.c, base.h
Changes-licensed-under: 3-Clause-BSD

Signed-off-by: Bob Copeland <me@bobcopeland.com>

 drivers/net/wireless/ath5k/base.c |    6 ++++++
 drivers/net/wireless/ath5k/base.h |    1 +
 drivers/net/wireless/ath5k/phy.c  |    2 +-
 3 files changed, 8 insertions(+), 1 deletions(-)

diff --git a/drivers/net/wireless/ath5k/base.c b/drivers/net/wireless/ath5k/base.c
index 5ef3229..248a34f 100644
--- a/drivers/net/wireless/ath5k/base.c
+++ b/drivers/net/wireless/ath5k/base.c
@@ -526,6 +526,7 @@ ath5k_pci_probe(struct pci_dev *pdev,
 	sc->cachelsz = csz * sizeof(u32); /* convert to bytes */
 	sc->opmode = NL80211_IFTYPE_STATION;
 	mutex_init(&sc->lock);
+	spin_lock_init(&sc->restlock);
 	spin_lock_init(&sc->rxbuflock);
 	spin_lock_init(&sc->txbuflock);
 	spin_lock_init(&sc->block);
@@ -2685,6 +2686,7 @@ ath5k_reset(struct ath5k_softc *sc, bool stop, bool change_channel)
 {
 	struct ath5k_hw *ah = sc->ah;
 	int ret;
+	unsigned long flags;
 
 	ATH5K_DBG(sc, ATH5K_DEBUG_RESET, "resetting\n");
 
@@ -2693,7 +2695,11 @@ ath5k_reset(struct ath5k_softc *sc, bool stop, bool change_channel)
 		ath5k_txq_cleanup(sc);
 		ath5k_rx_stop(sc);
 	}
+
+	spin_lock_irqsave(&sc->restlock, flags);
 	ret = ath5k_hw_reset(ah, sc->opmode, sc->curchan, true);
+	spin_unlock_irqrestore(&sc->restlock, flags);
+
 	if (ret) {
 		ATH5K_ERR(sc, "can't reset hardware (%d)\n", ret);
 		goto err;
diff --git a/drivers/net/wireless/ath5k/base.h b/drivers/net/wireless/ath5k/base.h
index facc60d..bd08aae 100644
--- a/drivers/net/wireless/ath5k/base.h
+++ b/drivers/net/wireless/ath5k/base.h
@@ -152,6 +152,7 @@ struct ath5k_softc {
 				led_off;	/* off time for current blink */
 
 	struct tasklet_struct	restq;		/* reset tasklet */
+	spinlock_t		restlock;	/* protects reset state */
 
 	unsigned int		rxbufsize;	/* rx size based on mtu */
 	struct list_head	rxbuf;		/* receive buffer */
diff --git a/drivers/net/wireless/ath5k/phy.c b/drivers/net/wireless/ath5k/phy.c
index 7ba18e0..fe45a2f 100644
--- a/drivers/net/wireless/ath5k/phy.c
+++ b/drivers/net/wireless/ath5k/phy.c
@@ -1621,7 +1621,7 @@ int ath5k_hw_rfregs(struct ath5k_hw *ah, struct ieee80211_channel *channel,
 
 	if (ah->ah_rf_banks == NULL) {
 		/* XXX do extra checks? */
-		ah->ah_rf_banks = kmalloc(ah->ah_rf_banks_size, GFP_KERNEL);
+		ah->ah_rf_banks = kmalloc(ah->ah_rf_banks_size, GFP_ATOMIC);
 		if (ah->ah_rf_banks == NULL) {
 			ATH5K_ERR(ah->ah_sc, "out of memory\n");
 			return -ENOMEM;
