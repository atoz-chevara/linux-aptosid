Gitweb:     http://git.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=46814dded1b972a07b1609d81632eef3009fbb10
Commit:     46814dded1b972a07b1609d81632eef3009fbb10
Parent:     26799a63110dcbe81291ea53178f6b4810d07424
Author:     Cliff Wickman <cpw@sgi.com>
AuthorDate: Wed Dec 31 13:20:50 2008 -0600
Committer:  Ingo Molnar <mingo@elte.hu>
CommitDate: Fri Jan 2 17:26:25 2009 +0100

    x86, UV: remove erroneous BAU initialization
    
    Impact: fix crash on x86/UV
    
    UV is the SGI "UltraViolet" machine, which is x86_64 based.
    BAU is the "Broadcast Assist Unit", used for TLB shootdown in UV.
    
    This patch removes the allocation and initialization of an unused table.
    
    This table is left over from a development test mode.  It is unused in
    the present code.
    
    And it was incorrectly initialized: 8 entries allocated but 17 initialized,
    causing slab corruption.
    
    This patch should go into 2.6.27 and 2.6.28 as well as the current tree.
    
    Diffed against 2.6.28 (linux-next, 12/30/08)
    
    Signed-off-by: Cliff Wickman <cpw@sgi.com>
    Cc: <stable@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

 arch/x86/kernel/tlb_uv.c |    9 ---------
 1 files changed, 0 insertions(+), 9 deletions(-)

diff --git a/arch/x86/kernel/tlb_uv.c b/arch/x86/kernel/tlb_uv.c
index 6a00e5f..f885023 100644
--- a/arch/x86/kernel/tlb_uv.c
+++ b/arch/x86/kernel/tlb_uv.c
@@ -582,7 +582,6 @@ static int __init uv_ptc_init(void)
 static struct bau_control * __init uv_table_bases_init(int blade, int node)
 {
 	int i;
-	int *ip;
 	struct bau_msg_status *msp;
 	struct bau_control *bau_tabp;
 
@@ -599,13 +598,6 @@ static struct bau_control * __init uv_table_bases_init(int blade, int node)
 		bau_cpubits_clear(&msp->seen_by, (int)
 				  uv_blade_nr_possible_cpus(blade));
 
-	bau_tabp->watching =
-	    kmalloc_node(sizeof(int) * DEST_NUM_RESOURCES, GFP_KERNEL, node);
-	BUG_ON(!bau_tabp->watching);
-
-	for (i = 0, ip = bau_tabp->watching; i < DEST_Q_SIZE; i++, ip++)
-		*ip = 0;
-
 	uv_bau_table_bases[blade] = bau_tabp;
 
 	return bau_tabp;
@@ -628,7 +620,6 @@ uv_table_bases_finish(int blade, int node, int cur_cpu,
 		bcp->bau_msg_head	= bau_tablesp->va_queue_first;
 		bcp->va_queue_first	= bau_tablesp->va_queue_first;
 		bcp->va_queue_last	= bau_tablesp->va_queue_last;
-		bcp->watching		= bau_tablesp->watching;
 		bcp->msg_statuses	= bau_tablesp->msg_statuses;
 		bcp->descriptor_base	= adp;
 	}
