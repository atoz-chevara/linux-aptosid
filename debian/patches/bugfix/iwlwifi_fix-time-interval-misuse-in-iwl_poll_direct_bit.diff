Gitweb:     http://git.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=f056658bb9c3085d5ec52fbdd45b38d55b899cc9
Commit:     f056658bb9c3085d5ec52fbdd45b38d55b899cc9
Parent:     7262796ab726fcefad9b588a44d1d5a9f221051f
Author:     Zhu, Yi <yi.zhu@intel.com>
AuthorDate: Fri Dec 5 07:58:38 2008 -0800
Committer:  John W. Linville <linville@tuxdriver.com>
CommitDate: Fri Dec 12 13:48:21 2008 -0500

    iwlwifi: fix time interval misuse in iwl_poll_{direct_}bit
    
    The patch fixes the misuse of microsecond with millisecond in the
    polling mechanism of the iwlwifi driver. The impact of this problem
    is the unacceptable latency for the whole system (especially during
    bringing down the wlan interface).
    
    Signed-off-by: Zhu Yi <yi.zhu@intel.com>
    Acked-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Reinette Chatre <reinette.chatre@intel.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

 drivers/net/wireless/iwlwifi/iwl-3945-io.h |    4 ++--
 drivers/net/wireless/iwlwifi/iwl-io.h      |    4 ++--
 drivers/net/wireless/iwlwifi/iwl-tx.c      |    2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

--- a/drivers/net/wireless/iwlwifi/iwl-3945-io.h
+++ b/drivers/net/wireless/iwlwifi/iwl-3945-io.h
@@ -93,7 +93,7 @@ static inline int _iwl3945_poll_bit(stru
 	do {
 		if ((_iwl3945_read32(priv, addr) & mask) == (bits & mask))
 			return i;
-		mdelay(10);
+		udelay(10);
 		i += 10;
 	} while (i < timeout);
 
@@ -276,7 +276,7 @@ static inline int _iwl3945_poll_direct_b
 	do {
 		if ((_iwl3945_read_direct32(priv, addr) & mask) == mask)
 			return i;
-		mdelay(10);
+		udelay(10);
 		i += 10;
 	} while (i < timeout);
 
--- a/drivers/net/wireless/iwlwifi/iwl-io.h
+++ b/drivers/net/wireless/iwlwifi/iwl-io.h
@@ -95,7 +95,7 @@ static inline int _iwl_poll_bit(struct i
 	do {
 		if ((_iwl_read32(priv, addr) & mask) == (bits & mask))
 			return i;
-		mdelay(10);
+		udelay(10);
 		i += 10;
 	} while (i < timeout);
 
@@ -277,7 +277,7 @@ static inline int _iwl_poll_direct_bit(s
 	do {
 		if ((_iwl_read_direct32(priv, addr) & mask) == mask)
 			return i;
-		mdelay(10);
+		udelay(10);
 		i += 10;
 	} while (i < timeout);
 
--- a/drivers/net/wireless/iwlwifi/iwl-tx.c
+++ b/drivers/net/wireless/iwlwifi/iwl-tx.c
@@ -567,7 +567,7 @@ void iwl_txq_ctx_stop(struct iwl_priv *p
 				   FH_TCSR_CHNL_TX_CONFIG_REG(txq_id), 0x0);
 		iwl_poll_direct_bit(priv, FH_TSSR_TX_STATUS_REG,
 				    FH_TSSR_TX_STATUS_REG_MSK_CHNL_IDLE
-				    (txq_id), 200);
+				    (txq_id), 1000);
 	}
 	iwl_release_nic_access(priv);
 	spin_unlock_irqrestore(&priv->lock, flags);
