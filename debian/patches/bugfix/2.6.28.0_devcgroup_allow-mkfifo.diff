Gitweb:     http://git.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=0b82ac37b889ec881b645860da3775118effb3ca
Commit:     0b82ac37b889ec881b645860da3775118effb3ca
Parent:     116e05751285c20edf5768ca3bcc00dad86181bb
Author:     Serge E. Hallyn <serue@us.ibm.com>
AuthorDate: Wed Jan 7 18:07:46 2009 -0800
Committer:  Linus Torvalds <torvalds@linux-foundation.org>
CommitDate: Thu Jan 8 08:31:03 2009 -0800

    devices cgroup: allow mkfifo
    
    The devcgroup_inode_permission() hook in the devices whitelist cgroup has
    always bypassed access checks on fifos.  But the mknod hook did not.  The
    devices whitelist is only about block and char devices, and fifos can't
    even be added to the whitelist, so fifos can't be created at all except by
    tasks which have 'a' in their whitelist (meaning they have access to all
    devices).
    
    Fix the behavior by bypassing access checks to mkfifo.
    
    Signed-off-by: Serge E. Hallyn <serue@us.ibm.com>
    Cc: Li Zefan <lizf@cn.fujitsu.com>
    Cc: Pavel Emelyanov <xemul@openvz.org>
    Cc: Paul Menage <menage@google.com>
    Cc: Lai Jiangshan <laijs@cn.fujitsu.com>
    Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
    Cc: James Morris <jmorris@namei.org>
    Reported-by: Daniel Lezcano <dlezcano@fr.ibm.com>
    Cc: <stable@kernel.org>		[2.6.27.x]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 security/device_cgroup.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/security/device_cgroup.c b/security/device_cgroup.c
index cd377b9..3aacd0f 100644
--- a/security/device_cgroup.c
+++ b/security/device_cgroup.c
@@ -513,6 +513,9 @@ int devcgroup_inode_mknod(int mode, dev_t dev)
 	struct dev_cgroup *dev_cgroup;
 	struct dev_whitelist_item *wh;
 
+	if (!S_ISBLK(mode) && !S_ISCHR(mode))
+		return 0;
+
 	rcu_read_lock();
 
 	dev_cgroup = task_devcgroup(current);
