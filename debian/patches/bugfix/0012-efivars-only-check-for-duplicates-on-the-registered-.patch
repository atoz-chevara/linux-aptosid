From 45432323ef7038a91599959173700fdb8a0adb2f Mon Sep 17 00:00:00 2001
From: Matt Fleming <matt.fleming@intel.com>
Date: Fri, 26 Apr 2013 10:10:55 +0100
Subject: [PATCH 3/3] efivars: only check for duplicates on the registered
 list

variable_is_present() accesses '__efivars' directly, but when called
via gsmi_init() Michel reports observing the following crash,

  BUG: unable to handle kernel NULL pointer dereference at (null)
  IP: [<ffffffff814a7245>] variable_is_present+0x55/0x170
  Call Trace:
  [<ffffffff814a9936>] register_efivars+0x106/0x370
  [<ffffffff818ff430>] ? firmware_map_add_early+0xb1/0xb1
  [<ffffffff818ff6dd>] gsmi_init+0x2ad/0x3da
  [<ffffffff8100020f>] do_one_initcall+0x3f/0x170

The reason for the crash is that '__efivars' hasn't been initialised nor
has it been registered with register_efivars() by the time the google
EFI SMI driver runs. Fix this by passing the registered struct efivars
to variable_is_present().

Reported-by: Michel Lespinasse <walken@google.com>
Tested-by: Michel Lespinasse <walken@google.com>
Cc: Mike Waychison <mikew@google.com>
Cc: Matthew Garrett <matthew.garrett@nebula.com>
Cc: Seiji Aguchi <seiji.aguchi@hds.com>
Signed-off-by: Matt Fleming <matt.fleming@intel.com>
---
 drivers/firmware/efivars.c |   12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

--- a/drivers/firmware/efivars.c
+++ b/drivers/firmware/efivars.c
@@ -1613,10 +1613,11 @@ static ssize_t efivar_delete(struct file
 	return count;
 }
 
-static bool variable_is_present(efi_char16_t *variable_name, efi_guid_t *vendor)
+static bool variable_is_present(struct efivars *efivars,
+				efi_char16_t *variable_name,
+				efi_guid_t *vendor)
 {
 	struct efivar_entry *entry, *n;
-	struct efivars *efivars = &__efivars;
 	unsigned long strsize1, strsize2;
 	bool found = false;
 
@@ -1936,7 +1937,8 @@ int register_efivars(struct efivars *efi
 			 * we'll ever see a different variable name,
 			 * and may end up looping here forever.
 			 */
-			if (variable_is_present(variable_name, &vendor_guid)) {
+			if (variable_is_present(efivars, variable_name,
+						&vendor_guid)) {
 				dup_variable_bug(variable_name, &vendor_guid,
 						 variable_name_size);
 				status = EFI_NOT_FOUND;
