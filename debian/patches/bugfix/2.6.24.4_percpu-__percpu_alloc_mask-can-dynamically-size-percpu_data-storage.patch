From chrisw@sous-sol.org Fri Mar 28 19:49:47 2008
X-Envelope-From: <stable-commits-owner@vger.kernel.org>
X-Envelope-To: <vger@sl-h.de>
X-Delivery-Time: 1206730254
X-UID: 198489
Return-Path: <stable-commits-owner@vger.kernel.org>
X-RZG-CLASS-ID: mi
Received: from vger.kernel.org ([209.132.176.167])
	by mailin.webmailer.de (hamish mi8) (RZmta 16.15)
	with ESMTP id r02ceck2SIoo1f for <vger@sl-h.de>;
	Fri, 28 Mar 2008 19:50:53 +0100 (MET)
	(envelope-from: <stable-commits-owner@vger.kernel.org>)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754899AbYC1Suk (ORCPT <rfc822;vger@sl-h.de>);
	Fri, 28 Mar 2008 14:50:40 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1754609AbYC1Suj
	(ORCPT <rfc822;stable-commits-outgoing>);
	Fri, 28 Mar 2008 14:50:39 -0400
Received: from 216-99-217-87.dsl.aracnet.com ([216.99.217.87]:57732 "EHLO
	sous-sol.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1755250AbYC1Sui (ORCPT <rfc822;stable-commits@vger.kernel.org>);
	Fri, 28 Mar 2008 14:50:38 -0400
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by sous-sol.org (8.14.2/8.14.1) with ESMTP id m2SInmhH007746;
	Fri, 28 Mar 2008 11:49:48 -0700
Message-Id: <200803281849.m2SInmhH007746@sous-sol.org>
Subject: patch percpu-__percpu_alloc_mask-can-dynamically-size-percpu_data-storage.patch queued to 2.6.24-stable tree
To: dada1@cosmosbay.com,
 akpm@linux-foundation.org,
 chrisw@sous-sol.org,
 clameter@sgi.com,
 davem@davemloft.net,
 torvalds@linux-foundation.org
Cc: stable@kernel.org,
 stable-commits@vger.kernel.org
From:	chrisw@sous-sol.org
Date:	Fri, 28 Mar 2008 11:49:47 -0700
In-Reply-To: <1206729763-22578-2-git-send-email-snitzer@gmail.com>
X-Virus-Scanned: ClamAV 0.93rc1/6321/Fri Mar 21 15:55:45 2008 on sequoia.sous-sol.org
X-Virus-Status:	Clean
X-Spam-Status: No, score=-4.4 required=5.0 tests=ALL_TRUSTED,AWL,BAYES_00,
	MISSING_MID autolearn=ham version=3.2.3
X-Spam-Checker-Version:	SpamAssassin 3.2.3 (2007-08-08) on sequoia.sous-sol.org
Sender:	stable-commits-owner@vger.kernel.org
Precedence: bulk
Reply-To: linux-kernel@vger.kernel.org
List-ID: <stable-commits.vger.kernel.org>
X-Mailing-List:	stable-commits@vger.kernel.org
Status: R
X-Status: NC
X-KMail-EncryptionState:  
X-KMail-SignatureState:  
X-KMail-MDN-Sent:  


This is a note to let you know that we have just queued up the patch titled

     Subject: PERCPU : __percpu_alloc_mask() can dynamically size percpu_data storage

to the 2.6.24-stable tree.  Its filename is

     percpu-__percpu_alloc_mask-can-dynamically-size-percpu_data-storage.patch

A git repo of this tree can be found at 
    http://www.kernel.org/git/?p=linux/kernel/git/stable/stable-queue.git;a=summary


>From stable-bounces@linux.kernel.org  Fri Mar 28 11:45:35 2008
From: snitzer@gmail.com
To: stable@kernel.org
Date: Fri, 28 Mar 2008 14:42:42 -0400
Message-Id: <1206729763-22578-2-git-send-email-snitzer@gmail.com>
Cc: akpm@linux-foundation.org, clameter@sgi.com, torvalds@linux-foundation.org, davem@davemloft.net, dada1@cosmosbay.com
Subject: PERCPU : __percpu_alloc_mask() can dynamically size percpu_data storage

From: Eric Dumazet <dada1@cosmosbay.com>

upstream commit: b3242151906372f30f57feaa43b4cac96a23edb1

Instead of allocating a fix sized array of NR_CPUS pointers for percpu_data,
we can use nr_cpu_ids, which is generally < NR_CPUS.

Signed-off-by: Eric Dumazet <dada1@cosmosbay.com>
Cc: Christoph Lameter <clameter@sgi.com>
Cc: "David S. Miller" <davem@davemloft.net>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Chris Wright <chrisw@sous-sol.org>
---
 include/linux/percpu.h |    2 +-
 mm/allocpercpu.c       |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

This is appropriate for 2.6.24.y

--- a/include/linux/percpu.h
+++ b/include/linux/percpu.h
@@ -34,7 +34,7 @@
 #ifdef CONFIG_SMP
 
 struct percpu_data {
-	void *ptrs[NR_CPUS];
+	void *ptrs[1];
 };
 
 #define __percpu_disguise(pdata) (struct percpu_data *)~(unsigned long)(pdata)
--- a/mm/allocpercpu.c
+++ b/mm/allocpercpu.c
@@ -98,7 +98,7 @@ EXPORT_SYMBOL_GPL(__percpu_populate_mask
  */
 void *__percpu_alloc_mask(size_t size, gfp_t gfp, cpumask_t *mask)
 {
-	void *pdata = kzalloc(sizeof(struct percpu_data), gfp);
+	void *pdata = kzalloc(nr_cpu_ids * sizeof(void *), gfp);
 	void *__pdata = __percpu_disguise(pdata);
 
 	if (unlikely(!pdata))


Patches currently in stable-queue which might be from dada1@cosmosbay.com are

queue-2.6.24/alloc_percpu-fails-to-allocate-percpu-data.patch
queue-2.6.24/percpu-__percpu_alloc_mask-can-dynamically-size-percpu_data-storage.patch
--
To unsubscribe from this list: send the line "unsubscribe stable-commits" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

