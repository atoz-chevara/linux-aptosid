Gitweb:     http://git.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=c7a2bd19b7c1e0bd2c7604c53d2583e91e536948
Commit:     c7a2bd19b7c1e0bd2c7604c53d2583e91e536948
Parent:     90fa1527bddc7147dc0d590ee6184ca88bc50ecf
Author:     Takahiro Yasui <tyasui@redhat.com>
AuthorDate: Tue Jan 6 03:04:56 2009 +0000
Committer:  Alasdair G Kergon <agk@redhat.com>
CommitDate: Tue Jan 6 03:04:56 2009 +0000

    dm log: fix dm_io_client leak on error paths
    
    In create_log_context function, dm_io_client_destroy function needs
    to be called, when memory allocation of disk_header, sync_bits and
    recovering_bits failed, but dm_io_client_destroy is not called.
    
    Cc: stable@kernel.org
    Signed-off-by: Takahiro Yasui <tyasui@redhat.com>
    Acked-by: Jonathan Brassow <jbrassow@redhat.com>
    Signed-off-by: Alasdair G Kergon <agk@redhat.com>

 drivers/md/dm-log.c |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

diff --git a/drivers/md/dm-log.c b/drivers/md/dm-log.c
index a8c0fc7..13e2a1a 100644
--- a/drivers/md/dm-log.c
+++ b/drivers/md/dm-log.c
@@ -467,6 +467,7 @@ static int create_log_context(struct dm_dirty_log *log, struct dm_target *ti,
 		lc->disk_header = vmalloc(buf_size);
 		if (!lc->disk_header) {
 			DMWARN("couldn't allocate disk log buffer");
+			dm_io_client_destroy(lc->io_req.client);
 			kfree(lc);
 			return -ENOMEM;
 		}
@@ -482,6 +483,8 @@ static int create_log_context(struct dm_dirty_log *log, struct dm_target *ti,
 		DMWARN("couldn't allocate sync bitset");
 		if (!dev)
 			vfree(lc->clean_bits);
+		else
+			dm_io_client_destroy(lc->io_req.client);
 		vfree(lc->disk_header);
 		kfree(lc);
 		return -ENOMEM;
@@ -495,6 +498,8 @@ static int create_log_context(struct dm_dirty_log *log, struct dm_target *ti,
 		vfree(lc->sync_bits);
 		if (!dev)
 			vfree(lc->clean_bits);
+		else
+			dm_io_client_destroy(lc->io_req.client);
 		vfree(lc->disk_header);
 		kfree(lc);
 		return -ENOMEM;
